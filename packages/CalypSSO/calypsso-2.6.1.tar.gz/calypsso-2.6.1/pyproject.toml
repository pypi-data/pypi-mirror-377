[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "CalypSSO"
dynamic = ["version"]
description = "A small and static Next.js frontend for Hyperion"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [{ name = "AEECL ECLAIR" }]
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = ["jinja2>=3.1", "starlette>=0.37"]

[project.urls]
Source = "https://github.com/aeecleclair/CalypSSO"

[tool.hatch.version]
path = "python/calypsso/__about__.py"

[tool.hatch.build]
packages = ["python/calypsso"]

[tool.hatch.build.force-include]
# We want to mount the out directory inside the package folder
"web/out" = "python/calypsso/public"
"mail/out" = "python/calypsso/mail_templates"


[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.default]
installer = "uv"

[tool.ruff]
# By default ruff also respect gitignore files
# Same as Black.
line-length = 88
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
select = [
    "FAST",
    "YTT",
    "ASYNC",
    "S",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "FA",
    "INT",
    "ISC",
    "ICN",
    "LOG",
    "G",
    "INP",
    "PIE",
    "T20",
    "PYI",
    "PT",
    "RET",
    "Q",
    "SLF",
    "SIM",
    "SLOT",
    "TID",
    "TC",
    "PTH",
    "FLY",
    "I",
    "C90",
    "PERF",
    "E",
    "W",
    "F",
    "PGH",
    "PL",
    "UP",
    "FURB",
    "RUF",
    "TRY",
    "TCH",
]
ignore = [
  "E501",
  "PLR0913", # "Too many arguments in function definition"
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.mypy]
python_version = "3.12"
strict = true
exclude = '''(?x)(
    dist/*$
)'''  # TOML's single-quoted strings do not require escaping backslashes
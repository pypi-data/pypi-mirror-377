name: Publish â€¢ PyPI

on:
  workflow_run:
    workflows: ["Release Please"]
    types: [completed]

permissions:
  contents: write     # upload artifacts to the GitHub Release
  id-token: write     # REQUIRED for PyPI Trusted Publishing

jobs:
  publish:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Get latest published release tag
        id: gettag
        run: |
          TAG=$(gh api repos/${{ github.repository }}/releases/latest --jq .tag_name)
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check out code at release tag
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ steps.gettag.outputs.tag }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade pip & install build tooling
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine tomli

      - name: Verify version == tag
        run: |
          python - <<'PY'
          import re, sys, tomli
          tag = "${{ steps.gettag.outputs.tag }}"
          if tag.startswith("v"): tag = tag[1:]
          with open("pyproject.toml","rb") as f:
              data = tomli.load(f)
          version = data["project"]["version"]
          if version != tag:
              sys.stderr.write(f"pyproject version {version} != release tag {tag}\n")
              sys.exit(1)
          print(f"OK: {version} == tag")
          PY

      - name: Build (sdist & wheel) with hatchling
        run: python -m build

      - name: Check artifacts (metadata)
        run: python -m twine check dist/*

      - name: Publish to PyPI (Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # No repository-url => default is production PyPI
          # No credentials needed when using id-token + trusted publisher
          print-hash: true

      - name: Upload artifacts to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.gettag.outputs.tag }}
          files: dist/*

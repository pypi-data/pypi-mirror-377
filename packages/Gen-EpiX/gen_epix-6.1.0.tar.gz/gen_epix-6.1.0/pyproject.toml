[build-system]
requires = ["setuptools>=80"]
build-backend = "setuptools.build_meta"

[project]
name = "Gen-EpiX"
version = "6.1.0"
authors = [
    { name="RIVM-bioinformatics", email="ids-bioinformatics@rivm.nl" },
]
description = "Genomic Epidemiology platform for disease X"
readme = "README.md"
license = "EUPL-1.2"
license-files = ["LICENSE"]
keywords = ["Genomic Epidemiology", "Disease X", "Bioinformatics"]
classifiers = [
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
requires-python = ">=3.13"
dependencies = [
    "fastapi[standard]==0.116.2",
    "gunicorn==23.0.*",
    "starlette==0.47.3",
    "httpx==0.28.1",
    "python-jose==3.5.0",
    "sqlalchemy==2.0.43",
    "sqlalchemy_utils==0.42.0",
    "pydantic==2.11.7",
    "ulid-py==1.1.0",
    "fire==0.7.1",
    "dynaconf==3.2.11",
    "PyYAML==6.0.2",
    "scipy==1.16.2",
    "numpy==2.3.3",
    "biopython==1.85",
    "cachetools==5.5.2",
    "slowapi==0.1.9",
]


[project.optional-dependencies]
dependencies = [
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "pytest-dependency",
    "pyinstrument",
    "isort",
    "black",
    "pylint",
    "mypy",
    "cryptography",
    "pandas-stubs",
    "openpyxl",
    "types-cachetools",
    "types-python-jose",
]

[project.urls]
Homepage = "https://github.com/RIVM-bioinformatics/gen-epix-api/"
Documentation = "https://rivm-bioinformatics.github.io/gen-epix-api/"

[tool.setuptools.packages.find]
where = ["."]
include = ["gen_epix*"]
exclude = ["tests", "tests.*", "docs", "docs.*", "data", "data.*", "cert", "cert.*", "cicd", "cicd.*"]


[semantic_release]
assets = []
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"
version_toml = ["pyproject.toml:project.version"]

[semantic_release.branches.main]
match = "main"
prerelease_token = "rc"
prerelease = false

[semantic_release.branches.hotfix]
match = "hotfix/.*"
prerelease_token = "hotfix"
prerelease = true

[semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = false

[semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"


[semantic_release.commit_parser_options]
minor_tags = ["feat", "feat!:"]
patch_tags = ["fix", "perf"]
other_allowed_tags = ["build", "chore", "ci", "docs", "style", "refactor", "test"]
allowed_tags = ["feat", "feat!:", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
default_bump_level = 0

[semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true


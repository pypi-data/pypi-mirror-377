[project]
name="StringDALE"
version = "0.5.0"
description = "String Diagram Agent Language Express (StringDALE) is a language for building LLM agents using string diagrams."
readme = "README.md"
requires-python=">=3.10"
dependencies = [
    "bidict>=0.23.1",
    "chromadb>=1.0.15",
    "deepdiff>=8.5.0",
    "deepmerge>=2.0",
    "fastcore>=1.8.5",
    "frozendict>=2.4.6",
    "google-search-results>=2.4.2",
    "graphviz>=0.21",
    "html2text>=2025.4.15",
    "instructor>=1.10.0",
    "ipython>=8",
    "isodate>=0.7.2",
    "jinja2>=3.1.6",
    "joblib>=1.5.1",
    "jsonlines>=4.0.0",
    "lark>=1.2.2",
    "nest-asyncio>=1.6.0",
    "networkx>=3.3",
    "openai>=1.97.1",
    "pandas>=2.3.1",
    "parse>=1.20.2",
    "pillow>=11.3.0",
    "prettyprint>=0.1.5",
    "python-constraint2>=2.4.0",
    "python-dotenv>=1.1.1",
    "python-git>=2018.2.1",
    "singleton-decorator>=1.0.0",
    "smolagents>=1.20.0",
    "sqlmodel>=0.0.24",
    "wikipedia>=1.4.0",
]


[tool.uv]
dev-dependencies = [
    "deepdiff>=8.5.0",
    "hatch>=1.14.1",
    "ipykernel>=6.30.0",
    "ipywidgets>=8.1.7",
    "isort>=6.0.1",
    "jupyter>=1.1.1",
    "nbdev>=2.4.5",
    "nbdime>=4.0.2",
    "nbqa>=1.9.1",
    "poethepoet>=0.36.0",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "rich[jupyter]>=14.0.0",
    "setuptools>=75.2.0",
]


[tool.nbdev]
# Core settings
doc_path = "_docs"
license = "apache2"
lib_path = "stringdale"
nbs_path = "nbs"
recursive = true
tst_flags = "notest"
put_version_in_init = true
branch = "main"
custom_sidebar = true

# Documentation settings
doc_host = "https://%(user)s.github.io"
doc_baseurl = "/%(repo)s"
git_url = "https://github.com/%(user)s/%(repo)s"
title = "%(lib_name)s"
audience = "Developers"
author = "Dean Light"
author_email = "dean.light92@gmail.com"
copyright = "2024 onwards, %(author)s"
keywords = "nbdev jupyter notebook python"
language = "English"
status = 3
user = "DeanLight"


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["stringdale"]
directory = "dist"

[tool.poe]
verbosity = 0
envfile = ".env.dev"


[tool.poe.tasks.init]
help = "Initialise project, including precommit hooks"
sequence = [
    {cmd = "pre-commit install"},
]


[tool.poe.tasks._check_env]
help = "Check if an environment variable is set, used as a helper task for other tasks"
args = [{ name = "env_name", options = ["--env_name"] }]
shell = """
if [ -z "${!env_name}" ]; then
    echo "Error: $env_name is not set, make sure to set it in the env file" >&2
    exit 1
fi
"""

[tool.poe.tasks.clean]
    help = "Remove temporary files generated during build process"
    cmd  = """
    rm -rf .pytest_cache "./**/__pycache__" _proc
    """

[tool.poe.tasks.test]
    help = "Run tests"
    sequence = [
    {ref = "_check_env --env_name OPENAI_API_KEY"},
    {cmd = "nbdev_test --timing --do_print"}
    ]

[tool.poe.tasks.sync]
    help = "Cleans, lints and exports notebooks, syncs settings.ini and uv env"
    sequence = [
     { cmd = "python _scripts/sync_settings.py"},
     { cmd = "nbdev_clean"},
     { cmd = "nbdev_export"},
     { cmd = "uv sync --all-extras"},
    ]

[tool.poe.tasks.pypi]
    help = "Build the package and publish to PyPI"
    sequence = [
        {ref = "_check_env --env_name UV_PUBLISH_TOKEN"},
        {cmd = "rm -rf dist/*"},
        {cmd = "uv build"},
        {cmd = "uv publish"},
    ]

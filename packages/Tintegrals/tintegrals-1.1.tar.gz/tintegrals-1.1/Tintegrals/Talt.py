# This file is automatically generated. Do not modify it manually!
from functools import lru_cache
import numpy as np

from .config import cond
from .OneLoop import A0fin, B0fin, C0fin
from .T134 import T134fin


@lru_cache(maxsize=150)
def II(x, y, z):
    from .config import _inclB0del
    _inclB0del_save = _inclB0del
    _inclB0del = False 
    res = - T134fin(np.sqrt(x), np.sqrt(y), np.sqrt(z))
    _inclB0del = _inclB0del_save
    return res


@lru_cache(maxsize=150)
def numerator(x, y, z):
    return x**2 - (y + z)**2 + ((x - y + z)*A0fin(x)*A0fin(y))/x + ((x + y - \
            z)*A0fin(x)*A0fin(z))/x - 2*A0fin(y)*A0fin(z) - (-x + y + \
            z)*(A0fin(x) + A0fin(y) + A0fin(z)) + (x - y - z)*II(x,y,z)


@lru_cache(maxsize=150)
def Delta(x, y, z):
    return x**2 + y**2 + z**2 - 2*(x*y + x*z + y*z)


@lru_cache(maxsize=150)
def dIIdx(x, y, z):
    from .config import _mudim
    try:
        if cond(x, y) and cond(z, 0):
            return -(np.log(x/_mudim) - 1)**2/2
        elif cond(x, z) and cond(y, 0):
            return -(np.log(x/_mudim) - 1)**2/2
        return numerator(x, y, z)/Delta(x, y, z)
    except:
        raise Exception(f"There was an error when evaluating the dIIdx integral with arguments {x}, {y}, {z}")
    
    
@lru_cache(maxsize=150)
def d2IIdx2(x, y, z):
    from .config import _mudim
    try:
        if cond(z, 0):
            if cond(x, y):
                return -np.log(x/_mudim)/x
            elif cond(y, 0):
                return (1-np.log(x/_mudim))/x    
            else:
                return (x - y - x*np.log(x/_mudim) + y*np.log(y/_mudim))/x/(x - y)    
        if cond(y, 0):
            if cond(x, z):
                return -np.log(x/_mudim)/x 
            else: 
                return (x - z - x*np.log(x/_mudim) + z*np.log(z/_mudim))/x/(x - z)
        else:                  
            return (-4*y*z*(x + y + z))/(x**2 + (y - z)**2 - 2*x*(y + z))**2 + ((-x**3 \
                    - (y - z)**3 + x**2*(y + 3*z) + x*(y**2 - 2*y*z - \
                    3*z**2))*A0fin(z))/(x*(x**2 + (y - z)**2 - 2*x*(y + z))**2) + \
                    A0fin(y)*((-x**3 + (y - z)**3 + x**2*(3*y + z) + x*(-3*y**2 - 2*y*z + \
                    z**2))/(x*(x**2 + (y - z)**2 - 2*x*(y + z))**2) + (2*(x - y - \
                    z)*A0fin(z))/(x**2 + (y - z)**2 - 2*x*(y + z))**2) + A0fin(x)*((x**3 \
                    - 3*x**2*(y + z) - (y - z)**2*(y + z) + x*(3*y**2 - 2*y*z + \
                    3*z**2))/(x*(x**2 + (y - z)**2 - 2*x*(y + z))**2) - (2*(x + y - \
                    z)*z*A0fin(y))/(x*(x**2 + (y - z)**2 - 2*x*(y + z))**2) - (2*y*(x - y \
                    + z)*A0fin(z))/(x*(x**2 + (y - z)**2 - 2*x*(y + z))**2)) - \
                   (4*y*z*II(x,y,z))/(x**2 + (y - z)**2 - 2*x*(y + z))**2
    except:
        raise Exception(f"There was an error when evaluating the d2IIdx2 integral with arguments {x}, {y}, {z}")
    
    
@lru_cache(maxsize=150)
def d2IIdxdy(x, y, z):
    try:
        if cond(x, y) and cond(z, 0):
            return 1/x
        else:
            return (2*z*(x**2 + 2*x*y + y**2 - z**2))/(x**2 + (y - z)**2 - 2*x*(y + \
                    z))**2 + (2*(x**2 + y*(y - z) - x*(2*y + z))*A0fin(z))/(x**2 + (y - \
                    z)**2 - 2*x*(y + z))**2 + A0fin(x)*((-x**3 + (y - z)**3 + 3*x**2*(y + \
                    z) - x*(3*y**2 - 4*y*z + z**2))/(x*(x**2 + (y - z)**2 - 2*x*(y + \
                    z))**2) + ((x + y - z)**2*z*A0fin(y))/(x*y*(x**2 + (y - z)**2 - \
                    2*x*(y + z))**2) + ((x**2 - (y - z)**2)*A0fin(z))/(x*(x**2 + (y - \
                    z)**2 - 2*x*(y + z))**2)) + A0fin(y)*(-((-x**3 + y**3 - 3*y**2*z + \
                    y*z**2 + z**3 + 3*x**2*(y + z) - x*(3*y**2 + 4*y*z + \
                    3*z**2))/(y*(x**2 + (y - z)**2 - 2*x*(y + z))**2)) + ((-x**2 + y**2 + \
                    2*x*z - z**2)*A0fin(z))/(y*(x**2 + (y - z)**2 - 2*x*(y + z))**2)) + \
                    (2*(x + y - z)*z*II(x,y,z))/(x**2 + (y - z)**2 - 2*x*(y + z))**2
    except:
        raise Exception(f"There was an error when evaluating the d2IIdxdy integral with arguments {x}, {y}, {z}")
    
    
@lru_cache(maxsize=150)
def d3IIdx3(x, y, z):
    from .config import _mudim
    try: 
        if cond(z, 0):
            if cond(x, y):
                return (-1/2 + np.log(x/_mudim))/x**2
            elif cond(y, 0):
                return (-2 + np.log(x/_mudim))/x**2
            else:
                return (x**2 * np.log(x/_mudim) - (2*x - y)*(x - y + y * np.log(y/_mudim)))/(x**2*(x - y)**2)
        if cond(y, 0):
            if cond(x, z):
                return (-1/2 + np.log(x/_mudim))/x**2
            else: 
                return (x**2 * np.log(x/_mudim) - (2*x - z)*(x - z + z * np.log(z/_mudim)))/(x**2*(x - z)**2)
        else:
            return (-x**5 + 5*x**4*(y + z) + (y - z)**4*(y + z) - 10*x**3*(y**2 + z**2) \
                    + 2*x**2*(5*y**3 + 3*y**2*z + 3*y*z**2 + 5*z**3) - x*(5*y**4 + \
                    8*y**3*z + 22*y**2*z**2 + 8*y*z**3 + 5*z**4))/(x*(x**2 + (y - z)**2 - \
                    2*x*(y + z))**3) + ((2*x**5 + (y - z)**5 - 2*x*(y - z)**3*(4*y + 3*z) \
                    - x**4*(y + 9*z) - 2*x**3*(5*y**2 - 7*y*z - 8*z**2) + 2*x**2*(8*y**3 \
                    - 9*y**2*z - 4*y*z**2 - 7*z**3))*A0fin(z))/(x**2*(x**2 + (y - z)**2 - \
                    2*x*(y + z))**3) + A0fin(y)*(-((-2*x**5 + (y - z)**5 + x**4*(9*y + z) \
                    - 2*x*(y - z)**3*(3*y + 4*z) - 2*x**3*(8*y**2 + 7*y*z - 5*z**2) + \
                    2*x**2*(7*y**3 + 4*y**2*z + 9*y*z**2 - 8*z**3))/(x**2*(x**2 + (y - \
                    z)**2 - 2*x*(y + z))**3)) - (6*(-x + y + z)**2*A0fin(z))/(x**2 + (y - \
                    z)**2 - 2*x*(y + z))**3) + A0fin(x)*(-((x**4 - 4*x**3*(y + z) + (y - \
                    z)**2*(y**2 + 10*y*z + z**2) + x**2*(6*y**2 + 4*y*z + 6*z**2) - \
                    4*x*(y**3 + 2*y**2*z + 2*y*z**2 + z**3))/(x*(x**2 + (y - z)**2 - \
                    2*x*(y + z))**3)) + (6*z*(x**2 - y**2 - 2*x*z + \
                    z**2)*A0fin(y))/(x*(x**2 + (y - z)**2 - 2*x*(y + z))**3) + (6*y*(x**2 \
                    - 2*x*y + y**2 - z**2)*A0fin(z))/(x*(x**2 + (y - z)**2 - 2*x*(y + \
                    z))**3)) - (12*y*z*(-x + y + z)*II(x,y,z))/(x**2 + (y - z)**2 - \
                    2*x*(y + z))**3
    except:
        raise Exception(f"There was an error when evaluating the d3IIdx3 integral with arguments {x}, {y}, {z}")
    
    
@lru_cache(maxsize=150)
def d3IIdx2dy(x, y, z):
    try: 
        if cond(z, 0) and cond(x, y):
            return -1/(2*x**2)
        else:    
            return (x**5 - (y - z)**5 - x**4*(5*y + 7*z) + 2*x**3*(5*y**2 - 2*y*z + \
                    3*z**2) + 2*x**2*(-5*y**3 + 5*y**2*z + y*z**2 + 3*z**3) + x*(5*y**4 - \
                    4*y**3*z + 10*y**2*z**2 - 4*y*z**3 - 7*z**4))/(x*(x**2 + (y - z)**2 - \
                    2*x*(y + z))**3) + ((-5*x**4 + (y - z)**4 + 2*x**3*(7*y + 5*z) - \
                    4*x**2*(3*y**2 + 3*y*z + z**2) + 2*x*(y**3 + 3*y**2*z - 3*y*z**2 - \
                    z**3))*A0fin(z))/(x*(x**2 + (y - z)**2 - 2*x*(y + z))**3) + \
                    A0fin(x)*((x**4 - 2*x**3*(2*y + z) + (y - z)**3*(y + 5*z) + \
                    x**2*(6*y**2 - 6*y*z - 4*z**2) - 2*x*(2*y**3 - 3*y**2*z + 6*y*z**2 - \
                    5*z**3))/(x*(x**2 + (y - z)**2 - 2*x*(y + z))**3) + (2*z*(-x**3 + (y \
                    - z)**2*(2*y + z) + x**2*(-2*y + 3*z) + x*(y**2 + 2*y*z - \
                    3*z**2))*A0fin(y))/(x*y*(x**2 + (y - z)**2 - 2*x*(y + z))**3) - \
                    (2*(x**3 - x**2*z + (y - z)**2*(2*y + z) - x*(3*y**2 - 4*y*z + \
                    z**2))*A0fin(z))/(x*(x**2 + (y - z)**2 - 2*x*(y + z))**3)) + \
                    A0fin(y)*((-x**5 - (y - z)**4*z + x**4*(4*y + 3*z) - 2*x**3*(3*y**2 + \
                    8*y*z + z**2) + 2*x**2*(2*y**3 + 5*y**2*z + 12*y*z**2 - z**3) + \
                    x*(-y**4 + 4*y**3*z + 10*y**2*z**2 - 16*y*z**3 + 3*z**4))/(x*y*(x**2 \
                    + (y - z)**2 - 2*x*(y + z))**3) + (2*(x**3 + 2*y**3 - 3*x**2*z + \
                    y**2*z - 2*y*z**2 - z**3 + x*(-3*y**2 + 2*y*z + \
                    3*z**2))*A0fin(z))/(y*(x**2 + (y - z)**2 - 2*x*(y + z))**3)) - \
                    (4*z*(x**2 - 2*y**2 + x*(y - 2*z) + y*z + z**2)*II(x,y,z))/(x**2 + (y \
                    - z)**2 - 2*x*(y + z))**3
    except:
        raise Exception(f"There was an error when evaluating the d3IIdx2dy integral with arguments {x}, {y}, {z}")
    
    
@lru_cache(maxsize=150)
def d4IIdx4(x, y, z):
    from .config import _mudim
    try: 
        if cond(z, 0):
            if cond(x, y):
                return (4 - 6*np.log(x/_mudim))/(3*x**3)
            elif cond(y, 0):
                return (5 - 2*np.log(x/_mudim))/x**3
            else:
                return (5 * x**3 - 10 * x**2 * y + 7 * x * y**2 - 2 * y**3 - 2 * x**3 * np.log(x /_mudim) + 2 * y * (3 * x**2 - 3 * x * y + y**2) * np.log(y /_mudim))/(x**3 * (x - y)**3)
        if cond(y, 0):
            if cond(x, z):
                return (4 - 6*np.log(x/_mudim))/(3*x**3)
            else: 
                return (5 * x**3 - 10 * x**2 * z + 7 * x * z**2 - 2 * z**3 - 2 * x**3 * np.log(x /_mudim) + 2 * z * (3 * x**2 - 3 * x * z + z**2) * np.log(z /_mudim))/(x**3 * (x - z)**3)
        else:    
            return (3*x**7 - 19*x**6*(y + z) - (y - z)**6*(y + z) + x*(y - \
                    z)**4*(9*y**2 + 26*y*z + 9*z**2) + x**5*(51*y**2 + 38*y*z + 51*z**2) \
                    - x**4*(75*y**3 + 101*y**2*z + 101*y*z**2 + 75*z**3) + x**3*(65*y**4 \
                    + 164*y**3*z + 134*y**2*z**2 + 164*y*z**3 + 65*z**4) - x**2*(33*y**5 \
                    + 77*y**4*z + 130*y**3*z**2 + 130*y**2*z**3 + 77*y*z**4 + \
                    33*z**5))/(x**2*(x**2 + (y - z)**2 - 2*x*(y + z))**4) - (2*(3*x**7 + \
                    x**6*(y - 18*z) + (y - z)**7 - x*(y - z)**5*(9*y + 8*z) + x**2*(y - \
                    z)**3*(39*y**2 + 51*y*z + 28*z**2) + x**5*(-39*y**2 + 39*y*z + \
                    46*z**2) + x**4*(87*y**3 - 37*y**2*z - 89*y*z**2 - 65*z**3) + \
                    x**3*(-83*y**4 + 52*y**3*z + 56*y**2*z**2 + 40*y*z**3 + \
                    55*z**4))*A0fin(z))/(x**3*(x**2 + (y - z)**2 - 2*x*(y + z))**4) + \
                    A0fin(x)*((2*(x**5 - 5*x**4*(y + z) + 2*x**3*(5*y**2 + 9*y*z + \
                    5*z**2) - (y - z)**2*(y**3 + 29*y**2*z + 29*y*z**2 + z**3) - \
                    2*x**2*(5*y**3 + 24*y**2*z + 24*y*z**2 + 5*z**3) + x*(5*y**4 + \
                    62*y**3*z - 14*y**2*z**2 + 62*y*z**3 + 5*z**4)))/(x*(x**2 + (y - \
                    z)**2 - 2*x*(y + z))**4) + (24*z*(-x**3 - y**3 - 2*y**2*z + 2*y*z**2 \
                    + z**3 + x**2*(y + 3*z) + x*(y**2 - 3*y*z - \
                    3*z**2))*A0fin(y))/(x*(x**2 + (y - z)**2 - 2*x*(y + z))**4) + \
                    (24*y*(-x**3 + y**3 + 2*y**2*z - 2*y*z**2 - z**3 + x**2*(3*y + z) + \
                    x*(-3*y**2 - 3*y*z + z**2))*A0fin(z))/(x*(x**2 + (y - z)**2 - 2*x*(y \
                    + z))**4)) + A0fin(y)*((-2*(3*x**7 - (y - z)**7 + x**6*(-18*y + z) + \
                    x*(y - z)**5*(8*y + 9*z) + x**5*(46*y**2 + 39*y*z - 39*z**2) - \
                    x**2*(y - z)**3*(28*y**2 + 51*y*z + 39*z**2) - x**4*(65*y**3 + \
                    89*y**2*z + 37*y*z**2 - 87*z**3) + x**3*(55*y**4 + 40*y**3*z + \
                    56*y**2*z**2 + 52*y*z**3 - 83*z**4)))/(x**3*(x**2 + (y - z)**2 - \
                    2*x*(y + z))**4) + (24*(x**3 - y**3 - 4*y**2*z - 4*y*z**2 - z**3 - \
                    3*x**2*(y + z) + x*(3*y**2 + 7*y*z + 3*z**2))*A0fin(z))/(x**2 + (y - \
                    z)**2 - 2*x*(y + z))**4) - (48*y*z*(x**2 + y**2 + 3*y*z + z**2 - \
                    2*x*(y + z))*II(x,y,z))/(x**2 + (y - z)**2 - 2*x*(y + z))**4
    except:
        raise Exception(f"There was an error when evaluating the d4IIdx4 integral with arguments {x}, {y}, {z}")
    
    
@lru_cache(maxsize=150)
def d5IIdx5(x, y, z):
    from .config import _mudim
    try: 
        if cond(z, 0):
            if cond(x, y):
                return (3 * (-3 + 4 * np.log(x/_mudim))) / (2 * x**4)
            elif cond(y, 0):
                return (-17 + 6 * np.log(x /_mudim)) / x**4
            else:
                return (1 / (x**4 * (x - y)**4)) * (-17 * x**4 + 42 * x**3 * y - 45 * x**2 * y**2 + 26 * x * y**3 - 6 * y**4 + 6 * x**4 * np.log(x /_mudim) + 6 * y * (-4 * x**3 + 6 * x**2 * y - 4 * x * y**2 + y**3) * np.log(y /_mudim))
        if cond(y, 0):
            if cond(x, z):
                return (3 * (-3 + 4 * np.log(x/_mudim))) / (2 * x**4)
            else: 
                return (1 / (x**4 * (x - z)**4)) * (-17 * x**4 + 42 * x**3 * z - 45 * x**2 * z**2 + 26 * x * z**3 - 6 * z**4 + 6 * x**4 * np.log(x /_mudim) + 6 * z * (-4 * x**3 + 6 * x**2 * z - 4 * x * z**2 + z**3) * np.log(z/_mudim))
        else:    
            return (-11*x**9 + 84*x**8*(y + z) + 2*(y - z)**8*(y + z) - x*(y - \
                    z)**6*(21*y**2 + 50*y*z + 21*z**2) - 2*x**7*(141*y**2 + 170*y*z + \
                    141*z**2) + 2*x**2*(y - z)**4*(51*y**3 + 199*y**2*z + 199*y*z**2 + \
                    51*z**3) + 2*x**6*(273*y**3 + 577*y**2*z + 577*y*z**2 + 273*z**3) - \
                    4*x**5*(168*y**4 + 599*y**3*z + 510*y**2*z**2 + 599*y*z**3 + \
                    168*z**4) + 6*x**4*(91*y**5 + 395*y**4*z + 442*y**3*z**2 + \
                    442*y**2*z**3 + 395*y*z**4 + 91*z**5) - 6*x**3*(49*y**6 + 154*y**5*z \
                    + 151*y**4*z**2 + 412*y**3*z**3 + 151*y**2*z**4 + 154*y*z**5 + \
                    49*z**6))/(x**3*(x**2 + (y - z)**2 - 2*x*(y + z))**5) + (2*(12*x**9 + \
                    x**8*(17*y - 90*z) + 3*(y - z)**9 - 2*x*(y - z)**7*(16*y + 15*z) - \
                    4*x**7*(77*y**2 - 58*y*z - 75*z**2) + x**2*(y - z)**5*(158*y**2 + \
                    233*y*z + 135*z**2) + x**6*(882*y**3 - 19*y**2*z - 978*y*z**2 - \
                    585*z**3) - 4*x**3*(y - z)**3*(123*y**3 + 209*y**2*z + 183*y*z**2 + \
                    90*z**3) - 2*x**5*(614*y**4 + 149*y**3*z - 571*y**2*z**2 - 651*y*z**3 \
                    - 369*z**4) + x**4*(988*y**5 - 75*y**4*z - 960*y**3*z**2 - \
                    490*y**2*z**3 - 516*y*z**4 - 627*z**5))*A0fin(z))/(x**4*(x**2 + (y - \
                    z)**2 - 2*x*(y + z))**5) + A0fin(y)*((24*x**9 - 6*(y - z)**9 + 4*x*(y \
                    - z)**7*(15*y + 16*z) + 2*x**8*(-90*y + 17*z) + 8*x**7*(75*y**2 + \
                    58*y*z - 77*z**2) - 2*x**2*(y - z)**5*(135*y**2 + 233*y*z + 158*z**2) \
                    - 2*x**6*(585*y**3 + 978*y**2*z + 19*y*z**2 - 882*z**3) + 8*x**3*(y - \
                    z)**3*(90*y**3 + 183*y**2*z + 209*y*z**2 + 123*z**3) + \
                    4*x**5*(369*y**4 + 651*y**3*z + 571*y**2*z**2 - 149*y*z**3 - \
                    614*z**4) - 2*x**4*(627*y**5 + 516*y**4*z + 490*y**3*z**2 + \
                    960*y**2*z**3 + 75*y*z**4 - 988*z**5))/(x**4*(x**2 + (y - z)**2 - \
                    2*x*(y + z))**5) - (120*(-x + y + z)**2*(x**2 + y**2 + 5*y*z + z**2 - \
                    2*x*(y + z))*A0fin(z))/(x**2 + (y - z)**2 - 2*x*(y + z))**5) + \
                    A0fin(x)*((-2*(3*x**6 - 18*x**5*(y + z) + x**4*(45*y**2 + 124*y*z + \
                    45*z**2) - 4*x**3*(15*y**3 + 109*y**2*z + 109*y*z**2 + 15*z**3) + (y \
                    - z)**2*(3*y**4 + 178*y**3*z + 478*y**2*z**2 + 178*y*z**3 + 3*z**4) + \
                    x**2*(45*y**4 + 744*y**3*z + 502*y**2*z**2 + 744*y*z**3 + 45*z**4) - \
                    2*x*(9*y**5 + 293*y**4*z + 118*y**3*z**2 + 118*y**2*z**3 + 293*y*z**4 \
                    + 9*z**5)))/(x*(x**2 + (y - z)**2 - 2*x*(y + z))**5) + (120*z*(x**4 - \
                    y**4 - 5*y**3*z + 5*y*z**3 + z**4 - 2*x**3*(y + 2*z) + 3*x**2*z*(3*y \
                    + 2*z) + 2*x*(y**3 - 6*y*z**2 - 2*z**3))*A0fin(y))/(x*(x**2 + (y - \
                    z)**2 - 2*x*(y + z))**5) + (120*y*(x**4 + y**4 + 5*y**3*z - 5*y*z**3 \
                    - z**4 - 2*x**3*(2*y + z) + 3*x**2*y*(2*y + 3*z) - 2*x*(2*y**3 + \
                    6*y**2*z - z**3))*A0fin(z))/(x*(x**2 + (y - z)**2 - 2*x*(y + z))**5)) \
                    - (240*y*z*(-x**3 + y**3 + 6*y**2*z + 6*y*z**2 + z**3 + 3*x**2*(y + \
                    z) - 3*x*(y**2 + 3*y*z + z**2))*II(x,y,z))/(x**2 + (y - z)**2 - \
                    2*x*(y + z))**5
    except:
        raise Exception(f"There was an error when evaluating the d5IIdx5 integral with arguments {x}, {y}, {z}")
    
    
@lru_cache(maxsize=150)
def Uxxzu(x, z, u):
    return -dIIdx(x, z, u)
    
    
@lru_cache(maxsize=150)
def Uxyzu(x, y, z, u):
    try:
        return -((II(x, z, u) - II(y, z, u))/(x - y))
    except:
        raise Exception(f"There was an error when evaluating the Uxyzu integral with arguments {x}, {y}, {z}, {u}")

    
@lru_cache(maxsize=150)
def Mxyxyv(x, y, v):
    return d2IIdxdy(x, y, v)


@lru_cache(maxsize=150)
def Mxyxuv(x, y, u, v):
    try:
        return 1/(y - u)*(dIIdx(x, y, v) - dIIdx(x, u, v))
    except:
        raise Exception(f"There was an error when evaluating the Mxyxuv integral with arguments {x}, {y}, {u}, {v}")


@lru_cache(maxsize=150)
def Mxyzuv(x, y, z, u, v):
    try:
        return 1/((x - z)*(y - u))*(II(x, y, v) - II(x, u, v) - II(z, y, v) + II(z, u, v))
    except:
        raise Exception(f"There was an error when evaluating the Mxyzuv integral with arguments {x}, {y}, {z}, {u}, {v}")


@lru_cache(maxsize=150)
def T113alt(x, y, z):
    from .config import _mudim
    try:
        if cond(x, y):
            return - A0fin(z)*np.log(x/_mudim)
        #elif cond(y, z):
        #    return - A0fin(x)*np.log(y/_mudim)
        #elif cond(x, z):
        #    return - A0fin(y)*np.log(z/_mudim)
        else:
            return A0fin(z)*(A0fin(x) - A0fin(y))/(x - y)
    except:
        raise Exception(f"There was an error when evaluating the T113alt integral with arguments {x}, {x}, {z}")


@lru_cache(maxsize=150)
def T1113alt(x, y, z, u):
    try:
        return A0fin(u)*C0fin(x, y, z)
    except:
        raise Exception(f"There was an error when evaluating the T1113alt integral with arguments {x}, {y}, {z}, {u}")


@lru_cache(maxsize=150)
def T1134alt(x, y, z, u):
    try:
        if cond(x, y):
            return Uxxzu(x, z, u)
        else:
            return Uxyzu(x, y, z, u)
    except:
        raise Exception(f"There was an error when evaluating the T1134alt integral with arguments {x}, {y}, {z}, {u}")
    

@lru_cache(maxsize=150)
def T1133alt(x, y, z, u):
    try:
        return B0fin(0, x, y)*B0fin(0, z, u)
    except:
        raise Exception(f"There was an error when evaluating the T1133alt integral with arguments {x}, {y}, {z}, {u}")
    
    
@lru_cache(maxsize=150)
def T11334Fin(x, y, z, u, v):
    try:
        if cond(x, y) and cond(z, u):
            return - Mxyxyv(x, z, v)
        elif cond(x, y):
            return - Mxyxuv(x, z, u, v)
        elif cond(z, u):
            return - Mxyxuv(z, x, y, v)
        else:
            return - Mxyzuv(x, z, y, u, v)
    except:
        raise Exception(f"There was an error when evaluating the T11334Fin integral with arguments {x}, {y}, {z}, {u}, {v}")
    
    
@lru_cache(maxsize=150)
def T11134Fin(x, y, z, u, v):
    from .config import _mudim
    try:
        if cond(x, y) and cond(x, z) and cond(x, u) and cond(v, 0):
            return np.log(x/_mudim)/(2*x)
        elif cond(x, y) and cond(x, z):
            return - 1/2*d2IIdx2(x, u, v)
        elif cond(y, z):
            return (T1134alt(x, y, u, v) - T1134alt(y, y, u, v))/(x - y)
        elif cond(x, y):
            return (T1134alt(x,x,u,v) - T1134alt(x,z,u,v))/(x-z)
        elif cond(x, z):
            return (T1134alt(x,x,u,v) - T1134alt(y,x,u,v))/(x-y)
        else:
            return (T1134alt(x,z,u,v) - T1134alt(y,z,u,v))/(x-y)
    except:
        raise Exception(f"There was an error when evaluating the T11134Fin integral with arguments {x}, {y}, {z}, {u}, {v}")

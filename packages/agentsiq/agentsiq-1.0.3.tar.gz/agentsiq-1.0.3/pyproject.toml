[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agentsiq"
version = "1.0.3"
description = "Intelligent Multi-Model Router for LLM Selection"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "AgentsIQ Team", email = "team@agentsiq.ai"}
]
maintainers = [
    {name = "AgentsIQ Team", email = "team@agentsiq.ai"}
]
keywords = [
    "ai", "llm", "router", "multi-model", "intelligent", "selection",
    "openai", "anthropic", "google", "ollama", "grok", "optimization",
    "cost-effective", "performance", "analytics", "agentops"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
requires-python = ">=3.8"
dependencies = [
    "pyyaml>=5.0",
    "python-dotenv>=0.10.2",
    "requests>=2.25.0",
]

[project.optional-dependencies]
# Core AI/LLM dependencies
ai = [
    "openai>=0.11.5",
    "anthropic>=0.3.0",
    "google-generativeai>=0.1.0",
]

# Web framework dependencies
web = [
    "fastapi>=0.68.0",
    "uvicorn>=0.15.0",
    "python-multipart>=0.0.5",
]

# Data analysis dependencies
data = [
    "pandas>=1.3.0",
    "matplotlib>=3.3.0",
    "numpy>=1.19.0",
    "seaborn>=0.11.0",
]

# Monitoring dependencies
monitoring = [
    "agentops>=0.1.0",
]

# Development dependencies
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]

# Documentation dependencies
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]

# All optional dependencies
all = [
    "openai>=0.11.5",
    "anthropic>=0.3.0",
    "google-generativeai>=0.1.0",
    "fastapi>=0.68.0",
    "uvicorn>=0.15.0",
    "python-multipart>=0.0.5",
    "pandas>=1.3.0",
    "matplotlib>=3.3.0",
    "numpy>=1.19.0",
    "seaborn>=0.11.0",
    "agentops>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/AgentsIQ"
Documentation = "https://github.com/yourusername/AgentsIQ/blob/main/docs/architecture.md"
Repository = "https://github.com/yourusername/AgentsIQ"
Issues = "https://github.com/yourusername/AgentsIQ/issues"
Changelog = "https://github.com/yourusername/AgentsIQ/blob/main/CHANGELOG.md"

[project.scripts]
agentsiq-benchmark = "examples.benchmark:run"
agentsiq-demo = "examples.serve_and_demo:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["agentsiq*", "examples*"]

[tool.setuptools.package-data]
agentsiq = ["*.yaml", "*.yml"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=agentsiq --cov-report=html --cov-report=term-missing"

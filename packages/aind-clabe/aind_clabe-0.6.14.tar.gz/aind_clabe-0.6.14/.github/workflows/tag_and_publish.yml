name: Tag and Publish

on:
  workflow_dispatch:
    inputs:
      publish:
        type: boolean
        description: 'Whether to publish the package to PyPI'
        required: false
        default: true

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
    - name: Set up Python
      run: uv python install

    - name: Extract version from __init__.py and package name from pyproject.toml
      id: get_version_and_name
      run: |
        version=$(uv run python -c "import re; 
        with open(f'./src/clabe/__init__.py', 'r') as f: 
          content = f.read();
          match = re.search(r'__version__\s*=\s*[\'\"]([^\'\"]+)[\'\"]', content); 
          print(match.group(1)) if match else exit(1)")
        echo "PACKAGE_NAME=aind-clabe" >> $GITHUB_ENV
        echo "PACKAGE_VERSION=$version" >> $GITHUB_ENV
      shell: bash

    - name: Create Git tag
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git tag -a v${{ env.PACKAGE_VERSION }} -m "v${{ env.PACKAGE_VERSION }}"
        git push origin v${{ env.PACKAGE_VERSION }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ env.PACKAGE_VERSION }}
        name: Release v${{ env.PACKAGE_VERSION }}
        generate_release_notes: true

  publish:
    needs: tag
    if: github.event_name == 'workflow_dispatch' && inputs.publish || github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Set up Python
        run: uv python install

      - name: Build
        run: uv build

      - name: Publish
        run: uv publish --token ${{ secrets.AIND_PYPI_TOKEN }}
      - name: Publish
        run: uv publish --token ${{ secrets.AIND_PYPI_TOKEN }}

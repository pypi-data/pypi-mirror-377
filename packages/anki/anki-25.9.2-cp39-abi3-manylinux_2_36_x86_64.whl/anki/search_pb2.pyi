"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright: Ankitects Pty Ltd and contributors
License: GNU AGPL, version 3 or later; http://www.gnu.org/licenses/agpl.html
"""

import anki.generic_pb2
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class SearchNode(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Flag:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _FlagEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[SearchNode._Flag.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        FLAG_NONE: SearchNode._Flag.ValueType  # 0
        FLAG_ANY: SearchNode._Flag.ValueType  # 1
        FLAG_RED: SearchNode._Flag.ValueType  # 2
        FLAG_ORANGE: SearchNode._Flag.ValueType  # 3
        FLAG_GREEN: SearchNode._Flag.ValueType  # 4
        FLAG_BLUE: SearchNode._Flag.ValueType  # 5
        FLAG_PINK: SearchNode._Flag.ValueType  # 6
        FLAG_TURQUOISE: SearchNode._Flag.ValueType  # 7
        FLAG_PURPLE: SearchNode._Flag.ValueType  # 8

    class Flag(_Flag, metaclass=_FlagEnumTypeWrapper): ...
    FLAG_NONE: SearchNode.Flag.ValueType  # 0
    FLAG_ANY: SearchNode.Flag.ValueType  # 1
    FLAG_RED: SearchNode.Flag.ValueType  # 2
    FLAG_ORANGE: SearchNode.Flag.ValueType  # 3
    FLAG_GREEN: SearchNode.Flag.ValueType  # 4
    FLAG_BLUE: SearchNode.Flag.ValueType  # 5
    FLAG_PINK: SearchNode.Flag.ValueType  # 6
    FLAG_TURQUOISE: SearchNode.Flag.ValueType  # 7
    FLAG_PURPLE: SearchNode.Flag.ValueType  # 8

    class _Rating:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _RatingEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[SearchNode._Rating.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        RATING_ANY: SearchNode._Rating.ValueType  # 0
        RATING_AGAIN: SearchNode._Rating.ValueType  # 1
        RATING_HARD: SearchNode._Rating.ValueType  # 2
        RATING_GOOD: SearchNode._Rating.ValueType  # 3
        RATING_EASY: SearchNode._Rating.ValueType  # 4
        RATING_BY_RESCHEDULE: SearchNode._Rating.ValueType  # 5

    class Rating(_Rating, metaclass=_RatingEnumTypeWrapper): ...
    RATING_ANY: SearchNode.Rating.ValueType  # 0
    RATING_AGAIN: SearchNode.Rating.ValueType  # 1
    RATING_HARD: SearchNode.Rating.ValueType  # 2
    RATING_GOOD: SearchNode.Rating.ValueType  # 3
    RATING_EASY: SearchNode.Rating.ValueType  # 4
    RATING_BY_RESCHEDULE: SearchNode.Rating.ValueType  # 5

    class _CardState:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _CardStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[SearchNode._CardState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        CARD_STATE_NEW: SearchNode._CardState.ValueType  # 0
        CARD_STATE_LEARN: SearchNode._CardState.ValueType  # 1
        CARD_STATE_REVIEW: SearchNode._CardState.ValueType  # 2
        CARD_STATE_DUE: SearchNode._CardState.ValueType  # 3
        CARD_STATE_SUSPENDED: SearchNode._CardState.ValueType  # 4
        CARD_STATE_BURIED: SearchNode._CardState.ValueType  # 5

    class CardState(_CardState, metaclass=_CardStateEnumTypeWrapper): ...
    CARD_STATE_NEW: SearchNode.CardState.ValueType  # 0
    CARD_STATE_LEARN: SearchNode.CardState.ValueType  # 1
    CARD_STATE_REVIEW: SearchNode.CardState.ValueType  # 2
    CARD_STATE_DUE: SearchNode.CardState.ValueType  # 3
    CARD_STATE_SUSPENDED: SearchNode.CardState.ValueType  # 4
    CARD_STATE_BURIED: SearchNode.CardState.ValueType  # 5

    class _FieldSearchMode:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _FieldSearchModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[SearchNode._FieldSearchMode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        FIELD_SEARCH_MODE_NORMAL: SearchNode._FieldSearchMode.ValueType  # 0
        FIELD_SEARCH_MODE_REGEX: SearchNode._FieldSearchMode.ValueType  # 1
        FIELD_SEARCH_MODE_NOCOMBINING: SearchNode._FieldSearchMode.ValueType  # 2

    class FieldSearchMode(_FieldSearchMode, metaclass=_FieldSearchModeEnumTypeWrapper): ...
    FIELD_SEARCH_MODE_NORMAL: SearchNode.FieldSearchMode.ValueType  # 0
    FIELD_SEARCH_MODE_REGEX: SearchNode.FieldSearchMode.ValueType  # 1
    FIELD_SEARCH_MODE_NOCOMBINING: SearchNode.FieldSearchMode.ValueType  # 2

    @typing.final
    class Dupe(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NOTETYPE_ID_FIELD_NUMBER: builtins.int
        FIRST_FIELD_FIELD_NUMBER: builtins.int
        notetype_id: builtins.int
        first_field: builtins.str
        def __init__(
            self,
            *,
            notetype_id: builtins.int = ...,
            first_field: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["first_field", b"first_field", "notetype_id", b"notetype_id"]) -> None: ...

    @typing.final
    class Rated(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        DAYS_FIELD_NUMBER: builtins.int
        RATING_FIELD_NUMBER: builtins.int
        days: builtins.int
        rating: global___SearchNode.Rating.ValueType
        def __init__(
            self,
            *,
            days: builtins.int = ...,
            rating: global___SearchNode.Rating.ValueType = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["days", b"days", "rating", b"rating"]) -> None: ...

    @typing.final
    class IdList(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        IDS_FIELD_NUMBER: builtins.int
        @property
        def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
        def __init__(
            self,
            *,
            ids: collections.abc.Iterable[builtins.int] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["ids", b"ids"]) -> None: ...

    @typing.final
    class Group(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        class _Joiner:
            ValueType = typing.NewType("ValueType", builtins.int)
            V: typing_extensions.TypeAlias = ValueType

        class _JoinerEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[SearchNode.Group._Joiner.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            AND: SearchNode.Group._Joiner.ValueType  # 0
            OR: SearchNode.Group._Joiner.ValueType  # 1

        class Joiner(_Joiner, metaclass=_JoinerEnumTypeWrapper): ...
        AND: SearchNode.Group.Joiner.ValueType  # 0
        OR: SearchNode.Group.Joiner.ValueType  # 1

        NODES_FIELD_NUMBER: builtins.int
        JOINER_FIELD_NUMBER: builtins.int
        joiner: global___SearchNode.Group.Joiner.ValueType
        @property
        def nodes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SearchNode]: ...
        def __init__(
            self,
            *,
            nodes: collections.abc.Iterable[global___SearchNode] | None = ...,
            joiner: global___SearchNode.Group.Joiner.ValueType = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["joiner", b"joiner", "nodes", b"nodes"]) -> None: ...

    @typing.final
    class Field(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        FIELD_NAME_FIELD_NUMBER: builtins.int
        TEXT_FIELD_NUMBER: builtins.int
        MODE_FIELD_NUMBER: builtins.int
        field_name: builtins.str
        text: builtins.str
        mode: global___SearchNode.FieldSearchMode.ValueType
        def __init__(
            self,
            *,
            field_name: builtins.str = ...,
            text: builtins.str = ...,
            mode: global___SearchNode.FieldSearchMode.ValueType = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["field_name", b"field_name", "mode", b"mode", "text", b"text"]) -> None: ...

    GROUP_FIELD_NUMBER: builtins.int
    NEGATED_FIELD_NUMBER: builtins.int
    PARSABLE_TEXT_FIELD_NUMBER: builtins.int
    TEMPLATE_FIELD_NUMBER: builtins.int
    NID_FIELD_NUMBER: builtins.int
    DUPE_FIELD_NUMBER: builtins.int
    FIELD_NAME_FIELD_NUMBER: builtins.int
    RATED_FIELD_NUMBER: builtins.int
    ADDED_IN_DAYS_FIELD_NUMBER: builtins.int
    DUE_IN_DAYS_FIELD_NUMBER: builtins.int
    FLAG_FIELD_NUMBER: builtins.int
    CARD_STATE_FIELD_NUMBER: builtins.int
    NIDS_FIELD_NUMBER: builtins.int
    EDITED_IN_DAYS_FIELD_NUMBER: builtins.int
    DECK_FIELD_NUMBER: builtins.int
    DUE_ON_DAY_FIELD_NUMBER: builtins.int
    TAG_FIELD_NUMBER: builtins.int
    NOTE_FIELD_NUMBER: builtins.int
    INTRODUCED_IN_DAYS_FIELD_NUMBER: builtins.int
    FIELD_FIELD_NUMBER: builtins.int
    LITERAL_TEXT_FIELD_NUMBER: builtins.int
    parsable_text: builtins.str
    template: builtins.int
    nid: builtins.int
    field_name: builtins.str
    added_in_days: builtins.int
    due_in_days: builtins.int
    flag: global___SearchNode.Flag.ValueType
    card_state: global___SearchNode.CardState.ValueType
    edited_in_days: builtins.int
    deck: builtins.str
    due_on_day: builtins.int
    tag: builtins.str
    note: builtins.str
    introduced_in_days: builtins.int
    literal_text: builtins.str
    @property
    def group(self) -> global___SearchNode.Group: ...
    @property
    def negated(self) -> global___SearchNode: ...
    @property
    def dupe(self) -> global___SearchNode.Dupe: ...
    @property
    def rated(self) -> global___SearchNode.Rated: ...
    @property
    def nids(self) -> global___SearchNode.IdList: ...
    @property
    def field(self) -> global___SearchNode.Field: ...
    def __init__(
        self,
        *,
        group: global___SearchNode.Group | None = ...,
        negated: global___SearchNode | None = ...,
        parsable_text: builtins.str = ...,
        template: builtins.int = ...,
        nid: builtins.int = ...,
        dupe: global___SearchNode.Dupe | None = ...,
        field_name: builtins.str = ...,
        rated: global___SearchNode.Rated | None = ...,
        added_in_days: builtins.int = ...,
        due_in_days: builtins.int = ...,
        flag: global___SearchNode.Flag.ValueType = ...,
        card_state: global___SearchNode.CardState.ValueType = ...,
        nids: global___SearchNode.IdList | None = ...,
        edited_in_days: builtins.int = ...,
        deck: builtins.str = ...,
        due_on_day: builtins.int = ...,
        tag: builtins.str = ...,
        note: builtins.str = ...,
        introduced_in_days: builtins.int = ...,
        field: global___SearchNode.Field | None = ...,
        literal_text: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["added_in_days", b"added_in_days", "card_state", b"card_state", "deck", b"deck", "due_in_days", b"due_in_days", "due_on_day", b"due_on_day", "dupe", b"dupe", "edited_in_days", b"edited_in_days", "field", b"field", "field_name", b"field_name", "filter", b"filter", "flag", b"flag", "group", b"group", "introduced_in_days", b"introduced_in_days", "literal_text", b"literal_text", "negated", b"negated", "nid", b"nid", "nids", b"nids", "note", b"note", "parsable_text", b"parsable_text", "rated", b"rated", "tag", b"tag", "template", b"template"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["added_in_days", b"added_in_days", "card_state", b"card_state", "deck", b"deck", "due_in_days", b"due_in_days", "due_on_day", b"due_on_day", "dupe", b"dupe", "edited_in_days", b"edited_in_days", "field", b"field", "field_name", b"field_name", "filter", b"filter", "flag", b"flag", "group", b"group", "introduced_in_days", b"introduced_in_days", "literal_text", b"literal_text", "negated", b"negated", "nid", b"nid", "nids", b"nids", "note", b"note", "parsable_text", b"parsable_text", "rated", b"rated", "tag", b"tag", "template", b"template"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["filter", b"filter"]) -> typing.Literal["group", "negated", "parsable_text", "template", "nid", "dupe", "field_name", "rated", "added_in_days", "due_in_days", "flag", "card_state", "nids", "edited_in_days", "deck", "due_on_day", "tag", "note", "introduced_in_days", "field", "literal_text"] | None: ...

global___SearchNode = SearchNode

@typing.final
class SearchRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SEARCH_FIELD_NUMBER: builtins.int
    ORDER_FIELD_NUMBER: builtins.int
    search: builtins.str
    @property
    def order(self) -> global___SortOrder: ...
    def __init__(
        self,
        *,
        search: builtins.str = ...,
        order: global___SortOrder | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["order", b"order"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["order", b"order", "search", b"search"]) -> None: ...

global___SearchRequest = SearchRequest

@typing.final
class SearchResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IDS_FIELD_NUMBER: builtins.int
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(
        self,
        *,
        ids: collections.abc.Iterable[builtins.int] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["ids", b"ids"]) -> None: ...

global___SearchResponse = SearchResponse

@typing.final
class SortOrder(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Builtin(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        COLUMN_FIELD_NUMBER: builtins.int
        REVERSE_FIELD_NUMBER: builtins.int
        column: builtins.str
        reverse: builtins.bool
        def __init__(
            self,
            *,
            column: builtins.str = ...,
            reverse: builtins.bool = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["column", b"column", "reverse", b"reverse"]) -> None: ...

    NONE_FIELD_NUMBER: builtins.int
    CUSTOM_FIELD_NUMBER: builtins.int
    BUILTIN_FIELD_NUMBER: builtins.int
    custom: builtins.str
    @property
    def none(self) -> anki.generic_pb2.Empty: ...
    @property
    def builtin(self) -> global___SortOrder.Builtin: ...
    def __init__(
        self,
        *,
        none: anki.generic_pb2.Empty | None = ...,
        custom: builtins.str = ...,
        builtin: global___SortOrder.Builtin | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["builtin", b"builtin", "custom", b"custom", "none", b"none", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["builtin", b"builtin", "custom", b"custom", "none", b"none", "value", b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["value", b"value"]) -> typing.Literal["none", "custom", "builtin"] | None: ...

global___SortOrder = SortOrder

@typing.final
class JoinSearchNodesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    JOINER_FIELD_NUMBER: builtins.int
    EXISTING_NODE_FIELD_NUMBER: builtins.int
    ADDITIONAL_NODE_FIELD_NUMBER: builtins.int
    joiner: global___SearchNode.Group.Joiner.ValueType
    @property
    def existing_node(self) -> global___SearchNode: ...
    @property
    def additional_node(self) -> global___SearchNode: ...
    def __init__(
        self,
        *,
        joiner: global___SearchNode.Group.Joiner.ValueType = ...,
        existing_node: global___SearchNode | None = ...,
        additional_node: global___SearchNode | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["additional_node", b"additional_node", "existing_node", b"existing_node"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["additional_node", b"additional_node", "existing_node", b"existing_node", "joiner", b"joiner"]) -> None: ...

global___JoinSearchNodesRequest = JoinSearchNodesRequest

@typing.final
class ReplaceSearchNodeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EXISTING_NODE_FIELD_NUMBER: builtins.int
    REPLACEMENT_NODE_FIELD_NUMBER: builtins.int
    @property
    def existing_node(self) -> global___SearchNode: ...
    @property
    def replacement_node(self) -> global___SearchNode: ...
    def __init__(
        self,
        *,
        existing_node: global___SearchNode | None = ...,
        replacement_node: global___SearchNode | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["existing_node", b"existing_node", "replacement_node", b"replacement_node"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["existing_node", b"existing_node", "replacement_node", b"replacement_node"]) -> None: ...

global___ReplaceSearchNodeRequest = ReplaceSearchNodeRequest

@typing.final
class FindAndReplaceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NIDS_FIELD_NUMBER: builtins.int
    SEARCH_FIELD_NUMBER: builtins.int
    REPLACEMENT_FIELD_NUMBER: builtins.int
    REGEX_FIELD_NUMBER: builtins.int
    MATCH_CASE_FIELD_NUMBER: builtins.int
    FIELD_NAME_FIELD_NUMBER: builtins.int
    search: builtins.str
    replacement: builtins.str
    regex: builtins.bool
    match_case: builtins.bool
    field_name: builtins.str
    @property
    def nids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(
        self,
        *,
        nids: collections.abc.Iterable[builtins.int] | None = ...,
        search: builtins.str = ...,
        replacement: builtins.str = ...,
        regex: builtins.bool = ...,
        match_case: builtins.bool = ...,
        field_name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["field_name", b"field_name", "match_case", b"match_case", "nids", b"nids", "regex", b"regex", "replacement", b"replacement", "search", b"search"]) -> None: ...

global___FindAndReplaceRequest = FindAndReplaceRequest

@typing.final
class BrowserColumns(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Sorting:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _SortingEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[BrowserColumns._Sorting.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        SORTING_NONE: BrowserColumns._Sorting.ValueType  # 0
        SORTING_ASCENDING: BrowserColumns._Sorting.ValueType  # 1
        SORTING_DESCENDING: BrowserColumns._Sorting.ValueType  # 2

    class Sorting(_Sorting, metaclass=_SortingEnumTypeWrapper): ...
    SORTING_NONE: BrowserColumns.Sorting.ValueType  # 0
    SORTING_ASCENDING: BrowserColumns.Sorting.ValueType  # 1
    SORTING_DESCENDING: BrowserColumns.Sorting.ValueType  # 2

    class _Alignment:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _AlignmentEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[BrowserColumns._Alignment.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        ALIGNMENT_START: BrowserColumns._Alignment.ValueType  # 0
        ALIGNMENT_CENTER: BrowserColumns._Alignment.ValueType  # 1

    class Alignment(_Alignment, metaclass=_AlignmentEnumTypeWrapper): ...
    ALIGNMENT_START: BrowserColumns.Alignment.ValueType  # 0
    ALIGNMENT_CENTER: BrowserColumns.Alignment.ValueType  # 1

    @typing.final
    class Column(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        CARDS_MODE_LABEL_FIELD_NUMBER: builtins.int
        NOTES_MODE_LABEL_FIELD_NUMBER: builtins.int
        SORTING_CARDS_FIELD_NUMBER: builtins.int
        SORTING_NOTES_FIELD_NUMBER: builtins.int
        USES_CELL_FONT_FIELD_NUMBER: builtins.int
        ALIGNMENT_FIELD_NUMBER: builtins.int
        CARDS_MODE_TOOLTIP_FIELD_NUMBER: builtins.int
        NOTES_MODE_TOOLTIP_FIELD_NUMBER: builtins.int
        key: builtins.str
        cards_mode_label: builtins.str
        notes_mode_label: builtins.str
        sorting_cards: global___BrowserColumns.Sorting.ValueType
        """The default sort order"""
        sorting_notes: global___BrowserColumns.Sorting.ValueType
        uses_cell_font: builtins.bool
        alignment: global___BrowserColumns.Alignment.ValueType
        cards_mode_tooltip: builtins.str
        notes_mode_tooltip: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            cards_mode_label: builtins.str = ...,
            notes_mode_label: builtins.str = ...,
            sorting_cards: global___BrowserColumns.Sorting.ValueType = ...,
            sorting_notes: global___BrowserColumns.Sorting.ValueType = ...,
            uses_cell_font: builtins.bool = ...,
            alignment: global___BrowserColumns.Alignment.ValueType = ...,
            cards_mode_tooltip: builtins.str = ...,
            notes_mode_tooltip: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["alignment", b"alignment", "cards_mode_label", b"cards_mode_label", "cards_mode_tooltip", b"cards_mode_tooltip", "key", b"key", "notes_mode_label", b"notes_mode_label", "notes_mode_tooltip", b"notes_mode_tooltip", "sorting_cards", b"sorting_cards", "sorting_notes", b"sorting_notes", "uses_cell_font", b"uses_cell_font"]) -> None: ...

    COLUMNS_FIELD_NUMBER: builtins.int
    @property
    def columns(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BrowserColumns.Column]: ...
    def __init__(
        self,
        *,
        columns: collections.abc.Iterable[global___BrowserColumns.Column] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["columns", b"columns"]) -> None: ...

global___BrowserColumns = BrowserColumns

@typing.final
class BrowserRow(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Color:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _ColorEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[BrowserRow._Color.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        COLOR_DEFAULT: BrowserRow._Color.ValueType  # 0
        COLOR_MARKED: BrowserRow._Color.ValueType  # 1
        COLOR_SUSPENDED: BrowserRow._Color.ValueType  # 2
        COLOR_FLAG_RED: BrowserRow._Color.ValueType  # 3
        COLOR_FLAG_ORANGE: BrowserRow._Color.ValueType  # 4
        COLOR_FLAG_GREEN: BrowserRow._Color.ValueType  # 5
        COLOR_FLAG_BLUE: BrowserRow._Color.ValueType  # 6
        COLOR_FLAG_PINK: BrowserRow._Color.ValueType  # 7
        COLOR_FLAG_TURQUOISE: BrowserRow._Color.ValueType  # 8
        COLOR_FLAG_PURPLE: BrowserRow._Color.ValueType  # 9
        COLOR_BURIED: BrowserRow._Color.ValueType  # 10

    class Color(_Color, metaclass=_ColorEnumTypeWrapper): ...
    COLOR_DEFAULT: BrowserRow.Color.ValueType  # 0
    COLOR_MARKED: BrowserRow.Color.ValueType  # 1
    COLOR_SUSPENDED: BrowserRow.Color.ValueType  # 2
    COLOR_FLAG_RED: BrowserRow.Color.ValueType  # 3
    COLOR_FLAG_ORANGE: BrowserRow.Color.ValueType  # 4
    COLOR_FLAG_GREEN: BrowserRow.Color.ValueType  # 5
    COLOR_FLAG_BLUE: BrowserRow.Color.ValueType  # 6
    COLOR_FLAG_PINK: BrowserRow.Color.ValueType  # 7
    COLOR_FLAG_TURQUOISE: BrowserRow.Color.ValueType  # 8
    COLOR_FLAG_PURPLE: BrowserRow.Color.ValueType  # 9
    COLOR_BURIED: BrowserRow.Color.ValueType  # 10

    @typing.final
    class Cell(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        class _TextElideMode:
            ValueType = typing.NewType("ValueType", builtins.int)
            V: typing_extensions.TypeAlias = ValueType

        class _TextElideModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[BrowserRow.Cell._TextElideMode.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            ElideLeft: BrowserRow.Cell._TextElideMode.ValueType  # 0
            ElideRight: BrowserRow.Cell._TextElideMode.ValueType  # 1
            ElideMiddle: BrowserRow.Cell._TextElideMode.ValueType  # 2
            ElideNone: BrowserRow.Cell._TextElideMode.ValueType  # 3

        class TextElideMode(_TextElideMode, metaclass=_TextElideModeEnumTypeWrapper): ...
        ElideLeft: BrowserRow.Cell.TextElideMode.ValueType  # 0
        ElideRight: BrowserRow.Cell.TextElideMode.ValueType  # 1
        ElideMiddle: BrowserRow.Cell.TextElideMode.ValueType  # 2
        ElideNone: BrowserRow.Cell.TextElideMode.ValueType  # 3

        TEXT_FIELD_NUMBER: builtins.int
        IS_RTL_FIELD_NUMBER: builtins.int
        ELIDE_MODE_FIELD_NUMBER: builtins.int
        text: builtins.str
        is_rtl: builtins.bool
        elide_mode: global___BrowserRow.Cell.TextElideMode.ValueType
        def __init__(
            self,
            *,
            text: builtins.str = ...,
            is_rtl: builtins.bool = ...,
            elide_mode: global___BrowserRow.Cell.TextElideMode.ValueType = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["elide_mode", b"elide_mode", "is_rtl", b"is_rtl", "text", b"text"]) -> None: ...

    CELLS_FIELD_NUMBER: builtins.int
    COLOR_FIELD_NUMBER: builtins.int
    FONT_NAME_FIELD_NUMBER: builtins.int
    FONT_SIZE_FIELD_NUMBER: builtins.int
    color: global___BrowserRow.Color.ValueType
    font_name: builtins.str
    font_size: builtins.int
    @property
    def cells(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BrowserRow.Cell]: ...
    def __init__(
        self,
        *,
        cells: collections.abc.Iterable[global___BrowserRow.Cell] | None = ...,
        color: global___BrowserRow.Color.ValueType = ...,
        font_name: builtins.str = ...,
        font_size: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["cells", b"cells", "color", b"color", "font_name", b"font_name", "font_size", b"font_size"]) -> None: ...

global___BrowserRow = BrowserRow

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import ansys.api.sherlock.v0.SherlockCommonService_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _ModelSource:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _ModelSourceEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ModelSource.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    UNKNOWN: ModelSource.ValueType = ...  # 0
    """Default enum to catch invalid source."""

    GENERATED: ModelSource.ValueType = ...  # 1
    """Generated analysis model source."""

    STRAIN_MAP: ModelSource.ValueType = ...  # 2
    """Strain map analysis model source."""

class ModelSource(_ModelSource, metaclass=_ModelSourceEnumTypeWrapper):
    pass

UNKNOWN: ModelSource.ValueType = ...  # 0
"""Default enum to catch invalid source."""

GENERATED: ModelSource.ValueType = ...  # 1
"""Generated analysis model source."""

STRAIN_MAP: ModelSource.ValueType = ...  # 2
"""Strain map analysis model source."""

global___ModelSource = ModelSource


class _ElementOrder:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _ElementOrderEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ElementOrder.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    UnknownOrder: ElementOrder.ValueType = ...  # 0
    """Default enum to catch invalid element order."""

    Linear: ElementOrder.ValueType = ...  # 1
    """Enum for first order linear elements."""

    Quadratic: ElementOrder.ValueType = ...  # 2
    """Enum for second order quadratic elements."""

    SolidShell: ElementOrder.ValueType = ...  # 3
    """Enum for solid shell elements."""

class ElementOrder(_ElementOrder, metaclass=_ElementOrderEnumTypeWrapper):
    """*
    Enumeration defining the types of supported element orders.
    """
    pass

UnknownOrder: ElementOrder.ValueType = ...  # 0
"""Default enum to catch invalid element order."""

Linear: ElementOrder.ValueType = ...  # 1
"""Enum for first order linear elements."""

Quadratic: ElementOrder.ValueType = ...  # 2
"""Enum for second order quadratic elements."""

SolidShell: ElementOrder.ValueType = ...  # 3
"""Enum for solid shell elements."""

global___ElementOrder = ElementOrder


class RunAnalysisRequest(google.protobuf.message.Message):
    """*
    Request to run one or more Sherlock analysis given the project path, CCA name, analyses, lifecycle phases and events.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Analysis(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _AnalysisType:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _AnalysisTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AnalysisType.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            UNKNOWN: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 0
            """Default enum to catch invalid analysis."""

            NaturalFreq: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 1
            """Enum for the Natural Frequency analysis."""

            HarmonicVibe: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 2
            """Enum for the Harmonic Vibe analysis."""

            ICTAnalysis: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 3
            """Enum for the ICT analysis."""

            MechanicalShock: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 4
            """Enum for the Mechanical Shock analysis."""

            RandomVibe: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 5
            """Enum for the Random Vibe analysis."""

            ComponentFailureMode: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 7
            """Enum for the Component Failure Mechanism analysis."""

            DFMEAModule: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 8
            """Enum for the DFMEA analysis."""

            PTHFatigue: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 9
            """Enum for the PTH Fatigue analysis."""

            PartValidation: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 10
            """Enum for the Part Validation analysis."""

            SemiconductorWearout: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 11
            """Enum for the Semiconductor Wearout analysis."""

            SolderJointFatigue: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 12
            """Enum for the Solder Fatigue analysis."""

            ThermalDerating: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 13
            """Enum for the Thermal Derating analysis."""

            ThermalMech: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 14
            """Enum for the Thermal Mech analysis."""

        class AnalysisType(_AnalysisType, metaclass=_AnalysisTypeEnumTypeWrapper):
            pass

        UNKNOWN: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 0
        """Default enum to catch invalid analysis."""

        NaturalFreq: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 1
        """Enum for the Natural Frequency analysis."""

        HarmonicVibe: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 2
        """Enum for the Harmonic Vibe analysis."""

        ICTAnalysis: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 3
        """Enum for the ICT analysis."""

        MechanicalShock: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 4
        """Enum for the Mechanical Shock analysis."""

        RandomVibe: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 5
        """Enum for the Random Vibe analysis."""

        ComponentFailureMode: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 7
        """Enum for the Component Failure Mechanism analysis."""

        DFMEAModule: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 8
        """Enum for the DFMEA analysis."""

        PTHFatigue: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 9
        """Enum for the PTH Fatigue analysis."""

        PartValidation: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 10
        """Enum for the Part Validation analysis."""

        SemiconductorWearout: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 11
        """Enum for the Semiconductor Wearout analysis."""

        SolderJointFatigue: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 12
        """Enum for the Solder Fatigue analysis."""

        ThermalDerating: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 13
        """Enum for the Thermal Derating analysis."""

        ThermalMech: RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...  # 14
        """Enum for the Thermal Mech analysis."""


        class Phase(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            class Event(google.protobuf.message.Message):
                DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
                NAME_FIELD_NUMBER: builtins.int
                name: typing.Text = ...
                """Life cycle event name."""

                def __init__(self,
                    *,
                    name : typing.Text = ...,
                    ) -> None: ...
                def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...

            NAME_FIELD_NUMBER: builtins.int
            EVENTS_FIELD_NUMBER: builtins.int
            name: typing.Text = ...
            """Life cycle phase name."""

            @property
            def events(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RunAnalysisRequest.Analysis.Phase.Event]:
                """List of life cycle Events."""
                pass
            def __init__(self,
                *,
                name : typing.Text = ...,
                events : typing.Optional[typing.Iterable[global___RunAnalysisRequest.Analysis.Phase.Event]] = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["events",b"events","name",b"name"]) -> None: ...

        TYPE_FIELD_NUMBER: builtins.int
        PHASES_FIELD_NUMBER: builtins.int
        type: global___RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...
        """Type of Analysis to run."""

        @property
        def phases(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RunAnalysisRequest.Analysis.Phase]:
            """List of Phases for each Analysis to run."""
            pass
        def __init__(self,
            *,
            type : global___RunAnalysisRequest.Analysis.AnalysisType.ValueType = ...,
            phases : typing.Optional[typing.Iterable[global___RunAnalysisRequest.Analysis.Phase]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["phases",b"phases","type",b"type"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    ANALYSES_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    ccaName: typing.Text = ...
    """The CCA name."""

    @property
    def analyses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RunAnalysisRequest.Analysis]:
        """List of Analyses to run."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        analyses : typing.Optional[typing.Iterable[global___RunAnalysisRequest.Analysis]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["analyses",b"analyses","ccaName",b"ccaName","project",b"project"]) -> None: ...
global___RunAnalysisRequest = RunAnalysisRequest

class GetHarmonicVibeInputFieldsRequest(google.protobuf.message.Message):
    """*
    Request to list the valid harmonic vibe input fields for the provided model source and user configuration.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MODELSOURCE_FIELD_NUMBER: builtins.int
    modelSource: global___ModelSource.ValueType = ...
    """Optional model source. Default: GENERATED."""

    def __init__(self,
        *,
        modelSource : typing.Optional[global___ModelSource.ValueType] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_modelSource",b"_modelSource","modelSource",b"modelSource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_modelSource",b"_modelSource","modelSource",b"modelSource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_modelSource",b"_modelSource"]) -> typing.Optional[typing_extensions.Literal["modelSource"]]: ...
global___GetHarmonicVibeInputFieldsRequest = GetHarmonicVibeInputFieldsRequest

class GetHarmonicVibeInputFieldsResponse(google.protobuf.message.Message):
    """*
    Response that includes the valid harmonic vibe input fields.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIELDNAME_FIELD_NUMBER: builtins.int
    @property
    def fieldName(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of Harmonic Vibe input fields."""
        pass
    def __init__(self,
        *,
        fieldName : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["fieldName",b"fieldName"]) -> None: ...
global___GetHarmonicVibeInputFieldsResponse = GetHarmonicVibeInputFieldsResponse

class UpdateHarmonicVibePropsRequest(google.protobuf.message.Message):
    """*
    Request to update the harmonic vibe analysis properties for one or more CCA's
    in the project indicated.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class HarmonicVibe(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CCANAME_FIELD_NUMBER: builtins.int
        MODELSOURCE_FIELD_NUMBER: builtins.int
        HARMONICVIBECOUNT_FIELD_NUMBER: builtins.int
        HARMONICVIBEDAMPING_FIELD_NUMBER: builtins.int
        PARTVALIDATIONENABLED_FIELD_NUMBER: builtins.int
        REQUIREMATERIALASSIGNMENTENABLED_FIELD_NUMBER: builtins.int
        ANALYSISTEMP_FIELD_NUMBER: builtins.int
        ANALYSISTEMPUNITS_FIELD_NUMBER: builtins.int
        FORCEMODELREBUILD_FIELD_NUMBER: builtins.int
        FILTERBYEVENTFREQUENCY_FIELD_NUMBER: builtins.int
        NATURALFREQMIN_FIELD_NUMBER: builtins.int
        NATURALFREQMINUNITS_FIELD_NUMBER: builtins.int
        NATURALFREQMAX_FIELD_NUMBER: builtins.int
        NATURALFREQMAXUNITS_FIELD_NUMBER: builtins.int
        REUSEMODALANALYSIS_FIELD_NUMBER: builtins.int
        STRAINMAPNATURALFREQ_FIELD_NUMBER: builtins.int
        ccaName: typing.Text = ...
        """CCA name for which the harmonic vibe properties are set."""

        modelSource: global___ModelSource.ValueType = ...
        """Optional model source. Default: GENERATED."""

        harmonicVibeCount: builtins.int = ...
        """Number of harmonic result layers to generate."""

        harmonicVibeDamping: typing.Text = ...
        """Modal Damping Ratio(s)."""

        partValidationEnabled: builtins.bool = ...
        """Flag indicating if part validation should be performed."""

        requireMaterialAssignmentEnabled: builtins.bool = ...
        """Flag indicating if material assignment is required."""

        analysisTemp: builtins.float = ...
        """Temperature."""

        analysisTempUnits: typing.Text = ...
        """Temperature units."""

        forceModelRebuild: typing.Text = ...
        """Model Creation. Valid values are "FORCE" or "AUTO"."""

        filterByEventFrequency: builtins.bool = ...
        """Flag indicating if harmonic results outside selected event range are imported."""

        naturalFreqMin: builtins.int = ...
        """Min Frequency. For NX Nastran analysis only."""

        naturalFreqMinUnits: typing.Text = ...
        """Min Frequency units. For NX Nastran analysis only."""

        naturalFreqMax: builtins.int = ...
        """Max Frequency. For NX Nastran analysis only."""

        naturalFreqMaxUnits: typing.Text = ...
        """Max Frequency units. For NX Nastran analysis only."""

        reuseModalAnalysis: builtins.bool = ...
        """Reuse Natural Frequency. For NX Nastran analysis only."""

        strainMapNaturalFreq: builtins.float = ...
        """Maximum Natural Frequency used for strain map analysis."""

        def __init__(self,
            *,
            ccaName : typing.Text = ...,
            modelSource : typing.Optional[global___ModelSource.ValueType] = ...,
            harmonicVibeCount : typing.Optional[builtins.int] = ...,
            harmonicVibeDamping : typing.Optional[typing.Text] = ...,
            partValidationEnabled : typing.Optional[builtins.bool] = ...,
            requireMaterialAssignmentEnabled : typing.Optional[builtins.bool] = ...,
            analysisTemp : typing.Optional[builtins.float] = ...,
            analysisTempUnits : typing.Optional[typing.Text] = ...,
            forceModelRebuild : typing.Optional[typing.Text] = ...,
            filterByEventFrequency : typing.Optional[builtins.bool] = ...,
            naturalFreqMin : typing.Optional[builtins.int] = ...,
            naturalFreqMinUnits : typing.Optional[typing.Text] = ...,
            naturalFreqMax : typing.Optional[builtins.int] = ...,
            naturalFreqMaxUnits : typing.Optional[typing.Text] = ...,
            reuseModalAnalysis : typing.Optional[builtins.bool] = ...,
            strainMapNaturalFreq : typing.Optional[builtins.float] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_analysisTemp",b"_analysisTemp","_analysisTempUnits",b"_analysisTempUnits","_filterByEventFrequency",b"_filterByEventFrequency","_forceModelRebuild",b"_forceModelRebuild","_harmonicVibeCount",b"_harmonicVibeCount","_harmonicVibeDamping",b"_harmonicVibeDamping","_modelSource",b"_modelSource","_naturalFreqMax",b"_naturalFreqMax","_naturalFreqMaxUnits",b"_naturalFreqMaxUnits","_naturalFreqMin",b"_naturalFreqMin","_naturalFreqMinUnits",b"_naturalFreqMinUnits","_partValidationEnabled",b"_partValidationEnabled","_requireMaterialAssignmentEnabled",b"_requireMaterialAssignmentEnabled","_reuseModalAnalysis",b"_reuseModalAnalysis","_strainMapNaturalFreq",b"_strainMapNaturalFreq","analysisTemp",b"analysisTemp","analysisTempUnits",b"analysisTempUnits","filterByEventFrequency",b"filterByEventFrequency","forceModelRebuild",b"forceModelRebuild","harmonicVibeCount",b"harmonicVibeCount","harmonicVibeDamping",b"harmonicVibeDamping","modelSource",b"modelSource","naturalFreqMax",b"naturalFreqMax","naturalFreqMaxUnits",b"naturalFreqMaxUnits","naturalFreqMin",b"naturalFreqMin","naturalFreqMinUnits",b"naturalFreqMinUnits","partValidationEnabled",b"partValidationEnabled","requireMaterialAssignmentEnabled",b"requireMaterialAssignmentEnabled","reuseModalAnalysis",b"reuseModalAnalysis","strainMapNaturalFreq",b"strainMapNaturalFreq"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_analysisTemp",b"_analysisTemp","_analysisTempUnits",b"_analysisTempUnits","_filterByEventFrequency",b"_filterByEventFrequency","_forceModelRebuild",b"_forceModelRebuild","_harmonicVibeCount",b"_harmonicVibeCount","_harmonicVibeDamping",b"_harmonicVibeDamping","_modelSource",b"_modelSource","_naturalFreqMax",b"_naturalFreqMax","_naturalFreqMaxUnits",b"_naturalFreqMaxUnits","_naturalFreqMin",b"_naturalFreqMin","_naturalFreqMinUnits",b"_naturalFreqMinUnits","_partValidationEnabled",b"_partValidationEnabled","_requireMaterialAssignmentEnabled",b"_requireMaterialAssignmentEnabled","_reuseModalAnalysis",b"_reuseModalAnalysis","_strainMapNaturalFreq",b"_strainMapNaturalFreq","analysisTemp",b"analysisTemp","analysisTempUnits",b"analysisTempUnits","ccaName",b"ccaName","filterByEventFrequency",b"filterByEventFrequency","forceModelRebuild",b"forceModelRebuild","harmonicVibeCount",b"harmonicVibeCount","harmonicVibeDamping",b"harmonicVibeDamping","modelSource",b"modelSource","naturalFreqMax",b"naturalFreqMax","naturalFreqMaxUnits",b"naturalFreqMaxUnits","naturalFreqMin",b"naturalFreqMin","naturalFreqMinUnits",b"naturalFreqMinUnits","partValidationEnabled",b"partValidationEnabled","requireMaterialAssignmentEnabled",b"requireMaterialAssignmentEnabled","reuseModalAnalysis",b"reuseModalAnalysis","strainMapNaturalFreq",b"strainMapNaturalFreq"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_analysisTemp",b"_analysisTemp"]) -> typing.Optional[typing_extensions.Literal["analysisTemp"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_analysisTempUnits",b"_analysisTempUnits"]) -> typing.Optional[typing_extensions.Literal["analysisTempUnits"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_filterByEventFrequency",b"_filterByEventFrequency"]) -> typing.Optional[typing_extensions.Literal["filterByEventFrequency"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_forceModelRebuild",b"_forceModelRebuild"]) -> typing.Optional[typing_extensions.Literal["forceModelRebuild"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_harmonicVibeCount",b"_harmonicVibeCount"]) -> typing.Optional[typing_extensions.Literal["harmonicVibeCount"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_harmonicVibeDamping",b"_harmonicVibeDamping"]) -> typing.Optional[typing_extensions.Literal["harmonicVibeDamping"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_modelSource",b"_modelSource"]) -> typing.Optional[typing_extensions.Literal["modelSource"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_naturalFreqMax",b"_naturalFreqMax"]) -> typing.Optional[typing_extensions.Literal["naturalFreqMax"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_naturalFreqMaxUnits",b"_naturalFreqMaxUnits"]) -> typing.Optional[typing_extensions.Literal["naturalFreqMaxUnits"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_naturalFreqMin",b"_naturalFreqMin"]) -> typing.Optional[typing_extensions.Literal["naturalFreqMin"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_naturalFreqMinUnits",b"_naturalFreqMinUnits"]) -> typing.Optional[typing_extensions.Literal["naturalFreqMinUnits"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_partValidationEnabled",b"_partValidationEnabled"]) -> typing.Optional[typing_extensions.Literal["partValidationEnabled"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_requireMaterialAssignmentEnabled",b"_requireMaterialAssignmentEnabled"]) -> typing.Optional[typing_extensions.Literal["requireMaterialAssignmentEnabled"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_reuseModalAnalysis",b"_reuseModalAnalysis"]) -> typing.Optional[typing_extensions.Literal["reuseModalAnalysis"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_strainMapNaturalFreq",b"_strainMapNaturalFreq"]) -> typing.Optional[typing_extensions.Literal["strainMapNaturalFreq"]]: ...

    PROJECT_FIELD_NUMBER: builtins.int
    HARMONICVIBEPROPERTIES_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project name."""

    @property
    def harmonicVibeProperties(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UpdateHarmonicVibePropsRequest.HarmonicVibe]:
        """List of HarmonicVibe analysis properties to update."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        harmonicVibeProperties : typing.Optional[typing.Iterable[global___UpdateHarmonicVibePropsRequest.HarmonicVibe]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["harmonicVibeProperties",b"harmonicVibeProperties","project",b"project"]) -> None: ...
global___UpdateHarmonicVibePropsRequest = UpdateHarmonicVibePropsRequest

class GetRandomVibeInputFieldsRequest(google.protobuf.message.Message):
    """*
    Request to list the valid random vibe input fields for the provided model source and user configuration.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MODELSOURCE_FIELD_NUMBER: builtins.int
    modelSource: global___ModelSource.ValueType = ...
    """Optional model source. Default: GENERATED."""

    def __init__(self,
        *,
        modelSource : typing.Optional[global___ModelSource.ValueType] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_modelSource",b"_modelSource","modelSource",b"modelSource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_modelSource",b"_modelSource","modelSource",b"modelSource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_modelSource",b"_modelSource"]) -> typing.Optional[typing_extensions.Literal["modelSource"]]: ...
global___GetRandomVibeInputFieldsRequest = GetRandomVibeInputFieldsRequest

class GetRandomVibeInputFieldsResponse(google.protobuf.message.Message):
    """*
    Response that includes the valid random vibe input fields.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIELDNAME_FIELD_NUMBER: builtins.int
    @property
    def fieldName(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of Random Vibe input fields."""
        pass
    def __init__(self,
        *,
        fieldName : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["fieldName",b"fieldName"]) -> None: ...
global___GetRandomVibeInputFieldsResponse = GetRandomVibeInputFieldsResponse

class UpdateRandomVibePropsRequest(google.protobuf.message.Message):
    """*
    Request to update random vibe analysis properties.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    RANDOMVIBEDAMPING_FIELD_NUMBER: builtins.int
    NATURALFREQMIN_FIELD_NUMBER: builtins.int
    NATURALFREQMINUNITS_FIELD_NUMBER: builtins.int
    NATURALFREQMAX_FIELD_NUMBER: builtins.int
    NATURALFREQMAXUNITS_FIELD_NUMBER: builtins.int
    ANALYSISTEMP_FIELD_NUMBER: builtins.int
    ANALYSISTEMPUNITS_FIELD_NUMBER: builtins.int
    PARTVALIDATIONENABLED_FIELD_NUMBER: builtins.int
    FORCEMODELREBUILD_FIELD_NUMBER: builtins.int
    REUSEMODALANALYSIS_FIELD_NUMBER: builtins.int
    PERFORMNFFREQRANGECHECK_FIELD_NUMBER: builtins.int
    REQUIREMATERIALASSIGNMENTENABLED_FIELD_NUMBER: builtins.int
    MODELSOURCE_FIELD_NUMBER: builtins.int
    STRAINMAPNATURALFREQS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project name."""

    ccaName: typing.Text = ...
    """CCA name."""

    randomVibeDamping: typing.Text = ...
    """Modal Damping Ratio(s)."""

    naturalFreqMin: builtins.float = ...
    """Min Frequency. For NX Nastran analysis only."""

    naturalFreqMinUnits: typing.Text = ...
    """Min Frequency units. For NX Nastran analysis only."""

    naturalFreqMax: builtins.float = ...
    """Max Frequency. For NX Nastran analysis only."""

    naturalFreqMaxUnits: typing.Text = ...
    """Max Frequency units. For NX Nastran analysis only."""

    analysisTemp: builtins.float = ...
    """Temperature."""

    analysisTempUnits: typing.Text = ...
    """Temperature units."""

    partValidationEnabled: builtins.bool = ...
    """Part Validation."""

    forceModelRebuild: typing.Text = ...
    """Model Creation. Valid values are "FORCE" or "AUTO"."""

    reuseModalAnalysis: builtins.bool = ...
    """Reuse Natural Frequency. For NX Nastran analysis only."""

    performNFFreqRangeCheck: builtins.bool = ...
    """Frequency Range Check. For NX Nastran analysis only."""

    requireMaterialAssignmentEnabled: builtins.bool = ...
    """Require Material Assignment."""

    modelSource: global___ModelSource.ValueType = ...
    """Optional model source. Default: GENERATED."""

    strainMapNaturalFreqs: typing.Text = ...
    """Comma-separated list of natural frequencies for strain map analysis."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        randomVibeDamping : typing.Optional[typing.Text] = ...,
        naturalFreqMin : typing.Optional[builtins.float] = ...,
        naturalFreqMinUnits : typing.Optional[typing.Text] = ...,
        naturalFreqMax : typing.Optional[builtins.float] = ...,
        naturalFreqMaxUnits : typing.Optional[typing.Text] = ...,
        analysisTemp : typing.Optional[builtins.float] = ...,
        analysisTempUnits : typing.Optional[typing.Text] = ...,
        partValidationEnabled : typing.Optional[builtins.bool] = ...,
        forceModelRebuild : typing.Optional[typing.Text] = ...,
        reuseModalAnalysis : typing.Optional[builtins.bool] = ...,
        performNFFreqRangeCheck : typing.Optional[builtins.bool] = ...,
        requireMaterialAssignmentEnabled : typing.Optional[builtins.bool] = ...,
        modelSource : typing.Optional[global___ModelSource.ValueType] = ...,
        strainMapNaturalFreqs : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_analysisTemp",b"_analysisTemp","_analysisTempUnits",b"_analysisTempUnits","_forceModelRebuild",b"_forceModelRebuild","_modelSource",b"_modelSource","_naturalFreqMax",b"_naturalFreqMax","_naturalFreqMaxUnits",b"_naturalFreqMaxUnits","_naturalFreqMin",b"_naturalFreqMin","_naturalFreqMinUnits",b"_naturalFreqMinUnits","_partValidationEnabled",b"_partValidationEnabled","_performNFFreqRangeCheck",b"_performNFFreqRangeCheck","_randomVibeDamping",b"_randomVibeDamping","_requireMaterialAssignmentEnabled",b"_requireMaterialAssignmentEnabled","_reuseModalAnalysis",b"_reuseModalAnalysis","_strainMapNaturalFreqs",b"_strainMapNaturalFreqs","analysisTemp",b"analysisTemp","analysisTempUnits",b"analysisTempUnits","forceModelRebuild",b"forceModelRebuild","modelSource",b"modelSource","naturalFreqMax",b"naturalFreqMax","naturalFreqMaxUnits",b"naturalFreqMaxUnits","naturalFreqMin",b"naturalFreqMin","naturalFreqMinUnits",b"naturalFreqMinUnits","partValidationEnabled",b"partValidationEnabled","performNFFreqRangeCheck",b"performNFFreqRangeCheck","randomVibeDamping",b"randomVibeDamping","requireMaterialAssignmentEnabled",b"requireMaterialAssignmentEnabled","reuseModalAnalysis",b"reuseModalAnalysis","strainMapNaturalFreqs",b"strainMapNaturalFreqs"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_analysisTemp",b"_analysisTemp","_analysisTempUnits",b"_analysisTempUnits","_forceModelRebuild",b"_forceModelRebuild","_modelSource",b"_modelSource","_naturalFreqMax",b"_naturalFreqMax","_naturalFreqMaxUnits",b"_naturalFreqMaxUnits","_naturalFreqMin",b"_naturalFreqMin","_naturalFreqMinUnits",b"_naturalFreqMinUnits","_partValidationEnabled",b"_partValidationEnabled","_performNFFreqRangeCheck",b"_performNFFreqRangeCheck","_randomVibeDamping",b"_randomVibeDamping","_requireMaterialAssignmentEnabled",b"_requireMaterialAssignmentEnabled","_reuseModalAnalysis",b"_reuseModalAnalysis","_strainMapNaturalFreqs",b"_strainMapNaturalFreqs","analysisTemp",b"analysisTemp","analysisTempUnits",b"analysisTempUnits","ccaName",b"ccaName","forceModelRebuild",b"forceModelRebuild","modelSource",b"modelSource","naturalFreqMax",b"naturalFreqMax","naturalFreqMaxUnits",b"naturalFreqMaxUnits","naturalFreqMin",b"naturalFreqMin","naturalFreqMinUnits",b"naturalFreqMinUnits","partValidationEnabled",b"partValidationEnabled","performNFFreqRangeCheck",b"performNFFreqRangeCheck","project",b"project","randomVibeDamping",b"randomVibeDamping","requireMaterialAssignmentEnabled",b"requireMaterialAssignmentEnabled","reuseModalAnalysis",b"reuseModalAnalysis","strainMapNaturalFreqs",b"strainMapNaturalFreqs"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_analysisTemp",b"_analysisTemp"]) -> typing.Optional[typing_extensions.Literal["analysisTemp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_analysisTempUnits",b"_analysisTempUnits"]) -> typing.Optional[typing_extensions.Literal["analysisTempUnits"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_forceModelRebuild",b"_forceModelRebuild"]) -> typing.Optional[typing_extensions.Literal["forceModelRebuild"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_modelSource",b"_modelSource"]) -> typing.Optional[typing_extensions.Literal["modelSource"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_naturalFreqMax",b"_naturalFreqMax"]) -> typing.Optional[typing_extensions.Literal["naturalFreqMax"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_naturalFreqMaxUnits",b"_naturalFreqMaxUnits"]) -> typing.Optional[typing_extensions.Literal["naturalFreqMaxUnits"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_naturalFreqMin",b"_naturalFreqMin"]) -> typing.Optional[typing_extensions.Literal["naturalFreqMin"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_naturalFreqMinUnits",b"_naturalFreqMinUnits"]) -> typing.Optional[typing_extensions.Literal["naturalFreqMinUnits"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_partValidationEnabled",b"_partValidationEnabled"]) -> typing.Optional[typing_extensions.Literal["partValidationEnabled"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_performNFFreqRangeCheck",b"_performNFFreqRangeCheck"]) -> typing.Optional[typing_extensions.Literal["performNFFreqRangeCheck"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_randomVibeDamping",b"_randomVibeDamping"]) -> typing.Optional[typing_extensions.Literal["randomVibeDamping"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_requireMaterialAssignmentEnabled",b"_requireMaterialAssignmentEnabled"]) -> typing.Optional[typing_extensions.Literal["requireMaterialAssignmentEnabled"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_reuseModalAnalysis",b"_reuseModalAnalysis"]) -> typing.Optional[typing_extensions.Literal["reuseModalAnalysis"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_strainMapNaturalFreqs",b"_strainMapNaturalFreqs"]) -> typing.Optional[typing_extensions.Literal["strainMapNaturalFreqs"]]: ...
global___UpdateRandomVibePropsRequest = UpdateRandomVibePropsRequest

class GetNaturalFrequencyInputFieldsRequest(google.protobuf.message.Message):
    """*
    Request to list the valid natural frequency input fields given the user configuration.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___GetNaturalFrequencyInputFieldsRequest = GetNaturalFrequencyInputFieldsRequest

class GetNaturalFrequencyInputFieldsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIELDNAME_FIELD_NUMBER: builtins.int
    @property
    def fieldName(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of Natural Frequency input fields."""
        pass
    def __init__(self,
        *,
        fieldName : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["fieldName",b"fieldName"]) -> None: ...
global___GetNaturalFrequencyInputFieldsResponse = GetNaturalFrequencyInputFieldsResponse

class UpdateNaturalFrequencyPropsRequest(google.protobuf.message.Message):
    """*
    Request to update natural frequency analysis properties.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    NATURALFREQCOUNT_FIELD_NUMBER: builtins.int
    NATURALFREQMIN_FIELD_NUMBER: builtins.int
    NATURALFREQMINUNITS_FIELD_NUMBER: builtins.int
    NATURALFREQMAX_FIELD_NUMBER: builtins.int
    NATURALFREQMAXUNITS_FIELD_NUMBER: builtins.int
    PARTVALIDATIONENABLED_FIELD_NUMBER: builtins.int
    REQUIREMATERIALASSIGNMENTENABLED_FIELD_NUMBER: builtins.int
    ANALYSISTEMP_FIELD_NUMBER: builtins.int
    ANALYSISTEMPUNITS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project name."""

    ccaName: typing.Text = ...
    """CCA name."""

    naturalFreqCount: builtins.int = ...
    """NF Result Count."""

    naturalFreqMin: builtins.float = ...
    """Min Frequency.  IMPORTANT:  Only Integer values will be accepted for this field.  Decimal values will be rejected in the API."""

    naturalFreqMinUnits: typing.Text = ...
    """Min Frequency units (HZ, KHZ, MHZ, or GHZ)."""

    naturalFreqMax: builtins.float = ...
    """Max Frequency. IMPORTANT:  Only Integer values will be accepted for this field.  Decimal values will be rejected in the API."""

    naturalFreqMaxUnits: typing.Text = ...
    """Max Frequency units (HZ, KHZ, MHZ, or GHZ)."""

    partValidationEnabled: builtins.bool = ...
    """Part Validation."""

    requireMaterialAssignmentEnabled: builtins.bool = ...
    """Require Material Assignment."""

    analysisTemp: builtins.float = ...
    """Temperature."""

    analysisTempUnits: typing.Text = ...
    """Temperature units (C, F, or K)."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        naturalFreqCount : builtins.int = ...,
        naturalFreqMin : builtins.float = ...,
        naturalFreqMinUnits : typing.Text = ...,
        naturalFreqMax : builtins.float = ...,
        naturalFreqMaxUnits : typing.Text = ...,
        partValidationEnabled : builtins.bool = ...,
        requireMaterialAssignmentEnabled : builtins.bool = ...,
        analysisTemp : typing.Optional[builtins.float] = ...,
        analysisTempUnits : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_analysisTemp",b"_analysisTemp","_analysisTempUnits",b"_analysisTempUnits","analysisTemp",b"analysisTemp","analysisTempUnits",b"analysisTempUnits"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_analysisTemp",b"_analysisTemp","_analysisTempUnits",b"_analysisTempUnits","analysisTemp",b"analysisTemp","analysisTempUnits",b"analysisTempUnits","ccaName",b"ccaName","naturalFreqCount",b"naturalFreqCount","naturalFreqMax",b"naturalFreqMax","naturalFreqMaxUnits",b"naturalFreqMaxUnits","naturalFreqMin",b"naturalFreqMin","naturalFreqMinUnits",b"naturalFreqMinUnits","partValidationEnabled",b"partValidationEnabled","project",b"project","requireMaterialAssignmentEnabled",b"requireMaterialAssignmentEnabled"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_analysisTemp",b"_analysisTemp"]) -> typing.Optional[typing_extensions.Literal["analysisTemp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_analysisTempUnits",b"_analysisTempUnits"]) -> typing.Optional[typing_extensions.Literal["analysisTempUnits"]]: ...
global___UpdateNaturalFrequencyPropsRequest = UpdateNaturalFrequencyPropsRequest

class UpdateThermalMechPropsRequest(google.protobuf.message.Message):
    """*
    Request to update thermal mech analysis properties.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    THERMALRESULTCOUNT_FIELD_NUMBER: builtins.int
    PARTVALIDATIONENABLED_FIELD_NUMBER: builtins.int
    REQUIREMATERIALASSIGNMENTENABLED_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project name."""

    @property
    def ccaName(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """CCA names."""
        pass
    thermalResultCount: builtins.int = ...
    """Thermal Mech Result Count."""

    partValidationEnabled: builtins.bool = ...
    """Part Validation."""

    requireMaterialAssignmentEnabled: builtins.bool = ...
    """Require Material Assignment."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Optional[typing.Iterable[typing.Text]] = ...,
        thermalResultCount : builtins.int = ...,
        partValidationEnabled : builtins.bool = ...,
        requireMaterialAssignmentEnabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","partValidationEnabled",b"partValidationEnabled","project",b"project","requireMaterialAssignmentEnabled",b"requireMaterialAssignmentEnabled","thermalResultCount",b"thermalResultCount"]) -> None: ...
global___UpdateThermalMechPropsRequest = UpdateThermalMechPropsRequest

class RunStrainMapAnalysisRequest(google.protobuf.message.Message):
    """*
    Request to run Sherlock strain map analysis given the project name, CCA name, and strain maps.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class StrainMapAnalysis(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _AnalysisType:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _AnalysisTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AnalysisType.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            UNKNOWN: RunStrainMapAnalysisRequest.StrainMapAnalysis.AnalysisType.ValueType = ...  # 0
            """Default enum to catch invalid analysis."""

            RandomVibe: RunStrainMapAnalysisRequest.StrainMapAnalysis.AnalysisType.ValueType = ...  # 1
            """Enum for the Random Vibe analysis."""

            MechanicalShock: RunStrainMapAnalysisRequest.StrainMapAnalysis.AnalysisType.ValueType = ...  # 2
            """Enum for Mechanical Shock analysis."""

            HarmonicVibe: RunStrainMapAnalysisRequest.StrainMapAnalysis.AnalysisType.ValueType = ...  # 3
            """Enum for the Harmonic Vibe analysis."""

        class AnalysisType(_AnalysisType, metaclass=_AnalysisTypeEnumTypeWrapper):
            pass

        UNKNOWN: RunStrainMapAnalysisRequest.StrainMapAnalysis.AnalysisType.ValueType = ...  # 0
        """Default enum to catch invalid analysis."""

        RandomVibe: RunStrainMapAnalysisRequest.StrainMapAnalysis.AnalysisType.ValueType = ...  # 1
        """Enum for the Random Vibe analysis."""

        MechanicalShock: RunStrainMapAnalysisRequest.StrainMapAnalysis.AnalysisType.ValueType = ...  # 2
        """Enum for Mechanical Shock analysis."""

        HarmonicVibe: RunStrainMapAnalysisRequest.StrainMapAnalysis.AnalysisType.ValueType = ...  # 3
        """Enum for the Harmonic Vibe analysis."""


        class EventStrainMap(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            PHASENAME_FIELD_NUMBER: builtins.int
            EVENTNAME_FIELD_NUMBER: builtins.int
            PCBSIDE_FIELD_NUMBER: builtins.int
            STRAINMAP_FIELD_NUMBER: builtins.int
            SUBASSEMBLYNAME_FIELD_NUMBER: builtins.int
            phaseName: typing.Text = ...
            """Life cycle phase name."""

            eventName: typing.Text = ...
            """Life cycle event name."""

            pcbSide: typing.Text = ...
            """PCB side for the strain map. Supported values are: TOP, BOTTOM."""

            strainMap: typing.Text = ...
            """Strain map assigned to the event."""

            subAssemblyName: typing.Text = ...
            """The name of the sub-assembly CCA to be assigned the strain map."""

            def __init__(self,
                *,
                phaseName : typing.Text = ...,
                eventName : typing.Text = ...,
                pcbSide : typing.Text = ...,
                strainMap : typing.Text = ...,
                subAssemblyName : typing.Optional[typing.Text] = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["_subAssemblyName",b"_subAssemblyName","subAssemblyName",b"subAssemblyName"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["_subAssemblyName",b"_subAssemblyName","eventName",b"eventName","pcbSide",b"pcbSide","phaseName",b"phaseName","strainMap",b"strainMap","subAssemblyName",b"subAssemblyName"]) -> None: ...
            def WhichOneof(self, oneof_group: typing_extensions.Literal["_subAssemblyName",b"_subAssemblyName"]) -> typing.Optional[typing_extensions.Literal["subAssemblyName"]]: ...

        TYPE_FIELD_NUMBER: builtins.int
        EVENTSTRAINMAPS_FIELD_NUMBER: builtins.int
        type: global___RunStrainMapAnalysisRequest.StrainMapAnalysis.AnalysisType.ValueType = ...
        """Type of Strain Map analysis to run."""

        @property
        def eventStrainMaps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RunStrainMapAnalysisRequest.StrainMapAnalysis.EventStrainMap]:
            """List of Strain Map events to run."""
            pass
        def __init__(self,
            *,
            type : global___RunStrainMapAnalysisRequest.StrainMapAnalysis.AnalysisType.ValueType = ...,
            eventStrainMaps : typing.Optional[typing.Iterable[global___RunStrainMapAnalysisRequest.StrainMapAnalysis.EventStrainMap]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["eventStrainMaps",b"eventStrainMaps","type",b"type"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    STRAINMAPANALYSES_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    ccaName: typing.Text = ...
    """The CCA name of the main CCA for the analysis."""

    @property
    def strainMapAnalyses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RunStrainMapAnalysisRequest.StrainMapAnalysis]:
        """List of Strain Map Analyses to run."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        strainMapAnalyses : typing.Optional[typing.Iterable[global___RunStrainMapAnalysisRequest.StrainMapAnalysis]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","project",b"project","strainMapAnalyses",b"strainMapAnalyses"]) -> None: ...
global___RunStrainMapAnalysisRequest = RunStrainMapAnalysisRequest

class GetPcbModelingInputFieldsRequest(google.protobuf.message.Message):
    """*
    Request to list the valid PCB Modeling input fields given the user configuration.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___GetPcbModelingInputFieldsRequest = GetPcbModelingInputFieldsRequest

class GetPcbModelingInputFieldsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIELDNAME_FIELD_NUMBER: builtins.int
    @property
    def fieldName(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of Pcb Modeling input fields."""
        pass
    def __init__(self,
        *,
        fieldName : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["fieldName",b"fieldName"]) -> None: ...
global___GetPcbModelingInputFieldsResponse = GetPcbModelingInputFieldsResponse

class UpdatePcbModelingPropsRequest(google.protobuf.message.Message):
    """*
    Request to update FEA analysis PCB Modeling properties.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Analysis(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _AnalysisType:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _AnalysisTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AnalysisType.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            UnknownAnalysisType: UpdatePcbModelingPropsRequest.Analysis.AnalysisType.ValueType = ...  # 0
            """Default enum to catch invalid analysis."""

            HarmonicVibe: UpdatePcbModelingPropsRequest.Analysis.AnalysisType.ValueType = ...  # 1
            """Enum for the Harmonic Vibe analysis."""

            ICTAnalysis: UpdatePcbModelingPropsRequest.Analysis.AnalysisType.ValueType = ...  # 2
            """Enum for the ICT analysis."""

            MechanicalShock: UpdatePcbModelingPropsRequest.Analysis.AnalysisType.ValueType = ...  # 3
            """Enum for the Mechanical Shock analysis."""

            NaturalFreq: UpdatePcbModelingPropsRequest.Analysis.AnalysisType.ValueType = ...  # 4
            """Enum for the Natural Frequency analysis."""

            RandomVibe: UpdatePcbModelingPropsRequest.Analysis.AnalysisType.ValueType = ...  # 5
            """Enum for the Random Vibe analysis."""

            ThermalMech: UpdatePcbModelingPropsRequest.Analysis.AnalysisType.ValueType = ...  # 6
            """Enum for the Thermal Mech analysis."""

        class AnalysisType(_AnalysisType, metaclass=_AnalysisTypeEnumTypeWrapper):
            pass

        UnknownAnalysisType: UpdatePcbModelingPropsRequest.Analysis.AnalysisType.ValueType = ...  # 0
        """Default enum to catch invalid analysis."""

        HarmonicVibe: UpdatePcbModelingPropsRequest.Analysis.AnalysisType.ValueType = ...  # 1
        """Enum for the Harmonic Vibe analysis."""

        ICTAnalysis: UpdatePcbModelingPropsRequest.Analysis.AnalysisType.ValueType = ...  # 2
        """Enum for the ICT analysis."""

        MechanicalShock: UpdatePcbModelingPropsRequest.Analysis.AnalysisType.ValueType = ...  # 3
        """Enum for the Mechanical Shock analysis."""

        NaturalFreq: UpdatePcbModelingPropsRequest.Analysis.AnalysisType.ValueType = ...  # 4
        """Enum for the Natural Frequency analysis."""

        RandomVibe: UpdatePcbModelingPropsRequest.Analysis.AnalysisType.ValueType = ...  # 5
        """Enum for the Random Vibe analysis."""

        ThermalMech: UpdatePcbModelingPropsRequest.Analysis.AnalysisType.ValueType = ...  # 6
        """Enum for the Thermal Mech analysis."""


        class _PcbModelType:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _PcbModelTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PcbModelType.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            UnknownMeshType: UpdatePcbModelingPropsRequest.Analysis.PcbModelType.ValueType = ...  # 0
            """Default enum to catch invalid mesh type."""

            Bonded: UpdatePcbModelingPropsRequest.Analysis.PcbModelType.ValueType = ...  # 1
            """Bonded FEA model."""

        class PcbModelType(_PcbModelType, metaclass=_PcbModelTypeEnumTypeWrapper):
            pass

        UnknownMeshType: UpdatePcbModelingPropsRequest.Analysis.PcbModelType.ValueType = ...  # 0
        """Default enum to catch invalid mesh type."""

        Bonded: UpdatePcbModelingPropsRequest.Analysis.PcbModelType.ValueType = ...  # 1
        """Bonded FEA model."""


        class _PcbMaterialModel:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _PcbMaterialModelEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PcbMaterialModel.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            UnknownPcbModel: UpdatePcbModelingPropsRequest.Analysis.PcbMaterialModel.ValueType = ...  # 0
            """Default enum to catch invalid PCB model."""

            Uniform: UpdatePcbModelingPropsRequest.Analysis.PcbMaterialModel.ValueType = ...  # 1
            """Enum for uniform PCB model."""

            Layered: UpdatePcbModelingPropsRequest.Analysis.PcbMaterialModel.ValueType = ...  # 2
            """Enum for layered PCB model."""

            UniformElements: UpdatePcbModelingPropsRequest.Analysis.PcbMaterialModel.ValueType = ...  # 3
            """Enum for uniform elements PCB model."""

            LayeredElements: UpdatePcbModelingPropsRequest.Analysis.PcbMaterialModel.ValueType = ...  # 4
            """Enum for layered elements PCB model."""

        class PcbMaterialModel(_PcbMaterialModel, metaclass=_PcbMaterialModelEnumTypeWrapper):
            pass

        UnknownPcbModel: UpdatePcbModelingPropsRequest.Analysis.PcbMaterialModel.ValueType = ...  # 0
        """Default enum to catch invalid PCB model."""

        Uniform: UpdatePcbModelingPropsRequest.Analysis.PcbMaterialModel.ValueType = ...  # 1
        """Enum for uniform PCB model."""

        Layered: UpdatePcbModelingPropsRequest.Analysis.PcbMaterialModel.ValueType = ...  # 2
        """Enum for layered PCB model."""

        UniformElements: UpdatePcbModelingPropsRequest.Analysis.PcbMaterialModel.ValueType = ...  # 3
        """Enum for uniform elements PCB model."""

        LayeredElements: UpdatePcbModelingPropsRequest.Analysis.PcbMaterialModel.ValueType = ...  # 4
        """Enum for layered elements PCB model."""


        TYPE_FIELD_NUMBER: builtins.int
        MODELTYPE_FIELD_NUMBER: builtins.int
        MODELINGREGIONENABLED_FIELD_NUMBER: builtins.int
        PCBMATERIALMODEL_FIELD_NUMBER: builtins.int
        PCBMAXMATERIALS_FIELD_NUMBER: builtins.int
        PCBELEMORDER_FIELD_NUMBER: builtins.int
        PCBMAXEDGELENGTH_FIELD_NUMBER: builtins.int
        PCBMAXEDGELENGTHUNITS_FIELD_NUMBER: builtins.int
        PCBMAXVERTICAL_FIELD_NUMBER: builtins.int
        PCBMAXVERTICALUNITS_FIELD_NUMBER: builtins.int
        QUADSPREFERRED_FIELD_NUMBER: builtins.int
        type: global___UpdatePcbModelingPropsRequest.Analysis.AnalysisType.ValueType = ...
        """The type of analysis for which PCB modeling properties apply."""

        modelType: global___UpdatePcbModelingPropsRequest.Analysis.PcbModelType.ValueType = ...
        """The PCB modeling mesh type."""

        modelingRegionEnabled: builtins.bool = ...
        """Indicates if modeling regions are enabled."""

        pcbMaterialModel: global___UpdatePcbModelingPropsRequest.Analysis.PcbMaterialModel.ValueType = ...
        """The PCB modeling PCB model type."""

        pcbMaxMaterials: builtins.int = ...
        """The number of PCB materials for Uniform Elements and Layered Elements PCB model types."""

        pcbElemOrder: global___ElementOrder.ValueType = ...
        """The element order for PCB elements."""

        pcbMaxEdgeLength: builtins.float = ...
        """The maximum mesh size for PCB elements."""

        pcbMaxEdgeLengthUnits: typing.Text = ...
        """The length units for the maximum mesh size."""

        pcbMaxVertical: builtins.float = ...
        """The maximum vertical mesh size for PCB elements."""

        pcbMaxVerticalUnits: typing.Text = ...
        """The length units for the maximum vertical mesh size."""

        quadsPreferred: builtins.bool = ...
        """Indicates that the meshing engine should attempt to generate quad-shaped elements when creating the mesh."""

        def __init__(self,
            *,
            type : global___UpdatePcbModelingPropsRequest.Analysis.AnalysisType.ValueType = ...,
            modelType : global___UpdatePcbModelingPropsRequest.Analysis.PcbModelType.ValueType = ...,
            modelingRegionEnabled : builtins.bool = ...,
            pcbMaterialModel : global___UpdatePcbModelingPropsRequest.Analysis.PcbMaterialModel.ValueType = ...,
            pcbMaxMaterials : typing.Optional[builtins.int] = ...,
            pcbElemOrder : global___ElementOrder.ValueType = ...,
            pcbMaxEdgeLength : builtins.float = ...,
            pcbMaxEdgeLengthUnits : typing.Text = ...,
            pcbMaxVertical : builtins.float = ...,
            pcbMaxVerticalUnits : typing.Text = ...,
            quadsPreferred : builtins.bool = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_pcbMaxMaterials",b"_pcbMaxMaterials","pcbMaxMaterials",b"pcbMaxMaterials"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_pcbMaxMaterials",b"_pcbMaxMaterials","modelType",b"modelType","modelingRegionEnabled",b"modelingRegionEnabled","pcbElemOrder",b"pcbElemOrder","pcbMaterialModel",b"pcbMaterialModel","pcbMaxEdgeLength",b"pcbMaxEdgeLength","pcbMaxEdgeLengthUnits",b"pcbMaxEdgeLengthUnits","pcbMaxMaterials",b"pcbMaxMaterials","pcbMaxVertical",b"pcbMaxVertical","pcbMaxVerticalUnits",b"pcbMaxVerticalUnits","quadsPreferred",b"quadsPreferred","type",b"type"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_pcbMaxMaterials",b"_pcbMaxMaterials"]) -> typing.Optional[typing_extensions.Literal["pcbMaxMaterials"]]: ...

    PROJECT_FIELD_NUMBER: builtins.int
    CCANAMES_FIELD_NUMBER: builtins.int
    ANALYSES_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    @property
    def ccaNames(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The CCA names for which to assign the PCB modeling parameters."""
        pass
    @property
    def analyses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UpdatePcbModelingPropsRequest.Analysis]:
        """List of Analysis message types."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaNames : typing.Optional[typing.Iterable[typing.Text]] = ...,
        analyses : typing.Optional[typing.Iterable[global___UpdatePcbModelingPropsRequest.Analysis]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["analyses",b"analyses","ccaNames",b"ccaNames","project",b"project"]) -> None: ...
global___UpdatePcbModelingPropsRequest = UpdatePcbModelingPropsRequest

class UpdateMechanicalShockPropsRequest(google.protobuf.message.Message):
    """*
    Request to update the mechanical shock analysis properties.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class MechanicalShock(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CCANAME_FIELD_NUMBER: builtins.int
        MODELSOURCE_FIELD_NUMBER: builtins.int
        SHOCKRESULTCOUNT_FIELD_NUMBER: builtins.int
        CRITICALSHOCKSTRAIN_FIELD_NUMBER: builtins.int
        CRITICALSHOCKSTRAINUNITS_FIELD_NUMBER: builtins.int
        PARTVALIDATIONENABLED_FIELD_NUMBER: builtins.int
        REQUIREMATERIALASSIGNMENTENABLED_FIELD_NUMBER: builtins.int
        FORCEMODELREBUILD_FIELD_NUMBER: builtins.int
        NATURALFREQMIN_FIELD_NUMBER: builtins.int
        NATURALFREQMINUNITS_FIELD_NUMBER: builtins.int
        NATURALFREQMAX_FIELD_NUMBER: builtins.int
        NATURALFREQMAXUNITS_FIELD_NUMBER: builtins.int
        ANALYSISTEMP_FIELD_NUMBER: builtins.int
        ANALYSISTEMPUNITS_FIELD_NUMBER: builtins.int
        ccaName: typing.Text = ...
        """The CCA name."""

        modelSource: global___ModelSource.ValueType = ...
        """Default is GENERATED."""

        shockResultCount: builtins.int = ...
        """Mechanical Shock Result Count."""

        criticalShockStrain: builtins.float = ...
        """Critical Shock Strain."""

        criticalShockStrainUnits: typing.Text = ...
        """Critical Shock Strain units."""

        partValidationEnabled: builtins.bool = ...
        """Flag indicating if part validation should be performed."""

        requireMaterialAssignmentEnabled: builtins.bool = ...
        """Flag indicating if material assignment is required."""

        forceModelRebuild: typing.Text = ...
        """Model Creation. Valid values are "FORCE" or "AUTO"."""

        naturalFreqMin: builtins.int = ...
        """Min Frequency."""

        naturalFreqMinUnits: typing.Text = ...
        """Min Frequency units."""

        naturalFreqMax: builtins.int = ...
        """Max Frequency."""

        naturalFreqMaxUnits: typing.Text = ...
        """Max Frequency units."""

        analysisTemp: builtins.float = ...
        """Temperature."""

        analysisTempUnits: typing.Text = ...
        """Temperature units."""

        def __init__(self,
            *,
            ccaName : typing.Text = ...,
            modelSource : typing.Optional[global___ModelSource.ValueType] = ...,
            shockResultCount : typing.Optional[builtins.int] = ...,
            criticalShockStrain : typing.Optional[builtins.float] = ...,
            criticalShockStrainUnits : typing.Optional[typing.Text] = ...,
            partValidationEnabled : typing.Optional[builtins.bool] = ...,
            requireMaterialAssignmentEnabled : typing.Optional[builtins.bool] = ...,
            forceModelRebuild : typing.Optional[typing.Text] = ...,
            naturalFreqMin : typing.Optional[builtins.int] = ...,
            naturalFreqMinUnits : typing.Optional[typing.Text] = ...,
            naturalFreqMax : typing.Optional[builtins.int] = ...,
            naturalFreqMaxUnits : typing.Optional[typing.Text] = ...,
            analysisTemp : typing.Optional[builtins.float] = ...,
            analysisTempUnits : typing.Optional[typing.Text] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_analysisTemp",b"_analysisTemp","_analysisTempUnits",b"_analysisTempUnits","_criticalShockStrain",b"_criticalShockStrain","_criticalShockStrainUnits",b"_criticalShockStrainUnits","_forceModelRebuild",b"_forceModelRebuild","_modelSource",b"_modelSource","_naturalFreqMax",b"_naturalFreqMax","_naturalFreqMaxUnits",b"_naturalFreqMaxUnits","_naturalFreqMin",b"_naturalFreqMin","_naturalFreqMinUnits",b"_naturalFreqMinUnits","_partValidationEnabled",b"_partValidationEnabled","_requireMaterialAssignmentEnabled",b"_requireMaterialAssignmentEnabled","_shockResultCount",b"_shockResultCount","analysisTemp",b"analysisTemp","analysisTempUnits",b"analysisTempUnits","criticalShockStrain",b"criticalShockStrain","criticalShockStrainUnits",b"criticalShockStrainUnits","forceModelRebuild",b"forceModelRebuild","modelSource",b"modelSource","naturalFreqMax",b"naturalFreqMax","naturalFreqMaxUnits",b"naturalFreqMaxUnits","naturalFreqMin",b"naturalFreqMin","naturalFreqMinUnits",b"naturalFreqMinUnits","partValidationEnabled",b"partValidationEnabled","requireMaterialAssignmentEnabled",b"requireMaterialAssignmentEnabled","shockResultCount",b"shockResultCount"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_analysisTemp",b"_analysisTemp","_analysisTempUnits",b"_analysisTempUnits","_criticalShockStrain",b"_criticalShockStrain","_criticalShockStrainUnits",b"_criticalShockStrainUnits","_forceModelRebuild",b"_forceModelRebuild","_modelSource",b"_modelSource","_naturalFreqMax",b"_naturalFreqMax","_naturalFreqMaxUnits",b"_naturalFreqMaxUnits","_naturalFreqMin",b"_naturalFreqMin","_naturalFreqMinUnits",b"_naturalFreqMinUnits","_partValidationEnabled",b"_partValidationEnabled","_requireMaterialAssignmentEnabled",b"_requireMaterialAssignmentEnabled","_shockResultCount",b"_shockResultCount","analysisTemp",b"analysisTemp","analysisTempUnits",b"analysisTempUnits","ccaName",b"ccaName","criticalShockStrain",b"criticalShockStrain","criticalShockStrainUnits",b"criticalShockStrainUnits","forceModelRebuild",b"forceModelRebuild","modelSource",b"modelSource","naturalFreqMax",b"naturalFreqMax","naturalFreqMaxUnits",b"naturalFreqMaxUnits","naturalFreqMin",b"naturalFreqMin","naturalFreqMinUnits",b"naturalFreqMinUnits","partValidationEnabled",b"partValidationEnabled","requireMaterialAssignmentEnabled",b"requireMaterialAssignmentEnabled","shockResultCount",b"shockResultCount"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_analysisTemp",b"_analysisTemp"]) -> typing.Optional[typing_extensions.Literal["analysisTemp"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_analysisTempUnits",b"_analysisTempUnits"]) -> typing.Optional[typing_extensions.Literal["analysisTempUnits"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_criticalShockStrain",b"_criticalShockStrain"]) -> typing.Optional[typing_extensions.Literal["criticalShockStrain"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_criticalShockStrainUnits",b"_criticalShockStrainUnits"]) -> typing.Optional[typing_extensions.Literal["criticalShockStrainUnits"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_forceModelRebuild",b"_forceModelRebuild"]) -> typing.Optional[typing_extensions.Literal["forceModelRebuild"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_modelSource",b"_modelSource"]) -> typing.Optional[typing_extensions.Literal["modelSource"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_naturalFreqMax",b"_naturalFreqMax"]) -> typing.Optional[typing_extensions.Literal["naturalFreqMax"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_naturalFreqMaxUnits",b"_naturalFreqMaxUnits"]) -> typing.Optional[typing_extensions.Literal["naturalFreqMaxUnits"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_naturalFreqMin",b"_naturalFreqMin"]) -> typing.Optional[typing_extensions.Literal["naturalFreqMin"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_naturalFreqMinUnits",b"_naturalFreqMinUnits"]) -> typing.Optional[typing_extensions.Literal["naturalFreqMinUnits"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_partValidationEnabled",b"_partValidationEnabled"]) -> typing.Optional[typing_extensions.Literal["partValidationEnabled"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_requireMaterialAssignmentEnabled",b"_requireMaterialAssignmentEnabled"]) -> typing.Optional[typing_extensions.Literal["requireMaterialAssignmentEnabled"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_shockResultCount",b"_shockResultCount"]) -> typing.Optional[typing_extensions.Literal["shockResultCount"]]: ...

    PROJECT_FIELD_NUMBER: builtins.int
    MECHANICALSHOCKPROPERTIES_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock Project name."""

    @property
    def mechanicalShockProperties(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UpdateMechanicalShockPropsRequest.MechanicalShock]:
        """List of MechanicalShock properties to update."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        mechanicalShockProperties : typing.Optional[typing.Iterable[global___UpdateMechanicalShockPropsRequest.MechanicalShock]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["mechanicalShockProperties",b"mechanicalShockProperties","project",b"project"]) -> None: ...
global___UpdateMechanicalShockPropsRequest = UpdateMechanicalShockPropsRequest

class GetMechanicalShockInputFieldsRequest(google.protobuf.message.Message):
    """*
    Request to list the valid mechanical shock input fields for the provided model source and user configuration.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MODELSOURCE_FIELD_NUMBER: builtins.int
    modelSource: global___ModelSource.ValueType = ...
    """Optional model source. Default: GENERATED."""

    def __init__(self,
        *,
        modelSource : typing.Optional[global___ModelSource.ValueType] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_modelSource",b"_modelSource","modelSource",b"modelSource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_modelSource",b"_modelSource","modelSource",b"modelSource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_modelSource",b"_modelSource"]) -> typing.Optional[typing_extensions.Literal["modelSource"]]: ...
global___GetMechanicalShockInputFieldsRequest = GetMechanicalShockInputFieldsRequest

class GetMechanicalShockInputFieldsResponse(google.protobuf.message.Message):
    """*
    Response that includes the valid mechanical shock input fields.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIELDNAME_FIELD_NUMBER: builtins.int
    @property
    def fieldName(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of Mechanical Shock input fields for a model source."""
        pass
    def __init__(self,
        *,
        fieldName : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["fieldName",b"fieldName"]) -> None: ...
global___GetMechanicalShockInputFieldsResponse = GetMechanicalShockInputFieldsResponse

class GetSolderFatigueInputFieldsRequest(google.protobuf.message.Message):
    """*
    Request to list the valid solder fatigue input fields given the user configuration.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___GetSolderFatigueInputFieldsRequest = GetSolderFatigueInputFieldsRequest

class GetSolderFatigueInputFieldsResponse(google.protobuf.message.Message):
    """*
    Response that includes the valid solder fatigue input fields.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIELDNAME_FIELD_NUMBER: builtins.int
    @property
    def fieldName(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of Solder Fatigue input fields."""
        pass
    def __init__(self,
        *,
        fieldName : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["fieldName",b"fieldName"]) -> None: ...
global___GetSolderFatigueInputFieldsResponse = GetSolderFatigueInputFieldsResponse

class UpdateSolderFatiguePropsRequest(google.protobuf.message.Message):
    """*
    Request to update solder fatigue properties.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class SolderFatigue(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CCANAME_FIELD_NUMBER: builtins.int
        SOLDERMATERIAL_FIELD_NUMBER: builtins.int
        PARTTEMP_FIELD_NUMBER: builtins.int
        PARTTEMPUNITS_FIELD_NUMBER: builtins.int
        PARTTEMPRISEMINENABLED_FIELD_NUMBER: builtins.int
        PARTVALIDATIONENABLED_FIELD_NUMBER: builtins.int
        ccaName: typing.Text = ...
        """The CCA name."""

        solderMaterial: typing.Text = ...
        """Name of the solder material."""

        partTemp: builtins.float = ...
        """Part temperature rise."""

        partTempUnits: typing.Text = ...
        """Part temperature rise units."""

        partTempRiseMinEnabled: builtins.bool = ...
        """Whether part temperature rise value is applied to the minimum temperature defined in the thermal cycle."""

        partValidationEnabled: builtins.bool = ...
        """Flag indicating if part validation should be performed."""

        def __init__(self,
            *,
            ccaName : typing.Text = ...,
            solderMaterial : typing.Optional[typing.Text] = ...,
            partTemp : typing.Optional[builtins.float] = ...,
            partTempUnits : typing.Optional[typing.Text] = ...,
            partTempRiseMinEnabled : typing.Optional[builtins.bool] = ...,
            partValidationEnabled : typing.Optional[builtins.bool] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_partTemp",b"_partTemp","_partTempRiseMinEnabled",b"_partTempRiseMinEnabled","_partTempUnits",b"_partTempUnits","_partValidationEnabled",b"_partValidationEnabled","_solderMaterial",b"_solderMaterial","partTemp",b"partTemp","partTempRiseMinEnabled",b"partTempRiseMinEnabled","partTempUnits",b"partTempUnits","partValidationEnabled",b"partValidationEnabled","solderMaterial",b"solderMaterial"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_partTemp",b"_partTemp","_partTempRiseMinEnabled",b"_partTempRiseMinEnabled","_partTempUnits",b"_partTempUnits","_partValidationEnabled",b"_partValidationEnabled","_solderMaterial",b"_solderMaterial","ccaName",b"ccaName","partTemp",b"partTemp","partTempRiseMinEnabled",b"partTempRiseMinEnabled","partTempUnits",b"partTempUnits","partValidationEnabled",b"partValidationEnabled","solderMaterial",b"solderMaterial"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_partTemp",b"_partTemp"]) -> typing.Optional[typing_extensions.Literal["partTemp"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_partTempRiseMinEnabled",b"_partTempRiseMinEnabled"]) -> typing.Optional[typing_extensions.Literal["partTempRiseMinEnabled"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_partTempUnits",b"_partTempUnits"]) -> typing.Optional[typing_extensions.Literal["partTempUnits"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_partValidationEnabled",b"_partValidationEnabled"]) -> typing.Optional[typing_extensions.Literal["partValidationEnabled"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_solderMaterial",b"_solderMaterial"]) -> typing.Optional[typing_extensions.Literal["solderMaterial"]]: ...

    PROJECT_FIELD_NUMBER: builtins.int
    SOLDERFATIGUEPROPERTIES_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock Project name."""

    @property
    def solderFatigueProperties(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UpdateSolderFatiguePropsRequest.SolderFatigue]:
        """List of SolderFatigue properties to update for a CCA."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        solderFatigueProperties : typing.Optional[typing.Iterable[global___UpdateSolderFatiguePropsRequest.SolderFatigue]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","solderFatigueProperties",b"solderFatigueProperties"]) -> None: ...
global___UpdateSolderFatiguePropsRequest = UpdateSolderFatiguePropsRequest

class UpdatePartModelingRequest(google.protobuf.message.Message):
    """*
    Request to update FEA part modeling properties.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    PARTENABLED_FIELD_NUMBER: builtins.int
    PARTMINSIZE_FIELD_NUMBER: builtins.int
    PARTMINSIZEUNITS_FIELD_NUMBER: builtins.int
    PARTELEMORDER_FIELD_NUMBER: builtins.int
    PARTMAXEDGELENGTH_FIELD_NUMBER: builtins.int
    PARTMAXEDGELENGTHUNITS_FIELD_NUMBER: builtins.int
    PARTMAXVERTICAL_FIELD_NUMBER: builtins.int
    PARTMAXVERTICALUNITS_FIELD_NUMBER: builtins.int
    PARTRESULTSFILTERED_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    ccaName: typing.Text = ...
    """The CCA name."""

    partEnabled: builtins.bool = ...
    """Whether to enable part modeling. Ignores all other fields if part modeling is disabled."""

    partMinSize: builtins.float = ...
    """The minimum part size."""

    partMinSizeUnits: typing.Text = ...
    """Units for minimum part size."""

    partElemOrder: typing.Text = ...
    """Element order."""

    partMaxEdgeLength: builtins.float = ...
    """Maximum mesh size."""

    partMaxEdgeLengthUnits: typing.Text = ...
    """Units for maximum mesh size."""

    partMaxVertical: builtins.float = ...
    """Vertical mesh size."""

    partMaxVerticalUnits: typing.Text = ...
    """Units for vertical mesh size."""

    partResultsFiltered: builtins.bool = ...
    """Whether to enable filtered part results."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        partEnabled : builtins.bool = ...,
        partMinSize : typing.Optional[builtins.float] = ...,
        partMinSizeUnits : typing.Optional[typing.Text] = ...,
        partElemOrder : typing.Optional[typing.Text] = ...,
        partMaxEdgeLength : typing.Optional[builtins.float] = ...,
        partMaxEdgeLengthUnits : typing.Optional[typing.Text] = ...,
        partMaxVertical : typing.Optional[builtins.float] = ...,
        partMaxVerticalUnits : typing.Optional[typing.Text] = ...,
        partResultsFiltered : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_partElemOrder",b"_partElemOrder","_partMaxEdgeLength",b"_partMaxEdgeLength","_partMaxEdgeLengthUnits",b"_partMaxEdgeLengthUnits","_partMaxVertical",b"_partMaxVertical","_partMaxVerticalUnits",b"_partMaxVerticalUnits","_partMinSize",b"_partMinSize","_partMinSizeUnits",b"_partMinSizeUnits","_partResultsFiltered",b"_partResultsFiltered","partElemOrder",b"partElemOrder","partMaxEdgeLength",b"partMaxEdgeLength","partMaxEdgeLengthUnits",b"partMaxEdgeLengthUnits","partMaxVertical",b"partMaxVertical","partMaxVerticalUnits",b"partMaxVerticalUnits","partMinSize",b"partMinSize","partMinSizeUnits",b"partMinSizeUnits","partResultsFiltered",b"partResultsFiltered"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_partElemOrder",b"_partElemOrder","_partMaxEdgeLength",b"_partMaxEdgeLength","_partMaxEdgeLengthUnits",b"_partMaxEdgeLengthUnits","_partMaxVertical",b"_partMaxVertical","_partMaxVerticalUnits",b"_partMaxVerticalUnits","_partMinSize",b"_partMinSize","_partMinSizeUnits",b"_partMinSizeUnits","_partResultsFiltered",b"_partResultsFiltered","ccaName",b"ccaName","partElemOrder",b"partElemOrder","partEnabled",b"partEnabled","partMaxEdgeLength",b"partMaxEdgeLength","partMaxEdgeLengthUnits",b"partMaxEdgeLengthUnits","partMaxVertical",b"partMaxVertical","partMaxVerticalUnits",b"partMaxVerticalUnits","partMinSize",b"partMinSize","partMinSizeUnits",b"partMinSizeUnits","partResultsFiltered",b"partResultsFiltered","project",b"project"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_partElemOrder",b"_partElemOrder"]) -> typing.Optional[typing_extensions.Literal["partElemOrder"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_partMaxEdgeLength",b"_partMaxEdgeLength"]) -> typing.Optional[typing_extensions.Literal["partMaxEdgeLength"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_partMaxEdgeLengthUnits",b"_partMaxEdgeLengthUnits"]) -> typing.Optional[typing_extensions.Literal["partMaxEdgeLengthUnits"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_partMaxVertical",b"_partMaxVertical"]) -> typing.Optional[typing_extensions.Literal["partMaxVertical"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_partMaxVerticalUnits",b"_partMaxVerticalUnits"]) -> typing.Optional[typing_extensions.Literal["partMaxVerticalUnits"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_partMinSize",b"_partMinSize"]) -> typing.Optional[typing_extensions.Literal["partMinSize"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_partMinSizeUnits",b"_partMinSizeUnits"]) -> typing.Optional[typing_extensions.Literal["partMinSizeUnits"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_partResultsFiltered",b"_partResultsFiltered"]) -> typing.Optional[typing_extensions.Literal["partResultsFiltered"]]: ...
global___UpdatePartModelingRequest = UpdatePartModelingRequest

class GetICTAnalysisInputFieldsRequest(google.protobuf.message.Message):
    """*
    Request to list the valid ICT analysis input fields given the user configuration.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___GetICTAnalysisInputFieldsRequest = GetICTAnalysisInputFieldsRequest

class GetICTAnalysisInputFieldsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIELDNAME_FIELD_NUMBER: builtins.int
    @property
    def fieldName(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of ICT Analysis input fields."""
        pass
    def __init__(self,
        *,
        fieldName : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["fieldName",b"fieldName"]) -> None: ...
global___GetICTAnalysisInputFieldsResponse = GetICTAnalysisInputFieldsResponse

class UpdateICTAnalysisPropsRequest(google.protobuf.message.Message):
    """*
    Request to update ICT Analysis properties.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ICTAnalysis(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CCANAME_FIELD_NUMBER: builtins.int
        APPLICATIONTIME_FIELD_NUMBER: builtins.int
        APPLICATIONTIMEUNITS_FIELD_NUMBER: builtins.int
        NUMBEROFEVENTS_FIELD_NUMBER: builtins.int
        PARTVALIDATIONENABLED_FIELD_NUMBER: builtins.int
        REQUIREMATERIALASSIGNMENTENABLED_FIELD_NUMBER: builtins.int
        FORCEMODELREBUILD_FIELD_NUMBER: builtins.int
        ICTRESULTCOUNT_FIELD_NUMBER: builtins.int
        ccaName: typing.Text = ...
        """The CCA name."""

        applicationTime: builtins.float = ...
        """Application Time."""

        applicationTimeUnits: typing.Text = ...
        """Application Time Units."""

        numberOfEvents: builtins.int = ...
        """Number of Events."""

        partValidationEnabled: builtins.bool = ...
        """Part Validation."""

        requireMaterialAssignmentEnabled: builtins.bool = ...
        """Flag indicating if material assignment is required."""

        forceModelRebuild: typing.Text = ...
        """Model Creation. Valid values are "FORCE" or "AUTO"."""

        ictResultCount: builtins.int = ...
        """Number of ICT layers to generate when using thermal analysis."""

        def __init__(self,
            *,
            ccaName : typing.Text = ...,
            applicationTime : typing.Optional[builtins.float] = ...,
            applicationTimeUnits : typing.Optional[typing.Text] = ...,
            numberOfEvents : typing.Optional[builtins.int] = ...,
            partValidationEnabled : typing.Optional[builtins.bool] = ...,
            requireMaterialAssignmentEnabled : typing.Optional[builtins.bool] = ...,
            forceModelRebuild : typing.Optional[typing.Text] = ...,
            ictResultCount : typing.Optional[builtins.int] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_applicationTime",b"_applicationTime","_applicationTimeUnits",b"_applicationTimeUnits","_forceModelRebuild",b"_forceModelRebuild","_ictResultCount",b"_ictResultCount","_numberOfEvents",b"_numberOfEvents","_partValidationEnabled",b"_partValidationEnabled","_requireMaterialAssignmentEnabled",b"_requireMaterialAssignmentEnabled","applicationTime",b"applicationTime","applicationTimeUnits",b"applicationTimeUnits","forceModelRebuild",b"forceModelRebuild","ictResultCount",b"ictResultCount","numberOfEvents",b"numberOfEvents","partValidationEnabled",b"partValidationEnabled","requireMaterialAssignmentEnabled",b"requireMaterialAssignmentEnabled"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_applicationTime",b"_applicationTime","_applicationTimeUnits",b"_applicationTimeUnits","_forceModelRebuild",b"_forceModelRebuild","_ictResultCount",b"_ictResultCount","_numberOfEvents",b"_numberOfEvents","_partValidationEnabled",b"_partValidationEnabled","_requireMaterialAssignmentEnabled",b"_requireMaterialAssignmentEnabled","applicationTime",b"applicationTime","applicationTimeUnits",b"applicationTimeUnits","ccaName",b"ccaName","forceModelRebuild",b"forceModelRebuild","ictResultCount",b"ictResultCount","numberOfEvents",b"numberOfEvents","partValidationEnabled",b"partValidationEnabled","requireMaterialAssignmentEnabled",b"requireMaterialAssignmentEnabled"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_applicationTime",b"_applicationTime"]) -> typing.Optional[typing_extensions.Literal["applicationTime"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_applicationTimeUnits",b"_applicationTimeUnits"]) -> typing.Optional[typing_extensions.Literal["applicationTimeUnits"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_forceModelRebuild",b"_forceModelRebuild"]) -> typing.Optional[typing_extensions.Literal["forceModelRebuild"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_ictResultCount",b"_ictResultCount"]) -> typing.Optional[typing_extensions.Literal["ictResultCount"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_numberOfEvents",b"_numberOfEvents"]) -> typing.Optional[typing_extensions.Literal["numberOfEvents"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_partValidationEnabled",b"_partValidationEnabled"]) -> typing.Optional[typing_extensions.Literal["partValidationEnabled"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_requireMaterialAssignmentEnabled",b"_requireMaterialAssignmentEnabled"]) -> typing.Optional[typing_extensions.Literal["requireMaterialAssignmentEnabled"]]: ...

    PROJECT_FIELD_NUMBER: builtins.int
    ICTANALYSISPROPERTIES_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock Project name."""

    @property
    def ictAnalysisProperties(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UpdateICTAnalysisPropsRequest.ICTAnalysis]:
        """List of ICTAnalysis properties to update for each CCA in a project."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        ictAnalysisProperties : typing.Optional[typing.Iterable[global___UpdateICTAnalysisPropsRequest.ICTAnalysis]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ictAnalysisProperties",b"ictAnalysisProperties","project",b"project"]) -> None: ...
global___UpdateICTAnalysisPropsRequest = UpdateICTAnalysisPropsRequest

class UpdatePartsListValidationPropsRequest(google.protobuf.message.Message):
    """*
    Request to update the parts list validation properties.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class PartsListValidation(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CCANAME_FIELD_NUMBER: builtins.int
        PARTLIBRARY_FIELD_NUMBER: builtins.int
        PROCESSUSEAVL_FIELD_NUMBER: builtins.int
        PROCESSUSEWIZARD_FIELD_NUMBER: builtins.int
        PROCESSCHECKCONFIRMEDPROPERTIES_FIELD_NUMBER: builtins.int
        PROCESSCHECKPARTNUMBERS_FIELD_NUMBER: builtins.int
        MATCHING_FIELD_NUMBER: builtins.int
        AVLREQUIREINTERNALPARTNUMBER_FIELD_NUMBER: builtins.int
        AVLREQUIREAPPROVEDDESCRIPTION_FIELD_NUMBER: builtins.int
        AVLREQUIREAPPROVEDMANUFACTURER_FIELD_NUMBER: builtins.int
        ccaName: typing.Text = ...
        """The CCA name."""

        partLibrary: typing.Text = ...
        """Part library name."""

        processUseAVL: builtins.bool = ...
        """Process option to use AVL."""

        processUseWizard: builtins.bool = ...
        """Process option to use wizard."""

        processCheckConfirmedProperties: builtins.bool = ...
        """Process option to check confirmed properties."""

        processCheckPartNumbers: builtins.bool = ...
        """Process option to check part numbers."""

        matching: ansys.api.sherlock.v0.SherlockCommonService_pb2.MatchingMode.ValueType = ...
        """Matching type."""

        avlRequireInternalPartNumber: builtins.bool = ...
        """AVL require internal part number."""

        avlRequireApprovedDescription: builtins.bool = ...
        """AVL require approved description."""

        avlRequireApprovedManufacturer: builtins.bool = ...
        """AVL require approved manufacturer."""

        def __init__(self,
            *,
            ccaName : typing.Text = ...,
            partLibrary : typing.Optional[typing.Text] = ...,
            processUseAVL : typing.Optional[builtins.bool] = ...,
            processUseWizard : typing.Optional[builtins.bool] = ...,
            processCheckConfirmedProperties : typing.Optional[builtins.bool] = ...,
            processCheckPartNumbers : typing.Optional[builtins.bool] = ...,
            matching : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.MatchingMode.ValueType] = ...,
            avlRequireInternalPartNumber : typing.Optional[builtins.bool] = ...,
            avlRequireApprovedDescription : typing.Optional[builtins.bool] = ...,
            avlRequireApprovedManufacturer : typing.Optional[builtins.bool] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_avlRequireApprovedDescription",b"_avlRequireApprovedDescription","_avlRequireApprovedManufacturer",b"_avlRequireApprovedManufacturer","_avlRequireInternalPartNumber",b"_avlRequireInternalPartNumber","_matching",b"_matching","_partLibrary",b"_partLibrary","_processCheckConfirmedProperties",b"_processCheckConfirmedProperties","_processCheckPartNumbers",b"_processCheckPartNumbers","_processUseAVL",b"_processUseAVL","_processUseWizard",b"_processUseWizard","avlRequireApprovedDescription",b"avlRequireApprovedDescription","avlRequireApprovedManufacturer",b"avlRequireApprovedManufacturer","avlRequireInternalPartNumber",b"avlRequireInternalPartNumber","matching",b"matching","partLibrary",b"partLibrary","processCheckConfirmedProperties",b"processCheckConfirmedProperties","processCheckPartNumbers",b"processCheckPartNumbers","processUseAVL",b"processUseAVL","processUseWizard",b"processUseWizard"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_avlRequireApprovedDescription",b"_avlRequireApprovedDescription","_avlRequireApprovedManufacturer",b"_avlRequireApprovedManufacturer","_avlRequireInternalPartNumber",b"_avlRequireInternalPartNumber","_matching",b"_matching","_partLibrary",b"_partLibrary","_processCheckConfirmedProperties",b"_processCheckConfirmedProperties","_processCheckPartNumbers",b"_processCheckPartNumbers","_processUseAVL",b"_processUseAVL","_processUseWizard",b"_processUseWizard","avlRequireApprovedDescription",b"avlRequireApprovedDescription","avlRequireApprovedManufacturer",b"avlRequireApprovedManufacturer","avlRequireInternalPartNumber",b"avlRequireInternalPartNumber","ccaName",b"ccaName","matching",b"matching","partLibrary",b"partLibrary","processCheckConfirmedProperties",b"processCheckConfirmedProperties","processCheckPartNumbers",b"processCheckPartNumbers","processUseAVL",b"processUseAVL","processUseWizard",b"processUseWizard"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_avlRequireApprovedDescription",b"_avlRequireApprovedDescription"]) -> typing.Optional[typing_extensions.Literal["avlRequireApprovedDescription"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_avlRequireApprovedManufacturer",b"_avlRequireApprovedManufacturer"]) -> typing.Optional[typing_extensions.Literal["avlRequireApprovedManufacturer"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_avlRequireInternalPartNumber",b"_avlRequireInternalPartNumber"]) -> typing.Optional[typing_extensions.Literal["avlRequireInternalPartNumber"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_matching",b"_matching"]) -> typing.Optional[typing_extensions.Literal["matching"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_partLibrary",b"_partLibrary"]) -> typing.Optional[typing_extensions.Literal["partLibrary"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_processCheckConfirmedProperties",b"_processCheckConfirmedProperties"]) -> typing.Optional[typing_extensions.Literal["processCheckConfirmedProperties"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_processCheckPartNumbers",b"_processCheckPartNumbers"]) -> typing.Optional[typing_extensions.Literal["processCheckPartNumbers"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_processUseAVL",b"_processUseAVL"]) -> typing.Optional[typing_extensions.Literal["processUseAVL"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_processUseWizard",b"_processUseWizard"]) -> typing.Optional[typing_extensions.Literal["processUseWizard"]]: ...

    PROJECT_FIELD_NUMBER: builtins.int
    PARTSLISTVALIDATIONPROPERTIES_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock Project name."""

    @property
    def partsListValidationProperties(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UpdatePartsListValidationPropsRequest.PartsListValidation]:
        """Properties for each CCA in the project."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        partsListValidationProperties : typing.Optional[typing.Iterable[global___UpdatePartsListValidationPropsRequest.PartsListValidation]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["partsListValidationProperties",b"partsListValidationProperties","project",b"project"]) -> None: ...
global___UpdatePartsListValidationPropsRequest = UpdatePartsListValidationPropsRequest

class GetPartsListValidationPropsRequest(google.protobuf.message.Message):
    """*
    Request to retrieve the parts list validation properties.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock Project name."""

    ccaName: typing.Text = ...
    """The CCA name."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","project",b"project"]) -> None: ...
global___GetPartsListValidationPropsRequest = GetPartsListValidationPropsRequest

class PartsListValidationPropsResponse(google.protobuf.message.Message):
    """*
    Response that includes parts list validation properties.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    PARTLIBRARY_FIELD_NUMBER: builtins.int
    PROCESSUSEAVL_FIELD_NUMBER: builtins.int
    PROCESSUSEWIZARD_FIELD_NUMBER: builtins.int
    PROCESSCHECKCONFIRMEDPROPERTIES_FIELD_NUMBER: builtins.int
    PROCESSCHECKPARTNUMBERS_FIELD_NUMBER: builtins.int
    MATCHING_FIELD_NUMBER: builtins.int
    AVLREQUIREINTERNALPARTNUMBER_FIELD_NUMBER: builtins.int
    AVLREQUIREAPPROVEDDESCRIPTION_FIELD_NUMBER: builtins.int
    AVLREQUIREAPPROVEDMANUFACTURER_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    partLibrary: typing.Text = ...
    """Part library name."""

    processUseAVL: builtins.bool = ...
    """Process option to use AVL."""

    processUseWizard: builtins.bool = ...
    """Process option to use wizard."""

    processCheckConfirmedProperties: builtins.bool = ...
    """Process option to check confirmed properties."""

    processCheckPartNumbers: builtins.bool = ...
    """Process option to check part numbers."""

    matching: ansys.api.sherlock.v0.SherlockCommonService_pb2.MatchingMode.ValueType = ...
    """Matching type."""

    avlRequireInternalPartNumber: builtins.bool = ...
    """AVL option to require internal part number."""

    avlRequireApprovedDescription: builtins.bool = ...
    """AVL option to require approved description."""

    avlRequireApprovedManufacturer: builtins.bool = ...
    """AVL option to require approved manufacturer."""

    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        partLibrary : typing.Text = ...,
        processUseAVL : builtins.bool = ...,
        processUseWizard : builtins.bool = ...,
        processCheckConfirmedProperties : builtins.bool = ...,
        processCheckPartNumbers : builtins.bool = ...,
        matching : ansys.api.sherlock.v0.SherlockCommonService_pb2.MatchingMode.ValueType = ...,
        avlRequireInternalPartNumber : builtins.bool = ...,
        avlRequireApprovedDescription : builtins.bool = ...,
        avlRequireApprovedManufacturer : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["avlRequireApprovedDescription",b"avlRequireApprovedDescription","avlRequireApprovedManufacturer",b"avlRequireApprovedManufacturer","avlRequireInternalPartNumber",b"avlRequireInternalPartNumber","matching",b"matching","partLibrary",b"partLibrary","processCheckConfirmedProperties",b"processCheckConfirmedProperties","processCheckPartNumbers",b"processCheckPartNumbers","processUseAVL",b"processUseAVL","processUseWizard",b"processUseWizard","returnCode",b"returnCode"]) -> None: ...
global___PartsListValidationPropsResponse = PartsListValidationPropsResponse

class UpdateComponentFailureMechanismPropsRequest(google.protobuf.message.Message):
    """*
    Request to update the component failure mechanism properties.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ComponentFailureMechanism(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CCANAME_FIELD_NUMBER: builtins.int
        DEFAULTPARTTEMPRISE_FIELD_NUMBER: builtins.int
        DEFAULTPARTTEMPRISEUNITS_FIELD_NUMBER: builtins.int
        PARTTEMPRISEMINENABLED_FIELD_NUMBER: builtins.int
        PARTVALIDATIONENABLED_FIELD_NUMBER: builtins.int
        ccaName: typing.Text = ...
        """The CCA name."""

        defaultPartTempRise: builtins.float = ...
        """Default part temperature rise."""

        defaultPartTempRiseUnits: typing.Text = ...
        """Default part temperature rise units."""

        partTempRiseMinEnabled: builtins.bool = ...
        """Whether part temperature rise value is applied to the minimum temperature defined in the thermal cycle."""

        partValidationEnabled: builtins.bool = ...
        """Flag indicating if part validation should be performed."""

        def __init__(self,
            *,
            ccaName : typing.Text = ...,
            defaultPartTempRise : typing.Optional[builtins.float] = ...,
            defaultPartTempRiseUnits : typing.Optional[typing.Text] = ...,
            partTempRiseMinEnabled : typing.Optional[builtins.bool] = ...,
            partValidationEnabled : typing.Optional[builtins.bool] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_defaultPartTempRise",b"_defaultPartTempRise","_defaultPartTempRiseUnits",b"_defaultPartTempRiseUnits","_partTempRiseMinEnabled",b"_partTempRiseMinEnabled","_partValidationEnabled",b"_partValidationEnabled","defaultPartTempRise",b"defaultPartTempRise","defaultPartTempRiseUnits",b"defaultPartTempRiseUnits","partTempRiseMinEnabled",b"partTempRiseMinEnabled","partValidationEnabled",b"partValidationEnabled"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_defaultPartTempRise",b"_defaultPartTempRise","_defaultPartTempRiseUnits",b"_defaultPartTempRiseUnits","_partTempRiseMinEnabled",b"_partTempRiseMinEnabled","_partValidationEnabled",b"_partValidationEnabled","ccaName",b"ccaName","defaultPartTempRise",b"defaultPartTempRise","defaultPartTempRiseUnits",b"defaultPartTempRiseUnits","partTempRiseMinEnabled",b"partTempRiseMinEnabled","partValidationEnabled",b"partValidationEnabled"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_defaultPartTempRise",b"_defaultPartTempRise"]) -> typing.Optional[typing_extensions.Literal["defaultPartTempRise"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_defaultPartTempRiseUnits",b"_defaultPartTempRiseUnits"]) -> typing.Optional[typing_extensions.Literal["defaultPartTempRiseUnits"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_partTempRiseMinEnabled",b"_partTempRiseMinEnabled"]) -> typing.Optional[typing_extensions.Literal["partTempRiseMinEnabled"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_partValidationEnabled",b"_partValidationEnabled"]) -> typing.Optional[typing_extensions.Literal["partValidationEnabled"]]: ...

    PROJECT_FIELD_NUMBER: builtins.int
    COMPONENTFAILUREMECHANISMPROPERTIES_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock Project name."""

    @property
    def componentFailureMechanismProperties(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UpdateComponentFailureMechanismPropsRequest.ComponentFailureMechanism]:
        """Properties for each CCA in the project."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        componentFailureMechanismProperties : typing.Optional[typing.Iterable[global___UpdateComponentFailureMechanismPropsRequest.ComponentFailureMechanism]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["componentFailureMechanismProperties",b"componentFailureMechanismProperties","project",b"project"]) -> None: ...
global___UpdateComponentFailureMechanismPropsRequest = UpdateComponentFailureMechanismPropsRequest

class UpdateSemiconductorWearoutAnalysisPropsRequest(google.protobuf.message.Message):
    """*
    Request to update Semiconductor Wearout Analysis properties.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class SemiconductorWearoutAnalysis(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CCANAME_FIELD_NUMBER: builtins.int
        MAXFEATURESIZE_FIELD_NUMBER: builtins.int
        MAXFEATURESIZEUNITS_FIELD_NUMBER: builtins.int
        PARTTEMPRISE_FIELD_NUMBER: builtins.int
        PARTTEMPRISEUNITS_FIELD_NUMBER: builtins.int
        PARTTEMPRISEMINENABLED_FIELD_NUMBER: builtins.int
        PARTVALIDATIONENABLED_FIELD_NUMBER: builtins.int
        ccaName: typing.Text = ...
        """The CCA name."""

        maxFeatureSize: builtins.float = ...
        """Maximum feature size."""

        maxFeatureSizeUnits: typing.Text = ...
        """Maximum feature size units."""

        partTempRise: builtins.float = ...
        """Part temperature rise."""

        partTempRiseUnits: typing.Text = ...
        """Part temperature rise units."""

        partTempRiseMinEnabled: builtins.bool = ...
        """Whether part temperature rise value is applied to the minimum temperature defined in the thermal cycle."""

        partValidationEnabled: builtins.bool = ...
        """Flag indicating if part validation should be performed."""

        def __init__(self,
            *,
            ccaName : typing.Text = ...,
            maxFeatureSize : typing.Optional[builtins.float] = ...,
            maxFeatureSizeUnits : typing.Optional[typing.Text] = ...,
            partTempRise : typing.Optional[builtins.float] = ...,
            partTempRiseUnits : typing.Optional[typing.Text] = ...,
            partTempRiseMinEnabled : typing.Optional[builtins.bool] = ...,
            partValidationEnabled : typing.Optional[builtins.bool] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_maxFeatureSize",b"_maxFeatureSize","_maxFeatureSizeUnits",b"_maxFeatureSizeUnits","_partTempRise",b"_partTempRise","_partTempRiseMinEnabled",b"_partTempRiseMinEnabled","_partTempRiseUnits",b"_partTempRiseUnits","_partValidationEnabled",b"_partValidationEnabled","maxFeatureSize",b"maxFeatureSize","maxFeatureSizeUnits",b"maxFeatureSizeUnits","partTempRise",b"partTempRise","partTempRiseMinEnabled",b"partTempRiseMinEnabled","partTempRiseUnits",b"partTempRiseUnits","partValidationEnabled",b"partValidationEnabled"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_maxFeatureSize",b"_maxFeatureSize","_maxFeatureSizeUnits",b"_maxFeatureSizeUnits","_partTempRise",b"_partTempRise","_partTempRiseMinEnabled",b"_partTempRiseMinEnabled","_partTempRiseUnits",b"_partTempRiseUnits","_partValidationEnabled",b"_partValidationEnabled","ccaName",b"ccaName","maxFeatureSize",b"maxFeatureSize","maxFeatureSizeUnits",b"maxFeatureSizeUnits","partTempRise",b"partTempRise","partTempRiseMinEnabled",b"partTempRiseMinEnabled","partTempRiseUnits",b"partTempRiseUnits","partValidationEnabled",b"partValidationEnabled"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_maxFeatureSize",b"_maxFeatureSize"]) -> typing.Optional[typing_extensions.Literal["maxFeatureSize"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_maxFeatureSizeUnits",b"_maxFeatureSizeUnits"]) -> typing.Optional[typing_extensions.Literal["maxFeatureSizeUnits"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_partTempRise",b"_partTempRise"]) -> typing.Optional[typing_extensions.Literal["partTempRise"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_partTempRiseMinEnabled",b"_partTempRiseMinEnabled"]) -> typing.Optional[typing_extensions.Literal["partTempRiseMinEnabled"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_partTempRiseUnits",b"_partTempRiseUnits"]) -> typing.Optional[typing_extensions.Literal["partTempRiseUnits"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_partValidationEnabled",b"_partValidationEnabled"]) -> typing.Optional[typing_extensions.Literal["partValidationEnabled"]]: ...

    PROJECT_FIELD_NUMBER: builtins.int
    SEMICONDUCTORWEAROUTANALYSISPROPERTIES_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock Project name."""

    @property
    def semiconductorWearoutAnalysisProperties(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UpdateSemiconductorWearoutAnalysisPropsRequest.SemiconductorWearoutAnalysis]:
        """List of SemiconductorWearoutAnalysis properties to update for each CCA in a project."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        semiconductorWearoutAnalysisProperties : typing.Optional[typing.Iterable[global___UpdateSemiconductorWearoutAnalysisPropsRequest.SemiconductorWearoutAnalysis]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","semiconductorWearoutAnalysisProperties",b"semiconductorWearoutAnalysisProperties"]) -> None: ...
global___UpdateSemiconductorWearoutAnalysisPropsRequest = UpdateSemiconductorWearoutAnalysisPropsRequest

class UpdatePTHFatiguePropsRequest(google.protobuf.message.Message):
    """*
    Request to update Plated Through Hole Analysis properties.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class PTHFatigueAnalysis(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Qualification:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _QualificationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Qualification.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            NONE: UpdatePTHFatiguePropsRequest.PTHFatigueAnalysis.Qualification.ValueType = ...  # 0
            """No qualification."""

            PER_LOT: UpdatePTHFatiguePropsRequest.PTHFatigueAnalysis.Qualification.ValueType = ...  # 1
            """Qualification per lot."""

            PRODUCT: UpdatePTHFatiguePropsRequest.PTHFatigueAnalysis.Qualification.ValueType = ...  # 2
            """Qualification by product."""

            SUPPLIER: UpdatePTHFatiguePropsRequest.PTHFatigueAnalysis.Qualification.ValueType = ...  # 3
            """Qualification by supplier."""

        class Qualification(_Qualification, metaclass=_QualificationEnumTypeWrapper):
            pass

        NONE: UpdatePTHFatiguePropsRequest.PTHFatigueAnalysis.Qualification.ValueType = ...  # 0
        """No qualification."""

        PER_LOT: UpdatePTHFatiguePropsRequest.PTHFatigueAnalysis.Qualification.ValueType = ...  # 1
        """Qualification per lot."""

        PRODUCT: UpdatePTHFatiguePropsRequest.PTHFatigueAnalysis.Qualification.ValueType = ...  # 2
        """Qualification by product."""

        SUPPLIER: UpdatePTHFatiguePropsRequest.PTHFatigueAnalysis.Qualification.ValueType = ...  # 3
        """Qualification by supplier."""


        CCANAME_FIELD_NUMBER: builtins.int
        QUALIFICATION_FIELD_NUMBER: builtins.int
        PTHQUALITYFACTOR_FIELD_NUMBER: builtins.int
        PTHWALLTHICKNESS_FIELD_NUMBER: builtins.int
        PTHWALLTHICKNESSUNITS_FIELD_NUMBER: builtins.int
        MINHOLESIZE_FIELD_NUMBER: builtins.int
        MINHOLESIZEUNITS_FIELD_NUMBER: builtins.int
        MAXHOLESIZE_FIELD_NUMBER: builtins.int
        MAXHOLESIZEUNITS_FIELD_NUMBER: builtins.int
        ccaName: typing.Text = ...
        """The CCA name."""

        qualification: global___UpdatePTHFatiguePropsRequest.PTHFatigueAnalysis.Qualification.ValueType = ...
        """Qualification choice for IST/HATS."""

        pthQualityFactor: typing.Text = ...
        """Quality factor for PTH."""

        pthWallThickness: builtins.float = ...
        """Wall thickness of PTH."""

        pthWallThicknessUnits: typing.Text = ...
        """Units for PTH wall thickness."""

        minHoleSize: builtins.float = ...
        """Minimum hole size."""

        minHoleSizeUnits: typing.Text = ...
        """Units for minimum hole size."""

        maxHoleSize: builtins.float = ...
        """Maximum hole size."""

        maxHoleSizeUnits: typing.Text = ...
        """Units for maximum hole size."""

        def __init__(self,
            *,
            ccaName : typing.Text = ...,
            qualification : typing.Optional[global___UpdatePTHFatiguePropsRequest.PTHFatigueAnalysis.Qualification.ValueType] = ...,
            pthQualityFactor : typing.Optional[typing.Text] = ...,
            pthWallThickness : typing.Optional[builtins.float] = ...,
            pthWallThicknessUnits : typing.Optional[typing.Text] = ...,
            minHoleSize : typing.Optional[builtins.float] = ...,
            minHoleSizeUnits : typing.Optional[typing.Text] = ...,
            maxHoleSize : typing.Optional[builtins.float] = ...,
            maxHoleSizeUnits : typing.Optional[typing.Text] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_maxHoleSize",b"_maxHoleSize","_maxHoleSizeUnits",b"_maxHoleSizeUnits","_minHoleSize",b"_minHoleSize","_minHoleSizeUnits",b"_minHoleSizeUnits","_pthQualityFactor",b"_pthQualityFactor","_pthWallThickness",b"_pthWallThickness","_pthWallThicknessUnits",b"_pthWallThicknessUnits","_qualification",b"_qualification","maxHoleSize",b"maxHoleSize","maxHoleSizeUnits",b"maxHoleSizeUnits","minHoleSize",b"minHoleSize","minHoleSizeUnits",b"minHoleSizeUnits","pthQualityFactor",b"pthQualityFactor","pthWallThickness",b"pthWallThickness","pthWallThicknessUnits",b"pthWallThicknessUnits","qualification",b"qualification"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_maxHoleSize",b"_maxHoleSize","_maxHoleSizeUnits",b"_maxHoleSizeUnits","_minHoleSize",b"_minHoleSize","_minHoleSizeUnits",b"_minHoleSizeUnits","_pthQualityFactor",b"_pthQualityFactor","_pthWallThickness",b"_pthWallThickness","_pthWallThicknessUnits",b"_pthWallThicknessUnits","_qualification",b"_qualification","ccaName",b"ccaName","maxHoleSize",b"maxHoleSize","maxHoleSizeUnits",b"maxHoleSizeUnits","minHoleSize",b"minHoleSize","minHoleSizeUnits",b"minHoleSizeUnits","pthQualityFactor",b"pthQualityFactor","pthWallThickness",b"pthWallThickness","pthWallThicknessUnits",b"pthWallThicknessUnits","qualification",b"qualification"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_maxHoleSize",b"_maxHoleSize"]) -> typing.Optional[typing_extensions.Literal["maxHoleSize"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_maxHoleSizeUnits",b"_maxHoleSizeUnits"]) -> typing.Optional[typing_extensions.Literal["maxHoleSizeUnits"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_minHoleSize",b"_minHoleSize"]) -> typing.Optional[typing_extensions.Literal["minHoleSize"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_minHoleSizeUnits",b"_minHoleSizeUnits"]) -> typing.Optional[typing_extensions.Literal["minHoleSizeUnits"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_pthQualityFactor",b"_pthQualityFactor"]) -> typing.Optional[typing_extensions.Literal["pthQualityFactor"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_pthWallThickness",b"_pthWallThickness"]) -> typing.Optional[typing_extensions.Literal["pthWallThickness"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_pthWallThicknessUnits",b"_pthWallThicknessUnits"]) -> typing.Optional[typing_extensions.Literal["pthWallThicknessUnits"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_qualification",b"_qualification"]) -> typing.Optional[typing_extensions.Literal["qualification"]]: ...

    PROJECT_FIELD_NUMBER: builtins.int
    PTHFATIGUEANALYSISPROPERTIES_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock Project name."""

    @property
    def pthFatigueAnalysisProperties(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UpdatePTHFatiguePropsRequest.PTHFatigueAnalysis]:
        """List of PTHFatigueAnalysis properties to update for each CCA in a project."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        pthFatigueAnalysisProperties : typing.Optional[typing.Iterable[global___UpdatePTHFatiguePropsRequest.PTHFatigueAnalysis]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","pthFatigueAnalysisProperties",b"pthFatigueAnalysisProperties"]) -> None: ...
global___UpdatePTHFatiguePropsRequest = UpdatePTHFatiguePropsRequest

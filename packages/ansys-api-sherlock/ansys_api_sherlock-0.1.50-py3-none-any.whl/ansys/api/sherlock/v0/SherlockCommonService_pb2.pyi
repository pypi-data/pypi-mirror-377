"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _TableDelimiter:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _TableDelimiterEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TableDelimiter.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    COMMA: TableDelimiter.ValueType = ...  # 0
    """Represents ',' delimiter."""

    SPACE: TableDelimiter.ValueType = ...  # 1
    """Represents ' ' delimiter."""

    TAB: TableDelimiter.ValueType = ...  # 2
    """Represents tab key delimiter."""

    SEMICOLON: TableDelimiter.ValueType = ...  # 3
    """Represents ';' delimiter."""

class TableDelimiter(_TableDelimiter, metaclass=_TableDelimiterEnumTypeWrapper):
    """*
    Types of delimiters that can be used for exporting tables.
    """
    pass

COMMA: TableDelimiter.ValueType = ...  # 0
"""Represents ',' delimiter."""

SPACE: TableDelimiter.ValueType = ...  # 1
"""Represents ' ' delimiter."""

TAB: TableDelimiter.ValueType = ...  # 2
"""Represents tab key delimiter."""

SEMICOLON: TableDelimiter.ValueType = ...  # 3
"""Represents ';' delimiter."""

global___TableDelimiter = TableDelimiter


class _MatchingMode:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _MatchingModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_MatchingMode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    Both: MatchingMode.ValueType = ...  # 0
    """Matches both part number and manufacturer."""

    Part: MatchingMode.ValueType = ...  # 1
    """Matches part number only."""

class MatchingMode(_MatchingMode, metaclass=_MatchingModeEnumTypeWrapper):
    """*
    Determines how parts in the parts list are matched against parts 
    in the AVL or Part Library.
    """
    pass

Both: MatchingMode.ValueType = ...  # 0
"""Matches both part number and manufacturer."""

Part: MatchingMode.ValueType = ...  # 1
"""Matches part number only."""

global___MatchingMode = MatchingMode


class ReturnCode(google.protobuf.message.Message):
    """*
    Status response of a message. A value of 0 indicates a successful request.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VALUE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    value: builtins.int = ...
    """Status code of response. A value of 0 indicates success, -1 indicates error."""

    message: typing.Text = ...
    """Message indicating the status of response including any error."""

    def __init__(self,
        *,
        value : builtins.int = ...,
        message : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["message",b"message","value",b"value"]) -> None: ...
global___ReturnCode = ReturnCode

class ExitRequest(google.protobuf.message.Message):
    """*
    Request to exit the gRPC connection.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CLOSESHERLOCKCLIENT_FIELD_NUMBER: builtins.int
    closeSherlockClient: builtins.bool = ...
    """If set to true, exits the Sherlock client if it is opened. Otherwise, just closes the gRPC connection."""

    def __init__(self,
        *,
        closeSherlockClient : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["closeSherlockClient",b"closeSherlockClient"]) -> None: ...
global___ExitRequest = ExitRequest

class HealthCheckRequest(google.protobuf.message.Message):
    """*
    Request to check if the gRPC connection is open.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___HealthCheckRequest = HealthCheckRequest

class HealthCheckResponse(google.protobuf.message.Message):
    """*
    Represents whether the gRPC connection is open.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ServingStatus:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ServingStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ServingStatus.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNKNOWN: HealthCheckResponse.ServingStatus.ValueType = ...  # 0
        """Indicates an unknown connection status."""

        SERVING: HealthCheckResponse.ServingStatus.ValueType = ...  # 1
        """Indicates the connection is up and server is listening."""

        NOT_SERVING: HealthCheckResponse.ServingStatus.ValueType = ...  # 2
        """Indicates connection with server is closed."""

    class ServingStatus(_ServingStatus, metaclass=_ServingStatusEnumTypeWrapper):
        pass

    UNKNOWN: HealthCheckResponse.ServingStatus.ValueType = ...  # 0
    """Indicates an unknown connection status."""

    SERVING: HealthCheckResponse.ServingStatus.ValueType = ...  # 1
    """Indicates the connection is up and server is listening."""

    NOT_SERVING: HealthCheckResponse.ServingStatus.ValueType = ...  # 2
    """Indicates connection with server is closed."""


    STATUS_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    status: global___HealthCheckResponse.ServingStatus.ValueType = ...
    """Enum representing connection status."""

    port: builtins.int = ...
    """Listening port number on server."""

    def __init__(self,
        *,
        status : global___HealthCheckResponse.ServingStatus.ValueType = ...,
        port : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["port",b"port","status",b"status"]) -> None: ...
global___HealthCheckResponse = HealthCheckResponse

class IsSherlockClientLoadingRequest(google.protobuf.message.Message):
    """*
    Check if the Sherlock client is still loading.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___IsSherlockClientLoadingRequest = IsSherlockClientLoadingRequest

class ListUnitsRequest(google.protobuf.message.Message):
    """*
    Request for a list of valid units of the provided unit type.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _UnitType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _UnitTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_UnitType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNKNOWN: ListUnitsRequest.UnitType.ValueType = ...  # 0
        """Indicates an unknown unit type."""

        ACCEL_DENSITY: ListUnitsRequest.UnitType.ValueType = ...  # 1
        """Units used for acceleration density."""

        ACCELERATION: ListUnitsRequest.UnitType.ValueType = ...  # 2
        """Units used for acceleration."""

        AREA: ListUnitsRequest.UnitType.ValueType = ...  # 3
        """Units used for area."""

        BANDWIDTH: ListUnitsRequest.UnitType.ValueType = ...  # 4
        """Units used for bandwidth."""

        CAPACITANCE: ListUnitsRequest.UnitType.ValueType = ...  # 5
        """Units used for electrical capacitance."""

        CTE: ListUnitsRequest.UnitType.ValueType = ...  # 6
        """Units used for material CTE."""

        CURRENT: ListUnitsRequest.UnitType.ValueType = ...  # 7
        """Units used for electrical current."""

        DENSITY: ListUnitsRequest.UnitType.ValueType = ...  # 8
        """Units used for density."""

        DISP_DENSITY: ListUnitsRequest.UnitType.ValueType = ...  # 9
        """Units used for displacement density."""

        FORCE: ListUnitsRequest.UnitType.ValueType = ...  # 10
        """Units used for force."""

        FREQUENCY: ListUnitsRequest.UnitType.ValueType = ...  # 11
        """Units used for frequency."""

        INDUCTANCE: ListUnitsRequest.UnitType.ValueType = ...  # 12
        """Units used for inductance."""

        LENGTH: ListUnitsRequest.UnitType.ValueType = ...  # 13
        """Units used for length."""

        POWER: ListUnitsRequest.UnitType.ValueType = ...  # 14
        """Units used for electrical power."""

        RESISTANCE: ListUnitsRequest.UnitType.ValueType = ...  # 15
        """Units used for electrical resistance."""

        SIZE: ListUnitsRequest.UnitType.ValueType = ...  # 16
        """Units used for size."""

        SPECIFIC_HEAT: ListUnitsRequest.UnitType.ValueType = ...  # 17
        """Units used for specific heat."""

        STRAIN: ListUnitsRequest.UnitType.ValueType = ...  # 18
        """Units used for strain."""

        STRESS: ListUnitsRequest.UnitType.ValueType = ...  # 19
        """Units used for stress."""

        TEMPERATURE: ListUnitsRequest.UnitType.ValueType = ...  # 20
        """Units used for temperature."""

        THERMAL_CONDUCTIVITY: ListUnitsRequest.UnitType.ValueType = ...  # 21
        """Units used for thermal conductivity."""

        THERMAL_RESISTANCE: ListUnitsRequest.UnitType.ValueType = ...  # 22
        """Units used for thermal resistance."""

        TIME: ListUnitsRequest.UnitType.ValueType = ...  # 23
        """Units used for time."""

        VELOCITY: ListUnitsRequest.UnitType.ValueType = ...  # 24
        """Units used for velocity."""

        VELOCITY_DENSITY: ListUnitsRequest.UnitType.ValueType = ...  # 25
        """Units used for velocity density."""

        VOLTAGE: ListUnitsRequest.UnitType.ValueType = ...  # 26
        """Units used for electrical voltage."""

        VOLUME: ListUnitsRequest.UnitType.ValueType = ...  # 27
        """Units used for volume."""

        WEIGHT: ListUnitsRequest.UnitType.ValueType = ...  # 28
        """Units used for weight."""

    class UnitType(_UnitType, metaclass=_UnitTypeEnumTypeWrapper):
        pass

    UNKNOWN: ListUnitsRequest.UnitType.ValueType = ...  # 0
    """Indicates an unknown unit type."""

    ACCEL_DENSITY: ListUnitsRequest.UnitType.ValueType = ...  # 1
    """Units used for acceleration density."""

    ACCELERATION: ListUnitsRequest.UnitType.ValueType = ...  # 2
    """Units used for acceleration."""

    AREA: ListUnitsRequest.UnitType.ValueType = ...  # 3
    """Units used for area."""

    BANDWIDTH: ListUnitsRequest.UnitType.ValueType = ...  # 4
    """Units used for bandwidth."""

    CAPACITANCE: ListUnitsRequest.UnitType.ValueType = ...  # 5
    """Units used for electrical capacitance."""

    CTE: ListUnitsRequest.UnitType.ValueType = ...  # 6
    """Units used for material CTE."""

    CURRENT: ListUnitsRequest.UnitType.ValueType = ...  # 7
    """Units used for electrical current."""

    DENSITY: ListUnitsRequest.UnitType.ValueType = ...  # 8
    """Units used for density."""

    DISP_DENSITY: ListUnitsRequest.UnitType.ValueType = ...  # 9
    """Units used for displacement density."""

    FORCE: ListUnitsRequest.UnitType.ValueType = ...  # 10
    """Units used for force."""

    FREQUENCY: ListUnitsRequest.UnitType.ValueType = ...  # 11
    """Units used for frequency."""

    INDUCTANCE: ListUnitsRequest.UnitType.ValueType = ...  # 12
    """Units used for inductance."""

    LENGTH: ListUnitsRequest.UnitType.ValueType = ...  # 13
    """Units used for length."""

    POWER: ListUnitsRequest.UnitType.ValueType = ...  # 14
    """Units used for electrical power."""

    RESISTANCE: ListUnitsRequest.UnitType.ValueType = ...  # 15
    """Units used for electrical resistance."""

    SIZE: ListUnitsRequest.UnitType.ValueType = ...  # 16
    """Units used for size."""

    SPECIFIC_HEAT: ListUnitsRequest.UnitType.ValueType = ...  # 17
    """Units used for specific heat."""

    STRAIN: ListUnitsRequest.UnitType.ValueType = ...  # 18
    """Units used for strain."""

    STRESS: ListUnitsRequest.UnitType.ValueType = ...  # 19
    """Units used for stress."""

    TEMPERATURE: ListUnitsRequest.UnitType.ValueType = ...  # 20
    """Units used for temperature."""

    THERMAL_CONDUCTIVITY: ListUnitsRequest.UnitType.ValueType = ...  # 21
    """Units used for thermal conductivity."""

    THERMAL_RESISTANCE: ListUnitsRequest.UnitType.ValueType = ...  # 22
    """Units used for thermal resistance."""

    TIME: ListUnitsRequest.UnitType.ValueType = ...  # 23
    """Units used for time."""

    VELOCITY: ListUnitsRequest.UnitType.ValueType = ...  # 24
    """Units used for velocity."""

    VELOCITY_DENSITY: ListUnitsRequest.UnitType.ValueType = ...  # 25
    """Units used for velocity density."""

    VOLTAGE: ListUnitsRequest.UnitType.ValueType = ...  # 26
    """Units used for electrical voltage."""

    VOLUME: ListUnitsRequest.UnitType.ValueType = ...  # 27
    """Units used for volume."""

    WEIGHT: ListUnitsRequest.UnitType.ValueType = ...  # 28
    """Units used for weight."""


    UNITTYPE_FIELD_NUMBER: builtins.int
    unitType: global___ListUnitsRequest.UnitType.ValueType = ...
    """Unit type to request valid units of."""

    def __init__(self,
        *,
        unitType : global___ListUnitsRequest.UnitType.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["unitType",b"unitType"]) -> None: ...
global___ListUnitsRequest = ListUnitsRequest

class ListUnitsResponse(google.protobuf.message.Message):
    """*
    Represents a list of valid units for the provided unit type.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    UNITS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> global___ReturnCode:
        """Status code of response."""
        pass
    @property
    def units(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of valid units for the requested type."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[global___ReturnCode] = ...,
        units : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode","units",b"units"]) -> None: ...
global___ListUnitsResponse = ListUnitsResponse

class SolderInfo(google.protobuf.message.Message):
    """*
    Represents solder information given to the client.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ACTIVATIONENERGY_FIELD_NUMBER: builtins.int
    CCCALIBRATIONFACTOR_FIELD_NUMBER: builtins.int
    CORRECTIONFACTORS_FIELD_NUMBER: builtins.int
    CREATEDBY_FIELD_NUMBER: builtins.int
    CRITICALDWELLTIME_FIELD_NUMBER: builtins.int
    CRITICALDWELLTIMEUNITS_FIELD_NUMBER: builtins.int
    CRITICALMAXTEMP_FIELD_NUMBER: builtins.int
    CRITICALMAXTEMPUNITS_FIELD_NUMBER: builtins.int
    CRITICALSTRAIN_FIELD_NUMBER: builtins.int
    CTE_FIELD_NUMBER: builtins.int
    CTEUNITS_FIELD_NUMBER: builtins.int
    DENSITY_FIELD_NUMBER: builtins.int
    DENSITYUNITS_FIELD_NUMBER: builtins.int
    ELASTICMODULUS_FIELD_NUMBER: builtins.int
    ELASTICMODULUSUNITS_FIELD_NUMBER: builtins.int
    FEAPOWER_FIELD_NUMBER: builtins.int
    LEADEDCALIBRATIONFACTOR_FIELD_NUMBER: builtins.int
    MATERIALFATIGUECOEFFICIENT_FIELD_NUMBER: builtins.int
    MATERIALFATIGUEEXPONENT_FIELD_NUMBER: builtins.int
    MODIFIEDBY_FIELD_NUMBER: builtins.int
    POISSONRATIO_FIELD_NUMBER: builtins.int
    SECANTMODULUS_FIELD_NUMBER: builtins.int
    SECANTMODULUSUNITS_FIELD_NUMBER: builtins.int
    SECANTFATIGUECOEFFICIENT_FIELD_NUMBER: builtins.int
    SECANTFATIGUEEXPONENT_FIELD_NUMBER: builtins.int
    SHOCKSTRAIN_FIELD_NUMBER: builtins.int
    SOLDERNAME_FIELD_NUMBER: builtins.int
    SOLDERTYPE_FIELD_NUMBER: builtins.int
    STRAINENERGYCOEFFICIENT_FIELD_NUMBER: builtins.int
    THERMALCONDUCTIVITY_FIELD_NUMBER: builtins.int
    THERMALCONDUCTIVITYUNITS_FIELD_NUMBER: builtins.int
    THERMALSHOCKFACTORBGA_FIELD_NUMBER: builtins.int
    THERMALSHOCKFACTORCC_FIELD_NUMBER: builtins.int
    THERMALSHOCKFACTORDEFAULT_FIELD_NUMBER: builtins.int
    THERMALSHOCKFACTORLCCC_FIELD_NUMBER: builtins.int
    THERMALSHOCKFACTORLEADED_FIELD_NUMBER: builtins.int
    THERMALSHOCKFACTORQFN_FIELD_NUMBER: builtins.int
    THERMALSHOCKFACTORTHRUHOLE_FIELD_NUMBER: builtins.int
    USERNOTES_FIELD_NUMBER: builtins.int
    WEIBULLBETABGA_FIELD_NUMBER: builtins.int
    WEIBULLBETACBGA_FIELD_NUMBER: builtins.int
    WEIBULLBETACC_FIELD_NUMBER: builtins.int
    WEIBULLBETALCCC_FIELD_NUMBER: builtins.int
    WEIBULLBETALEADED_FIELD_NUMBER: builtins.int
    WEIBULLBETAQFN_FIELD_NUMBER: builtins.int
    WEIBULLBETATHRUHOLE_FIELD_NUMBER: builtins.int
    CGACALIBRATIONFACTOR_FIELD_NUMBER: builtins.int
    BGACALIBRATIONFACTOR_FIELD_NUMBER: builtins.int
    activationEnergy: typing.Text = ...
    """Activation energy."""

    ccCalibrationFactor: typing.Text = ...
    """CC Calibration factor."""

    correctionFactors: typing.Text = ...
    """Correction factors."""

    createdBy: typing.Text = ...
    """Who created this solder."""

    criticalDwellTime: typing.Text = ...
    """Critical dwell time."""

    criticalDwellTimeUnits: typing.Text = ...
    """Critical dwell time units."""

    criticalMaxTemp: typing.Text = ...
    """Critical max temperature."""

    criticalMaxTempUnits: typing.Text = ...
    """Critical max temperature units."""

    criticalStrain: typing.Text = ...
    """Critical strain."""

    cte: typing.Text = ...
    """CTE."""

    cteUnits: typing.Text = ...
    """CTE units."""

    density: typing.Text = ...
    """Solder density."""

    densityUnits: typing.Text = ...
    """Solder density units."""

    elasticModulus: typing.Text = ...
    """Elastic Modulus, may be a single value or a curve."""

    elasticModulusUnits: typing.Text = ...
    """Elastic Modulus units."""

    feaPower: typing.Text = ...
    """FEA power."""

    leadedCalibrationFactor: typing.Text = ...
    """Leaded calibration factor."""

    materialFatigueCoefficient: typing.Text = ...
    """Fatigue coefficient."""

    materialFatigueExponent: typing.Text = ...
    """Fatigue exponent."""

    modifiedBy: typing.Text = ...
    """Who last modified this solder."""

    poissonRatio: typing.Text = ...
    """Poisson ratio."""

    secantModulus: typing.Text = ...
    """Secant modulus."""

    secantModulusUnits: typing.Text = ...
    """Secant modulus units."""

    secantFatigueCoefficient: typing.Text = ...
    """Secant fatigue coefficient."""

    secantFatigueExponent: typing.Text = ...
    """Secant fatigue exponent."""

    shockStrain: typing.Text = ...
    """Shock strain."""

    solderName: typing.Text = ...
    """Name of solder."""

    solderType: typing.Text = ...
    """Type of solder."""

    strainEnergyCoefficient: typing.Text = ...
    """Strain energy coefficient."""

    thermalConductivity: typing.Text = ...
    """Solder thermal conductivity."""

    thermalConductivityUnits: typing.Text = ...
    """Solder thermal conductivity units."""

    thermalShockFactorBGA: typing.Text = ...
    """Thermal shock factor for BGA."""

    thermalShockFactorCC: typing.Text = ...
    """Thermal shock factor for CC."""

    thermalShockFactorDEFAULT: typing.Text = ...
    """Thermal shock factor default."""

    thermalShockFactorLCCC: typing.Text = ...
    """Thermal shock factor for LCCC."""

    thermalShockFactorLeaded: typing.Text = ...
    """Thermal shock factor for Leaded."""

    thermalShockFactorQFN: typing.Text = ...
    """Thermal shock factor for QFN."""

    thermalShockFactorThruHole: typing.Text = ...
    """Thermal shock factor for Through hole."""

    userNotes: typing.Text = ...
    """Notes written by the user."""

    weibullBetaBGA: typing.Text = ...
    """Weibull for BGA."""

    weibullBetaCBGA: typing.Text = ...
    """Weibull fpr CBGA."""

    weibullBetaCC: typing.Text = ...
    """Weibull for CC."""

    weibullBetaLCCC: typing.Text = ...
    """Weibull for LCCC."""

    weibullBetaLeaded: typing.Text = ...
    """Weibull for Leaded."""

    weibullBetaQFN: typing.Text = ...
    """Weibull for QFN."""

    weibullBetaThruHole: typing.Text = ...
    """Weibull for through hole."""

    cgaCalibrationFactor: typing.Text = ...
    """CGA calibration factor."""

    bgaCalibrationFactor: typing.Text = ...
    """BGA calibration factor."""

    def __init__(self,
        *,
        activationEnergy : typing.Text = ...,
        ccCalibrationFactor : typing.Text = ...,
        correctionFactors : typing.Text = ...,
        createdBy : typing.Text = ...,
        criticalDwellTime : typing.Text = ...,
        criticalDwellTimeUnits : typing.Text = ...,
        criticalMaxTemp : typing.Text = ...,
        criticalMaxTempUnits : typing.Text = ...,
        criticalStrain : typing.Text = ...,
        cte : typing.Text = ...,
        cteUnits : typing.Text = ...,
        density : typing.Text = ...,
        densityUnits : typing.Text = ...,
        elasticModulus : typing.Text = ...,
        elasticModulusUnits : typing.Text = ...,
        feaPower : typing.Text = ...,
        leadedCalibrationFactor : typing.Text = ...,
        materialFatigueCoefficient : typing.Text = ...,
        materialFatigueExponent : typing.Text = ...,
        modifiedBy : typing.Text = ...,
        poissonRatio : typing.Text = ...,
        secantModulus : typing.Text = ...,
        secantModulusUnits : typing.Text = ...,
        secantFatigueCoefficient : typing.Text = ...,
        secantFatigueExponent : typing.Text = ...,
        shockStrain : typing.Text = ...,
        solderName : typing.Text = ...,
        solderType : typing.Text = ...,
        strainEnergyCoefficient : typing.Text = ...,
        thermalConductivity : typing.Text = ...,
        thermalConductivityUnits : typing.Text = ...,
        thermalShockFactorBGA : typing.Text = ...,
        thermalShockFactorCC : typing.Text = ...,
        thermalShockFactorDEFAULT : typing.Text = ...,
        thermalShockFactorLCCC : typing.Text = ...,
        thermalShockFactorLeaded : typing.Text = ...,
        thermalShockFactorQFN : typing.Text = ...,
        thermalShockFactorThruHole : typing.Text = ...,
        userNotes : typing.Text = ...,
        weibullBetaBGA : typing.Text = ...,
        weibullBetaCBGA : typing.Text = ...,
        weibullBetaCC : typing.Text = ...,
        weibullBetaLCCC : typing.Text = ...,
        weibullBetaLeaded : typing.Text = ...,
        weibullBetaQFN : typing.Text = ...,
        weibullBetaThruHole : typing.Text = ...,
        cgaCalibrationFactor : typing.Text = ...,
        bgaCalibrationFactor : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["activationEnergy",b"activationEnergy","bgaCalibrationFactor",b"bgaCalibrationFactor","ccCalibrationFactor",b"ccCalibrationFactor","cgaCalibrationFactor",b"cgaCalibrationFactor","correctionFactors",b"correctionFactors","createdBy",b"createdBy","criticalDwellTime",b"criticalDwellTime","criticalDwellTimeUnits",b"criticalDwellTimeUnits","criticalMaxTemp",b"criticalMaxTemp","criticalMaxTempUnits",b"criticalMaxTempUnits","criticalStrain",b"criticalStrain","cte",b"cte","cteUnits",b"cteUnits","density",b"density","densityUnits",b"densityUnits","elasticModulus",b"elasticModulus","elasticModulusUnits",b"elasticModulusUnits","feaPower",b"feaPower","leadedCalibrationFactor",b"leadedCalibrationFactor","materialFatigueCoefficient",b"materialFatigueCoefficient","materialFatigueExponent",b"materialFatigueExponent","modifiedBy",b"modifiedBy","poissonRatio",b"poissonRatio","secantFatigueCoefficient",b"secantFatigueCoefficient","secantFatigueExponent",b"secantFatigueExponent","secantModulus",b"secantModulus","secantModulusUnits",b"secantModulusUnits","shockStrain",b"shockStrain","solderName",b"solderName","solderType",b"solderType","strainEnergyCoefficient",b"strainEnergyCoefficient","thermalConductivity",b"thermalConductivity","thermalConductivityUnits",b"thermalConductivityUnits","thermalShockFactorBGA",b"thermalShockFactorBGA","thermalShockFactorCC",b"thermalShockFactorCC","thermalShockFactorDEFAULT",b"thermalShockFactorDEFAULT","thermalShockFactorLCCC",b"thermalShockFactorLCCC","thermalShockFactorLeaded",b"thermalShockFactorLeaded","thermalShockFactorQFN",b"thermalShockFactorQFN","thermalShockFactorThruHole",b"thermalShockFactorThruHole","userNotes",b"userNotes","weibullBetaBGA",b"weibullBetaBGA","weibullBetaCBGA",b"weibullBetaCBGA","weibullBetaCC",b"weibullBetaCC","weibullBetaLCCC",b"weibullBetaLCCC","weibullBetaLeaded",b"weibullBetaLeaded","weibullBetaQFN",b"weibullBetaQFN","weibullBetaThruHole",b"weibullBetaThruHole"]) -> None: ...
global___SolderInfo = SolderInfo

class SolderInfoResponse(google.protobuf.message.Message):
    """*
    Represents a list of valid solder materials.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SOLDERS_FIELD_NUMBER: builtins.int
    @property
    def solders(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SolderInfo]:
        """Solder information."""
        pass
    def __init__(self,
        *,
        solders : typing.Optional[typing.Iterable[global___SolderInfo]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["solders",b"solders"]) -> None: ...
global___SolderInfoResponse = SolderInfoResponse

class SolderInfoRequest(google.protobuf.message.Message):
    """*
    Request for a list of valid solder materials.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___SolderInfoRequest = SolderInfoRequest

class GetSoldersRequest(google.protobuf.message.Message):
    """*
    Request for a list of valid solder materials.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___GetSoldersRequest = GetSoldersRequest

class GetSoldersResponse(google.protobuf.message.Message):
    """*
    Represents a list of valid solder materials.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SOLDERNAME_FIELD_NUMBER: builtins.int
    @property
    def solderName(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of valid solder materials."""
        pass
    def __init__(self,
        *,
        solderName : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["solderName",b"solderName"]) -> None: ...
global___GetSoldersResponse = GetSoldersResponse

class Measurement(google.protobuf.message.Message):
    """*
    Represents a common measurement with a value and a unit.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VALUE_FIELD_NUMBER: builtins.int
    UNITS_FIELD_NUMBER: builtins.int
    value: builtins.float = ...
    """Numerical value of a measurement."""

    units: typing.Text = ...
    """Units of the numerical value."""

    def __init__(self,
        *,
        value : builtins.float = ...,
        units : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["units",b"units","value",b"value"]) -> None: ...
global___Measurement = Measurement

class SherlockInfoRequest(google.protobuf.message.Message):
    """*
    Request to receive Sherlock version and configuration data.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___SherlockInfoRequest = SherlockInfoRequest

class SherlockInfoResponse(google.protobuf.message.Message):
    """
    Represents Sherlock version and configuration data.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RELEASEVERSION_FIELD_NUMBER: builtins.int
    DEFAULTPROJECTDIR_FIELD_NUMBER: builtins.int
    ISSINGLEPROJECTMODE_FIELD_NUMBER: builtins.int
    releaseVersion: typing.Text = ...
    """The current version of Sherlock, formatted as: YYYY R# (Ex. "2025 R1")."""

    defaultProjectDir: typing.Text = ...
    """The project directory currently used by Sherlock."""

    isSingleProjectMode: builtins.bool = ...
    """When true, indicates that Sherlock is in single-project mode. When false, indicates that Sherlock is in multi-project mode."""

    def __init__(self,
        *,
        releaseVersion : typing.Text = ...,
        defaultProjectDir : typing.Text = ...,
        isSingleProjectMode : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["defaultProjectDir",b"defaultProjectDir","isSingleProjectMode",b"isSingleProjectMode","releaseVersion",b"releaseVersion"]) -> None: ...
global___SherlockInfoResponse = SherlockInfoResponse

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.sherlock.v0.SherlockCommonService_pb2
import grpc

class SherlockCommonServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    check: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockCommonService_pb2.HealthCheckRequest,
        ansys.api.sherlock.v0.SherlockCommonService_pb2.HealthCheckResponse] = ...
    """Returns health status of gRPC server."""

    exit: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockCommonService_pb2.ExitRequest,
        ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...
    """Signals for gRPC connection to shutdown."""

    isSherlockClientLoading: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockCommonService_pb2.IsSherlockClientLoadingRequest,
        ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...
    """Check if the Sherlock client is still loading."""

    listUnits: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockCommonService_pb2.ListUnitsRequest,
        ansys.api.sherlock.v0.SherlockCommonService_pb2.ListUnitsResponse] = ...
    """Returns a list of valid units of the provided unit type."""

    getSolders: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockCommonService_pb2.GetSoldersRequest,
        ansys.api.sherlock.v0.SherlockCommonService_pb2.GetSoldersResponse] = ...
    """Returns a list of valid solder materials. This is deprecated as of 25R2."""

    getSolderInfo: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockCommonService_pb2.SolderInfoRequest,
        ansys.api.sherlock.v0.SherlockCommonService_pb2.SolderInfoResponse] = ...
    """Returns a list of valid solder material information."""

    getSherlockInfo: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockCommonService_pb2.SherlockInfoRequest,
        ansys.api.sherlock.v0.SherlockCommonService_pb2.SherlockInfoResponse] = ...
    """Returns meta data about Sherlock."""


class SherlockCommonServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def check(self,
        request: ansys.api.sherlock.v0.SherlockCommonService_pb2.HealthCheckRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.HealthCheckResponse:
        """Returns health status of gRPC server."""
        pass

    @abc.abstractmethod
    def exit(self,
        request: ansys.api.sherlock.v0.SherlockCommonService_pb2.ExitRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Signals for gRPC connection to shutdown."""
        pass

    @abc.abstractmethod
    def isSherlockClientLoading(self,
        request: ansys.api.sherlock.v0.SherlockCommonService_pb2.IsSherlockClientLoadingRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Check if the Sherlock client is still loading."""
        pass

    @abc.abstractmethod
    def listUnits(self,
        request: ansys.api.sherlock.v0.SherlockCommonService_pb2.ListUnitsRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ListUnitsResponse:
        """Returns a list of valid units of the provided unit type."""
        pass

    @abc.abstractmethod
    def getSolders(self,
        request: ansys.api.sherlock.v0.SherlockCommonService_pb2.GetSoldersRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.GetSoldersResponse:
        """Returns a list of valid solder materials. This is deprecated as of 25R2."""
        pass

    @abc.abstractmethod
    def getSolderInfo(self,
        request: ansys.api.sherlock.v0.SherlockCommonService_pb2.SolderInfoRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.SolderInfoResponse:
        """Returns a list of valid solder material information."""
        pass

    @abc.abstractmethod
    def getSherlockInfo(self,
        request: ansys.api.sherlock.v0.SherlockCommonService_pb2.SherlockInfoRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.SherlockInfoResponse:
        """Returns meta data about Sherlock."""
        pass


def add_SherlockCommonServiceServicer_to_server(servicer: SherlockCommonServiceServicer, server: grpc.Server) -> None: ...

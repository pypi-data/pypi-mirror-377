"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import ansys.api.sherlock.v0.SherlockCommonService_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class GetMountPointTypesRequest(google.protobuf.message.Message):
    """*
    Request to list the valid mount point types.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___GetMountPointTypesRequest = GetMountPointTypesRequest

class GetMountPointTypesResponse(google.protobuf.message.Message):
    """*
    Represents a list of valid mount point types.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def type(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Mount Point Type."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        type : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode","type",b"type"]) -> None: ...
global___GetMountPointTypesResponse = GetMountPointTypesResponse

class GetMountPointShapeTypesRequest(google.protobuf.message.Message):
    """*
    Request to list the valid mount point shape types.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MOUNTPOINTTYPE_FIELD_NUMBER: builtins.int
    mountPointType: typing.Text = ...
    """Mount Point Type. Supported values are: Mount Hole, Mount Pad, Standoff, and Support Pin."""

    def __init__(self,
        *,
        mountPointType : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["mountPointType",b"mountPointType"]) -> None: ...
global___GetMountPointShapeTypesRequest = GetMountPointShapeTypesRequest

class GetMountPointShapeTypesResponse(google.protobuf.message.Message):
    """*
    Represents a list of valid mount point shape types.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def type(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Mount Point Shape Type."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        type : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode","type",b"type"]) -> None: ...
global___GetMountPointShapeTypesResponse = GetMountPointShapeTypesResponse

class GetMountPointSidesRequest(google.protobuf.message.Message):
    """*
    Request to list the valid mount point sides.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___GetMountPointSidesRequest = GetMountPointSidesRequest

class GetMountPointSidesResponse(google.protobuf.message.Message):
    """*
    Represents a list of valid mount point sides.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    SIDE_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def side(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Mount Point side."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        side : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode","side",b"side"]) -> None: ...
global___GetMountPointSidesResponse = GetMountPointSidesResponse

class GetMountPointUnitsRequest(google.protobuf.message.Message):
    """*
    Request to list the valid mount point units.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___GetMountPointUnitsRequest = GetMountPointUnitsRequest

class GetMountPointUnitsResponse(google.protobuf.message.Message):
    """*
    Represents a list of valid mount point units.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    UNITS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def units(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Mount Point units."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        units : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode","units",b"units"]) -> None: ...
global___GetMountPointUnitsResponse = GetMountPointUnitsResponse

class GetMountPointBoundariesRequest(google.protobuf.message.Message):
    """*
    Request to list the valid mount point boundaries.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___GetMountPointBoundariesRequest = GetMountPointBoundariesRequest

class GetMountPointBoundariesResponse(google.protobuf.message.Message):
    """*
    Represents a list of valid mount point boundaries.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    BOUNDARY_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def boundary(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Mount Point boundary."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        boundary : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["boundary",b"boundary","returnCode",b"returnCode"]) -> None: ...
global___GetMountPointBoundariesResponse = GetMountPointBoundariesResponse

class GetMountPointChassisMaterialsRequest(google.protobuf.message.Message):
    """*
    Request to list the valid mount point chassis materials.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___GetMountPointChassisMaterialsRequest = GetMountPointChassisMaterialsRequest

class GetMountPointChassisMaterialsResponse(google.protobuf.message.Message):
    """*
    Represents a list of valid mount point chassis materials.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    CHASSISMATERIAL_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def chassisMaterial(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Mount Point chassis material."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        chassisMaterial : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["chassisMaterial",b"chassisMaterial","returnCode",b"returnCode"]) -> None: ...
global___GetMountPointChassisMaterialsResponse = GetMountPointChassisMaterialsResponse

class DeleteAllMountPointsRequest(google.protobuf.message.Message):
    """*
    Request to delete all mount points in specific CCA of specific project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    ccaName: typing.Text = ...
    """The CCA name."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","project",b"project"]) -> None: ...
global___DeleteAllMountPointsRequest = DeleteAllMountPointsRequest

class ExportAllMountPointsRequest(google.protobuf.message.Message):
    """*
    Request to export all mount points and their properties into a CSV formatted file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    UNITS_FIELD_NUMBER: builtins.int
    FILEPATH_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    ccaName: typing.Text = ...
    """The CCA name."""

    units: typing.Text = ...
    """Units used in exporting."""

    filePath: typing.Text = ...
    """The filepath of the CSV file to be exported."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        units : typing.Text = ...,
        filePath : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","filePath",b"filePath","project",b"project","units",b"units"]) -> None: ...
global___ExportAllMountPointsRequest = ExportAllMountPointsRequest

class ExportAllICTFixturesRequest(google.protobuf.message.Message):
    """*
    Request to export all ICT fixtures and their properties into a CSV formatted file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    UNITS_FIELD_NUMBER: builtins.int
    FILEPATH_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    ccaName: typing.Text = ...
    """The CCA name."""

    units: typing.Text = ...
    """Units used in exporting."""

    filePath: typing.Text = ...
    """The filepath of the CSV file to be exported."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        units : typing.Text = ...,
        filePath : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","filePath",b"filePath","project",b"project","units",b"units"]) -> None: ...
global___ExportAllICTFixturesRequest = ExportAllICTFixturesRequest

class GetMountPointsPropertiesRequest(google.protobuf.message.Message):
    """*
    Request to list the valid mount point chassis materials.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    MOUNTPOINTIDS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    ccaName: typing.Text = ...
    """The CCA name."""

    mountPointIDs: typing.Text = ...
    """A comma separated list of mount point id for a list of mount point, or a mount id for one part."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        mountPointIDs : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","mountPointIDs",b"mountPointIDs","project",b"project"]) -> None: ...
global___GetMountPointsPropertiesRequest = GetMountPointsPropertiesRequest

class GetMountPointsPropertiesResponse(google.protobuf.message.Message):
    """*
    Represents a list of valid mount point properties.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    MOUNTPOINTSPROPERTIES_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def mountPointsProperties(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MountPointProperties]:
        """Mount point properties."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        mountPointsProperties : typing.Optional[typing.Iterable[global___MountPointProperties]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["mountPointsProperties",b"mountPointsProperties","returnCode",b"returnCode"]) -> None: ...
global___GetMountPointsPropertiesResponse = GetMountPointsPropertiesResponse

class MountPointProperties(google.protobuf.message.Message):
    """*
    Properties of mount point, the properties may varies from the mount point type and mount point shape.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    SHAPE_FIELD_NUMBER: builtins.int
    UNITS_FIELD_NUMBER: builtins.int
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    LENGTH_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    DIAMETER_FIELD_NUMBER: builtins.int
    NODES_FIELD_NUMBER: builtins.int
    ROTATION_FIELD_NUMBER: builtins.int
    SIDE_FIELD_NUMBER: builtins.int
    HEIGHT_FIELD_NUMBER: builtins.int
    MATERIAL_FIELD_NUMBER: builtins.int
    BOUNDARY_FIELD_NUMBER: builtins.int
    CONSTRAINTS_FIELD_NUMBER: builtins.int
    POLYGON_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    CHASSISMATERIAL_FIELD_NUMBER: builtins.int
    ID: typing.Text = ...
    """Mount point ID."""

    type: typing.Text = ...
    """Mount point type."""

    shape: typing.Text = ...
    """Shape type."""

    units: typing.Text = ...
    """Mount point units."""

    x: typing.Text = ...
    """Center X."""

    y: typing.Text = ...
    """Center Y."""

    length: typing.Text = ...
    """Length."""

    width: typing.Text = ...
    """Width."""

    diameter: typing.Text = ...
    """Diameter."""

    nodes: typing.Text = ...
    """# of nodes."""

    rotation: typing.Text = ...
    """Rotation in degrees."""

    side: typing.Text = ...
    """Mount point side."""

    height: typing.Text = ...
    """Mount point height."""

    material: typing.Text = ...
    """Mount point material."""

    boundary: typing.Text = ...
    """Boundary Pt(s)."""

    constraints: typing.Text = ...
    """FEA constraints."""

    polygon: typing.Text = ...
    """Coordinates of points."""

    state: typing.Text = ...
    """Mount point state."""

    chassisMaterial: typing.Text = ...
    """Chassis material."""

    def __init__(self,
        *,
        ID : typing.Text = ...,
        type : typing.Text = ...,
        shape : typing.Text = ...,
        units : typing.Text = ...,
        x : typing.Text = ...,
        y : typing.Text = ...,
        length : typing.Text = ...,
        width : typing.Text = ...,
        diameter : typing.Text = ...,
        nodes : typing.Text = ...,
        rotation : typing.Text = ...,
        side : typing.Text = ...,
        height : typing.Text = ...,
        material : typing.Text = ...,
        boundary : typing.Text = ...,
        constraints : typing.Text = ...,
        polygon : typing.Text = ...,
        state : typing.Text = ...,
        chassisMaterial : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ID",b"ID","boundary",b"boundary","chassisMaterial",b"chassisMaterial","constraints",b"constraints","diameter",b"diameter","height",b"height","length",b"length","material",b"material","nodes",b"nodes","polygon",b"polygon","rotation",b"rotation","shape",b"shape","side",b"side","state",b"state","type",b"type","units",b"units","width",b"width","x",b"x","y",b"y"]) -> None: ...
global___MountPointProperties = MountPointProperties

class GetICTFixturesPropertiesRequest(google.protobuf.message.Message):
    """*
    Request to list the valid ICT fixture properties.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    ICTFIXTUREIDS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    ccaName: typing.Text = ...
    """The CCA name."""

    ICTFixtureIDs: typing.Text = ...
    """A comma separated list of ICT fixture ids, or an ICT fixture id for one part."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        ICTFixtureIDs : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ICTFixtureIDs",b"ICTFixtureIDs","ccaName",b"ccaName","project",b"project"]) -> None: ...
global___GetICTFixturesPropertiesRequest = GetICTFixturesPropertiesRequest

class GetICTFixturesPropertiesResponse(google.protobuf.message.Message):
    """*
    Represents a list of valid ICT fixture properties.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    ICTFIXTUREPROPERTIES_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def ICTFixtureProperties(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ICTFixtureProperties]:
        """ICT fixture properties."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        ICTFixtureProperties : typing.Optional[typing.Iterable[global___ICTFixtureProperties]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ICTFixtureProperties",b"ICTFixtureProperties","returnCode",b"returnCode"]) -> None: ...
global___GetICTFixturesPropertiesResponse = GetICTFixturesPropertiesResponse

class ICTFixtureProperties(google.protobuf.message.Message):
    """*
    Properties of ICT fixture, the properties may vary depending on the fixture type and fixture shape.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    UNITS_FIELD_NUMBER: builtins.int
    SIDE_FIELD_NUMBER: builtins.int
    HEIGHT_FIELD_NUMBER: builtins.int
    MATERIAL_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    SHAPE_FIELD_NUMBER: builtins.int
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    LENGTH_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    DIAMETER_FIELD_NUMBER: builtins.int
    NODES_FIELD_NUMBER: builtins.int
    ROTATION_FIELD_NUMBER: builtins.int
    POLYGON_FIELD_NUMBER: builtins.int
    BOUNDARY_FIELD_NUMBER: builtins.int
    CONSTRAINTS_FIELD_NUMBER: builtins.int
    CHASSISMATERIAL_FIELD_NUMBER: builtins.int
    ID: typing.Text = ...
    """Fixture ID."""

    type: typing.Text = ...
    """Fixture type."""

    units: typing.Text = ...
    """Fixture units."""

    side: typing.Text = ...
    """Fixture side."""

    height: typing.Text = ...
    """Fixture height."""

    material: typing.Text = ...
    """Fixture material."""

    state: typing.Text = ...
    """Fixture state."""

    shape: typing.Text = ...
    """Shape type."""

    x: typing.Text = ...
    """Center X."""

    y: typing.Text = ...
    """Center Y."""

    length: typing.Text = ...
    """Length."""

    width: typing.Text = ...
    """Width."""

    diameter: typing.Text = ...
    """Circle diameter."""

    nodes: typing.Text = ...
    """# of nodes."""

    rotation: typing.Text = ...
    """Rotation (degrees)."""

    polygon: typing.Text = ...
    """Coordinates of points."""

    boundary: typing.Text = ...
    """Boundary Pt(s)."""

    constraints: typing.Text = ...
    """FEA constraints."""

    chassisMaterial: typing.Text = ...
    """Chassis material."""

    def __init__(self,
        *,
        ID : typing.Text = ...,
        type : typing.Text = ...,
        units : typing.Text = ...,
        side : typing.Text = ...,
        height : typing.Text = ...,
        material : typing.Text = ...,
        state : typing.Text = ...,
        shape : typing.Text = ...,
        x : typing.Text = ...,
        y : typing.Text = ...,
        length : typing.Text = ...,
        width : typing.Text = ...,
        diameter : typing.Text = ...,
        nodes : typing.Text = ...,
        rotation : typing.Text = ...,
        polygon : typing.Text = ...,
        boundary : typing.Text = ...,
        constraints : typing.Text = ...,
        chassisMaterial : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ID",b"ID","boundary",b"boundary","chassisMaterial",b"chassisMaterial","constraints",b"constraints","diameter",b"diameter","height",b"height","length",b"length","material",b"material","nodes",b"nodes","polygon",b"polygon","rotation",b"rotation","shape",b"shape","side",b"side","state",b"state","type",b"type","units",b"units","width",b"width","x",b"x","y",b"y"]) -> None: ...
global___ICTFixtureProperties = ICTFixtureProperties

class UpdateMountPointsByFileRequest(google.protobuf.message.Message):
    """*
    Request to update mount points properties of a CCA from a CSV formatted file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    FILEPATH_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    ccaName: typing.Text = ...
    """The CCA name."""

    filePath: typing.Text = ...
    """The filepath of the CSV file containing the mount points properties."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        filePath : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","filePath",b"filePath","project",b"project"]) -> None: ...
global___UpdateMountPointsByFileRequest = UpdateMountPointsByFileRequest

class UpdateMountPointsRequest(google.protobuf.message.Message):
    """*
    Request to update mount points properties of a CCA from input parameters.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    MOUNTPOINTSPROPERTIES_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    ccaName: typing.Text = ...
    """The CCA name."""

    @property
    def mountPointsProperties(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MountPointProperties]:
        """Mount point properties."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        mountPointsProperties : typing.Optional[typing.Iterable[global___MountPointProperties]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","mountPointsProperties",b"mountPointsProperties","project",b"project"]) -> None: ...
global___UpdateMountPointsRequest = UpdateMountPointsRequest

class UpdateMountPointsResponse(google.protobuf.message.Message):
    """*
    Contains the status of the update as well as all the update error messages.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    UPDATEERROR_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def updateError(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Mount Points update error messages."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        updateError : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode","updateError",b"updateError"]) -> None: ...
global___UpdateMountPointsResponse = UpdateMountPointsResponse

class DeleteAllICTFixturesRequest(google.protobuf.message.Message):
    """*
    Request to delete all ICT fixtures in specific CCA of specific project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    ccaName: typing.Text = ...
    """The CCA name."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","project",b"project"]) -> None: ...
global___DeleteAllICTFixturesRequest = DeleteAllICTFixturesRequest

class DeleteAllTestPointsRequest(google.protobuf.message.Message):
    """*
    Request to delete all ICT fixtures in specific CCA of specific project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    ccaName: typing.Text = ...
    """The CCA name."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","project",b"project"]) -> None: ...
global___DeleteAllTestPointsRequest = DeleteAllTestPointsRequest

class UpdateICTFixturesByFileRequest(google.protobuf.message.Message):
    """*
    Request to update ICT fixtures properties of a CCA from a CSV formatted file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    FILEPATH_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    ccaName: typing.Text = ...
    """The CCA name."""

    filePath: typing.Text = ...
    """The filepath of the CSV file containing the ICT fixtures properties."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        filePath : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","filePath",b"filePath","project",b"project"]) -> None: ...
global___UpdateICTFixturesByFileRequest = UpdateICTFixturesByFileRequest

class UpdateICTFixturesRequest(google.protobuf.message.Message):
    """*
    Request to update ICT fixtures properties of a CCA from input parameters.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    ICTFIXTUREPROPERTIES_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    ccaName: typing.Text = ...
    """The CCA name."""

    @property
    def ICTFixtureProperties(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ICTFixtureProperties]:
        """ICT Fixture properties."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        ICTFixtureProperties : typing.Optional[typing.Iterable[global___ICTFixtureProperties]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ICTFixtureProperties",b"ICTFixtureProperties","ccaName",b"ccaName","project",b"project"]) -> None: ...
global___UpdateICTFixturesRequest = UpdateICTFixturesRequest

class UpdateICTFixturesResponse(google.protobuf.message.Message):
    """*
    Contains the status of the update as well as all the update error messages.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    UPDATEERROR_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def updateError(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """ICT fixtures update error messages."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        updateError : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode","updateError",b"updateError"]) -> None: ...
global___UpdateICTFixturesResponse = UpdateICTFixturesResponse

class ExportAllTestPointsRequest(google.protobuf.message.Message):
    """*
    Request to export all test points and their properties into a CSV formatted file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    LENGTHUNITS_FIELD_NUMBER: builtins.int
    DISPLACEMENTUNITS_FIELD_NUMBER: builtins.int
    FORCEUNITS_FIELD_NUMBER: builtins.int
    FILEPATH_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    ccaName: typing.Text = ...
    """The CCA name."""

    lengthUnits: typing.Text = ...
    """Length Units used in exporting."""

    displacementUnits: typing.Text = ...
    """Displacement Units used in exporting."""

    forceUnits: typing.Text = ...
    """Force Units used in exporting."""

    filePath: typing.Text = ...
    """The filepath of the CSV file to be exported."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        lengthUnits : typing.Text = ...,
        displacementUnits : typing.Text = ...,
        forceUnits : typing.Text = ...,
        filePath : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","displacementUnits",b"displacementUnits","filePath",b"filePath","forceUnits",b"forceUnits","lengthUnits",b"lengthUnits","project",b"project"]) -> None: ...
global___ExportAllTestPointsRequest = ExportAllTestPointsRequest

class UpdateTestPointsByFileRequest(google.protobuf.message.Message):
    """*
    Request to update test points properties of a CCA from a CSV formatted file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    FILEPATH_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    ccaName: typing.Text = ...
    """The CCA name."""

    filePath: typing.Text = ...
    """The filepath of the CSV file containing the test points properties."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        filePath : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","filePath",b"filePath","project",b"project"]) -> None: ...
global___UpdateTestPointsByFileRequest = UpdateTestPointsByFileRequest

class UpdateTestPointsRequest(google.protobuf.message.Message):
    """*
    Request to update test points properties of a CCA from input parameters.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    TESTPOINTPROPERTIES_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    ccaName: typing.Text = ...
    """The CCA name."""

    @property
    def testPointProperties(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TestPointProperties]:
        """List of data needed to update each test point."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        testPointProperties : typing.Optional[typing.Iterable[global___TestPointProperties]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","project",b"project","testPointProperties",b"testPointProperties"]) -> None: ...
global___UpdateTestPointsRequest = UpdateTestPointsRequest

class UpdateTestPointsResponse(google.protobuf.message.Message):
    """*
    Contains the status of the update as well as all the update error messages.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    UPDATEERROR_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def updateError(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Test Points update error messages."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        updateError : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode","updateError",b"updateError"]) -> None: ...
global___UpdateTestPointsResponse = UpdateTestPointsResponse

class GetTestPointPropertiesRequest(google.protobuf.message.Message):
    """*
    Request to return the properties for each test point given a comma-separated list of test point ids.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    TESTPOINTIDS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    ccaName: typing.Text = ...
    """The CCA name."""

    testPointIDs: typing.Text = ...
    """A comma-separated list of test point ids representing one or more test points. If a list is not included then the entire list of test points for a given CCA will have their properties returned."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        testPointIDs : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_testPointIDs",b"_testPointIDs","testPointIDs",b"testPointIDs"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_testPointIDs",b"_testPointIDs","ccaName",b"ccaName","project",b"project","testPointIDs",b"testPointIDs"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_testPointIDs",b"_testPointIDs"]) -> typing.Optional[typing_extensions.Literal["testPointIDs"]]: ...
global___GetTestPointPropertiesRequest = GetTestPointPropertiesRequest

class GetTestPointPropertiesResponse(google.protobuf.message.Message):
    """*
    Represents the test point properties for a specific test point id.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    TESTPOINTPROPERTIES_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def testPointProperties(self) -> global___TestPointProperties:
        """The test point properties for a given test point id."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        testPointProperties : typing.Optional[global___TestPointProperties] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode","testPointProperties",b"testPointProperties"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode","testPointProperties",b"testPointProperties"]) -> None: ...
global___GetTestPointPropertiesResponse = GetTestPointPropertiesResponse

class TestPointProperties(google.protobuf.message.Message):
    """*
    Properties of a test point.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _LoadType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LoadTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LoadType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        Force: TestPointProperties.LoadType.ValueType = ...  # 0
        """Numeric load value and associated units represents force."""

        Displacement: TestPointProperties.LoadType.ValueType = ...  # 1
        """Numeric load value and associated units represents displacement."""

    class LoadType(_LoadType, metaclass=_LoadTypeEnumTypeWrapper):
        pass

    Force: TestPointProperties.LoadType.ValueType = ...  # 0
    """Numeric load value and associated units represents force."""

    Displacement: TestPointProperties.LoadType.ValueType = ...  # 1
    """Numeric load value and associated units represents displacement."""


    ID_FIELD_NUMBER: builtins.int
    SIDE_FIELD_NUMBER: builtins.int
    UNITS_FIELD_NUMBER: builtins.int
    CENTERX_FIELD_NUMBER: builtins.int
    CENTERY_FIELD_NUMBER: builtins.int
    RADIUS_FIELD_NUMBER: builtins.int
    LOADTYPE_FIELD_NUMBER: builtins.int
    LOADVALUE_FIELD_NUMBER: builtins.int
    LOADUNITS_FIELD_NUMBER: builtins.int
    ID: typing.Text = ...
    """Test point ID."""

    side: typing.Text = ...
    """Test point side, i.e., Top or Bottom."""

    units: typing.Text = ...
    """Test point units."""

    centerX: builtins.float = ...
    """Center X."""

    centerY: builtins.float = ...
    """Center Y."""

    radius: builtins.float = ...
    """Radius."""

    loadType: global___TestPointProperties.LoadType.ValueType = ...
    """Load Type enum with acceptable values being either Force or Displacement."""

    loadValue: builtins.float = ...
    """Load value."""

    loadUnits: typing.Text = ...
    """Load units."""

    def __init__(self,
        *,
        ID : typing.Text = ...,
        side : typing.Text = ...,
        units : typing.Text = ...,
        centerX : builtins.float = ...,
        centerY : builtins.float = ...,
        radius : builtins.float = ...,
        loadType : global___TestPointProperties.LoadType.ValueType = ...,
        loadValue : builtins.float = ...,
        loadUnits : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ID",b"ID","centerX",b"centerX","centerY",b"centerY","loadType",b"loadType","loadUnits",b"loadUnits","loadValue",b"loadValue","radius",b"radius","side",b"side","units",b"units"]) -> None: ...
global___TestPointProperties = TestPointProperties

class PolygonalShape(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Point(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        X_FIELD_NUMBER: builtins.int
        Y_FIELD_NUMBER: builtins.int
        x: builtins.float = ...
        """The x coordinate of the point."""

        y: builtins.float = ...
        """The y coordinate of the point."""

        def __init__(self,
            *,
            x : builtins.float = ...,
            y : builtins.float = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["x",b"x","y",b"y"]) -> None: ...

    POINTS_FIELD_NUMBER: builtins.int
    ROTATION_FIELD_NUMBER: builtins.int
    @property
    def points(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PolygonalShape.Point]:
        """The points used to define the polygonal shape, must be >= 3."""
        pass
    rotation: builtins.float = ...
    """The rotation of the shape in degrees."""

    def __init__(self,
        *,
        points : typing.Optional[typing.Iterable[global___PolygonalShape.Point]] = ...,
        rotation : typing.Optional[builtins.float] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_rotation",b"_rotation","rotation",b"rotation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_rotation",b"_rotation","points",b"points","rotation",b"rotation"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_rotation",b"_rotation"]) -> typing.Optional[typing_extensions.Literal["rotation"]]: ...
global___PolygonalShape = PolygonalShape

class RectangularShape(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LENGTH_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    CENTERX_FIELD_NUMBER: builtins.int
    CENTERY_FIELD_NUMBER: builtins.int
    ROTATION_FIELD_NUMBER: builtins.int
    length: builtins.float = ...
    """The length of the rectangle."""

    width: builtins.float = ...
    """The width of the rectangle."""

    centerX: builtins.float = ...
    """The x coordinate of the center of the rectangle."""

    centerY: builtins.float = ...
    """The y coordinate of the center of the rectangle."""

    rotation: builtins.float = ...
    """The rotation of the rectangle in degrees."""

    def __init__(self,
        *,
        length : typing.Optional[builtins.float] = ...,
        width : typing.Optional[builtins.float] = ...,
        centerX : typing.Optional[builtins.float] = ...,
        centerY : typing.Optional[builtins.float] = ...,
        rotation : typing.Optional[builtins.float] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_centerX",b"_centerX","_centerY",b"_centerY","_length",b"_length","_rotation",b"_rotation","_width",b"_width","centerX",b"centerX","centerY",b"centerY","length",b"length","rotation",b"rotation","width",b"width"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_centerX",b"_centerX","_centerY",b"_centerY","_length",b"_length","_rotation",b"_rotation","_width",b"_width","centerX",b"centerX","centerY",b"centerY","length",b"length","rotation",b"rotation","width",b"width"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_centerX",b"_centerX"]) -> typing.Optional[typing_extensions.Literal["centerX"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_centerY",b"_centerY"]) -> typing.Optional[typing_extensions.Literal["centerY"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_length",b"_length"]) -> typing.Optional[typing_extensions.Literal["length"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_rotation",b"_rotation"]) -> typing.Optional[typing_extensions.Literal["rotation"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_width",b"_width"]) -> typing.Optional[typing_extensions.Literal["width"]]: ...
global___RectangularShape = RectangularShape

class SlotShape(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LENGTH_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    NODECOUNT_FIELD_NUMBER: builtins.int
    CENTERX_FIELD_NUMBER: builtins.int
    CENTERY_FIELD_NUMBER: builtins.int
    ROTATION_FIELD_NUMBER: builtins.int
    length: builtins.float = ...
    """The length of the slot shape."""

    width: builtins.float = ...
    """The width of the slot shape."""

    nodeCount: builtins.int = ...
    """The number of nodes."""

    centerX: builtins.float = ...
    """The x coordinate of the center of the slot shape."""

    centerY: builtins.float = ...
    """The x coordinate of the center of the slot shape."""

    rotation: builtins.float = ...
    """The rotation of the shape in degrees."""

    def __init__(self,
        *,
        length : typing.Optional[builtins.float] = ...,
        width : typing.Optional[builtins.float] = ...,
        nodeCount : typing.Optional[builtins.int] = ...,
        centerX : typing.Optional[builtins.float] = ...,
        centerY : typing.Optional[builtins.float] = ...,
        rotation : typing.Optional[builtins.float] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_centerX",b"_centerX","_centerY",b"_centerY","_length",b"_length","_nodeCount",b"_nodeCount","_rotation",b"_rotation","_width",b"_width","centerX",b"centerX","centerY",b"centerY","length",b"length","nodeCount",b"nodeCount","rotation",b"rotation","width",b"width"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_centerX",b"_centerX","_centerY",b"_centerY","_length",b"_length","_nodeCount",b"_nodeCount","_rotation",b"_rotation","_width",b"_width","centerX",b"centerX","centerY",b"centerY","length",b"length","nodeCount",b"nodeCount","rotation",b"rotation","width",b"width"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_centerX",b"_centerX"]) -> typing.Optional[typing_extensions.Literal["centerX"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_centerY",b"_centerY"]) -> typing.Optional[typing_extensions.Literal["centerY"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_length",b"_length"]) -> typing.Optional[typing_extensions.Literal["length"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_nodeCount",b"_nodeCount"]) -> typing.Optional[typing_extensions.Literal["nodeCount"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_rotation",b"_rotation"]) -> typing.Optional[typing_extensions.Literal["rotation"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_width",b"_width"]) -> typing.Optional[typing_extensions.Literal["width"]]: ...
global___SlotShape = SlotShape

class CircularShape(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DIAMETER_FIELD_NUMBER: builtins.int
    NODECOUNT_FIELD_NUMBER: builtins.int
    CENTERX_FIELD_NUMBER: builtins.int
    CENTERY_FIELD_NUMBER: builtins.int
    ROTATION_FIELD_NUMBER: builtins.int
    diameter: builtins.float = ...
    """The diameter of the circle."""

    nodeCount: builtins.int = ...
    """The number of nodes."""

    centerX: builtins.float = ...
    """The x coordinate of the center of the circle."""

    centerY: builtins.float = ...
    """The x coordinate of the center of the circle."""

    rotation: builtins.float = ...
    """The rotation of the shape in degrees."""

    def __init__(self,
        *,
        diameter : typing.Optional[builtins.float] = ...,
        nodeCount : typing.Optional[builtins.int] = ...,
        centerX : typing.Optional[builtins.float] = ...,
        centerY : typing.Optional[builtins.float] = ...,
        rotation : typing.Optional[builtins.float] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_centerX",b"_centerX","_centerY",b"_centerY","_diameter",b"_diameter","_nodeCount",b"_nodeCount","_rotation",b"_rotation","centerX",b"centerX","centerY",b"centerY","diameter",b"diameter","nodeCount",b"nodeCount","rotation",b"rotation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_centerX",b"_centerX","_centerY",b"_centerY","_diameter",b"_diameter","_nodeCount",b"_nodeCount","_rotation",b"_rotation","centerX",b"centerX","centerY",b"centerY","diameter",b"diameter","nodeCount",b"nodeCount","rotation",b"rotation"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_centerX",b"_centerX"]) -> typing.Optional[typing_extensions.Literal["centerX"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_centerY",b"_centerY"]) -> typing.Optional[typing_extensions.Literal["centerY"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_diameter",b"_diameter"]) -> typing.Optional[typing_extensions.Literal["diameter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_nodeCount",b"_nodeCount"]) -> typing.Optional[typing_extensions.Literal["nodeCount"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_rotation",b"_rotation"]) -> typing.Optional[typing_extensions.Literal["rotation"]]: ...
global___CircularShape = CircularShape

class PCBShape(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___PCBShape = PCBShape

class PottingRegion(google.protobuf.message.Message):
    """*
    Data that fully describes a potting region.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CCANAME_FIELD_NUMBER: builtins.int
    POTTINGID_FIELD_NUMBER: builtins.int
    POTTINGSIDE_FIELD_NUMBER: builtins.int
    POTTINGMATERIAL_FIELD_NUMBER: builtins.int
    POTTINGUNITS_FIELD_NUMBER: builtins.int
    POTTINGTHICKNESS_FIELD_NUMBER: builtins.int
    POTTINGSTANDOFF_FIELD_NUMBER: builtins.int
    POLYGONALSHAPE_FIELD_NUMBER: builtins.int
    RECTANGULARSHAPE_FIELD_NUMBER: builtins.int
    SLOTSHAPE_FIELD_NUMBER: builtins.int
    CIRCULARSHAPE_FIELD_NUMBER: builtins.int
    PCBSHAPE_FIELD_NUMBER: builtins.int
    ccaName: typing.Text = ...
    """The name of the CCA."""

    pottingID: typing.Text = ...
    """The potting ID."""

    pottingSide: typing.Text = ...
    """The potting side, options are "TOP", "BOT", or "BOTTOM"."""

    pottingMaterial: typing.Text = ...
    """The potting material."""

    pottingUnits: typing.Text = ...
    """The units to use for the potting region."""

    pottingThickness: builtins.float = ...
    """The potting thickness."""

    pottingStandoff: builtins.float = ...
    """The potting standoff."""

    @property
    def polygonalShape(self) -> global___PolygonalShape:
        """Used to add a region with a polygonal shape."""
        pass
    @property
    def rectangularShape(self) -> global___RectangularShape:
        """Used to add a region with a rectangular shape."""
        pass
    @property
    def slotShape(self) -> global___SlotShape:
        """Used to add a region with a slot shape."""
        pass
    @property
    def circularShape(self) -> global___CircularShape:
        """Used to add a region with a circular shape."""
        pass
    @property
    def pCBShape(self) -> global___PCBShape:
        """Used to add a region with a PCB shape."""
        pass
    def __init__(self,
        *,
        ccaName : typing.Text = ...,
        pottingID : typing.Optional[typing.Text] = ...,
        pottingSide : typing.Optional[typing.Text] = ...,
        pottingMaterial : typing.Optional[typing.Text] = ...,
        pottingUnits : typing.Optional[typing.Text] = ...,
        pottingThickness : typing.Optional[builtins.float] = ...,
        pottingStandoff : typing.Optional[builtins.float] = ...,
        polygonalShape : typing.Optional[global___PolygonalShape] = ...,
        rectangularShape : typing.Optional[global___RectangularShape] = ...,
        slotShape : typing.Optional[global___SlotShape] = ...,
        circularShape : typing.Optional[global___CircularShape] = ...,
        pCBShape : typing.Optional[global___PCBShape] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["Shape",b"Shape","_pottingID",b"_pottingID","_pottingMaterial",b"_pottingMaterial","_pottingSide",b"_pottingSide","_pottingStandoff",b"_pottingStandoff","_pottingThickness",b"_pottingThickness","_pottingUnits",b"_pottingUnits","circularShape",b"circularShape","pCBShape",b"pCBShape","polygonalShape",b"polygonalShape","pottingID",b"pottingID","pottingMaterial",b"pottingMaterial","pottingSide",b"pottingSide","pottingStandoff",b"pottingStandoff","pottingThickness",b"pottingThickness","pottingUnits",b"pottingUnits","rectangularShape",b"rectangularShape","slotShape",b"slotShape"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["Shape",b"Shape","_pottingID",b"_pottingID","_pottingMaterial",b"_pottingMaterial","_pottingSide",b"_pottingSide","_pottingStandoff",b"_pottingStandoff","_pottingThickness",b"_pottingThickness","_pottingUnits",b"_pottingUnits","ccaName",b"ccaName","circularShape",b"circularShape","pCBShape",b"pCBShape","polygonalShape",b"polygonalShape","pottingID",b"pottingID","pottingMaterial",b"pottingMaterial","pottingSide",b"pottingSide","pottingStandoff",b"pottingStandoff","pottingThickness",b"pottingThickness","pottingUnits",b"pottingUnits","rectangularShape",b"rectangularShape","slotShape",b"slotShape"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["Shape",b"Shape"]) -> typing.Optional[typing_extensions.Literal["polygonalShape","rectangularShape","slotShape","circularShape","pCBShape"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_pottingID",b"_pottingID"]) -> typing.Optional[typing_extensions.Literal["pottingID"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_pottingMaterial",b"_pottingMaterial"]) -> typing.Optional[typing_extensions.Literal["pottingMaterial"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_pottingSide",b"_pottingSide"]) -> typing.Optional[typing_extensions.Literal["pottingSide"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_pottingStandoff",b"_pottingStandoff"]) -> typing.Optional[typing_extensions.Literal["pottingStandoff"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_pottingThickness",b"_pottingThickness"]) -> typing.Optional[typing_extensions.Literal["pottingThickness"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_pottingUnits",b"_pottingUnits"]) -> typing.Optional[typing_extensions.Literal["pottingUnits"]]: ...
global___PottingRegion = PottingRegion

class AddPottingRegionRequest(google.protobuf.message.Message):
    """*
    Request to add a potting region.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class PottingRegion(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CCANAME_FIELD_NUMBER: builtins.int
        POTTINGID_FIELD_NUMBER: builtins.int
        POTTINGSIDE_FIELD_NUMBER: builtins.int
        POTTINGMATERIAL_FIELD_NUMBER: builtins.int
        POTTINGUNITS_FIELD_NUMBER: builtins.int
        POTTINGTHICKNESS_FIELD_NUMBER: builtins.int
        POTTINGSTANDOFF_FIELD_NUMBER: builtins.int
        POLYGONALSHAPE_FIELD_NUMBER: builtins.int
        RECTANGULARSHAPE_FIELD_NUMBER: builtins.int
        SLOTSHAPE_FIELD_NUMBER: builtins.int
        CIRCULARSHAPE_FIELD_NUMBER: builtins.int
        PCBSHAPE_FIELD_NUMBER: builtins.int
        ccaName: typing.Text = ...
        """The name of the CCA."""

        pottingID: typing.Text = ...
        """The potting ID."""

        pottingSide: typing.Text = ...
        """The potting side, options are "TOP", "BOT", or "BOTTOM"."""

        pottingMaterial: typing.Text = ...
        """The potting material."""

        pottingUnits: typing.Text = ...
        """The units to use for the potting region."""

        pottingThickness: builtins.float = ...
        """The potting thickness."""

        pottingStandoff: builtins.float = ...
        """The potting standoff."""

        @property
        def polygonalShape(self) -> global___PolygonalShape:
            """Used to add a region with a polygonal shape."""
            pass
        @property
        def rectangularShape(self) -> global___RectangularShape:
            """Used to add a region with a rectangular shape."""
            pass
        @property
        def slotShape(self) -> global___SlotShape:
            """Used to add a region with a slot shape."""
            pass
        @property
        def circularShape(self) -> global___CircularShape:
            """Used to add a region with a circular shape."""
            pass
        @property
        def pCBShape(self) -> global___PCBShape:
            """Used to add a region with a PCB shape."""
            pass
        def __init__(self,
            *,
            ccaName : typing.Text = ...,
            pottingID : typing.Optional[typing.Text] = ...,
            pottingSide : typing.Optional[typing.Text] = ...,
            pottingMaterial : typing.Optional[typing.Text] = ...,
            pottingUnits : typing.Optional[typing.Text] = ...,
            pottingThickness : typing.Optional[builtins.float] = ...,
            pottingStandoff : typing.Optional[builtins.float] = ...,
            polygonalShape : typing.Optional[global___PolygonalShape] = ...,
            rectangularShape : typing.Optional[global___RectangularShape] = ...,
            slotShape : typing.Optional[global___SlotShape] = ...,
            circularShape : typing.Optional[global___CircularShape] = ...,
            pCBShape : typing.Optional[global___PCBShape] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["Shape",b"Shape","_pottingID",b"_pottingID","_pottingMaterial",b"_pottingMaterial","_pottingSide",b"_pottingSide","_pottingStandoff",b"_pottingStandoff","_pottingThickness",b"_pottingThickness","_pottingUnits",b"_pottingUnits","circularShape",b"circularShape","pCBShape",b"pCBShape","polygonalShape",b"polygonalShape","pottingID",b"pottingID","pottingMaterial",b"pottingMaterial","pottingSide",b"pottingSide","pottingStandoff",b"pottingStandoff","pottingThickness",b"pottingThickness","pottingUnits",b"pottingUnits","rectangularShape",b"rectangularShape","slotShape",b"slotShape"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["Shape",b"Shape","_pottingID",b"_pottingID","_pottingMaterial",b"_pottingMaterial","_pottingSide",b"_pottingSide","_pottingStandoff",b"_pottingStandoff","_pottingThickness",b"_pottingThickness","_pottingUnits",b"_pottingUnits","ccaName",b"ccaName","circularShape",b"circularShape","pCBShape",b"pCBShape","polygonalShape",b"polygonalShape","pottingID",b"pottingID","pottingMaterial",b"pottingMaterial","pottingSide",b"pottingSide","pottingStandoff",b"pottingStandoff","pottingThickness",b"pottingThickness","pottingUnits",b"pottingUnits","rectangularShape",b"rectangularShape","slotShape",b"slotShape"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["Shape",b"Shape"]) -> typing.Optional[typing_extensions.Literal["polygonalShape","rectangularShape","slotShape","circularShape","pCBShape"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_pottingID",b"_pottingID"]) -> typing.Optional[typing_extensions.Literal["pottingID"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_pottingMaterial",b"_pottingMaterial"]) -> typing.Optional[typing_extensions.Literal["pottingMaterial"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_pottingSide",b"_pottingSide"]) -> typing.Optional[typing_extensions.Literal["pottingSide"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_pottingStandoff",b"_pottingStandoff"]) -> typing.Optional[typing_extensions.Literal["pottingStandoff"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_pottingThickness",b"_pottingThickness"]) -> typing.Optional[typing_extensions.Literal["pottingThickness"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_pottingUnits",b"_pottingUnits"]) -> typing.Optional[typing_extensions.Literal["pottingUnits"]]: ...

    PROJECT_FIELD_NUMBER: builtins.int
    POTTINGREGIONS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """The name of the Sherlock project to add the potting regions to."""

    @property
    def pottingRegions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AddPottingRegionRequest.PottingRegion]:
        """The potting regions to add."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        pottingRegions : typing.Optional[typing.Iterable[global___AddPottingRegionRequest.PottingRegion]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["pottingRegions",b"pottingRegions","project",b"project"]) -> None: ...
global___AddPottingRegionRequest = AddPottingRegionRequest

class UpdatePottingRegionRequest(google.protobuf.message.Message):
    """*
    Request to update 1 or more potting regions in a single CCA.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class PottingRegionUpdateData(google.protobuf.message.Message):
        """*
        Potting region data used to describe a single potting region and identify which one should be updated.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        POTTINGREGIONIDTOUPDATE_FIELD_NUMBER: builtins.int
        POTTINGREGION_FIELD_NUMBER: builtins.int
        pottingRegionIDToUpdate: typing.Text = ...
        """Data that uniquely identifies the potting region being updated."""

        @property
        def pottingRegion(self) -> global___PottingRegion:
            """Data that describes a potting region."""
            pass
        def __init__(self,
            *,
            pottingRegionIDToUpdate : typing.Text = ...,
            pottingRegion : typing.Optional[global___PottingRegion] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["pottingRegion",b"pottingRegion"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["pottingRegion",b"pottingRegion","pottingRegionIDToUpdate",b"pottingRegionIDToUpdate"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    UPDATEPOTTINGREGIONS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """The name of the Sherlock project that contains the potting region(s) to update."""

    @property
    def updatePottingRegions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UpdatePottingRegionRequest.PottingRegionUpdateData]:
        """List of data needed to update each potting region."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        updatePottingRegions : typing.Optional[typing.Iterable[global___UpdatePottingRegionRequest.PottingRegionUpdateData]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","updatePottingRegions",b"updatePottingRegions"]) -> None: ...
global___UpdatePottingRegionRequest = UpdatePottingRegionRequest

class DeletePottingRegionRequest(google.protobuf.message.Message):
    """*
    Request to delete 1 or more potting regions.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class PottingRegionDeleteData(google.protobuf.message.Message):
        """*
        Potting region data used to identify a single pre-existing potting region which should be deleted.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CCANAME_FIELD_NUMBER: builtins.int
        POTTINGID_FIELD_NUMBER: builtins.int
        ccaName: typing.Text = ...
        """The name of the CCA."""

        pottingID: typing.Text = ...
        """The potting ID."""

        def __init__(self,
            *,
            ccaName : typing.Text = ...,
            pottingID : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","pottingID",b"pottingID"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    POTTINGREGIONDELETEDATA_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """The name of the Sherlock project that contains the potting region(s) to delete."""

    @property
    def pottingRegionDeleteData(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DeletePottingRegionRequest.PottingRegionDeleteData]:
        """List of information needed to delete a specific Potting Region."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        pottingRegionDeleteData : typing.Optional[typing.Iterable[global___DeletePottingRegionRequest.PottingRegionDeleteData]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["pottingRegionDeleteData",b"pottingRegionDeleteData","project",b"project"]) -> None: ...
global___DeletePottingRegionRequest = DeletePottingRegionRequest

class CopyPottingRegionRequest(google.protobuf.message.Message):
    """*
    Request to copy 1 or more potting regions.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class PottingRegionCopyData(google.protobuf.message.Message):
        """*
        Potting region data used to identify a single pre-existing potting region which should be copied.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CCANAME_FIELD_NUMBER: builtins.int
        POTTINGID_FIELD_NUMBER: builtins.int
        COPYPOTTINGID_FIELD_NUMBER: builtins.int
        CENTERX_FIELD_NUMBER: builtins.int
        CENTERY_FIELD_NUMBER: builtins.int
        ccaName: typing.Text = ...
        """The name of the CCA."""

        pottingID: typing.Text = ...
        """The potting ID to copy from."""

        copyPottingID: typing.Text = ...
        """The potting ID to be used for the new copy."""

        centerX: builtins.float = ...
        """The x coordinate for the center of the copied potting region."""

        centerY: builtins.float = ...
        """The y coordinate for the center of the copied potting region."""

        def __init__(self,
            *,
            ccaName : typing.Text = ...,
            pottingID : typing.Text = ...,
            copyPottingID : typing.Text = ...,
            centerX : typing.Optional[builtins.float] = ...,
            centerY : typing.Optional[builtins.float] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_centerX",b"_centerX","_centerY",b"_centerY","centerX",b"centerX","centerY",b"centerY"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_centerX",b"_centerX","_centerY",b"_centerY","ccaName",b"ccaName","centerX",b"centerX","centerY",b"centerY","copyPottingID",b"copyPottingID","pottingID",b"pottingID"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_centerX",b"_centerX"]) -> typing.Optional[typing_extensions.Literal["centerX"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_centerY",b"_centerY"]) -> typing.Optional[typing_extensions.Literal["centerY"]]: ...

    PROJECT_FIELD_NUMBER: builtins.int
    POTTINGREGIONCOPYDATA_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """The name of the Sherlock project that contains the potting region(s) to copy."""

    @property
    def pottingRegionCopyData(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CopyPottingRegionRequest.PottingRegionCopyData]:
        """List of information needed to copy a specific Potting Region."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        pottingRegionCopyData : typing.Optional[typing.Iterable[global___CopyPottingRegionRequest.PottingRegionCopyData]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["pottingRegionCopyData",b"pottingRegionCopyData","project",b"project"]) -> None: ...
global___CopyPottingRegionRequest = CopyPottingRegionRequest

class ModelingRegion(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ModelingMode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ModelingModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ModelingMode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        Enabled: ModelingRegion.ModelingMode.ValueType = ...  # 0
        """Use the modeling region."""

        Disabled: ModelingRegion.ModelingMode.ValueType = ...  # 1
        """Ignore the modeling region."""

        Excluded: ModelingRegion.ModelingMode.ValueType = ...  # 2
        """Don't generate any elements for the region."""

    class ModelingMode(_ModelingMode, metaclass=_ModelingModeEnumTypeWrapper):
        pass

    Enabled: ModelingRegion.ModelingMode.ValueType = ...  # 0
    """Use the modeling region."""

    Disabled: ModelingRegion.ModelingMode.ValueType = ...  # 1
    """Ignore the modeling region."""

    Excluded: ModelingRegion.ModelingMode.ValueType = ...  # 2
    """Don't generate any elements for the region."""


    class _ElementOrder:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ElementOrderEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ElementOrder.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        First_Order: ModelingRegion.ElementOrder.ValueType = ...  # 0
        """First order (Linear) 3D elements should be created for the PCB in the modeling region."""

        Second_Order: ModelingRegion.ElementOrder.ValueType = ...  # 1
        """Second order (Quadratic) 3D elements should be created for the PCB in the modeling region."""

        Solid_Shell: ModelingRegion.ElementOrder.ValueType = ...  # 2
        """Used for relatively flat elements, like those found in a PCB layer to reduce modeling generation time."""

    class ElementOrder(_ElementOrder, metaclass=_ElementOrderEnumTypeWrapper):
        pass

    First_Order: ModelingRegion.ElementOrder.ValueType = ...  # 0
    """First order (Linear) 3D elements should be created for the PCB in the modeling region."""

    Second_Order: ModelingRegion.ElementOrder.ValueType = ...  # 1
    """Second order (Quadratic) 3D elements should be created for the PCB in the modeling region."""

    Solid_Shell: ModelingRegion.ElementOrder.ValueType = ...  # 2
    """Used for relatively flat elements, like those found in a PCB layer to reduce modeling generation time."""


    class PCBModelingProperties(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _ExportModelType:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _ExportModelTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ExportModelType.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            Default: ModelingRegion.PCBModelingProperties.ExportModelType.ValueType = ...  # 0
            """Region type is based on the Mesh Type property defined in the PCB Modeling tab in the FEA Model Export dialog."""

            Sherlock: ModelingRegion.PCBModelingProperties.ExportModelType.ValueType = ...  # 1
            """Use mesh elements generated by Sherlock to model the region."""

            Sweep: ModelingRegion.PCBModelingProperties.ExportModelType.ValueType = ...  # 2
            """Use mesh elements generated by the FEA tool to model the region."""

        class ExportModelType(_ExportModelType, metaclass=_ExportModelTypeEnumTypeWrapper):
            pass

        Default: ModelingRegion.PCBModelingProperties.ExportModelType.ValueType = ...  # 0
        """Region type is based on the Mesh Type property defined in the PCB Modeling tab in the FEA Model Export dialog."""

        Sherlock: ModelingRegion.PCBModelingProperties.ExportModelType.ValueType = ...  # 1
        """Use mesh elements generated by Sherlock to model the region."""

        Sweep: ModelingRegion.PCBModelingProperties.ExportModelType.ValueType = ...  # 2
        """Use mesh elements generated by the FEA tool to model the region."""


        EXPORTMODELTYPE_FIELD_NUMBER: builtins.int
        ELEMORDER_FIELD_NUMBER: builtins.int
        MAXMESHSIZE_FIELD_NUMBER: builtins.int
        MAXMESHSIZEUNITS_FIELD_NUMBER: builtins.int
        QUADSPREFERRED_FIELD_NUMBER: builtins.int
        exportModelType: global___ModelingRegion.PCBModelingProperties.ExportModelType.ValueType = ...
        """The type of model to be generated for a given modeling region."""

        elemOrder: global___ModelingRegion.ElementOrder.ValueType = ...
        """The type of 3D elements to be created for the PCB in the modeling region."""

        maxMeshSize: builtins.float = ...
        """The maximum size of the mesh to be used in the region."""

        maxMeshSizeUnits: typing.Text = ...
        """Units for the maximum mesh size."""

        quadsPreferred: builtins.bool = ...
        """If true, then the meshing engine should attempt to generate quad-shaped elements when creating the mesh."""

        def __init__(self,
            *,
            exportModelType : global___ModelingRegion.PCBModelingProperties.ExportModelType.ValueType = ...,
            elemOrder : global___ModelingRegion.ElementOrder.ValueType = ...,
            maxMeshSize : builtins.float = ...,
            maxMeshSizeUnits : typing.Text = ...,
            quadsPreferred : builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["elemOrder",b"elemOrder","exportModelType",b"exportModelType","maxMeshSize",b"maxMeshSize","maxMeshSizeUnits",b"maxMeshSizeUnits","quadsPreferred",b"quadsPreferred"]) -> None: ...

    class TraceModelingProperties(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _TraceModelingType:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _TraceModelingTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TraceModelingType.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            Default: ModelingRegion.TraceModelingProperties.TraceModelingType.ValueType = ...  # 0
            """Trace modeling type is based on the Trace Modeling property defined in the Trace Modeling tab in the FEA Model Export dialog."""

            Enabled: ModelingRegion.TraceModelingProperties.TraceModelingType.ValueType = ...  # 1
            """Trace modeling is enabled for this region."""

            Disabled: ModelingRegion.TraceModelingProperties.TraceModelingType.ValueType = ...  # 2
            """Trace modeling is disabled for this region."""

        class TraceModelingType(_TraceModelingType, metaclass=_TraceModelingTypeEnumTypeWrapper):
            pass

        Default: ModelingRegion.TraceModelingProperties.TraceModelingType.ValueType = ...  # 0
        """Trace modeling type is based on the Trace Modeling property defined in the Trace Modeling tab in the FEA Model Export dialog."""

        Enabled: ModelingRegion.TraceModelingProperties.TraceModelingType.ValueType = ...  # 1
        """Trace modeling is enabled for this region."""

        Disabled: ModelingRegion.TraceModelingProperties.TraceModelingType.ValueType = ...  # 2
        """Trace modeling is disabled for this region."""


        TRACEMODELTYPE_FIELD_NUMBER: builtins.int
        ELEMORDER_FIELD_NUMBER: builtins.int
        TRACEMESHSIZE_FIELD_NUMBER: builtins.int
        TRACEMESHSIZEUNITS_FIELD_NUMBER: builtins.int
        traceModelType: global___ModelingRegion.TraceModelingProperties.TraceModelingType.ValueType = ...
        """Specifies if trace modeling should be performed inside of the region."""

        elemOrder: global___ModelingRegion.ElementOrder.ValueType = ...
        """The type of 3D elements to be created for traces in the region when trace modeling is enabled."""

        traceMeshSize: builtins.float = ...
        """The maximum mesh size to be used in the region when trace modeling is enabled."""

        traceMeshSizeUnits: typing.Text = ...
        """Units for the maximum mesh size when trace modeling is enabled."""

        def __init__(self,
            *,
            traceModelType : global___ModelingRegion.TraceModelingProperties.TraceModelingType.ValueType = ...,
            elemOrder : typing.Optional[global___ModelingRegion.ElementOrder.ValueType] = ...,
            traceMeshSize : typing.Optional[builtins.float] = ...,
            traceMeshSizeUnits : typing.Optional[typing.Text] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_elemOrder",b"_elemOrder","_traceMeshSize",b"_traceMeshSize","_traceMeshSizeUnits",b"_traceMeshSizeUnits","elemOrder",b"elemOrder","traceMeshSize",b"traceMeshSize","traceMeshSizeUnits",b"traceMeshSizeUnits"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_elemOrder",b"_elemOrder","_traceMeshSize",b"_traceMeshSize","_traceMeshSizeUnits",b"_traceMeshSizeUnits","elemOrder",b"elemOrder","traceMeshSize",b"traceMeshSize","traceMeshSizeUnits",b"traceMeshSizeUnits","traceModelType",b"traceModelType"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_elemOrder",b"_elemOrder"]) -> typing.Optional[typing_extensions.Literal["elemOrder"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_traceMeshSize",b"_traceMeshSize"]) -> typing.Optional[typing_extensions.Literal["traceMeshSize"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_traceMeshSizeUnits",b"_traceMeshSizeUnits"]) -> typing.Optional[typing_extensions.Literal["traceMeshSizeUnits"]]: ...

    CCANAME_FIELD_NUMBER: builtins.int
    REGIONID_FIELD_NUMBER: builtins.int
    REGIONUNITS_FIELD_NUMBER: builtins.int
    MODELMODE_FIELD_NUMBER: builtins.int
    POLYGONALSHAPE_FIELD_NUMBER: builtins.int
    RECTANGULARSHAPE_FIELD_NUMBER: builtins.int
    SLOTSHAPE_FIELD_NUMBER: builtins.int
    CIRCULARSHAPE_FIELD_NUMBER: builtins.int
    PCBMODELPROPS_FIELD_NUMBER: builtins.int
    TRACEMODELPROPS_FIELD_NUMBER: builtins.int
    REGIONIDREPLACEMENT_FIELD_NUMBER: builtins.int
    ccaName: typing.Text = ...
    """Name of the CCA."""

    regionId: typing.Text = ...
    """Unique modeling region ID."""

    regionUnits: typing.Text = ...
    """Modeling region units."""

    modelMode: global___ModelingRegion.ModelingMode.ValueType = ...
    """Mode that specified how the region is used."""

    @property
    def polygonalShape(self) -> global___PolygonalShape:
        """Defined by N points that form a convex polygon."""
        pass
    @property
    def rectangularShape(self) -> global___RectangularShape:
        """Defined by 4 points that form a rectangle."""
        pass
    @property
    def slotShape(self) -> global___SlotShape:
        """Defined by 8 points that form a rectangle with rounded ends."""
        pass
    @property
    def circularShape(self) -> global___CircularShape:
        """Defined by N points that form a circle."""
        pass
    @property
    def pcbModelProps(self) -> global___ModelingRegion.PCBModelingProperties:
        """Mesh properties for the modeling region."""
        pass
    @property
    def traceModelProps(self) -> global___ModelingRegion.TraceModelingProperties:
        """Trace modeling properties for the region."""
        pass
    regionIdReplacement: typing.Text = ...
    """Represents a unique region id that will replace the existing regionId value during"""

    def __init__(self,
        *,
        ccaName : typing.Optional[typing.Text] = ...,
        regionId : typing.Optional[typing.Text] = ...,
        regionUnits : typing.Optional[typing.Text] = ...,
        modelMode : typing.Optional[global___ModelingRegion.ModelingMode.ValueType] = ...,
        polygonalShape : typing.Optional[global___PolygonalShape] = ...,
        rectangularShape : typing.Optional[global___RectangularShape] = ...,
        slotShape : typing.Optional[global___SlotShape] = ...,
        circularShape : typing.Optional[global___CircularShape] = ...,
        pcbModelProps : typing.Optional[global___ModelingRegion.PCBModelingProperties] = ...,
        traceModelProps : typing.Optional[global___ModelingRegion.TraceModelingProperties] = ...,
        regionIdReplacement : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["Shape",b"Shape","_ccaName",b"_ccaName","_modelMode",b"_modelMode","_pcbModelProps",b"_pcbModelProps","_regionId",b"_regionId","_regionIdReplacement",b"_regionIdReplacement","_regionUnits",b"_regionUnits","_traceModelProps",b"_traceModelProps","ccaName",b"ccaName","circularShape",b"circularShape","modelMode",b"modelMode","pcbModelProps",b"pcbModelProps","polygonalShape",b"polygonalShape","rectangularShape",b"rectangularShape","regionId",b"regionId","regionIdReplacement",b"regionIdReplacement","regionUnits",b"regionUnits","slotShape",b"slotShape","traceModelProps",b"traceModelProps"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["Shape",b"Shape","_ccaName",b"_ccaName","_modelMode",b"_modelMode","_pcbModelProps",b"_pcbModelProps","_regionId",b"_regionId","_regionIdReplacement",b"_regionIdReplacement","_regionUnits",b"_regionUnits","_traceModelProps",b"_traceModelProps","ccaName",b"ccaName","circularShape",b"circularShape","modelMode",b"modelMode","pcbModelProps",b"pcbModelProps","polygonalShape",b"polygonalShape","rectangularShape",b"rectangularShape","regionId",b"regionId","regionIdReplacement",b"regionIdReplacement","regionUnits",b"regionUnits","slotShape",b"slotShape","traceModelProps",b"traceModelProps"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["Shape",b"Shape"]) -> typing.Optional[typing_extensions.Literal["polygonalShape","rectangularShape","slotShape","circularShape"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ccaName",b"_ccaName"]) -> typing.Optional[typing_extensions.Literal["ccaName"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_modelMode",b"_modelMode"]) -> typing.Optional[typing_extensions.Literal["modelMode"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_pcbModelProps",b"_pcbModelProps"]) -> typing.Optional[typing_extensions.Literal["pcbModelProps"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_regionId",b"_regionId"]) -> typing.Optional[typing_extensions.Literal["regionId"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_regionIdReplacement",b"_regionIdReplacement"]) -> typing.Optional[typing_extensions.Literal["regionIdReplacement"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_regionUnits",b"_regionUnits"]) -> typing.Optional[typing_extensions.Literal["regionUnits"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_traceModelProps",b"_traceModelProps"]) -> typing.Optional[typing_extensions.Literal["traceModelProps"]]: ...
global___ModelingRegion = ModelingRegion

class AddModelingRegionRequest(google.protobuf.message.Message):
    """*
    Request to add one or more modeling regions to a specific project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    MODELINGREGIONS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """The name of the Sherlock project to add the modeling regions to."""

    @property
    def modelingRegions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ModelingRegion]:
        """List of modeling regions to add to the project."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        modelingRegions : typing.Optional[typing.Iterable[global___ModelingRegion]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["modelingRegions",b"modelingRegions","project",b"project"]) -> None: ...
global___AddModelingRegionRequest = AddModelingRegionRequest

class UpdateModelingRegionRequest(google.protobuf.message.Message):
    """*
    Request to update one or more modeling regions for a specific project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    MODELINGREGIONS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """The name of the Sherlock project."""

    @property
    def modelingRegions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ModelingRegion]:
        """List of modeling regions to update in the project.  The regionId for"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        modelingRegions : typing.Optional[typing.Iterable[global___ModelingRegion]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["modelingRegions",b"modelingRegions","project",b"project"]) -> None: ...
global___UpdateModelingRegionRequest = UpdateModelingRegionRequest

class DeleteModelingRegionRequest(google.protobuf.message.Message):
    """*
    Request to delete one or more modeling regions for a specific project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class DeleteModelingRegionInfo(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CCANAME_FIELD_NUMBER: builtins.int
        REGIONID_FIELD_NUMBER: builtins.int
        ccaName: typing.Text = ...
        """Name of the CCA."""

        regionId: typing.Text = ...
        """Unique region ID of the modeling region to delete."""

        def __init__(self,
            *,
            ccaName : typing.Text = ...,
            regionId : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","regionId",b"regionId"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    DELETEREGIONS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """The name of the Sherlock project."""

    @property
    def deleteRegions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DeleteModelingRegionRequest.DeleteModelingRegionInfo]:
        """List of modeling regions to delete in the project."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        deleteRegions : typing.Optional[typing.Iterable[global___DeleteModelingRegionRequest.DeleteModelingRegionInfo]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["deleteRegions",b"deleteRegions","project",b"project"]) -> None: ...
global___DeleteModelingRegionRequest = DeleteModelingRegionRequest

class CopyModelingRegionRequest(google.protobuf.message.Message):
    """*
    Request to copy one or more modeling regions in a specific project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class CopyModelingRegionInfo(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CCANAME_FIELD_NUMBER: builtins.int
        REGIONID_FIELD_NUMBER: builtins.int
        REGIONIDCOPY_FIELD_NUMBER: builtins.int
        CENTERX_FIELD_NUMBER: builtins.int
        CENTERY_FIELD_NUMBER: builtins.int
        ccaName: typing.Text = ...
        """Name of the CCA."""

        regionId: typing.Text = ...
        """Region ID of the existing modeling region to copy."""

        regionIdCopy: typing.Text = ...
        """Region ID of the modeling region copy. Must be unique."""

        centerX: builtins.float = ...
        """The center x coordinate of the modeling region copy -- used for location placement in the Layer Viewer."""

        centerY: builtins.float = ...
        """The center y coordinate of the modeling region copy -- used for location placement in the Layer Viewer."""

        def __init__(self,
            *,
            ccaName : typing.Text = ...,
            regionId : typing.Text = ...,
            regionIdCopy : typing.Text = ...,
            centerX : builtins.float = ...,
            centerY : builtins.float = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","centerX",b"centerX","centerY",b"centerY","regionId",b"regionId","regionIdCopy",b"regionIdCopy"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    COPYREGIONS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """The name of the Sherlock project."""

    @property
    def copyRegions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CopyModelingRegionRequest.CopyModelingRegionInfo]:
        """List of modeling regions to copy along with their corresponding "copy to" parameters."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        copyRegions : typing.Optional[typing.Iterable[global___CopyModelingRegionRequest.CopyModelingRegionInfo]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["copyRegions",b"copyRegions","project",b"project"]) -> None: ...
global___CopyModelingRegionRequest = CopyModelingRegionRequest

class LayerInfo(google.protobuf.message.Message):
    """*
    Format of a layer viewer folder and layer names within the folder.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _LayerFolder:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LayerFolderEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LayerFolder.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        Unknown: LayerInfo.LayerFolder.ValueType = ...  # 0
        Components: LayerInfo.LayerFolder.ValueType = ...  # 1
        Copper_Layers: LayerInfo.LayerFolder.ValueType = ...  # 2
        DFMEA_Bot: LayerInfo.LayerFolder.ValueType = ...  # 3
        DFMEA_Top: LayerInfo.LayerFolder.ValueType = ...  # 4
        Drill_Holes: LayerInfo.LayerFolder.ValueType = ...  # 5
        Harmonic_Vibe: LayerInfo.LayerFolder.ValueType = ...  # 6
        Heat_Sinks: LayerInfo.LayerFolder.ValueType = ...  # 7
        Icepak_Thermal_Maps: LayerInfo.LayerFolder.ValueType = ...  # 8
        ICT: LayerInfo.LayerFolder.ValueType = ...  # 9
        Laminate_Layers: LayerInfo.LayerFolder.ValueType = ...  # 10
        Mechanical_Parts: LayerInfo.LayerFolder.ValueType = ...  # 11
        Mechanical_Shock: LayerInfo.LayerFolder.ValueType = ...  # 12
        Mechanical: LayerInfo.LayerFolder.ValueType = ...  # 13
        Natural_Freq: LayerInfo.LayerFolder.ValueType = ...  # 14
        Other_Layers: LayerInfo.LayerFolder.ValueType = ...  # 15
        Potting_Regions: LayerInfo.LayerFolder.ValueType = ...  # 16
        PTH_Fatigue: LayerInfo.LayerFolder.ValueType = ...  # 17
        Random_Vibe: LayerInfo.LayerFolder.ValueType = ...  # 18
        Semiconductor_Wearout_Top: LayerInfo.LayerFolder.ValueType = ...  # 19
        Silk_Screens: LayerInfo.LayerFolder.ValueType = ...  # 20
        Solder_Fatigue_Bot: LayerInfo.LayerFolder.ValueType = ...  # 21
        Solder_Fatigue_Top: LayerInfo.LayerFolder.ValueType = ...  # 22
        Solder_Masks: LayerInfo.LayerFolder.ValueType = ...  # 23
        Strain_Maps: LayerInfo.LayerFolder.ValueType = ...  # 24
        Test_Points: LayerInfo.LayerFolder.ValueType = ...  # 25
        Thermal_Derating_Bot: LayerInfo.LayerFolder.ValueType = ...  # 26
        Thermal_Derating_Top: LayerInfo.LayerFolder.ValueType = ...  # 27
        Thermal_Maps: LayerInfo.LayerFolder.ValueType = ...  # 28
        Thermal_Mech: LayerInfo.LayerFolder.ValueType = ...  # 29
    class LayerFolder(_LayerFolder, metaclass=_LayerFolderEnumTypeWrapper):
        pass

    Unknown: LayerInfo.LayerFolder.ValueType = ...  # 0
    Components: LayerInfo.LayerFolder.ValueType = ...  # 1
    Copper_Layers: LayerInfo.LayerFolder.ValueType = ...  # 2
    DFMEA_Bot: LayerInfo.LayerFolder.ValueType = ...  # 3
    DFMEA_Top: LayerInfo.LayerFolder.ValueType = ...  # 4
    Drill_Holes: LayerInfo.LayerFolder.ValueType = ...  # 5
    Harmonic_Vibe: LayerInfo.LayerFolder.ValueType = ...  # 6
    Heat_Sinks: LayerInfo.LayerFolder.ValueType = ...  # 7
    Icepak_Thermal_Maps: LayerInfo.LayerFolder.ValueType = ...  # 8
    ICT: LayerInfo.LayerFolder.ValueType = ...  # 9
    Laminate_Layers: LayerInfo.LayerFolder.ValueType = ...  # 10
    Mechanical_Parts: LayerInfo.LayerFolder.ValueType = ...  # 11
    Mechanical_Shock: LayerInfo.LayerFolder.ValueType = ...  # 12
    Mechanical: LayerInfo.LayerFolder.ValueType = ...  # 13
    Natural_Freq: LayerInfo.LayerFolder.ValueType = ...  # 14
    Other_Layers: LayerInfo.LayerFolder.ValueType = ...  # 15
    Potting_Regions: LayerInfo.LayerFolder.ValueType = ...  # 16
    PTH_Fatigue: LayerInfo.LayerFolder.ValueType = ...  # 17
    Random_Vibe: LayerInfo.LayerFolder.ValueType = ...  # 18
    Semiconductor_Wearout_Top: LayerInfo.LayerFolder.ValueType = ...  # 19
    Silk_Screens: LayerInfo.LayerFolder.ValueType = ...  # 20
    Solder_Fatigue_Bot: LayerInfo.LayerFolder.ValueType = ...  # 21
    Solder_Fatigue_Top: LayerInfo.LayerFolder.ValueType = ...  # 22
    Solder_Masks: LayerInfo.LayerFolder.ValueType = ...  # 23
    Strain_Maps: LayerInfo.LayerFolder.ValueType = ...  # 24
    Test_Points: LayerInfo.LayerFolder.ValueType = ...  # 25
    Thermal_Derating_Bot: LayerInfo.LayerFolder.ValueType = ...  # 26
    Thermal_Derating_Top: LayerInfo.LayerFolder.ValueType = ...  # 27
    Thermal_Maps: LayerInfo.LayerFolder.ValueType = ...  # 28
    Thermal_Mech: LayerInfo.LayerFolder.ValueType = ...  # 29

    LAYERFOLDER_FIELD_NUMBER: builtins.int
    LAYERS_FIELD_NUMBER: builtins.int
    layerFolder: global___LayerInfo.LayerFolder.ValueType = ...
    @property
    def layers(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        layerFolder : global___LayerInfo.LayerFolder.ValueType = ...,
        layers : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["layerFolder",b"layerFolder","layers",b"layers"]) -> None: ...
global___LayerInfo = LayerInfo

class ListLayersRequest(google.protobuf.message.Message):
    """*
    Request to list all layers in a specific project CCA.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    ccaName: typing.Text = ...
    """The CCA name."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","project",b"project"]) -> None: ...
global___ListLayersRequest = ListLayersRequest

class ListLayersResponse(google.protobuf.message.Message):
    """*
    Contains the list of layers.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    LAYERINFOS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def layerInfos(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LayerInfo]:
        """List of layer information."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        layerInfos : typing.Optional[typing.Iterable[global___LayerInfo]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["layerInfos",b"layerInfos","returnCode",b"returnCode"]) -> None: ...
global___ListLayersResponse = ListLayersResponse

class ExportLayerImageRequest(google.protobuf.message.Message):
    """*
    Request to export one or more 2D Layer Viewer images from a project CCA.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ExportLayerImageInfo(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        COMPONENTSENABLED_FIELD_NUMBER: builtins.int
        LABELSENABLED_FIELD_NUMBER: builtins.int
        LEADSENABLED_FIELD_NUMBER: builtins.int
        AXESENABLED_FIELD_NUMBER: builtins.int
        GRIDENABLED_FIELD_NUMBER: builtins.int
        LAYERINFOS_FIELD_NUMBER: builtins.int
        FILEPATH_FIELD_NUMBER: builtins.int
        IMAGEHEIGHT_FIELD_NUMBER: builtins.int
        IMAGEWIDTH_FIELD_NUMBER: builtins.int
        OVERWRITEEXISTINGFILE_FIELD_NUMBER: builtins.int
        componentsEnabled: builtins.bool = ...
        """Displays the components in the export image. Default to true when not provided."""

        labelsEnabled: builtins.bool = ...
        """Displays the component reference designators in the export image. Default to true when not provided."""

        leadsEnabled: builtins.bool = ...
        """Displays the component leads and solder balls in the export image. Default to true when not provided."""

        axesEnabled: builtins.bool = ...
        """Displays the x and y axes in the export image."""

        gridEnabled: builtins.bool = ...
        """Displays a grid in the export image."""

        @property
        def layerInfos(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LayerInfo]:
            """List of layers to be exported. This cannot be empty."""
            pass
        filePath: typing.Text = ...
        """Full file path of the export image."""

        imageHeight: builtins.int = ...
        """The export image height."""

        imageWidth: builtins.int = ...
        """The export image width."""

        overwriteExistingFile: builtins.bool = ...
        """If the file path already exists, overwrite the file if this is set to true."""

        def __init__(self,
            *,
            componentsEnabled : typing.Optional[builtins.bool] = ...,
            labelsEnabled : typing.Optional[builtins.bool] = ...,
            leadsEnabled : typing.Optional[builtins.bool] = ...,
            axesEnabled : builtins.bool = ...,
            gridEnabled : builtins.bool = ...,
            layerInfos : typing.Optional[typing.Iterable[global___LayerInfo]] = ...,
            filePath : typing.Text = ...,
            imageHeight : builtins.int = ...,
            imageWidth : builtins.int = ...,
            overwriteExistingFile : builtins.bool = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_componentsEnabled",b"_componentsEnabled","_labelsEnabled",b"_labelsEnabled","_leadsEnabled",b"_leadsEnabled","componentsEnabled",b"componentsEnabled","labelsEnabled",b"labelsEnabled","leadsEnabled",b"leadsEnabled"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_componentsEnabled",b"_componentsEnabled","_labelsEnabled",b"_labelsEnabled","_leadsEnabled",b"_leadsEnabled","axesEnabled",b"axesEnabled","componentsEnabled",b"componentsEnabled","filePath",b"filePath","gridEnabled",b"gridEnabled","imageHeight",b"imageHeight","imageWidth",b"imageWidth","labelsEnabled",b"labelsEnabled","layerInfos",b"layerInfos","leadsEnabled",b"leadsEnabled","overwriteExistingFile",b"overwriteExistingFile"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_componentsEnabled",b"_componentsEnabled"]) -> typing.Optional[typing_extensions.Literal["componentsEnabled"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_labelsEnabled",b"_labelsEnabled"]) -> typing.Optional[typing_extensions.Literal["labelsEnabled"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_leadsEnabled",b"_leadsEnabled"]) -> typing.Optional[typing_extensions.Literal["leadsEnabled"]]: ...

    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    EXPORTLAYERS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    ccaName: typing.Text = ...
    """The CCA name."""

    @property
    def exportLayers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ExportLayerImageRequest.ExportLayerImageInfo]:
        """List of layer images to export along with their export parameters."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        exportLayers : typing.Optional[typing.Iterable[global___ExportLayerImageRequest.ExportLayerImageInfo]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","exportLayers",b"exportLayers","project",b"project"]) -> None: ...
global___ExportLayerImageRequest = ExportLayerImageRequest

class ExportLayerImageResponse(google.protobuf.message.Message):
    """*
    Contains the status of the export as well as all the export error and informational messages.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    EXPORTMESSAGES_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def exportMessages(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Informational and error messages about the export."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        exportMessages : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["exportMessages",b"exportMessages","returnCode",b"returnCode"]) -> None: ...
global___ExportLayerImageResponse = ExportLayerImageResponse

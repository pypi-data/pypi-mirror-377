"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import ansys.api.sherlock.v0.SherlockCommonService_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ListLCEventsRequest(google.protobuf.message.Message):
    """*
    Request for a list of life cycle phases and events for a project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project"]) -> None: ...
global___ListLCEventsRequest = ListLCEventsRequest

class ListLCEventsResponse(google.protobuf.message.Message):
    """*
    Represents the life cycle phases and events for a Sherlock project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LifeCyclePhase(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class LifeCycleEvent(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            NAME_FIELD_NUMBER: builtins.int
            DESCRIPTION_FIELD_NUMBER: builtins.int
            TYPE_FIELD_NUMBER: builtins.int
            name: typing.Text = ...
            """Life cycle event name."""

            description: typing.Text = ...
            """Life cycle event description."""

            type: typing.Text = ...
            """Life cycle type. For example: "Thermal Event", "Shock Event", "Random Vibe", "Harmonic Vibe"."""

            def __init__(self,
                *,
                name : typing.Text = ...,
                description : typing.Text = ...,
                type : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["description",b"description","name",b"name","type",b"type"]) -> None: ...

        NAME_FIELD_NUMBER: builtins.int
        DESCRIPTION_FIELD_NUMBER: builtins.int
        LCEVENTS_FIELD_NUMBER: builtins.int
        name: typing.Text = ...
        """Life cycle phase name."""

        description: typing.Text = ...
        """Life cycle phase description."""

        @property
        def lcEvents(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ListLCEventsResponse.LifeCyclePhase.LifeCycleEvent]:
            """List of LifeCycleEvents for a project phase."""
            pass
        def __init__(self,
            *,
            name : typing.Text = ...,
            description : typing.Text = ...,
            lcEvents : typing.Optional[typing.Iterable[global___ListLCEventsResponse.LifeCyclePhase.LifeCycleEvent]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["description",b"description","lcEvents",b"lcEvents","name",b"name"]) -> None: ...

    RETURNCODE_FIELD_NUMBER: builtins.int
    LCPHASES_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def lcPhases(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ListLCEventsResponse.LifeCyclePhase]:
        """List of LifeCyclePhases for a specified project."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        lcPhases : typing.Optional[typing.Iterable[global___ListLCEventsResponse.LifeCyclePhase]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["lcPhases",b"lcPhases","returnCode",b"returnCode"]) -> None: ...
global___ListLCEventsResponse = ListLCEventsResponse

class ListDurationUnitsRequest(google.protobuf.message.Message):
    """*
    Request for a list of duration units for event settings.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___ListDurationUnitsRequest = ListDurationUnitsRequest

class ListDurationUnitsResponse(google.protobuf.message.Message):
    """*
    Represents a list of duration units for event settings in life cycle.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    DURATIONUNITS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def durationUnits(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of duration units."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        durationUnits : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["durationUnits",b"durationUnits","returnCode",b"returnCode"]) -> None: ...
global___ListDurationUnitsResponse = ListDurationUnitsResponse

class ListLCStatesRequest(google.protobuf.message.Message):
    """*
    Request for a list of life cycle states.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___ListLCStatesRequest = ListLCStatesRequest

class ListLCStatesResponse(google.protobuf.message.Message):
    """*
    Represents a list of life cycle states.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    STATES_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def states(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of life cycle states. For example: "Operating", "Storage"."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        states : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode","states",b"states"]) -> None: ...
global___ListLCStatesResponse = ListLCStatesResponse

class ListLCTypesRequest(google.protobuf.message.Message):
    """*
    Request for a list of life cycle types.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___ListLCTypesRequest = ListLCTypesRequest

class ListLCTypesResponse(google.protobuf.message.Message):
    """*
    Represents a list of life cycle types.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    TYPES_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of life cycle types. For example, "DUTY CYCLE", "PER YEAR", "PER HOUR", etc."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        types : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode","types",b"types"]) -> None: ...
global___ListLCTypesResponse = ListLCTypesResponse

class AddThermalEventRequest(google.protobuf.message.Message):
    """*
    Request to define and add a new thermal life cycle event.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PHASENAME_FIELD_NUMBER: builtins.int
    EVENTNAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    NUMOFCYCLES_FIELD_NUMBER: builtins.int
    CYCLETYPE_FIELD_NUMBER: builtins.int
    CYCLESTATE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    phaseName: typing.Text = ...
    """The name of the life cycle phase to add this event to."""

    eventName: typing.Text = ...
    """Name of the thermal event."""

    description: typing.Text = ...
    """Description of the thermal event."""

    numOfCycles: builtins.float = ...
    """Number of cycles defined for this thermal event."""

    cycleType: typing.Text = ...
    """The cycle type. For example: "COUNT", "DUTY CYCLE", "PER YEAR", "PER HOUR", etc."""

    cycleState: typing.Text = ...
    """The life cycle state. For example: "OPERATING", "STORAGE"."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        phaseName : typing.Text = ...,
        eventName : typing.Text = ...,
        description : typing.Text = ...,
        numOfCycles : builtins.float = ...,
        cycleType : typing.Text = ...,
        cycleState : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cycleState",b"cycleState","cycleType",b"cycleType","description",b"description","eventName",b"eventName","numOfCycles",b"numOfCycles","phaseName",b"phaseName","project",b"project"]) -> None: ...
global___AddThermalEventRequest = AddThermalEventRequest

class AddThermalEventResponse(google.protobuf.message.Message):
    """*
    Response from adding a thermal life cycle event.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of validation errors."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        errors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","returnCode",b"returnCode"]) -> None: ...
global___AddThermalEventResponse = AddThermalEventResponse

class ListHarmonicProfileTypesRequest(google.protobuf.message.Message):
    """*
    Request for a list of harmonic load profile types.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___ListHarmonicProfileTypesRequest = ListHarmonicProfileTypesRequest

class ListHarmonicProfileTypesResponse(google.protobuf.message.Message):
    """*
    Represents a list of harmonic load profile types.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    TYPES_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of harmonic load profile types. "Uniaxial", "Triaxial"."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        types : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode","types",b"types"]) -> None: ...
global___ListHarmonicProfileTypesResponse = ListHarmonicProfileTypesResponse

class ListRandomVibeProfileTypesRequest(google.protobuf.message.Message):
    """*
    Request for a list of random vibe profile types.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___ListRandomVibeProfileTypesRequest = ListRandomVibeProfileTypesRequest

class ListRandomVibeProfileTypesResponse(google.protobuf.message.Message):
    """*
    Represents a list of random vibe profile types.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    TYPES_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of random vibe profile types. Currently there is only one: "Uniaxial"."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        types : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode","types",b"types"]) -> None: ...
global___ListRandomVibeProfileTypesResponse = ListRandomVibeProfileTypesResponse

class ListShockLoadUnitsRequest(google.protobuf.message.Message):
    """*
    Request for a list of shock load units.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___ListShockLoadUnitsRequest = ListShockLoadUnitsRequest

class ListShockLoadUnitsResponse(google.protobuf.message.Message):
    """*
    Represents a list of shock load units.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    UNITS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def units(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of shock load units. For example: "G", "m/s2", "mm/s2"."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        units : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode","units",b"units"]) -> None: ...
global___ListShockLoadUnitsResponse = ListShockLoadUnitsResponse

class AddThermalProfilesRequest(google.protobuf.message.Message):
    """*
    Request to define and add a new thermal life cycle event profiles.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ThermalProfile(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class Entry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            STEP_FIELD_NUMBER: builtins.int
            TYPE_FIELD_NUMBER: builtins.int
            TIME_FIELD_NUMBER: builtins.int
            TEMP_FIELD_NUMBER: builtins.int
            step: typing.Text = ...
            """Name of the step."""

            type: typing.Text = ...
            """Profile step type. "HOLD" or "RAMP"."""

            time: builtins.float = ...
            """Time duration of the step."""

            temp: builtins.float = ...
            """Temperature of the step."""

            def __init__(self,
                *,
                step : typing.Text = ...,
                type : typing.Text = ...,
                time : builtins.float = ...,
                temp : builtins.float = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["step",b"step","temp",b"temp","time",b"time","type",b"type"]) -> None: ...

        PHASENAME_FIELD_NUMBER: builtins.int
        EVENTNAME_FIELD_NUMBER: builtins.int
        PROFILENAME_FIELD_NUMBER: builtins.int
        TIMEUNITS_FIELD_NUMBER: builtins.int
        TEMPUNITS_FIELD_NUMBER: builtins.int
        THERMALPROFILEENTRIES_FIELD_NUMBER: builtins.int
        phaseName: typing.Text = ...
        """The name of the life cycle phase this event is associated."""

        eventName: typing.Text = ...
        """Name of the thermal event."""

        profileName: typing.Text = ...
        """Name of the thermal profile."""

        timeUnits: typing.Text = ...
        """Time units."""

        tempUnits: typing.Text = ...
        """Temperature units."""

        @property
        def thermalProfileEntries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AddThermalProfilesRequest.ThermalProfile.Entry]:
            """List of step entries for a life cycle event and/or phase."""
            pass
        def __init__(self,
            *,
            phaseName : typing.Text = ...,
            eventName : typing.Text = ...,
            profileName : typing.Text = ...,
            timeUnits : typing.Text = ...,
            tempUnits : typing.Text = ...,
            thermalProfileEntries : typing.Optional[typing.Iterable[global___AddThermalProfilesRequest.ThermalProfile.Entry]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["eventName",b"eventName","phaseName",b"phaseName","profileName",b"profileName","tempUnits",b"tempUnits","thermalProfileEntries",b"thermalProfileEntries","timeUnits",b"timeUnits"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    THERMALPROFILES_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    @property
    def thermalProfiles(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AddThermalProfilesRequest.ThermalProfile]:
        """List of thermal life cycle event profiles for a specified project."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        thermalProfiles : typing.Optional[typing.Iterable[global___AddThermalProfilesRequest.ThermalProfile]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","thermalProfiles",b"thermalProfiles"]) -> None: ...
global___AddThermalProfilesRequest = AddThermalProfilesRequest

class AddThermalProfilesResponse(google.protobuf.message.Message):
    """*
    Response from adding thermal profiles.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of validation errors."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        errors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","returnCode",b"returnCode"]) -> None: ...
global___AddThermalProfilesResponse = AddThermalProfilesResponse

class LoadThermalProfileRequest(google.protobuf.message.Message):
    """*
    Request to load a thermal life cycle event profile from a .dat or .csv file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class CSVProps(google.protobuf.message.Message):
        """.csv file properties. This is only required for .csv file load."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        PROFILENAME_FIELD_NUMBER: builtins.int
        HEADERROWNUMBER_FIELD_NUMBER: builtins.int
        COLUMNDELIM_FIELD_NUMBER: builtins.int
        NUMERICFORMAT_FIELD_NUMBER: builtins.int
        STEPCOLUMN_FIELD_NUMBER: builtins.int
        TYPECOLUMN_FIELD_NUMBER: builtins.int
        TIMECOLUMN_FIELD_NUMBER: builtins.int
        TIMEUNITS_FIELD_NUMBER: builtins.int
        TEMPCOLUMN_FIELD_NUMBER: builtins.int
        TEMPUNITS_FIELD_NUMBER: builtins.int
        profileName: typing.Text = ...
        """Name of the thermal profile."""

        headerRowNumber: builtins.int = ...
        """Header row number in the .csv file."""

        columnDelim: typing.Text = ...
        """Delimiter to separate the columns."""

        numericFormat: typing.Text = ...
        """Numeric format."""

        stepColumn: typing.Text = ...
        """Step column name."""

        typeColumn: typing.Text = ...
        """Step type column name."""

        timeColumn: typing.Text = ...
        """Time duration column name."""

        timeUnits: typing.Text = ...
        """Time units column name."""

        tempColumn: typing.Text = ...
        """Temperature column name."""

        tempUnits: typing.Text = ...
        """Temperature units column name."""

        def __init__(self,
            *,
            profileName : typing.Text = ...,
            headerRowNumber : builtins.int = ...,
            columnDelim : typing.Text = ...,
            numericFormat : typing.Text = ...,
            stepColumn : typing.Text = ...,
            typeColumn : typing.Text = ...,
            timeColumn : typing.Text = ...,
            timeUnits : typing.Text = ...,
            tempColumn : typing.Text = ...,
            tempUnits : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["columnDelim",b"columnDelim","headerRowNumber",b"headerRowNumber","numericFormat",b"numericFormat","profileName",b"profileName","stepColumn",b"stepColumn","tempColumn",b"tempColumn","tempUnits",b"tempUnits","timeColumn",b"timeColumn","timeUnits",b"timeUnits","typeColumn",b"typeColumn"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    PHASENAME_FIELD_NUMBER: builtins.int
    EVENTNAME_FIELD_NUMBER: builtins.int
    FILEPATH_FIELD_NUMBER: builtins.int
    CSVPROPS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    phaseName: typing.Text = ...
    """The name of the life cycle phase this event is associated."""

    eventName: typing.Text = ...
    """Thermal event name."""

    filePath: typing.Text = ...
    """The full path for the .dat or .csv file."""

    @property
    def csvProps(self) -> global___LoadThermalProfileRequest.CSVProps:
        """Properties for a .csv file load."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        phaseName : typing.Text = ...,
        eventName : typing.Text = ...,
        filePath : typing.Text = ...,
        csvProps : typing.Optional[global___LoadThermalProfileRequest.CSVProps] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["csvProps",b"csvProps"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["csvProps",b"csvProps","eventName",b"eventName","filePath",b"filePath","phaseName",b"phaseName","project",b"project"]) -> None: ...
global___LoadThermalProfileRequest = LoadThermalProfileRequest

class LoadThermalProfileResponse(google.protobuf.message.Message):
    """*
    Response from loading a thermal profile from a .dat or .csv file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of validation errors."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        errors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","returnCode",b"returnCode"]) -> None: ...
global___LoadThermalProfileResponse = LoadThermalProfileResponse

class AddShockEventRequest(google.protobuf.message.Message):
    """*
    Request to define and add a new shock life cycle event.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PHASENAME_FIELD_NUMBER: builtins.int
    EVENTNAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DURATION_FIELD_NUMBER: builtins.int
    DURATIONUNITS_FIELD_NUMBER: builtins.int
    NUMOFCYCLES_FIELD_NUMBER: builtins.int
    CYCLETYPE_FIELD_NUMBER: builtins.int
    ORIENTATION_FIELD_NUMBER: builtins.int
    LOADDIRECTION_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    phaseName: typing.Text = ...
    """The name of the life cycle phase to add this event to."""

    eventName: typing.Text = ...
    """Name of the shock event."""

    description: typing.Text = ...
    """Description of the shock event."""

    duration: builtins.float = ...
    """Event duration length."""

    durationUnits: typing.Text = ...
    """Event duration length units."""

    numOfCycles: builtins.float = ...
    """Number of cycles defined for this shock event."""

    cycleType: typing.Text = ...
    """The cycle type. For example: "COUNT", "DUTY CYCLE", "PER YEAR", "PER HOUR", etc."""

    orientation: typing.Text = ...
    """PCB orientation in the format of azimuth, elevation. Example: 30,15"""

    loadDirection: typing.Text = ...
    """Load direction in the format of x,y,z. Example: 0,0,1"""

    def __init__(self,
        *,
        project : typing.Text = ...,
        phaseName : typing.Text = ...,
        eventName : typing.Text = ...,
        description : typing.Text = ...,
        duration : builtins.float = ...,
        durationUnits : typing.Text = ...,
        numOfCycles : builtins.float = ...,
        cycleType : typing.Text = ...,
        orientation : typing.Text = ...,
        loadDirection : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cycleType",b"cycleType","description",b"description","duration",b"duration","durationUnits",b"durationUnits","eventName",b"eventName","loadDirection",b"loadDirection","numOfCycles",b"numOfCycles","orientation",b"orientation","phaseName",b"phaseName","project",b"project"]) -> None: ...
global___AddShockEventRequest = AddShockEventRequest

class AddShockEventResponse(google.protobuf.message.Message):
    """*
    Response from adding a shock life cycle event.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of validation errors."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        errors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","returnCode",b"returnCode"]) -> None: ...
global___AddShockEventResponse = AddShockEventResponse

class AddShockProfilesRequest(google.protobuf.message.Message):
    """*
    Request to define and add new shock life cycle event profiles.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ShockProfile(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class Entry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            SHAPE_FIELD_NUMBER: builtins.int
            LOAD_FIELD_NUMBER: builtins.int
            FREQ_FIELD_NUMBER: builtins.int
            DECAY_FIELD_NUMBER: builtins.int
            shape: typing.Text = ...
            """Shape of the shock profile."""

            load: builtins.float = ...
            """Load."""

            freq: builtins.float = ...
            """Frequency rate."""

            decay: builtins.float = ...
            """Decay rate."""

            def __init__(self,
                *,
                shape : typing.Text = ...,
                load : builtins.float = ...,
                freq : builtins.float = ...,
                decay : builtins.float = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["decay",b"decay","freq",b"freq","load",b"load","shape",b"shape"]) -> None: ...

        PHASENAME_FIELD_NUMBER: builtins.int
        EVENTNAME_FIELD_NUMBER: builtins.int
        PROFILENAME_FIELD_NUMBER: builtins.int
        DURATION_FIELD_NUMBER: builtins.int
        DURATIONUNITS_FIELD_NUMBER: builtins.int
        SAMPLERATE_FIELD_NUMBER: builtins.int
        SAMPLERATEUNITS_FIELD_NUMBER: builtins.int
        LOADUNITS_FIELD_NUMBER: builtins.int
        FREQUNITS_FIELD_NUMBER: builtins.int
        SHOCKPROFILEENTRIES_FIELD_NUMBER: builtins.int
        phaseName: typing.Text = ...
        """The name of the life cycle phase this event is associated."""

        eventName: typing.Text = ...
        """Name of the shock event."""

        profileName: typing.Text = ...
        """Name of the shock profile."""

        duration: builtins.float = ...
        """Pulse duration."""

        durationUnits: typing.Text = ...
        """Pulse duration unit."""

        sampleRate: builtins.float = ...
        """Sample rate."""

        sampleRateUnits: typing.Text = ...
        """Sample rate unit."""

        loadUnits: typing.Text = ...
        """Load unit."""

        freqUnits: typing.Text = ...
        """Frequency unit."""

        @property
        def shockProfileEntries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AddShockProfilesRequest.ShockProfile.Entry]:
            """Primary shape entry for the shock profile."""
            pass
        def __init__(self,
            *,
            phaseName : typing.Text = ...,
            eventName : typing.Text = ...,
            profileName : typing.Text = ...,
            duration : builtins.float = ...,
            durationUnits : typing.Text = ...,
            sampleRate : builtins.float = ...,
            sampleRateUnits : typing.Text = ...,
            loadUnits : typing.Text = ...,
            freqUnits : typing.Text = ...,
            shockProfileEntries : typing.Optional[typing.Iterable[global___AddShockProfilesRequest.ShockProfile.Entry]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["duration",b"duration","durationUnits",b"durationUnits","eventName",b"eventName","freqUnits",b"freqUnits","loadUnits",b"loadUnits","phaseName",b"phaseName","profileName",b"profileName","sampleRate",b"sampleRate","sampleRateUnits",b"sampleRateUnits","shockProfileEntries",b"shockProfileEntries"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    SHOCKPROFILES_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    @property
    def shockProfiles(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AddShockProfilesRequest.ShockProfile]:
        """List of shock life cycle event profiles for a specified project."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        shockProfiles : typing.Optional[typing.Iterable[global___AddShockProfilesRequest.ShockProfile]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","shockProfiles",b"shockProfiles"]) -> None: ...
global___AddShockProfilesRequest = AddShockProfilesRequest

class AddShockProfilesResponse(google.protobuf.message.Message):
    """*
    Response from adding shock life cycle event profiles.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of validation errors."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        errors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","returnCode",b"returnCode"]) -> None: ...
global___AddShockProfilesResponse = AddShockProfilesResponse

class ListTempUnitsRequest(google.protobuf.message.Message):
    """*
    Request for a list of temperature units.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___ListTempUnitsRequest = ListTempUnitsRequest

class ListTempUnitsResponse(google.protobuf.message.Message):
    """*
    Represents a list of temperature units.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    TEMPUNITS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def tempUnits(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of temperature units. For example: "C", "F", "K"."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        tempUnits : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode","tempUnits",b"tempUnits"]) -> None: ...
global___ListTempUnitsResponse = ListTempUnitsResponse

class AddHarmonicEventRequest(google.protobuf.message.Message):
    """*
    Request to define and add a new harmonic vibe life cycle event.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PHASENAME_FIELD_NUMBER: builtins.int
    EVENTNAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DURATION_FIELD_NUMBER: builtins.int
    DURATIONUNITS_FIELD_NUMBER: builtins.int
    NUMOFCYCLES_FIELD_NUMBER: builtins.int
    CYCLETYPE_FIELD_NUMBER: builtins.int
    SWEEPRATE_FIELD_NUMBER: builtins.int
    ORIENTATION_FIELD_NUMBER: builtins.int
    PROFILETYPE_FIELD_NUMBER: builtins.int
    LOADDIRECTION_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    phaseName: typing.Text = ...
    """The name of the life cycle phase to add this event to."""

    eventName: typing.Text = ...
    """Name of the harmonic event."""

    description: typing.Text = ...
    """Description of the harmonic event."""

    duration: builtins.float = ...
    """Event duration length."""

    durationUnits: typing.Text = ...
    """Event duration length units."""

    numOfCycles: builtins.float = ...
    """Number of cycles defined for this harmonic event."""

    cycleType: typing.Text = ...
    """The cycle type. For example: "COUNT", "DUTY CYCLE", "PER YEAR", "PER HOUR", etc."""

    sweepRate: builtins.float = ...
    """Sweep rate for the harmonic event"""

    orientation: typing.Text = ...
    """PCB orientation in the format of azimuth, elevation. Example: "30,15"."""

    profileType: typing.Text = ...
    """Harmonic load profile types. Example valid values are "Uniaxial" and "Triaxial"."""

    loadDirection: typing.Text = ...
    """Load direction in the format of x,y,z. Example: "0,0,1"."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        phaseName : typing.Text = ...,
        eventName : typing.Text = ...,
        description : typing.Text = ...,
        duration : builtins.float = ...,
        durationUnits : typing.Text = ...,
        numOfCycles : builtins.float = ...,
        cycleType : typing.Text = ...,
        sweepRate : builtins.float = ...,
        orientation : typing.Text = ...,
        profileType : typing.Text = ...,
        loadDirection : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cycleType",b"cycleType","description",b"description","duration",b"duration","durationUnits",b"durationUnits","eventName",b"eventName","loadDirection",b"loadDirection","numOfCycles",b"numOfCycles","orientation",b"orientation","phaseName",b"phaseName","profileType",b"profileType","project",b"project","sweepRate",b"sweepRate"]) -> None: ...
global___AddHarmonicEventRequest = AddHarmonicEventRequest

class AddHarmonicEventResponse(google.protobuf.message.Message):
    """*
    Response from adding a harmonic vibe life cycle event.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of validation errors."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        errors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","returnCode",b"returnCode"]) -> None: ...
global___AddHarmonicEventResponse = AddHarmonicEventResponse

class ListFreqUnitsRequest(google.protobuf.message.Message):
    """*
    Request for a list of frequency units.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___ListFreqUnitsRequest = ListFreqUnitsRequest

class ListFreqUnitsResponse(google.protobuf.message.Message):
    """*
    Represents a list of frequency units.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    FREQUNITS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def freqUnits(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of frequency units. For example: "HZ", "KHZ", "MHZ", "GHZ"."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        freqUnits : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["freqUnits",b"freqUnits","returnCode",b"returnCode"]) -> None: ...
global___ListFreqUnitsResponse = ListFreqUnitsResponse

class AddRandomVibeEventRequest(google.protobuf.message.Message):
    """*
    Request to define and add a new random vibe life cycle event.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PHASENAME_FIELD_NUMBER: builtins.int
    EVENTNAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DURATION_FIELD_NUMBER: builtins.int
    DURATIONUNITS_FIELD_NUMBER: builtins.int
    NUMOFCYCLES_FIELD_NUMBER: builtins.int
    CYCLETYPE_FIELD_NUMBER: builtins.int
    ORIENTATION_FIELD_NUMBER: builtins.int
    PROFILETYPE_FIELD_NUMBER: builtins.int
    LOADDIRECTION_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    phaseName: typing.Text = ...
    """The name of the life cycle phase to add this event to."""

    eventName: typing.Text = ...
    """Name of the random vibe event."""

    description: typing.Text = ...
    """Description of the random vibe event."""

    duration: builtins.float = ...
    """Event duration length."""

    durationUnits: typing.Text = ...
    """Event duration length units."""

    numOfCycles: builtins.float = ...
    """Number of cycles defined for this random vibe event."""

    cycleType: typing.Text = ...
    """The cycle type. For example: "COUNT", "DUTY CYCLE", "PER YEAR", "PER HOUR", etc."""

    orientation: typing.Text = ...
    """PCB orientation in the format of azimuth, elevation. Example: "30,15"."""

    profileType: typing.Text = ...
    """Random load profile type. Example valid value is "Uniaxial"."""

    loadDirection: typing.Text = ...
    """Load direction in the format of x,y,z. Example: "0,0,1"."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        phaseName : typing.Text = ...,
        eventName : typing.Text = ...,
        description : typing.Text = ...,
        duration : builtins.float = ...,
        durationUnits : typing.Text = ...,
        numOfCycles : builtins.float = ...,
        cycleType : typing.Text = ...,
        orientation : typing.Text = ...,
        profileType : typing.Text = ...,
        loadDirection : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cycleType",b"cycleType","description",b"description","duration",b"duration","durationUnits",b"durationUnits","eventName",b"eventName","loadDirection",b"loadDirection","numOfCycles",b"numOfCycles","orientation",b"orientation","phaseName",b"phaseName","profileType",b"profileType","project",b"project"]) -> None: ...
global___AddRandomVibeEventRequest = AddRandomVibeEventRequest

class AddRandomVibeEventResponse(google.protobuf.message.Message):
    """*
    Response from adding a random vibe life cycle event.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of validation errors."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        errors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","returnCode",b"returnCode"]) -> None: ...
global___AddRandomVibeEventResponse = AddRandomVibeEventResponse

class CreateLifePhaseRequest(google.protobuf.message.Message):
    """*
    Request for creating a life phase.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PHASENAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DURATION_FIELD_NUMBER: builtins.int
    DURATIONUNITS_FIELD_NUMBER: builtins.int
    NUMOFCYCLES_FIELD_NUMBER: builtins.int
    CYCLETYPE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    phaseName: typing.Text = ...
    """The name of new life phase."""

    description: typing.Text = ...
    """Description of new life phase."""

    duration: builtins.float = ...
    """Event duration length."""

    durationUnits: typing.Text = ...
    """Event duration length units."""

    numOfCycles: builtins.float = ...
    """Number of cycles defined for new life phase."""

    cycleType: typing.Text = ...
    """The cycle type. For example: "COUNT", "DUTY CYCLE", "PER YEAR", "PER HOUR", etc."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        phaseName : typing.Text = ...,
        description : typing.Text = ...,
        duration : builtins.float = ...,
        durationUnits : typing.Text = ...,
        numOfCycles : builtins.float = ...,
        cycleType : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cycleType",b"cycleType","description",b"description","duration",b"duration","durationUnits",b"durationUnits","numOfCycles",b"numOfCycles","phaseName",b"phaseName","project",b"project"]) -> None: ...
global___CreateLifePhaseRequest = CreateLifePhaseRequest

class CreateLifePhaseResponse(google.protobuf.message.Message):
    """*
    Response from creating a life phase.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of error messages."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        errors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","returnCode",b"returnCode"]) -> None: ...
global___CreateLifePhaseResponse = CreateLifePhaseResponse

class AddHarmonicVibeProfilesRequest(google.protobuf.message.Message):
    """*
    Request to define and add new harmonic vibe life cycle event profiles.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class HarmonicVibeProfile(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class Entry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            FREQ_FIELD_NUMBER: builtins.int
            LOAD_FIELD_NUMBER: builtins.int
            freq: builtins.float = ...
            """Frequency."""

            load: builtins.float = ...
            """Load."""

            def __init__(self,
                *,
                freq : builtins.float = ...,
                load : builtins.float = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["freq",b"freq","load",b"load"]) -> None: ...

        PHASENAME_FIELD_NUMBER: builtins.int
        EVENTNAME_FIELD_NUMBER: builtins.int
        PROFILENAME_FIELD_NUMBER: builtins.int
        FREQUNITS_FIELD_NUMBER: builtins.int
        LOADUNITS_FIELD_NUMBER: builtins.int
        HARMONICVIBEPROFILEENTRIES_FIELD_NUMBER: builtins.int
        TRIAXIALAXIS_FIELD_NUMBER: builtins.int
        phaseName: typing.Text = ...
        """The name of the life cycle phase this event is associated."""

        eventName: typing.Text = ...
        """Name of the harmonic event."""

        profileName: typing.Text = ...
        """Name of the harmonic profile."""

        freqUnits: typing.Text = ...
        """Frequency units."""

        loadUnits: typing.Text = ...
        """Load units."""

        @property
        def harmonicVibeProfileEntries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AddHarmonicVibeProfilesRequest.HarmonicVibeProfile.Entry]:
            """List of frequency and load values for a harmonic vibe life cycle phase."""
            pass
        triaxialAxis: typing.Text = ...
        """If the harmonic profile type is "Triaxial", the axis this profile should be assigned to. Valid values are: x, y, z."""

        def __init__(self,
            *,
            phaseName : typing.Text = ...,
            eventName : typing.Text = ...,
            profileName : typing.Text = ...,
            freqUnits : typing.Text = ...,
            loadUnits : typing.Text = ...,
            harmonicVibeProfileEntries : typing.Optional[typing.Iterable[global___AddHarmonicVibeProfilesRequest.HarmonicVibeProfile.Entry]] = ...,
            triaxialAxis : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["eventName",b"eventName","freqUnits",b"freqUnits","harmonicVibeProfileEntries",b"harmonicVibeProfileEntries","loadUnits",b"loadUnits","phaseName",b"phaseName","profileName",b"profileName","triaxialAxis",b"triaxialAxis"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    HARMONICVIBEPROFILES_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    @property
    def harmonicVibeProfiles(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AddHarmonicVibeProfilesRequest.HarmonicVibeProfile]:
        """List of harmonic vibe life cycle event profiles for a specified project."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        harmonicVibeProfiles : typing.Optional[typing.Iterable[global___AddHarmonicVibeProfilesRequest.HarmonicVibeProfile]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["harmonicVibeProfiles",b"harmonicVibeProfiles","project",b"project"]) -> None: ...
global___AddHarmonicVibeProfilesRequest = AddHarmonicVibeProfilesRequest

class AddHarmonicVibeProfilesResponse(google.protobuf.message.Message):
    """*
    Response from adding harmonic vibe life cycle event profiles.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of validation errors."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        errors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","returnCode",b"returnCode"]) -> None: ...
global___AddHarmonicVibeProfilesResponse = AddHarmonicVibeProfilesResponse

class LoadHarmonicProfileRequest(google.protobuf.message.Message):
    """*
    Request to load a harmonic life cycle event profile from a .dat or .csv file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class CSVProps(google.protobuf.message.Message):
        """.csv file properties. This is only required for a .csv file load."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        PROFILENAME_FIELD_NUMBER: builtins.int
        HEADERROWNUMBER_FIELD_NUMBER: builtins.int
        COLUMNDELIM_FIELD_NUMBER: builtins.int
        NUMERICFORMAT_FIELD_NUMBER: builtins.int
        FREQCOLUMN_FIELD_NUMBER: builtins.int
        FREQUNITS_FIELD_NUMBER: builtins.int
        LOADCOLUMN_FIELD_NUMBER: builtins.int
        LOADUNITS_FIELD_NUMBER: builtins.int
        profileName: typing.Text = ...
        """Name of the harmonic profile."""

        headerRowNumber: builtins.int = ...
        """Header row number in the .csv file."""

        columnDelim: typing.Text = ...
        """Delimiter to separate the columns."""

        numericFormat: typing.Text = ...
        """Numeric format."""

        freqColumn: typing.Text = ...
        """Frequency column name."""

        freqUnits: typing.Text = ...
        """Frequency units."""

        loadColumn: typing.Text = ...
        """Load column name."""

        loadUnits: typing.Text = ...
        """Load units."""

        def __init__(self,
            *,
            profileName : typing.Text = ...,
            headerRowNumber : builtins.int = ...,
            columnDelim : typing.Text = ...,
            numericFormat : typing.Text = ...,
            freqColumn : typing.Text = ...,
            freqUnits : typing.Text = ...,
            loadColumn : typing.Text = ...,
            loadUnits : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["columnDelim",b"columnDelim","freqColumn",b"freqColumn","freqUnits",b"freqUnits","headerRowNumber",b"headerRowNumber","loadColumn",b"loadColumn","loadUnits",b"loadUnits","numericFormat",b"numericFormat","profileName",b"profileName"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    PHASENAME_FIELD_NUMBER: builtins.int
    EVENTNAME_FIELD_NUMBER: builtins.int
    FILEPATH_FIELD_NUMBER: builtins.int
    HARMONICCSVPROPS_FIELD_NUMBER: builtins.int
    TRIAXIALAXIS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    phaseName: typing.Text = ...
    """The name of the life cycle phase this event is associated."""

    eventName: typing.Text = ...
    """Harmonic event name."""

    filePath: typing.Text = ...
    """The full path for the .dat or .csv file."""

    @property
    def harmonicCsvProps(self) -> global___LoadHarmonicProfileRequest.CSVProps:
        """Properties for a .csv file load."""
        pass
    triaxialAxis: typing.Text = ...
    """If the harmonic profile type is "Triaxial", the axis this profile should be assigned to. Valid values are: x, y, z."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        phaseName : typing.Text = ...,
        eventName : typing.Text = ...,
        filePath : typing.Text = ...,
        harmonicCsvProps : typing.Optional[global___LoadHarmonicProfileRequest.CSVProps] = ...,
        triaxialAxis : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["harmonicCsvProps",b"harmonicCsvProps"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["eventName",b"eventName","filePath",b"filePath","harmonicCsvProps",b"harmonicCsvProps","phaseName",b"phaseName","project",b"project","triaxialAxis",b"triaxialAxis"]) -> None: ...
global___LoadHarmonicProfileRequest = LoadHarmonicProfileRequest

class LoadHarmonicProfileResponse(google.protobuf.message.Message):
    """*
    Response from loading a harmonic vibe life cycle event profile from a .dat or .csv file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of validation errors."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        errors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","returnCode",b"returnCode"]) -> None: ...
global___LoadHarmonicProfileResponse = LoadHarmonicProfileResponse

class ListShockPulsesRequest(google.protobuf.message.Message):
    """*
    Request for a list of shock Pulses.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___ListShockPulsesRequest = ListShockPulsesRequest

class ListShockPulsesResponse(google.protobuf.message.Message):
    """*
    Represents a list of shock Pulses.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    SHOCKPULSE_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def shockPulse(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of shock pulses. For example: "FullSine", "HalfSine", "Triangle", "Sawtooth", "FullSquare"."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        shockPulse : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode","shockPulse",b"shockPulse"]) -> None: ...
global___ListShockPulsesResponse = ListShockPulsesResponse

class LoadRandomVibeProfileRequest(google.protobuf.message.Message):
    """*
    Request to load a random vibe life cycle event profile from a .dat or .csv file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class CSVProps(google.protobuf.message.Message):
        """.csv file properties. This is only required for a .csv file load."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        PROFILENAME_FIELD_NUMBER: builtins.int
        HEADERROWNUMBER_FIELD_NUMBER: builtins.int
        COLUMNDELIM_FIELD_NUMBER: builtins.int
        NUMERICFORMAT_FIELD_NUMBER: builtins.int
        FREQCOLUMN_FIELD_NUMBER: builtins.int
        FREQUNITS_FIELD_NUMBER: builtins.int
        AMPLCOLUMN_FIELD_NUMBER: builtins.int
        AMPLUNITS_FIELD_NUMBER: builtins.int
        profileName: typing.Text = ...
        """Name of the random vibe profile."""

        headerRowNumber: builtins.int = ...
        """Header row number in the .csv file."""

        columnDelim: typing.Text = ...
        """Delimiter to separate the columns."""

        numericFormat: typing.Text = ...
        """Numeric format."""

        freqColumn: typing.Text = ...
        """Frequency column name."""

        freqUnits: typing.Text = ...
        """Frequency units."""

        amplColumn: typing.Text = ...
        """Amplitude column name."""

        amplUnits: typing.Text = ...
        """Amplitude units."""

        def __init__(self,
            *,
            profileName : typing.Text = ...,
            headerRowNumber : builtins.int = ...,
            columnDelim : typing.Text = ...,
            numericFormat : typing.Text = ...,
            freqColumn : typing.Text = ...,
            freqUnits : typing.Text = ...,
            amplColumn : typing.Text = ...,
            amplUnits : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["amplColumn",b"amplColumn","amplUnits",b"amplUnits","columnDelim",b"columnDelim","freqColumn",b"freqColumn","freqUnits",b"freqUnits","headerRowNumber",b"headerRowNumber","numericFormat",b"numericFormat","profileName",b"profileName"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    PHASENAME_FIELD_NUMBER: builtins.int
    EVENTNAME_FIELD_NUMBER: builtins.int
    FILEPATH_FIELD_NUMBER: builtins.int
    RANDOMVIBECSVPROPS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    phaseName: typing.Text = ...
    """The name of the life cycle phase this event is associated."""

    eventName: typing.Text = ...
    """Random vibe event name."""

    filePath: typing.Text = ...
    """The full path for the .dat or .csv file."""

    @property
    def randomVibeCsvProps(self) -> global___LoadRandomVibeProfileRequest.CSVProps:
        """Properties for a .csv file load."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        phaseName : typing.Text = ...,
        eventName : typing.Text = ...,
        filePath : typing.Text = ...,
        randomVibeCsvProps : typing.Optional[global___LoadRandomVibeProfileRequest.CSVProps] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["randomVibeCsvProps",b"randomVibeCsvProps"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["eventName",b"eventName","filePath",b"filePath","phaseName",b"phaseName","project",b"project","randomVibeCsvProps",b"randomVibeCsvProps"]) -> None: ...
global___LoadRandomVibeProfileRequest = LoadRandomVibeProfileRequest

class LoadRandomVibeProfileResponse(google.protobuf.message.Message):
    """*
    Response from loading a random vibe life cycle event profile from a .dat or .csv file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of validation errors."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        errors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","returnCode",b"returnCode"]) -> None: ...
global___LoadRandomVibeProfileResponse = LoadRandomVibeProfileResponse

class AddRandomVibeProfilesRequest(google.protobuf.message.Message):
    """*
    Request to define and add new random vibe life cycle event profiles.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class RandomVibeProfile(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class Entry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            FREQ_FIELD_NUMBER: builtins.int
            AMPL_FIELD_NUMBER: builtins.int
            freq: builtins.float = ...
            """Frequency."""

            ampl: builtins.float = ...
            """Amplitude."""

            def __init__(self,
                *,
                freq : builtins.float = ...,
                ampl : builtins.float = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["ampl",b"ampl","freq",b"freq"]) -> None: ...

        PHASENAME_FIELD_NUMBER: builtins.int
        EVENTNAME_FIELD_NUMBER: builtins.int
        PROFILENAME_FIELD_NUMBER: builtins.int
        FREQUNITS_FIELD_NUMBER: builtins.int
        AMPLUNITS_FIELD_NUMBER: builtins.int
        RANDOMVIBEPROFILEENTRIES_FIELD_NUMBER: builtins.int
        phaseName: typing.Text = ...
        """The name of the life cycle phase this event is associated."""

        eventName: typing.Text = ...
        """Name of the random vibe event."""

        profileName: typing.Text = ...
        """Name of the random vibe profile."""

        freqUnits: typing.Text = ...
        """Frequency units."""

        amplUnits: typing.Text = ...
        """Amplitude units."""

        @property
        def randomVibeProfileEntries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AddRandomVibeProfilesRequest.RandomVibeProfile.Entry]:
            """List of frequency and amplitude values for a random vibe life cycle event."""
            pass
        def __init__(self,
            *,
            phaseName : typing.Text = ...,
            eventName : typing.Text = ...,
            profileName : typing.Text = ...,
            freqUnits : typing.Text = ...,
            amplUnits : typing.Text = ...,
            randomVibeProfileEntries : typing.Optional[typing.Iterable[global___AddRandomVibeProfilesRequest.RandomVibeProfile.Entry]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["amplUnits",b"amplUnits","eventName",b"eventName","freqUnits",b"freqUnits","phaseName",b"phaseName","profileName",b"profileName","randomVibeProfileEntries",b"randomVibeProfileEntries"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    RANDOMVIBEPROFILES_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    @property
    def randomVibeProfiles(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AddRandomVibeProfilesRequest.RandomVibeProfile]:
        """List of random vibe life cycle event profiles for a specified project."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        randomVibeProfiles : typing.Optional[typing.Iterable[global___AddRandomVibeProfilesRequest.RandomVibeProfile]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","randomVibeProfiles",b"randomVibeProfiles"]) -> None: ...
global___AddRandomVibeProfilesRequest = AddRandomVibeProfilesRequest

class AddRandomVibeProfilesResponse(google.protobuf.message.Message):
    """*
    Response from adding random vibe profiles.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of validation errors."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        errors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","returnCode",b"returnCode"]) -> None: ...
global___AddRandomVibeProfilesResponse = AddRandomVibeProfilesResponse

class LoadShockProfileDatasetRequest(google.protobuf.message.Message):
    """*
    Request to load a shock life cycle event profile using the dataset (time and load) from a .dat or .csv file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class CSVProps(google.protobuf.message.Message):
        """.csv file properties. This is only required for a .csv file load."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        PROFILENAME_FIELD_NUMBER: builtins.int
        HEADERROWNUMBER_FIELD_NUMBER: builtins.int
        COLUMNDELIM_FIELD_NUMBER: builtins.int
        NUMERICFORMAT_FIELD_NUMBER: builtins.int
        TIMECOLUMN_FIELD_NUMBER: builtins.int
        TIMEUNITS_FIELD_NUMBER: builtins.int
        LOADCOLUMN_FIELD_NUMBER: builtins.int
        LOADUNITS_FIELD_NUMBER: builtins.int
        profileName: typing.Text = ...
        """Name of the shock profile."""

        headerRowNumber: builtins.int = ...
        """Header row number in the .csv file."""

        columnDelim: typing.Text = ...
        """Delimiter to separate the columns."""

        numericFormat: typing.Text = ...
        """Numeric format."""

        timeColumn: typing.Text = ...
        """Time column name."""

        timeUnits: typing.Text = ...
        """Time units."""

        loadColumn: typing.Text = ...
        """Load column name."""

        loadUnits: typing.Text = ...
        """Load units."""

        def __init__(self,
            *,
            profileName : typing.Text = ...,
            headerRowNumber : builtins.int = ...,
            columnDelim : typing.Text = ...,
            numericFormat : typing.Text = ...,
            timeColumn : typing.Text = ...,
            timeUnits : typing.Text = ...,
            loadColumn : typing.Text = ...,
            loadUnits : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["columnDelim",b"columnDelim","headerRowNumber",b"headerRowNumber","loadColumn",b"loadColumn","loadUnits",b"loadUnits","numericFormat",b"numericFormat","profileName",b"profileName","timeColumn",b"timeColumn","timeUnits",b"timeUnits"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    PHASENAME_FIELD_NUMBER: builtins.int
    EVENTNAME_FIELD_NUMBER: builtins.int
    FILEPATH_FIELD_NUMBER: builtins.int
    SHOCKDSCSVPROPS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    phaseName: typing.Text = ...
    """The name of the life cycle phase this event is associated."""

    eventName: typing.Text = ...
    """Shock event name."""

    filePath: typing.Text = ...
    """The full path for the .dat or .csv file."""

    @property
    def shockDsCsvProps(self) -> global___LoadShockProfileDatasetRequest.CSVProps:
        """Properties for a .csv file load."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        phaseName : typing.Text = ...,
        eventName : typing.Text = ...,
        filePath : typing.Text = ...,
        shockDsCsvProps : typing.Optional[global___LoadShockProfileDatasetRequest.CSVProps] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["shockDsCsvProps",b"shockDsCsvProps"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["eventName",b"eventName","filePath",b"filePath","phaseName",b"phaseName","project",b"project","shockDsCsvProps",b"shockDsCsvProps"]) -> None: ...
global___LoadShockProfileDatasetRequest = LoadShockProfileDatasetRequest

class LoadShockProfileDatasetResponse(google.protobuf.message.Message):
    """*
    Response from loading a shock profile using the dataset from a .dat or .csv file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of validation errors."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        errors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","returnCode",b"returnCode"]) -> None: ...
global___LoadShockProfileDatasetResponse = LoadShockProfileDatasetResponse

class LoadShockProfilePulsesRequest(google.protobuf.message.Message):
    """*
    Request to load a shock life cycle event profile using pulses from a .dat or .csv file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class CSVProps(google.protobuf.message.Message):
        """.csv file properties. This is only required for a .csv file load."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        PROFILENAME_FIELD_NUMBER: builtins.int
        HEADERROWNUMBER_FIELD_NUMBER: builtins.int
        COLUMNDELIM_FIELD_NUMBER: builtins.int
        NUMERICFORMAT_FIELD_NUMBER: builtins.int
        DURATION_FIELD_NUMBER: builtins.int
        DURATIONUNITS_FIELD_NUMBER: builtins.int
        SAMPLERATE_FIELD_NUMBER: builtins.int
        SAMPLERATEUNITS_FIELD_NUMBER: builtins.int
        SHAPECOLUMN_FIELD_NUMBER: builtins.int
        LOADCOLUMN_FIELD_NUMBER: builtins.int
        LOADUNITS_FIELD_NUMBER: builtins.int
        FREQCOLUMN_FIELD_NUMBER: builtins.int
        FREQUNITS_FIELD_NUMBER: builtins.int
        DECAYCOLUMN_FIELD_NUMBER: builtins.int
        profileName: typing.Text = ...
        """Name of the shock profile."""

        headerRowNumber: builtins.int = ...
        """Header row number in the .csv file."""

        columnDelim: typing.Text = ...
        """Delimiter to separate the columns."""

        numericFormat: typing.Text = ...
        """Numeric format."""

        duration: builtins.float = ...
        """Pulse duration length."""

        durationUnits: typing.Text = ...
        """Pulse duration time units."""

        sampleRate: builtins.float = ...
        """Sample rate."""

        sampleRateUnits: typing.Text = ...
        """Sample rate units."""

        shapeColumn: typing.Text = ...
        """Pulse shape column name."""

        loadColumn: typing.Text = ...
        """Load column name."""

        loadUnits: typing.Text = ...
        """Load units."""

        freqColumn: typing.Text = ...
        """Frequency column name."""

        freqUnits: typing.Text = ...
        """Frequency units."""

        decayColumn: typing.Text = ...
        """Decay column name."""

        def __init__(self,
            *,
            profileName : typing.Text = ...,
            headerRowNumber : builtins.int = ...,
            columnDelim : typing.Text = ...,
            numericFormat : typing.Text = ...,
            duration : builtins.float = ...,
            durationUnits : typing.Text = ...,
            sampleRate : builtins.float = ...,
            sampleRateUnits : typing.Text = ...,
            shapeColumn : typing.Text = ...,
            loadColumn : typing.Text = ...,
            loadUnits : typing.Text = ...,
            freqColumn : typing.Text = ...,
            freqUnits : typing.Text = ...,
            decayColumn : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["columnDelim",b"columnDelim","decayColumn",b"decayColumn","duration",b"duration","durationUnits",b"durationUnits","freqColumn",b"freqColumn","freqUnits",b"freqUnits","headerRowNumber",b"headerRowNumber","loadColumn",b"loadColumn","loadUnits",b"loadUnits","numericFormat",b"numericFormat","profileName",b"profileName","sampleRate",b"sampleRate","sampleRateUnits",b"sampleRateUnits","shapeColumn",b"shapeColumn"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    PHASENAME_FIELD_NUMBER: builtins.int
    EVENTNAME_FIELD_NUMBER: builtins.int
    FILEPATH_FIELD_NUMBER: builtins.int
    SHOCKPULSESCSVPROPS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    phaseName: typing.Text = ...
    """The name of the life cycle phase this event is associated."""

    eventName: typing.Text = ...
    """Shock event name."""

    filePath: typing.Text = ...
    """The full path for the .dat or .csv file."""

    @property
    def shockPulsesCsvProps(self) -> global___LoadShockProfilePulsesRequest.CSVProps:
        """Properties for a .csv file load."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        phaseName : typing.Text = ...,
        eventName : typing.Text = ...,
        filePath : typing.Text = ...,
        shockPulsesCsvProps : typing.Optional[global___LoadShockProfilePulsesRequest.CSVProps] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["shockPulsesCsvProps",b"shockPulsesCsvProps"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["eventName",b"eventName","filePath",b"filePath","phaseName",b"phaseName","project",b"project","shockPulsesCsvProps",b"shockPulsesCsvProps"]) -> None: ...
global___LoadShockProfilePulsesRequest = LoadShockProfilePulsesRequest

class LoadShockProfilePulsesResponse(google.protobuf.message.Message):
    """*
    Response from loading a shock profile using pulses from a .dat or .csv file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of validation errors."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        errors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","returnCode",b"returnCode"]) -> None: ...
global___LoadShockProfilePulsesResponse = LoadShockProfilePulsesResponse

class ListAmplUnitsRequest(google.protobuf.message.Message):
    """*
    Request for a list of amplitude units.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___ListAmplUnitsRequest = ListAmplUnitsRequest

class ListAmplUnitsResponse(google.protobuf.message.Message):
    """*
    Represents a list of amplitude units.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    AMPLUNITS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def amplUnits(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of amplitude units."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        amplUnits : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["amplUnits",b"amplUnits","returnCode",b"returnCode"]) -> None: ...
global___ListAmplUnitsResponse = ListAmplUnitsResponse

class Events(google.protobuf.message.Message):
    """*
    Represents an event.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PHASENAME_FIELD_NUMBER: builtins.int
    EVENTNAME_FIELD_NUMBER: builtins.int
    phaseName: typing.Text = ...
    """The name of the life cycle phase this event is associated."""

    eventName: typing.Text = ...
    """Event name."""

    def __init__(self,
        *,
        phaseName : typing.Text = ...,
        eventName : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["eventName",b"eventName","phaseName",b"phaseName"]) -> None: ...
global___Events = Events

class ListRandomVibeEventsRequest(google.protobuf.message.Message):
    """*
    Request for a list of random vibe events defined for a project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project"]) -> None: ...
global___ListRandomVibeEventsRequest = ListRandomVibeEventsRequest

class ListRandomVibeEventsResponse(google.protobuf.message.Message):
    """*
    Represents a list of random vibe events defined for a project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    EVENT_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def event(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Events]:
        """List of random vibe events."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        event : typing.Optional[typing.Iterable[global___Events]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["event",b"event","returnCode",b"returnCode"]) -> None: ...
global___ListRandomVibeEventsResponse = ListRandomVibeEventsResponse

class ListHarmonicEventsRequest(google.protobuf.message.Message):
    """*
    Request for a list of harmonic events defined for a project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project"]) -> None: ...
global___ListHarmonicEventsRequest = ListHarmonicEventsRequest

class ListHarmonicEventsResponse(google.protobuf.message.Message):
    """*
    Represents a list of harmonic events defined for a project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    EVENT_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def event(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Events]:
        """List of harmonic events."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        event : typing.Optional[typing.Iterable[global___Events]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["event",b"event","returnCode",b"returnCode"]) -> None: ...
global___ListHarmonicEventsResponse = ListHarmonicEventsResponse

class ListShockEventsRequest(google.protobuf.message.Message):
    """*
    Request for a list of shock events defined for a project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project"]) -> None: ...
global___ListShockEventsRequest = ListShockEventsRequest

class ListShockEventsResponse(google.protobuf.message.Message):
    """*
    Represents a list of shock events defined for a project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    EVENT_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def event(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Events]:
        """List of shock events."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        event : typing.Optional[typing.Iterable[global___Events]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["event",b"event","returnCode",b"returnCode"]) -> None: ...
global___ListShockEventsResponse = ListShockEventsResponse

class DeleteEventRequest(google.protobuf.message.Message):
    """*
    Request to delete a life cycle event in a project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PHASENAME_FIELD_NUMBER: builtins.int
    EVENTNAME_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    phaseName: typing.Text = ...
    """The name of the life cycle phase from which to delete this event."""

    eventName: typing.Text = ...
    """Name of the event to be deleted."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        phaseName : typing.Text = ...,
        eventName : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["eventName",b"eventName","phaseName",b"phaseName","project",b"project"]) -> None: ...
global___DeleteEventRequest = DeleteEventRequest

class DeletePhaseRequest(google.protobuf.message.Message):
    """*
    Request for deleting a life phase
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PHASENAME_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    phaseName: typing.Text = ...
    """Sherlock life phase name."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        phaseName : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["phaseName",b"phaseName","project",b"project"]) -> None: ...
global___DeletePhaseRequest = DeletePhaseRequest

class DeleteLifePhaseResponse(google.protobuf.message.Message):
    """*
    Response for deleting a life phase
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> None: ...
global___DeleteLifePhaseResponse = DeleteLifePhaseResponse

class ImportThermalSignalRequest(google.protobuf.message.Message):
    """*
    Request for importing a thermal signal file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ThermalSignalFileProperties(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        HEADERROWCOUNT_FIELD_NUMBER: builtins.int
        NUMERICFORMAT_FIELD_NUMBER: builtins.int
        COLUMNDELIMITER_FIELD_NUMBER: builtins.int
        TIMECOLUMN_FIELD_NUMBER: builtins.int
        TIMEUNITS_FIELD_NUMBER: builtins.int
        TEMPERATURECOLUMN_FIELD_NUMBER: builtins.int
        TEMPERATUREUNITS_FIELD_NUMBER: builtins.int
        headerRowCount: builtins.int = ...
        """Number of rows before the column header in the file."""

        numericFormat: typing.Text = ...
        """Numeric format for values."""

        columnDelimiter: typing.Text = ...
        """Delimiter to separate the columns."""

        timeColumn: typing.Text = ...
        """Time column name."""

        timeUnits: typing.Text = ...
        """Time units column name."""

        temperatureColumn: typing.Text = ...
        """Temperature column name."""

        temperatureUnits: typing.Text = ...
        """Temperature units column name."""

        def __init__(self,
            *,
            headerRowCount : builtins.int = ...,
            numericFormat : typing.Text = ...,
            columnDelimiter : typing.Text = ...,
            timeColumn : typing.Text = ...,
            timeUnits : typing.Text = ...,
            temperatureColumn : typing.Text = ...,
            temperatureUnits : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["columnDelimiter",b"columnDelimiter","headerRowCount",b"headerRowCount","numericFormat",b"numericFormat","temperatureColumn",b"temperatureColumn","temperatureUnits",b"temperatureUnits","timeColumn",b"timeColumn","timeUnits",b"timeUnits"]) -> None: ...

    THERMALSIGNALFILE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    PHASENAME_FIELD_NUMBER: builtins.int
    FILEPROPERTIES_FIELD_NUMBER: builtins.int
    TIMEREMOVAL_FIELD_NUMBER: builtins.int
    LOADRANGEPERCENTAGE_FIELD_NUMBER: builtins.int
    NUMBEROFRANGEBINS_FIELD_NUMBER: builtins.int
    NUMBEROFMEANBINS_FIELD_NUMBER: builtins.int
    NUMBEROFDWELLBINS_FIELD_NUMBER: builtins.int
    TEMPERATURERANGEFILTERINGLIMIT_FIELD_NUMBER: builtins.int
    TIMEFILTERINGLIMIT_FIELD_NUMBER: builtins.int
    TIMEFILTERINGLIMITUNITS_FIELD_NUMBER: builtins.int
    GENERATEDCYCLESLABEL_FIELD_NUMBER: builtins.int
    thermalSignalFile: typing.Text = ...
    """The full path to the CSV thermal signal file to be imported."""

    project: typing.Text = ...
    """Sherlock project name in which the thermal signal is imported."""

    phaseName: typing.Text = ...
    """The name of the life cycle phase this thermal signal is associated."""

    @property
    def fileProperties(self) -> global___ImportThermalSignalRequest.ThermalSignalFileProperties:
        """Thermal signal CSV file properties."""
        pass
    timeRemoval: builtins.bool = ...
    """Option to indicate that time results with shorter half-cycle durations are removed."""

    loadRangePercentage: builtins.float = ...
    """Defines the fraction of the range near peaks and valleys considered as a dwell region."""

    numberOfRangeBins: builtins.int = ...
    """Number of range bins for binning cycles, 0 for no range binning."""

    numberOfMeanBins: builtins.int = ...
    """Number of mean bins for binning cycles, 0 for no mean binning."""

    numberOfDwellBins: builtins.int = ...
    """Number of dwell bins for binning cycles, 0 for no dwell binning."""

    temperatureRangeFilteringLimit: builtins.float = ...
    """Minimum cycle range to include in results, 0 for no filtering."""

    timeFilteringLimit: builtins.float = ...
    """Maximum cycle time to include in results, default is 72 hours."""

    timeFilteringLimitUnits: typing.Text = ...
    """Time filtering limit units."""

    generatedCyclesLabel: typing.Text = ...
    """Label used to define the name of all generated thermal events."""

    def __init__(self,
        *,
        thermalSignalFile : typing.Text = ...,
        project : typing.Text = ...,
        phaseName : typing.Text = ...,
        fileProperties : typing.Optional[global___ImportThermalSignalRequest.ThermalSignalFileProperties] = ...,
        timeRemoval : builtins.bool = ...,
        loadRangePercentage : builtins.float = ...,
        numberOfRangeBins : builtins.int = ...,
        numberOfMeanBins : builtins.int = ...,
        numberOfDwellBins : builtins.int = ...,
        temperatureRangeFilteringLimit : builtins.float = ...,
        timeFilteringLimit : builtins.float = ...,
        timeFilteringLimitUnits : typing.Text = ...,
        generatedCyclesLabel : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["fileProperties",b"fileProperties"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["fileProperties",b"fileProperties","generatedCyclesLabel",b"generatedCyclesLabel","loadRangePercentage",b"loadRangePercentage","numberOfDwellBins",b"numberOfDwellBins","numberOfMeanBins",b"numberOfMeanBins","numberOfRangeBins",b"numberOfRangeBins","phaseName",b"phaseName","project",b"project","temperatureRangeFilteringLimit",b"temperatureRangeFilteringLimit","thermalSignalFile",b"thermalSignalFile","timeFilteringLimit",b"timeFilteringLimit","timeFilteringLimitUnits",b"timeFilteringLimitUnits","timeRemoval",b"timeRemoval"]) -> None: ...
global___ImportThermalSignalRequest = ImportThermalSignalRequest

class SaveHarmonicProfileRequest(google.protobuf.message.Message):
    """*
    Request to save a harmonic life cycle event profile to a .dat or .csv file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PHASENAME_FIELD_NUMBER: builtins.int
    EVENTNAME_FIELD_NUMBER: builtins.int
    TRIAXIALAXIS_FIELD_NUMBER: builtins.int
    FILEPATH_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    phaseName: typing.Text = ...
    """The name of the life cycle phase this event is associated with."""

    eventName: typing.Text = ...
    """Harmonic event name."""

    triaxialAxis: typing.Text = ...
    """If the harmonic profile type is "Triaxial", the axis this profile should be assigned to. Valid values are: x, y, z."""

    filePath: typing.Text = ...
    """Full destination path for the .dat or .csv file."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        phaseName : typing.Text = ...,
        eventName : typing.Text = ...,
        triaxialAxis : typing.Text = ...,
        filePath : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["eventName",b"eventName","filePath",b"filePath","phaseName",b"phaseName","project",b"project","triaxialAxis",b"triaxialAxis"]) -> None: ...
global___SaveHarmonicProfileRequest = SaveHarmonicProfileRequest

class SaveRandomVibeProfileRequest(google.protobuf.message.Message):
    """*
    Request to save a random vibe profile to a .dat or .csv file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PHASENAME_FIELD_NUMBER: builtins.int
    EVENTNAME_FIELD_NUMBER: builtins.int
    FILEPATH_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    phaseName: typing.Text = ...
    """The name of the life cycle phase this event is associated with."""

    eventName: typing.Text = ...
    """Random vibe event name."""

    filePath: typing.Text = ...
    """Full destination path for the .dat or .csv file."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        phaseName : typing.Text = ...,
        eventName : typing.Text = ...,
        filePath : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["eventName",b"eventName","filePath",b"filePath","phaseName",b"phaseName","project",b"project"]) -> None: ...
global___SaveRandomVibeProfileRequest = SaveRandomVibeProfileRequest

class SaveShockPulseProfileRequest(google.protobuf.message.Message):
    """*
    Request to save a pulse shock profile to a .dat or .csv file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PHASENAME_FIELD_NUMBER: builtins.int
    EVENTNAME_FIELD_NUMBER: builtins.int
    FILEPATH_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    phaseName: typing.Text = ...
    """The name of the life cycle phase this event is associated with."""

    eventName: typing.Text = ...
    """Shock event name."""

    filePath: typing.Text = ...
    """Full destination path for the .dat or .csv file."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        phaseName : typing.Text = ...,
        eventName : typing.Text = ...,
        filePath : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["eventName",b"eventName","filePath",b"filePath","phaseName",b"phaseName","project",b"project"]) -> None: ...
global___SaveShockPulseProfileRequest = SaveShockPulseProfileRequest

class SaveThermalProfileRequest(google.protobuf.message.Message):
    """*
    Request to save a thermal profile to a .dat or .csv file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PHASENAME_FIELD_NUMBER: builtins.int
    EVENTNAME_FIELD_NUMBER: builtins.int
    FILEPATH_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    phaseName: typing.Text = ...
    """The name of the life cycle phase this event is associated with."""

    eventName: typing.Text = ...
    """Thermal event name."""

    filePath: typing.Text = ...
    """Full destination path for the .dat or .csv file."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        phaseName : typing.Text = ...,
        eventName : typing.Text = ...,
        filePath : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["eventName",b"eventName","filePath",b"filePath","phaseName",b"phaseName","project",b"project"]) -> None: ...
global___SaveThermalProfileRequest = SaveThermalProfileRequest

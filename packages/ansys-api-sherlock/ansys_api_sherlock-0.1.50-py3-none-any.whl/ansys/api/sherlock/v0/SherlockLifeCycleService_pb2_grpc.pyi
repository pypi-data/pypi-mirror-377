"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.sherlock.v0.SherlockCommonService_pb2
import ansys.api.sherlock.v0.SherlockLifeCycleService_pb2
import grpc

class SherlockLifeCycleServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    addHarmonicEvent: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddHarmonicEventRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddHarmonicEventResponse] = ...
    """Define and add a new harmonic vibe life cycle event."""

    addHarmonicVibeProfiles: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddHarmonicVibeProfilesRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddHarmonicVibeProfilesResponse] = ...
    """Define and add new harmonic vibe life cycle event profiles."""

    addRandomVibeProfiles: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddRandomVibeProfilesRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddRandomVibeProfilesResponse] = ...
    """Define and add new random vibe life cycle event profiles."""

    addRandomVibeEvent: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddRandomVibeEventRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddRandomVibeEventResponse] = ...
    """Define and add a new random vibe life cycle event."""

    addShockEvent: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddShockEventRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddShockEventResponse] = ...
    """Define and add a new shock life cycle event."""

    addShockProfiles: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddShockProfilesRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddShockProfilesResponse] = ...
    """Define and add new shock life cycle event profiles.
    Keep in mind, the pulse duration and load values defined in the Shock Profile Editor
    are relative values used solely within the editor to define the profile shape. 
    A combination of all the primary pulse shapes is then used to define the pulse profile.
    """

    addThermalEvent: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddThermalEventRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddThermalEventResponse] = ...
    """Define and add a new thermal life cycle event."""

    addThermalProfiles: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddThermalProfilesRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddThermalProfilesResponse] = ...
    """Define and add new thermal life cycle event profiles."""

    createLifePhase: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.CreateLifePhaseRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.CreateLifePhaseResponse] = ...
    """Define and add a new life phase."""

    deleteEvent: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.DeleteEventRequest,
        ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...
    """Delete a life cycle event."""

    listAmplUnits: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListAmplUnitsRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListAmplUnitsResponse] = ...
    """Returns a list of amplitude units when adding a random vibe profile."""

    listDurationUnits: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListDurationUnitsRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListDurationUnitsResponse] = ...
    """Returns a list of duration units when adding a life cycle event."""

    listFreqUnits: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListFreqUnitsRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListFreqUnitsResponse] = ...
    """Returns a list of frequency units."""

    listHarmonicEvents: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListHarmonicEventsRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListHarmonicEventsResponse] = ...
    """Returns a list of harmonic events defined for a project."""

    listHarmonicProfileTypes: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListHarmonicProfileTypesRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListHarmonicProfileTypesResponse] = ...
    """Returns a list of harmonic load Profile types."""

    listLifeCycleEvents: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListLCEventsRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListLCEventsResponse] = ...
    """Returns a list of life cycle phases and their events given a Sherlock project directory."""

    listLifeCycleStates: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListLCStatesRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListLCStatesResponse] = ...
    """Returns a list of life cycle states."""

    listLifeCycleTypes: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListLCTypesRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListLCTypesResponse] = ...
    """Returns a list of life cycle types."""

    listRandomVibeProfileTypes: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListRandomVibeProfileTypesRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListRandomVibeProfileTypesResponse] = ...
    """Returns a list of random vibe profile types."""

    listRandomVibeEvents: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListRandomVibeEventsRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListRandomVibeEventsResponse] = ...
    """Returns a list of random vibe events defined for a project."""

    listShockEvents: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListShockEventsRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListShockEventsResponse] = ...
    """Returns a list of shock events defined for a project."""

    listShockLoadUnits: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListShockLoadUnitsRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListShockLoadUnitsResponse] = ...
    """Returns a list of shock load units."""

    listShockPulses: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListShockPulsesRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListShockPulsesResponse] = ...
    """Returns a list of shock pulses."""

    listTempUnits: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListTempUnitsRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListTempUnitsResponse] = ...
    """Returns a list of temperature units."""

    loadHarmonicProfile: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.LoadHarmonicProfileRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.LoadHarmonicProfileResponse] = ...
    """Loads a harmonic profile from a .dat or .csv file."""

    loadRandomVibeProfile: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.LoadRandomVibeProfileRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.LoadRandomVibeProfileResponse] = ...
    """Loads a random vibe profile from a .dat or .csv file."""

    loadShockProfileDataset: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.LoadShockProfileDatasetRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.LoadShockProfileDatasetResponse] = ...
    """Loads a shock profile using dataset from a .dat or .csv file."""

    loadShockProfilePulses: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.LoadShockProfilePulsesRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.LoadShockProfilePulsesResponse] = ...
    """Loads a shock profile using pulses from a .dat or .csv file."""

    loadThermalProfile: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.LoadThermalProfileRequest,
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.LoadThermalProfileResponse] = ...
    """Loads a thermal profile from a .dat or .csv file."""

    deletePhase: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.DeletePhaseRequest,
        ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...
    """Delete a life phase for a project."""

    importThermalSignal: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ImportThermalSignalRequest,
        ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...
    """Import thermal signal from a CSV file."""

    saveHarmonicProfile: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.SaveHarmonicProfileRequest,
        ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...
    """Save harmonic profile to a .csv  or a .dat file."""

    saveRandomVibeProfile: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.SaveRandomVibeProfileRequest,
        ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...
    """Save random vibe profile to a .csv or a .dat file."""

    saveShockPulseProfile: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.SaveShockPulseProfileRequest,
        ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...
    """Save shock pulse profile to a .csv or a .dat file."""

    saveThermalProfile: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.SaveThermalProfileRequest,
        ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...
    """Save thermal profile to a .csv or a .dat file."""


class SherlockLifeCycleServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def addHarmonicEvent(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddHarmonicEventRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddHarmonicEventResponse:
        """Define and add a new harmonic vibe life cycle event."""
        pass

    @abc.abstractmethod
    def addHarmonicVibeProfiles(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddHarmonicVibeProfilesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddHarmonicVibeProfilesResponse:
        """Define and add new harmonic vibe life cycle event profiles."""
        pass

    @abc.abstractmethod
    def addRandomVibeProfiles(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddRandomVibeProfilesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddRandomVibeProfilesResponse:
        """Define and add new random vibe life cycle event profiles."""
        pass

    @abc.abstractmethod
    def addRandomVibeEvent(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddRandomVibeEventRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddRandomVibeEventResponse:
        """Define and add a new random vibe life cycle event."""
        pass

    @abc.abstractmethod
    def addShockEvent(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddShockEventRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddShockEventResponse:
        """Define and add a new shock life cycle event."""
        pass

    @abc.abstractmethod
    def addShockProfiles(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddShockProfilesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddShockProfilesResponse:
        """Define and add new shock life cycle event profiles.
        Keep in mind, the pulse duration and load values defined in the Shock Profile Editor
        are relative values used solely within the editor to define the profile shape. 
        A combination of all the primary pulse shapes is then used to define the pulse profile.
        """
        pass

    @abc.abstractmethod
    def addThermalEvent(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddThermalEventRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddThermalEventResponse:
        """Define and add a new thermal life cycle event."""
        pass

    @abc.abstractmethod
    def addThermalProfiles(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddThermalProfilesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.AddThermalProfilesResponse:
        """Define and add new thermal life cycle event profiles."""
        pass

    @abc.abstractmethod
    def createLifePhase(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.CreateLifePhaseRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.CreateLifePhaseResponse:
        """Define and add a new life phase."""
        pass

    @abc.abstractmethod
    def deleteEvent(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.DeleteEventRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Delete a life cycle event."""
        pass

    @abc.abstractmethod
    def listAmplUnits(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListAmplUnitsRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListAmplUnitsResponse:
        """Returns a list of amplitude units when adding a random vibe profile."""
        pass

    @abc.abstractmethod
    def listDurationUnits(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListDurationUnitsRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListDurationUnitsResponse:
        """Returns a list of duration units when adding a life cycle event."""
        pass

    @abc.abstractmethod
    def listFreqUnits(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListFreqUnitsRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListFreqUnitsResponse:
        """Returns a list of frequency units."""
        pass

    @abc.abstractmethod
    def listHarmonicEvents(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListHarmonicEventsRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListHarmonicEventsResponse:
        """Returns a list of harmonic events defined for a project."""
        pass

    @abc.abstractmethod
    def listHarmonicProfileTypes(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListHarmonicProfileTypesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListHarmonicProfileTypesResponse:
        """Returns a list of harmonic load Profile types."""
        pass

    @abc.abstractmethod
    def listLifeCycleEvents(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListLCEventsRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListLCEventsResponse:
        """Returns a list of life cycle phases and their events given a Sherlock project directory."""
        pass

    @abc.abstractmethod
    def listLifeCycleStates(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListLCStatesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListLCStatesResponse:
        """Returns a list of life cycle states."""
        pass

    @abc.abstractmethod
    def listLifeCycleTypes(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListLCTypesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListLCTypesResponse:
        """Returns a list of life cycle types."""
        pass

    @abc.abstractmethod
    def listRandomVibeProfileTypes(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListRandomVibeProfileTypesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListRandomVibeProfileTypesResponse:
        """Returns a list of random vibe profile types."""
        pass

    @abc.abstractmethod
    def listRandomVibeEvents(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListRandomVibeEventsRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListRandomVibeEventsResponse:
        """Returns a list of random vibe events defined for a project."""
        pass

    @abc.abstractmethod
    def listShockEvents(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListShockEventsRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListShockEventsResponse:
        """Returns a list of shock events defined for a project."""
        pass

    @abc.abstractmethod
    def listShockLoadUnits(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListShockLoadUnitsRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListShockLoadUnitsResponse:
        """Returns a list of shock load units."""
        pass

    @abc.abstractmethod
    def listShockPulses(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListShockPulsesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListShockPulsesResponse:
        """Returns a list of shock pulses."""
        pass

    @abc.abstractmethod
    def listTempUnits(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListTempUnitsRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ListTempUnitsResponse:
        """Returns a list of temperature units."""
        pass

    @abc.abstractmethod
    def loadHarmonicProfile(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.LoadHarmonicProfileRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.LoadHarmonicProfileResponse:
        """Loads a harmonic profile from a .dat or .csv file."""
        pass

    @abc.abstractmethod
    def loadRandomVibeProfile(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.LoadRandomVibeProfileRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.LoadRandomVibeProfileResponse:
        """Loads a random vibe profile from a .dat or .csv file."""
        pass

    @abc.abstractmethod
    def loadShockProfileDataset(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.LoadShockProfileDatasetRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.LoadShockProfileDatasetResponse:
        """Loads a shock profile using dataset from a .dat or .csv file."""
        pass

    @abc.abstractmethod
    def loadShockProfilePulses(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.LoadShockProfilePulsesRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.LoadShockProfilePulsesResponse:
        """Loads a shock profile using pulses from a .dat or .csv file."""
        pass

    @abc.abstractmethod
    def loadThermalProfile(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.LoadThermalProfileRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.LoadThermalProfileResponse:
        """Loads a thermal profile from a .dat or .csv file."""
        pass

    @abc.abstractmethod
    def deletePhase(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.DeletePhaseRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Delete a life phase for a project."""
        pass

    @abc.abstractmethod
    def importThermalSignal(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.ImportThermalSignalRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Import thermal signal from a CSV file."""
        pass

    @abc.abstractmethod
    def saveHarmonicProfile(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.SaveHarmonicProfileRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Save harmonic profile to a .csv  or a .dat file."""
        pass

    @abc.abstractmethod
    def saveRandomVibeProfile(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.SaveRandomVibeProfileRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Save random vibe profile to a .csv or a .dat file."""
        pass

    @abc.abstractmethod
    def saveShockPulseProfile(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.SaveShockPulseProfileRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Save shock pulse profile to a .csv or a .dat file."""
        pass

    @abc.abstractmethod
    def saveThermalProfile(self,
        request: ansys.api.sherlock.v0.SherlockLifeCycleService_pb2.SaveThermalProfileRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Save thermal profile to a .csv or a .dat file."""
        pass


def add_SherlockLifeCycleServiceServicer_to_server(servicer: SherlockLifeCycleServiceServicer, server: grpc.Server) -> None: ...

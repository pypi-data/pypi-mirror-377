"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.sherlock.v0.SherlockCommonService_pb2
import ansys.api.sherlock.v0.SherlockModelService_pb2
import grpc

class SherlockModelServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    exportFEAModel: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockModelService_pb2.ExportFEAModelRequest,
        ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...
    """Export an FEA Model."""

    exportTraceReinforcementModel: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockModelService_pb2.ExportTraceReinforcementModelRequest,
        ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...
    """Export a trace reinforcement model."""

    generateTraceModel: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockModelService_pb2.GenerateTraceModelRequest,
        ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...
    """Generate a trace model."""

    exportTraceModel: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockModelService_pb2.ExportTraceModelRequest,
        ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...
    """Export a trace model."""

    exportAEDB: grpc.UnaryUnaryMultiCallable[
        ansys.api.sherlock.v0.SherlockModelService_pb2.ExportAEDBRequest,
        ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...
    """Export an Electronics Desktop model."""


class SherlockModelServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def exportFEAModel(self,
        request: ansys.api.sherlock.v0.SherlockModelService_pb2.ExportFEAModelRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Export an FEA Model."""
        pass

    @abc.abstractmethod
    def exportTraceReinforcementModel(self,
        request: ansys.api.sherlock.v0.SherlockModelService_pb2.ExportTraceReinforcementModelRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Export a trace reinforcement model."""
        pass

    @abc.abstractmethod
    def generateTraceModel(self,
        request: ansys.api.sherlock.v0.SherlockModelService_pb2.GenerateTraceModelRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Generate a trace model."""
        pass

    @abc.abstractmethod
    def exportTraceModel(self,
        request: ansys.api.sherlock.v0.SherlockModelService_pb2.ExportTraceModelRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Export a trace model."""
        pass

    @abc.abstractmethod
    def exportAEDB(self,
        request: ansys.api.sherlock.v0.SherlockModelService_pb2.ExportAEDBRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Export an Electronics Desktop model."""
        pass


def add_SherlockModelServiceServicer_to_server(servicer: SherlockModelServiceServicer, server: grpc.Server) -> None: ...

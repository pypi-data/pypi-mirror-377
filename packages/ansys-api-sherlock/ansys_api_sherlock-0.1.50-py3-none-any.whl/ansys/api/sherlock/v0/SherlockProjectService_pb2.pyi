"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import ansys.api.sherlock.v0.SherlockCommonService_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class GenReportRequest(google.protobuf.message.Message):
    """*
    Request for project report.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    AUTHOR_FIELD_NUMBER: builtins.int
    COMPANY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    author: typing.Text = ...
    """Name of the author who generates the report."""

    company: typing.Text = ...
    """Name of author's company."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        author : typing.Text = ...,
        company : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["author",b"author","company",b"company","project",b"project"]) -> None: ...
global___GenReportRequest = GenReportRequest

class GenReportResponse(google.protobuf.message.Message):
    """*
    Streams the project report in chunks.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONTENT_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    RETURNCODE_FIELD_NUMBER: builtins.int
    content: builtins.bytes = ...
    """A chunk of the project report being returned in increments."""

    size: builtins.int = ...
    """Size of the chunk returned."""

    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    def __init__(self,
        *,
        content : builtins.bytes = ...,
        size : builtins.int = ...,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["content",b"content","returnCode",b"returnCode","size",b"size"]) -> None: ...
global___GenReportResponse = GenReportResponse

class GenCCAReportRequest(google.protobuf.message.Message):
    """*
    Request for project CCA report.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCA_FIELD_NUMBER: builtins.int
    AUTHOR_FIELD_NUMBER: builtins.int
    COMPANY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    cca: typing.Text = ...
    """Project CCA name."""

    author: typing.Text = ...
    """Name of the author who generates the report."""

    company: typing.Text = ...
    """Name of author's company."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        cca : typing.Text = ...,
        author : typing.Text = ...,
        company : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["author",b"author","cca",b"cca","company",b"company","project",b"project"]) -> None: ...
global___GenCCAReportRequest = GenCCAReportRequest

class GenCCAReportResponse(google.protobuf.message.Message):
    """*
    Streams the project CCA report in chunks.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONTENT_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    RETURNCODE_FIELD_NUMBER: builtins.int
    content: builtins.bytes = ...
    """A chunk of the project CCA report being returned in increments."""

    size: builtins.int = ...
    """Size of the chunk returned."""

    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    def __init__(self,
        *,
        content : builtins.bytes = ...,
        size : builtins.int = ...,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["content",b"content","returnCode",b"returnCode","size",b"size"]) -> None: ...
global___GenCCAReportResponse = GenCCAReportResponse

class ImportODBRequest(google.protobuf.message.Message):
    """*
    Request for importing an ODB++ archive.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ARCHIVEFILE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    PROCESSLAYERTHICKNESS_FIELD_NUMBER: builtins.int
    INCLUDEOTHERLAYERS_FIELD_NUMBER: builtins.int
    PROCESSCUTOUTFILE_FIELD_NUMBER: builtins.int
    GUESSPARTPROPERTIES_FIELD_NUMBER: builtins.int
    IMSSTACKUP_FIELD_NUMBER: builtins.int
    POLYLINESIMPLIFICATION_FIELD_NUMBER: builtins.int
    POLYLINETOLERANCE_FIELD_NUMBER: builtins.int
    POLYLINETOLERANCEUNITS_FIELD_NUMBER: builtins.int
    archiveFile: typing.Text = ...
    """Full path to the ODB++ archive file to be imported."""

    project: typing.Text = ...
    """Sherlock project name. If empty, the filename will be used for the project name."""

    ccaName: typing.Text = ...
    """Project CCA name. If empty, the filename will be used for the CCA name."""

    processLayerThickness: builtins.bool = ...
    """Option to assign stackup thickness."""

    includeOtherLayers: builtins.bool = ...
    """Option to include other layers."""

    processCutoutFile: builtins.bool = ...
    """Option to process cutouts."""

    guessPartProperties: builtins.bool = ...
    """Option to guess part properties."""

    imsStackup: builtins.bool = ...
    """Option to generate IMS stackup."""

    polylineSimplification: builtins.bool = ...
    """Option to enable polyline simplification."""

    polylineTolerance: builtins.float = ...
    """Polyline simplification tolerance."""

    polylineToleranceUnits: typing.Text = ...
    """Polyline simplification tolerance units."""

    def __init__(self,
        *,
        archiveFile : typing.Text = ...,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        processLayerThickness : builtins.bool = ...,
        includeOtherLayers : builtins.bool = ...,
        processCutoutFile : builtins.bool = ...,
        guessPartProperties : builtins.bool = ...,
        imsStackup : builtins.bool = ...,
        polylineSimplification : builtins.bool = ...,
        polylineTolerance : builtins.float = ...,
        polylineToleranceUnits : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["archiveFile",b"archiveFile","ccaName",b"ccaName","guessPartProperties",b"guessPartProperties","imsStackup",b"imsStackup","includeOtherLayers",b"includeOtherLayers","polylineSimplification",b"polylineSimplification","polylineTolerance",b"polylineTolerance","polylineToleranceUnits",b"polylineToleranceUnits","processCutoutFile",b"processCutoutFile","processLayerThickness",b"processLayerThickness","project",b"project"]) -> None: ...
global___ImportODBRequest = ImportODBRequest

class ImportIPC2581Request(google.protobuf.message.Message):
    """*
    Request for importing an IPC-2581 archive.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ARCHIVEFILE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    INCLUDEOTHERLAYERS_FIELD_NUMBER: builtins.int
    GUESSPARTPROPERTIES_FIELD_NUMBER: builtins.int
    POLYLINESIMPLIFICATION_FIELD_NUMBER: builtins.int
    POLYLINETOLERANCE_FIELD_NUMBER: builtins.int
    POLYLINETOLERANCEUNITS_FIELD_NUMBER: builtins.int
    archiveFile: typing.Text = ...
    """Full path to the IPC-2581 archive file to be imported."""

    project: typing.Text = ...
    """Sherlock project name. If empty, the filename will be used for the project name."""

    ccaName: typing.Text = ...
    """Project CCA name. If empty, the filename will be used for the CCA name."""

    includeOtherLayers: builtins.bool = ...
    """Option to include other layers."""

    guessPartProperties: builtins.bool = ...
    """Option to guess part properties."""

    polylineSimplification: builtins.bool = ...
    """Option to enable polyline simplification."""

    polylineTolerance: builtins.float = ...
    """Polyline simplification tolerance."""

    polylineToleranceUnits: typing.Text = ...
    """Polyline simplification tolerance units."""

    def __init__(self,
        *,
        archiveFile : typing.Text = ...,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        includeOtherLayers : builtins.bool = ...,
        guessPartProperties : builtins.bool = ...,
        polylineSimplification : builtins.bool = ...,
        polylineTolerance : builtins.float = ...,
        polylineToleranceUnits : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["archiveFile",b"archiveFile","ccaName",b"ccaName","guessPartProperties",b"guessPartProperties","includeOtherLayers",b"includeOtherLayers","polylineSimplification",b"polylineSimplification","polylineTolerance",b"polylineTolerance","polylineToleranceUnits",b"polylineToleranceUnits","project",b"project"]) -> None: ...
global___ImportIPC2581Request = ImportIPC2581Request

class ImportProjectZipRequest(google.protobuf.message.Message):
    """*
    Request for importing a .zip project archive when Sherlock is in multiple project mode.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CATEGORY_FIELD_NUMBER: builtins.int
    ARCHIVEFILE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    category: typing.Text = ...
    """Sherlock project category."""

    archiveFile: typing.Text = ...
    """Full path to the .zip archive file containing the project data."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        category : typing.Text = ...,
        archiveFile : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["archiveFile",b"archiveFile","category",b"category","project",b"project"]) -> None: ...
global___ImportProjectZipRequest = ImportProjectZipRequest

class ImportProjectZipSingleModeRequest(google.protobuf.message.Message):
    """*
    Request for importing a .zip project archive when Sherlock is in single project mode.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJZIPREQUEST_FIELD_NUMBER: builtins.int
    DESTFILEDIR_FIELD_NUMBER: builtins.int
    @property
    def projZipRequest(self) -> global___ImportProjectZipRequest:
        """Encapsulates project name, category and full path to project .zip archive."""
        pass
    destFileDir: typing.Text = ...
    """Directory in which the Sherlock project folder will be created."""

    def __init__(self,
        *,
        projZipRequest : typing.Optional[global___ImportProjectZipRequest] = ...,
        destFileDir : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["projZipRequest",b"projZipRequest"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["destFileDir",b"destFileDir","projZipRequest",b"projZipRequest"]) -> None: ...
global___ImportProjectZipSingleModeRequest = ImportProjectZipSingleModeRequest

class ImportGDSIIRequest(google.protobuf.message.Message):
    """*
    Request for importing a GDSII project file and any optional config files.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GDSIIFILE_FIELD_NUMBER: builtins.int
    TECHNOLOGYFILE_FIELD_NUMBER: builtins.int
    LAYERMAPFILE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    GUESSPARTPROPERTIES_FIELD_NUMBER: builtins.int
    POLYLINESIMPLIFICATIONENABLED_FIELD_NUMBER: builtins.int
    POLYLINETOLERANCE_FIELD_NUMBER: builtins.int
    POLYLINETOLERANCEUNITS_FIELD_NUMBER: builtins.int
    gdsiiFile: typing.Text = ...
    """Full path to the GDSII file (.gds, .sf, or .strm) to be imported."""

    technologyFile: typing.Text = ...
    """Full path to the optional technology file (.xml, .tech. or .layermap) to be imported. A file with a .tech extension also requires a valid layer map file (.map) to be imported."""

    layerMapFile: typing.Text = ...
    """Full path to the optional layer map file (.map) to be imported."""

    project: typing.Text = ...
    """Sherlock project name. If empty, the filename will be used for the project name."""

    ccaName: typing.Text = ...
    """Project CCA name. If empty, the filename will be used for the CCA name."""

    guessPartProperties: builtins.bool = ...
    """Option to guess part properties."""

    polylineSimplificationEnabled: builtins.bool = ...
    """Option to enable polyline simplification."""

    polylineTolerance: builtins.float = ...
    """Polyline simplification tolerance, if enabled."""

    polylineToleranceUnits: typing.Text = ...
    """Polyline simplification tolerance units, if enabled."""

    def __init__(self,
        *,
        gdsiiFile : typing.Text = ...,
        technologyFile : typing.Text = ...,
        layerMapFile : typing.Text = ...,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        guessPartProperties : builtins.bool = ...,
        polylineSimplificationEnabled : builtins.bool = ...,
        polylineTolerance : builtins.float = ...,
        polylineToleranceUnits : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","gdsiiFile",b"gdsiiFile","guessPartProperties",b"guessPartProperties","layerMapFile",b"layerMapFile","polylineSimplificationEnabled",b"polylineSimplificationEnabled","polylineTolerance",b"polylineTolerance","polylineToleranceUnits",b"polylineToleranceUnits","project",b"project","technologyFile",b"technologyFile"]) -> None: ...
global___ImportGDSIIRequest = ImportGDSIIRequest

class DeleteProjectRequest(google.protobuf.message.Message):
    """*
    Request for deleting project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project name of project to be deleted."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project"]) -> None: ...
global___DeleteProjectRequest = DeleteProjectRequest

class AddStrainMapRequest(google.protobuf.message.Message):
    """*
    Request to add strain map files to CCAs in a Sherlock project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class StrainMapFile(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _FileType:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _FileTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FileType.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            CSV: AddStrainMapRequest.StrainMapFile.FileType.ValueType = ...  # 0
            """Csv file."""

            Excel: AddStrainMapRequest.StrainMapFile.FileType.ValueType = ...  # 1
            """Excel file."""

            Image: AddStrainMapRequest.StrainMapFile.FileType.ValueType = ...  # 2
            """Image file."""

        class FileType(_FileType, metaclass=_FileTypeEnumTypeWrapper):
            pass

        CSV: AddStrainMapRequest.StrainMapFile.FileType.ValueType = ...  # 0
        """Csv file."""

        Excel: AddStrainMapRequest.StrainMapFile.FileType.ValueType = ...  # 1
        """Excel file."""

        Image: AddStrainMapRequest.StrainMapFile.FileType.ValueType = ...  # 2
        """Image file."""


        class StrainMapImageFile(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            class _LegendOrientation:
                ValueType = typing.NewType('ValueType', builtins.int)
                V: typing_extensions.TypeAlias = ValueType
            class _LegendOrientationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LegendOrientation.ValueType], builtins.type):
                DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
                Horizontal: AddStrainMapRequest.StrainMapFile.StrainMapImageFile.LegendOrientation.ValueType = ...  # 0
                """Horizontal legend orientation."""

                Vertical: AddStrainMapRequest.StrainMapFile.StrainMapImageFile.LegendOrientation.ValueType = ...  # 1
                """Vertical legend orientation."""

            class LegendOrientation(_LegendOrientation, metaclass=_LegendOrientationEnumTypeWrapper):
                pass

            Horizontal: AddStrainMapRequest.StrainMapFile.StrainMapImageFile.LegendOrientation.ValueType = ...  # 0
            """Horizontal legend orientation."""

            Vertical: AddStrainMapRequest.StrainMapFile.StrainMapImageFile.LegendOrientation.ValueType = ...  # 1
            """Vertical legend orientation."""


            class NodeCoordinate(google.protobuf.message.Message):
                DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
                VERTEXX_FIELD_NUMBER: builtins.int
                VERTEXY_FIELD_NUMBER: builtins.int
                vertexX: builtins.float = ...
                """X-coordinate of the node."""

                vertexY: builtins.float = ...
                """Y-coordinate of the node."""

                def __init__(self,
                    *,
                    vertexX : builtins.float = ...,
                    vertexY : builtins.float = ...,
                    ) -> None: ...
                def ClearField(self, field_name: typing_extensions.Literal["vertexX",b"vertexX","vertexY",b"vertexY"]) -> None: ...

            class ImageCoordinate(google.protobuf.message.Message):
                DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
                IMAGEX_FIELD_NUMBER: builtins.int
                IMAGEY_FIELD_NUMBER: builtins.int
                IMAGEH_FIELD_NUMBER: builtins.int
                IMAGEW_FIELD_NUMBER: builtins.int
                imageX: builtins.float = ...
                """X-coordinate of the upper left corner."""

                imageY: builtins.float = ...
                """Y-coordinate of the upper left corner."""

                imageH: builtins.float = ...
                """Height of the image."""

                imageW: builtins.float = ...
                """Width of the image."""

                def __init__(self,
                    *,
                    imageX : builtins.float = ...,
                    imageY : builtins.float = ...,
                    imageH : builtins.float = ...,
                    imageW : builtins.float = ...,
                    ) -> None: ...
                def ClearField(self, field_name: typing_extensions.Literal["imageH",b"imageH","imageW",b"imageW","imageX",b"imageX","imageY",b"imageY"]) -> None: ...

            class LegendCoordinate(google.protobuf.message.Message):
                DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
                LEGENDX_FIELD_NUMBER: builtins.int
                LEGENDY_FIELD_NUMBER: builtins.int
                LEGENDH_FIELD_NUMBER: builtins.int
                LEGENDW_FIELD_NUMBER: builtins.int
                legendX: builtins.float = ...
                """X-coordinate of the upper left corner."""

                legendY: builtins.float = ...
                """Y-coordinate of the upper left corner."""

                legendH: builtins.float = ...
                """Height of the legend."""

                legendW: builtins.float = ...
                """Width of the legend."""

                def __init__(self,
                    *,
                    legendX : builtins.float = ...,
                    legendY : builtins.float = ...,
                    legendH : builtins.float = ...,
                    legendW : builtins.float = ...,
                    ) -> None: ...
                def ClearField(self, field_name: typing_extensions.Literal["legendH",b"legendH","legendW",b"legendW","legendX",b"legendX","legendY",b"legendY"]) -> None: ...

            COORDINATEUNITS_FIELD_NUMBER: builtins.int
            BOARDBOUNDS_FIELD_NUMBER: builtins.int
            IMAGEBOUNDS_FIELD_NUMBER: builtins.int
            LEGENDBOUNDS_FIELD_NUMBER: builtins.int
            LEGENDORIENTATION_FIELD_NUMBER: builtins.int
            MINSTRAIN_FIELD_NUMBER: builtins.int
            MAXSTRAIN_FIELD_NUMBER: builtins.int
            STRAINUNITS_FIELD_NUMBER: builtins.int
            coordinateUnits: typing.Text = ...
            """Coordinate units used for board, lengend and image boundaries."""

            @property
            def boardBounds(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AddStrainMapRequest.StrainMapFile.StrainMapImageFile.NodeCoordinate]:
                """Coordinates of the nodes which make up the board outline."""
                pass
            @property
            def imageBounds(self) -> global___AddStrainMapRequest.StrainMapFile.StrainMapImageFile.ImageCoordinate:
                """Coordinates of the board bounds within the image."""
                pass
            @property
            def legendBounds(self) -> global___AddStrainMapRequest.StrainMapFile.StrainMapImageFile.LegendCoordinate:
                """Coordinates of the bounds of legend within the image."""
                pass
            legendOrientation: global___AddStrainMapRequest.StrainMapFile.StrainMapImageFile.LegendOrientation.ValueType = ...
            """Specify the legend orientation."""

            minStrain: builtins.float = ...
            """Minimum strain value."""

            maxStrain: builtins.float = ...
            """Maximum strain value."""

            strainUnits: typing.Text = ...
            """Units for minimum and maximum strain values."""

            def __init__(self,
                *,
                coordinateUnits : typing.Text = ...,
                boardBounds : typing.Optional[typing.Iterable[global___AddStrainMapRequest.StrainMapFile.StrainMapImageFile.NodeCoordinate]] = ...,
                imageBounds : typing.Optional[global___AddStrainMapRequest.StrainMapFile.StrainMapImageFile.ImageCoordinate] = ...,
                legendBounds : typing.Optional[global___AddStrainMapRequest.StrainMapFile.StrainMapImageFile.LegendCoordinate] = ...,
                legendOrientation : global___AddStrainMapRequest.StrainMapFile.StrainMapImageFile.LegendOrientation.ValueType = ...,
                minStrain : builtins.float = ...,
                maxStrain : builtins.float = ...,
                strainUnits : typing.Text = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["imageBounds",b"imageBounds","legendBounds",b"legendBounds"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["boardBounds",b"boardBounds","coordinateUnits",b"coordinateUnits","imageBounds",b"imageBounds","legendBounds",b"legendBounds","legendOrientation",b"legendOrientation","maxStrain",b"maxStrain","minStrain",b"minStrain","strainUnits",b"strainUnits"]) -> None: ...

        STRAINMAPFILE_FIELD_NUMBER: builtins.int
        FILECOMMENT_FIELD_NUMBER: builtins.int
        HEADERROWCOUNT_FIELD_NUMBER: builtins.int
        REFERENCEIDCOLUMN_FIELD_NUMBER: builtins.int
        STRAINCOLUMN_FIELD_NUMBER: builtins.int
        STRAINUNITS_FIELD_NUMBER: builtins.int
        CCA_FIELD_NUMBER: builtins.int
        NUMERICFORMAT_FIELD_NUMBER: builtins.int
        FILETYPE_FIELD_NUMBER: builtins.int
        IMAGEFILE_FIELD_NUMBER: builtins.int
        strainMapFile: typing.Text = ...
        """Full path to the strain map file to be added."""

        fileComment: typing.Text = ...
        """File comment text."""

        headerRowCount: builtins.int = ...
        """Number of rows before the column header in the file."""

        referenceIDColumn: typing.Text = ...
        """Reference ID column name."""

        strainColumn: typing.Text = ...
        """Strain column name."""

        strainUnits: typing.Text = ...
        """Strain units used in the strain map file. Valid units: µε, ε."""

        @property
        def cca(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Project CCA names to add the file to."""
            pass
        numericFormat: typing.Text = ...
        """Numeric format for values."""

        fileType: global___AddStrainMapRequest.StrainMapFile.FileType.ValueType = ...
        """Type of the strain map file."""

        @property
        def imageFile(self) -> global___AddStrainMapRequest.StrainMapFile.StrainMapImageFile:
            """Image strain map file properties."""
            pass
        def __init__(self,
            *,
            strainMapFile : typing.Text = ...,
            fileComment : typing.Text = ...,
            headerRowCount : builtins.int = ...,
            referenceIDColumn : typing.Text = ...,
            strainColumn : typing.Text = ...,
            strainUnits : typing.Text = ...,
            cca : typing.Optional[typing.Iterable[typing.Text]] = ...,
            numericFormat : typing.Text = ...,
            fileType : global___AddStrainMapRequest.StrainMapFile.FileType.ValueType = ...,
            imageFile : typing.Optional[global___AddStrainMapRequest.StrainMapFile.StrainMapImageFile] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["imageFile",b"imageFile"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["cca",b"cca","fileComment",b"fileComment","fileType",b"fileType","headerRowCount",b"headerRowCount","imageFile",b"imageFile","numericFormat",b"numericFormat","referenceIDColumn",b"referenceIDColumn","strainColumn",b"strainColumn","strainMapFile",b"strainMapFile","strainUnits",b"strainUnits"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    STRAINMAPFILES_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    @property
    def strainMapFiles(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AddStrainMapRequest.StrainMapFile]:
        """Strain map files and associated properties to be added."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        strainMapFiles : typing.Optional[typing.Iterable[global___AddStrainMapRequest.StrainMapFile]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","strainMapFiles",b"strainMapFiles"]) -> None: ...
global___AddStrainMapRequest = AddStrainMapRequest

class AddStrainMapResponse(google.protobuf.message.Message):
    """*
    Response from adding strain map files.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of validation errors."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        errors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","returnCode",b"returnCode"]) -> None: ...
global___AddStrainMapResponse = AddStrainMapResponse

class ListStrainMapsRequest(google.protobuf.message.Message):
    """*
    Request to list CCA strain maps for a project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCA_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    @property
    def cca(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional project CCA names to list strain maps for."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        cca : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cca",b"cca","project",b"project"]) -> None: ...
global___ListStrainMapsRequest = ListStrainMapsRequest

class ListStrainMapsResponse(google.protobuf.message.Message):
    """*
    Lists the strain maps assigned to the project CCA's.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class CcaStrainMap(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CCANAME_FIELD_NUMBER: builtins.int
        STRAINMAPS_FIELD_NUMBER: builtins.int
        ccaName: typing.Text = ...
        """Name of the CCA."""

        @property
        def strainMaps(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Strain map names assigned to the CCA."""
            pass
        def __init__(self,
            *,
            ccaName : typing.Text = ...,
            strainMaps : typing.Optional[typing.Iterable[typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","strainMaps",b"strainMaps"]) -> None: ...

    RETURNCODE_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    CCASTRAINMAPS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of errors encountered."""
        pass
    @property
    def ccaStrainMaps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ListStrainMapsResponse.CcaStrainMap]:
        """CCA strain maps assigned to the project."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        errors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ccaStrainMaps : typing.Optional[typing.Iterable[global___ListStrainMapsResponse.CcaStrainMap]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ccaStrainMaps",b"ccaStrainMaps","errors",b"errors","returnCode",b"returnCode"]) -> None: ...
global___ListStrainMapsResponse = ListStrainMapsResponse

class ListCCAsRequest(google.protobuf.message.Message):
    """*
    Request to list CCA's and sub-assembly CCA's for a project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCA_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    @property
    def cca(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional project CCA names to return."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        cca : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cca",b"cca","project",b"project"]) -> None: ...
global___ListCCAsRequest = ListCCAsRequest

class ListCCAsResponse(google.protobuf.message.Message):
    """*
    Represents the circuit cards, their properties, and sub-assemblies for a Sherlock project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class CCA(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CCANAME_FIELD_NUMBER: builtins.int
        SUBASSEMBLIES_FIELD_NUMBER: builtins.int
        ccaName: typing.Text = ...
        """Name of the CCA."""

        @property
        def subAssemblies(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ListCCAsResponse.CCA]:
            """Sub-assemblies assigned to the CCA."""
            pass
        def __init__(self,
            *,
            ccaName : typing.Text = ...,
            subAssemblies : typing.Optional[typing.Iterable[global___ListCCAsResponse.CCA]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","subAssemblies",b"subAssemblies"]) -> None: ...

    RETURNCODE_FIELD_NUMBER: builtins.int
    CCAS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def ccas(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ListCCAsResponse.CCA]:
        """CCA's assigned to the project."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        ccas : typing.Optional[typing.Iterable[global___ListCCAsResponse.CCA]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ccas",b"ccas","returnCode",b"returnCode"]) -> None: ...
global___ListCCAsResponse = ListCCAsResponse

class AddProjectRequest(google.protobuf.message.Message):
    """*
    Request to add a project to Sherlock.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CATEGORY_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    category: typing.Text = ...
    """Project category."""

    description: typing.Text = ...
    """Project description."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        category : typing.Text = ...,
        description : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["category",b"category","description",b"description","project",b"project"]) -> None: ...
global___AddProjectRequest = AddProjectRequest

class CCA(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CCANAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DEFAULTSOLDERTYPE_FIELD_NUMBER: builtins.int
    DEFAULTSTENCILTHICKNESS_FIELD_NUMBER: builtins.int
    DEFAULTSTENCILTHICKNESSUNITS_FIELD_NUMBER: builtins.int
    DEFAULTPARTTEMPRISE_FIELD_NUMBER: builtins.int
    DEFAULTPARTTEMPRISEUNITS_FIELD_NUMBER: builtins.int
    GUESSPARTPROPERTIESENABLED_FIELD_NUMBER: builtins.int
    ccaName: typing.Text = ...
    """Name of the circuit card."""

    description: typing.Text = ...
    """Description of the circuit card."""

    defaultSolderType: typing.Text = ...
    """Default solder type."""

    defaultStencilThickness: builtins.float = ...
    """Default stencil thickness."""

    defaultStencilThicknessUnits: typing.Text = ...
    """Default stencil thickness units."""

    defaultPartTempRise: builtins.float = ...
    """Default part temp rise."""

    defaultPartTempRiseUnits: typing.Text = ...
    """Default part temp rise units."""

    guessPartPropertiesEnabled: builtins.bool = ...
    """Whether to enable guess part properties."""

    def __init__(self,
        *,
        ccaName : typing.Text = ...,
        description : typing.Optional[typing.Text] = ...,
        defaultSolderType : typing.Optional[typing.Text] = ...,
        defaultStencilThickness : typing.Optional[builtins.float] = ...,
        defaultStencilThicknessUnits : typing.Optional[typing.Text] = ...,
        defaultPartTempRise : typing.Optional[builtins.float] = ...,
        defaultPartTempRiseUnits : typing.Optional[typing.Text] = ...,
        guessPartPropertiesEnabled : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_defaultPartTempRise",b"_defaultPartTempRise","_defaultPartTempRiseUnits",b"_defaultPartTempRiseUnits","_defaultSolderType",b"_defaultSolderType","_defaultStencilThickness",b"_defaultStencilThickness","_defaultStencilThicknessUnits",b"_defaultStencilThicknessUnits","_description",b"_description","_guessPartPropertiesEnabled",b"_guessPartPropertiesEnabled","defaultPartTempRise",b"defaultPartTempRise","defaultPartTempRiseUnits",b"defaultPartTempRiseUnits","defaultSolderType",b"defaultSolderType","defaultStencilThickness",b"defaultStencilThickness","defaultStencilThicknessUnits",b"defaultStencilThicknessUnits","description",b"description","guessPartPropertiesEnabled",b"guessPartPropertiesEnabled"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_defaultPartTempRise",b"_defaultPartTempRise","_defaultPartTempRiseUnits",b"_defaultPartTempRiseUnits","_defaultSolderType",b"_defaultSolderType","_defaultStencilThickness",b"_defaultStencilThickness","_defaultStencilThicknessUnits",b"_defaultStencilThicknessUnits","_description",b"_description","_guessPartPropertiesEnabled",b"_guessPartPropertiesEnabled","ccaName",b"ccaName","defaultPartTempRise",b"defaultPartTempRise","defaultPartTempRiseUnits",b"defaultPartTempRiseUnits","defaultSolderType",b"defaultSolderType","defaultStencilThickness",b"defaultStencilThickness","defaultStencilThicknessUnits",b"defaultStencilThicknessUnits","description",b"description","guessPartPropertiesEnabled",b"guessPartPropertiesEnabled"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_defaultPartTempRise",b"_defaultPartTempRise"]) -> typing.Optional[typing_extensions.Literal["defaultPartTempRise"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_defaultPartTempRiseUnits",b"_defaultPartTempRiseUnits"]) -> typing.Optional[typing_extensions.Literal["defaultPartTempRiseUnits"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_defaultSolderType",b"_defaultSolderType"]) -> typing.Optional[typing_extensions.Literal["defaultSolderType"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_defaultStencilThickness",b"_defaultStencilThickness"]) -> typing.Optional[typing_extensions.Literal["defaultStencilThickness"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_defaultStencilThicknessUnits",b"_defaultStencilThicknessUnits"]) -> typing.Optional[typing_extensions.Literal["defaultStencilThicknessUnits"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_guessPartPropertiesEnabled",b"_guessPartPropertiesEnabled"]) -> typing.Optional[typing_extensions.Literal["guessPartPropertiesEnabled"]]: ...
global___CCA = CCA

class AddCcaRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCAS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Name of the project."""

    @property
    def CCAs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CCA]:
        """CCAs to add."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        CCAs : typing.Optional[typing.Iterable[global___CCA]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["CCAs",b"CCAs","project",b"project"]) -> None: ...
global___AddCcaRequest = AddCcaRequest

class ListThermalMapsRequest(google.protobuf.message.Message):
    """*
    Request to list Thermal map files and their types for a project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCA_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    @property
    def cca(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional project CCA names to list thermal maps for."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        cca : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cca",b"cca","project",b"project"]) -> None: ...
global___ListThermalMapsRequest = ListThermalMapsRequest

class ListThermalMapsResponse(google.protobuf.message.Message):
    """*
    Represents the thermal map files and their types for a Sherlock project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class CcaThermalMap(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class ThermalMap(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            FILENAME_FIELD_NUMBER: builtins.int
            FILETYPE_FIELD_NUMBER: builtins.int
            fileName: typing.Text = ...
            """Name of the Thermal Map file."""

            fileType: typing.Text = ...
            """Thermal map file type. Possible values are: "Icepak Thermal Map (TMAP)", "Thermal Map (CSV)", "Thermal Map (Excel)", "Thermal Map (Image)"."""

            def __init__(self,
                *,
                fileName : typing.Text = ...,
                fileType : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["fileName",b"fileName","fileType",b"fileType"]) -> None: ...

        CCANAME_FIELD_NUMBER: builtins.int
        THERMALMAPS_FIELD_NUMBER: builtins.int
        ccaName: typing.Text = ...
        """Project CCA name."""

        @property
        def thermalMaps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ListThermalMapsResponse.CcaThermalMap.ThermalMap]:
            """Thermal map files assigned to the CCA."""
            pass
        def __init__(self,
            *,
            ccaName : typing.Text = ...,
            thermalMaps : typing.Optional[typing.Iterable[global___ListThermalMapsResponse.CcaThermalMap.ThermalMap]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","thermalMaps",b"thermalMaps"]) -> None: ...

    RETURNCODE_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    CCATHERMALMAPS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of errors encountered."""
        pass
    @property
    def ccaThermalMaps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ListThermalMapsResponse.CcaThermalMap]:
        """CCA thermal map files assigned to the project."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        errors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ccaThermalMaps : typing.Optional[typing.Iterable[global___ListThermalMapsResponse.CcaThermalMap]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ccaThermalMaps",b"ccaThermalMaps","errors",b"errors","returnCode",b"returnCode"]) -> None: ...
global___ListThermalMapsResponse = ListThermalMapsResponse

class UpdateThermalMapRequest(google.protobuf.message.Message):
    """*
    Request to update thermal map files to a Sherlock project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    THERMALMAPFILES_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    @property
    def thermalMapFiles(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ThermalMapFile]:
        """Thermal Map files."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        thermalMapFiles : typing.Optional[typing.Iterable[global___ThermalMapFile]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","thermalMapFiles",b"thermalMapFiles"]) -> None: ...
global___UpdateThermalMapRequest = UpdateThermalMapRequest

class ThermalMapFile(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _FileType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _FileTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FileType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        CSV: ThermalMapFile.FileType.ValueType = ...  # 0
        """Csv file."""

        Excel: ThermalMapFile.FileType.ValueType = ...  # 1
        """Excel file."""

        Image: ThermalMapFile.FileType.ValueType = ...  # 2
        """Image file."""

        TMAP: ThermalMapFile.FileType.ValueType = ...  # 3
        """Icepack file."""

    class FileType(_FileType, metaclass=_FileTypeEnumTypeWrapper):
        pass

    CSV: ThermalMapFile.FileType.ValueType = ...  # 0
    """Csv file."""

    Excel: ThermalMapFile.FileType.ValueType = ...  # 1
    """Excel file."""

    Image: ThermalMapFile.FileType.ValueType = ...  # 2
    """Image file."""

    TMAP: ThermalMapFile.FileType.ValueType = ...  # 3
    """Icepack file."""


    class _ThermalBoardSide:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ThermalBoardSideEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ThermalBoardSide.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        Bottom: ThermalMapFile.ThermalBoardSide.ValueType = ...  # 0
        """Bottom side of the board."""

        Both: ThermalMapFile.ThermalBoardSide.ValueType = ...  # 1
        """Both sides of the board."""

        Top: ThermalMapFile.ThermalBoardSide.ValueType = ...  # 2
        """Top side of the board."""

    class ThermalBoardSide(_ThermalBoardSide, metaclass=_ThermalBoardSideEnumTypeWrapper):
        pass

    Bottom: ThermalMapFile.ThermalBoardSide.ValueType = ...  # 0
    """Bottom side of the board."""

    Both: ThermalMapFile.ThermalBoardSide.ValueType = ...  # 1
    """Both sides of the board."""

    Top: ThermalMapFile.ThermalBoardSide.ValueType = ...  # 2
    """Top side of the board."""


    class ImageFile(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _LegendOrientation:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _LegendOrientationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LegendOrientation.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            Horizontal: ThermalMapFile.ImageFile.LegendOrientation.ValueType = ...  # 0
            """Horizontal legend orientation."""

            Vertical: ThermalMapFile.ImageFile.LegendOrientation.ValueType = ...  # 1
            """Vertical legend orientation."""

        class LegendOrientation(_LegendOrientation, metaclass=_LegendOrientationEnumTypeWrapper):
            pass

        Horizontal: ThermalMapFile.ImageFile.LegendOrientation.ValueType = ...  # 0
        """Horizontal legend orientation."""

        Vertical: ThermalMapFile.ImageFile.LegendOrientation.ValueType = ...  # 1
        """Vertical legend orientation."""


        class NodeCoordinate(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            VERTEXX_FIELD_NUMBER: builtins.int
            VERTEXY_FIELD_NUMBER: builtins.int
            vertexX: builtins.float = ...
            """X-coordinate of the node."""

            vertexY: builtins.float = ...
            """Y-coordinate of the node."""

            def __init__(self,
                *,
                vertexX : builtins.float = ...,
                vertexY : builtins.float = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["vertexX",b"vertexX","vertexY",b"vertexY"]) -> None: ...

        class ImageCoordinate(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            IMAGEX_FIELD_NUMBER: builtins.int
            IMAGEY_FIELD_NUMBER: builtins.int
            IMAGEH_FIELD_NUMBER: builtins.int
            IMAGEW_FIELD_NUMBER: builtins.int
            imageX: builtins.float = ...
            """X-coordinate of the upper left corner."""

            imageY: builtins.float = ...
            """Y-coordinate of the upper left corner."""

            imageH: builtins.float = ...
            """Height of the image."""

            imageW: builtins.float = ...
            """Width of the image."""

            def __init__(self,
                *,
                imageX : builtins.float = ...,
                imageY : builtins.float = ...,
                imageH : builtins.float = ...,
                imageW : builtins.float = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["imageH",b"imageH","imageW",b"imageW","imageX",b"imageX","imageY",b"imageY"]) -> None: ...

        class LegendCoordinate(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            LEGENDX_FIELD_NUMBER: builtins.int
            LEGENDY_FIELD_NUMBER: builtins.int
            LEGENDH_FIELD_NUMBER: builtins.int
            LEGENDW_FIELD_NUMBER: builtins.int
            legendX: builtins.float = ...
            """X-coordinate of the upper left corner."""

            legendY: builtins.float = ...
            """Y-coordinate of the upper left corner."""

            legendH: builtins.float = ...
            """Height of the legend."""

            legendW: builtins.float = ...
            """Width of the legend."""

            def __init__(self,
                *,
                legendX : builtins.float = ...,
                legendY : builtins.float = ...,
                legendH : builtins.float = ...,
                legendW : builtins.float = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["legendH",b"legendH","legendW",b"legendW","legendX",b"legendX","legendY",b"legendY"]) -> None: ...

        COORDINATEUNITS_FIELD_NUMBER: builtins.int
        BOARDBOUNDS_FIELD_NUMBER: builtins.int
        IMAGEBOUNDS_FIELD_NUMBER: builtins.int
        LEGENDBOUNDS_FIELD_NUMBER: builtins.int
        LEGENDORIENTATION_FIELD_NUMBER: builtins.int
        MINTEMPERATURE_FIELD_NUMBER: builtins.int
        MINTEMPERATUREUNITS_FIELD_NUMBER: builtins.int
        MAXTEMPERATURE_FIELD_NUMBER: builtins.int
        MAXTEMPERATUREUNITS_FIELD_NUMBER: builtins.int
        coordinateUnits: typing.Text = ...
        """Coordinate units used for board, lengend and image boundaries."""

        @property
        def boardBounds(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ThermalMapFile.ImageFile.NodeCoordinate]:
            """Coordinates of the nodes which make up the board outline."""
            pass
        @property
        def imageBounds(self) -> global___ThermalMapFile.ImageFile.ImageCoordinate:
            """Coordinates of the board bounds within the image."""
            pass
        @property
        def legendBounds(self) -> global___ThermalMapFile.ImageFile.LegendCoordinate:
            """Coordinates of the bounds of legend within the image."""
            pass
        legendOrientation: global___ThermalMapFile.ImageFile.LegendOrientation.ValueType = ...
        """Specify the legend orientation."""

        minTemperature: builtins.float = ...
        """Minimum temperature value."""

        minTemperatureUnits: typing.Text = ...
        """Units for minimum temperature value."""

        maxTemperature: builtins.float = ...
        """Maximum temperature value."""

        maxTemperatureUnits: typing.Text = ...
        """Units for maximum temperature value."""

        def __init__(self,
            *,
            coordinateUnits : typing.Text = ...,
            boardBounds : typing.Optional[typing.Iterable[global___ThermalMapFile.ImageFile.NodeCoordinate]] = ...,
            imageBounds : typing.Optional[global___ThermalMapFile.ImageFile.ImageCoordinate] = ...,
            legendBounds : typing.Optional[global___ThermalMapFile.ImageFile.LegendCoordinate] = ...,
            legendOrientation : global___ThermalMapFile.ImageFile.LegendOrientation.ValueType = ...,
            minTemperature : builtins.float = ...,
            minTemperatureUnits : typing.Text = ...,
            maxTemperature : builtins.float = ...,
            maxTemperatureUnits : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["imageBounds",b"imageBounds","legendBounds",b"legendBounds"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["boardBounds",b"boardBounds","coordinateUnits",b"coordinateUnits","imageBounds",b"imageBounds","legendBounds",b"legendBounds","legendOrientation",b"legendOrientation","maxTemperature",b"maxTemperature","maxTemperatureUnits",b"maxTemperatureUnits","minTemperature",b"minTemperature","minTemperatureUnits",b"minTemperatureUnits"]) -> None: ...

    class CsvExcelFile(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        HEADERROWCOUNT_FIELD_NUMBER: builtins.int
        REFERENCEIDCOLUMN_FIELD_NUMBER: builtins.int
        TEMPERATURECOLUMN_FIELD_NUMBER: builtins.int
        TEMPERATUREUNITS_FIELD_NUMBER: builtins.int
        NUMERICFORMAT_FIELD_NUMBER: builtins.int
        headerRowCount: builtins.int = ...
        """Number of rows before the column header in the file."""

        referenceIDColumn: typing.Text = ...
        """Reference ID column."""

        temperatureColumn: typing.Text = ...
        """Temperature column."""

        temperatureUnits: typing.Text = ...
        """Units for temperature values."""

        numericFormat: typing.Text = ...
        """Numeric format for values."""

        def __init__(self,
            *,
            headerRowCount : builtins.int = ...,
            referenceIDColumn : typing.Text = ...,
            temperatureColumn : typing.Text = ...,
            temperatureUnits : typing.Text = ...,
            numericFormat : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["headerRowCount",b"headerRowCount","numericFormat",b"numericFormat","referenceIDColumn",b"referenceIDColumn","temperatureColumn",b"temperatureColumn","temperatureUnits",b"temperatureUnits"]) -> None: ...

    class IcepakFile(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TEMPERATUREOFFSET_FIELD_NUMBER: builtins.int
        TEMPERATUREOFFSETUNITS_FIELD_NUMBER: builtins.int
        temperatureOffset: builtins.float = ...
        """Temperature offset."""

        temperatureOffsetUnits: typing.Text = ...
        """Units for temperature offset values."""

        def __init__(self,
            *,
            temperatureOffset : builtins.float = ...,
            temperatureOffsetUnits : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["temperatureOffset",b"temperatureOffset","temperatureOffsetUnits",b"temperatureOffsetUnits"]) -> None: ...

    FILENAME_FIELD_NUMBER: builtins.int
    FILETYPE_FIELD_NUMBER: builtins.int
    FILECOMMENT_FIELD_NUMBER: builtins.int
    THERMALBOARDSIDE_FIELD_NUMBER: builtins.int
    CSVEXCELFILE_FIELD_NUMBER: builtins.int
    IMAGEFILE_FIELD_NUMBER: builtins.int
    ICEPAKFILE_FIELD_NUMBER: builtins.int
    THERMALPROFILES_FIELD_NUMBER: builtins.int
    CCA_FIELD_NUMBER: builtins.int
    fileName: typing.Text = ...
    """The name of the thermal file to update."""

    fileType: global___ThermalMapFile.FileType.ValueType = ...
    """Thermal file type."""

    fileComment: typing.Text = ...
    """Include a comment or description for the file."""

    thermalBoardSide: global___ThermalMapFile.ThermalBoardSide.ValueType = ...
    """Thermal board side."""

    @property
    def csvExcelFile(self) -> global___ThermalMapFile.CsvExcelFile:
        """Used to CSV and Excel files."""
        pass
    @property
    def imageFile(self) -> global___ThermalMapFile.ImageFile:
        """Used to add properties to Image files."""
        pass
    @property
    def icepakFile(self) -> global___ThermalMapFile.IcepakFile:
        """Used to add properties to Icepak TMAP files."""
        pass
    @property
    def thermalProfiles(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of thermal profiles."""
        pass
    @property
    def cca(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Project CCA Name."""
        pass
    def __init__(self,
        *,
        fileName : typing.Text = ...,
        fileType : global___ThermalMapFile.FileType.ValueType = ...,
        fileComment : typing.Text = ...,
        thermalBoardSide : global___ThermalMapFile.ThermalBoardSide.ValueType = ...,
        csvExcelFile : typing.Optional[global___ThermalMapFile.CsvExcelFile] = ...,
        imageFile : typing.Optional[global___ThermalMapFile.ImageFile] = ...,
        icepakFile : typing.Optional[global___ThermalMapFile.IcepakFile] = ...,
        thermalProfiles : typing.Optional[typing.Iterable[typing.Text]] = ...,
        cca : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["csvExcelFile",b"csvExcelFile","fileData",b"fileData","icepakFile",b"icepakFile","imageFile",b"imageFile"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cca",b"cca","csvExcelFile",b"csvExcelFile","fileComment",b"fileComment","fileData",b"fileData","fileName",b"fileName","fileType",b"fileType","icepakFile",b"icepakFile","imageFile",b"imageFile","thermalBoardSide",b"thermalBoardSide","thermalProfiles",b"thermalProfiles"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["fileData",b"fileData"]) -> typing.Optional[typing_extensions.Literal["csvExcelFile","imageFile","icepakFile"]]: ...
global___ThermalMapFile = ThermalMapFile

class UpdateThermalMapsResponse(google.protobuf.message.Message):
    """*
    Response from updating thermal map files.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of validation errors."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        errors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","returnCode",b"returnCode"]) -> None: ...
global___UpdateThermalMapsResponse = UpdateThermalMapsResponse

class AddThermalMapRequest(google.protobuf.message.Message):
    """*
    Request to add thermal map files to a Sherlock project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class AddThermalMap(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        THERMALMAPFILE_FIELD_NUMBER: builtins.int
        THERMALMAPFILEPROPERTIES_FIELD_NUMBER: builtins.int
        thermalMapFile: typing.Text = ...
        """Full path to the thermal map file to be added."""

        @property
        def thermalMapFileProperties(self) -> global___ThermalMapFile:
            """Thermal map file properties."""
            pass
        def __init__(self,
            *,
            thermalMapFile : typing.Text = ...,
            thermalMapFileProperties : typing.Optional[global___ThermalMapFile] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["thermalMapFileProperties",b"thermalMapFileProperties"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["thermalMapFile",b"thermalMapFile","thermalMapFileProperties",b"thermalMapFileProperties"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    THERMALMAPFILES_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    @property
    def thermalMapFiles(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AddThermalMapRequest.AddThermalMap]:
        """Thermal map files and associated properties to be added."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        thermalMapFiles : typing.Optional[typing.Iterable[global___AddThermalMapRequest.AddThermalMap]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","thermalMapFiles",b"thermalMapFiles"]) -> None: ...
global___AddThermalMapRequest = AddThermalMapRequest

class AddThermalMapResponse(google.protobuf.message.Message):
    """*
    Response from adding thermal map files.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of validation errors."""
        pass
    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        errors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","returnCode",b"returnCode"]) -> None: ...
global___AddThermalMapResponse = AddThermalMapResponse

class ExportProjectRequest(google.protobuf.message.Message):
    """*
    Request for exporting the designated Sherlock project as a .zip file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    EXPORTDESIGNFILES_FIELD_NUMBER: builtins.int
    EXPORTRESULTFILES_FIELD_NUMBER: builtins.int
    EXPORTARCHIVEDRESULTS_FIELD_NUMBER: builtins.int
    EXPORTUSERFILES_FIELD_NUMBER: builtins.int
    EXPORTLOGFILES_FIELD_NUMBER: builtins.int
    EXPORTSYSTEMDATA_FIELD_NUMBER: builtins.int
    EXPORTFILEDIRECTORY_FIELD_NUMBER: builtins.int
    EXPORTFILENAME_FIELD_NUMBER: builtins.int
    OVERWRITEEXISTINGFILE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    exportDesignFiles: builtins.bool = ...
    """If true, export all design files assigned to the project."""

    exportResultFiles: builtins.bool = ...
    """If true, export all analysis module results."""

    exportArchivedResults: builtins.bool = ...
    """If true, export all archived result files."""

    exportUserFiles: builtins.bool = ...
    """If true, export all user properties and custom data files."""

    exportLogFiles: builtins.bool = ...
    """If true, export all Sherlock console and application logs."""

    exportSystemData: builtins.bool = ...
    """If true, export all system technical data."""

    exportFileDirectory: typing.Text = ...
    """Full path of the directory where the .zip file is to be exported."""

    exportFileName: typing.Text = ...
    """Name of the zip file containing the project's exported data."""

    overwriteExistingFile: builtins.bool = ...
    """If true, an existing file will be overwritten."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        exportDesignFiles : builtins.bool = ...,
        exportResultFiles : builtins.bool = ...,
        exportArchivedResults : builtins.bool = ...,
        exportUserFiles : builtins.bool = ...,
        exportLogFiles : builtins.bool = ...,
        exportSystemData : builtins.bool = ...,
        exportFileDirectory : typing.Text = ...,
        exportFileName : typing.Text = ...,
        overwriteExistingFile : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["exportArchivedResults",b"exportArchivedResults","exportDesignFiles",b"exportDesignFiles","exportFileDirectory",b"exportFileDirectory","exportFileName",b"exportFileName","exportLogFiles",b"exportLogFiles","exportResultFiles",b"exportResultFiles","exportSystemData",b"exportSystemData","exportUserFiles",b"exportUserFiles","overwriteExistingFile",b"overwriteExistingFile","project",b"project"]) -> None: ...
global___ExportProjectRequest = ExportProjectRequest

class CreateCcaFromModelingRegionRequest(google.protobuf.message.Message):
    """*
    Request for creating CCA from a specified modeling region.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class CCAFromModelingRegion(google.protobuf.message.Message):
        """*
        Request for each individual property of cca
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CCANAME_FIELD_NUMBER: builtins.int
        MODELINGREGIONID_FIELD_NUMBER: builtins.int
        DESCRIPTION_FIELD_NUMBER: builtins.int
        DEFAULTSOLDERTYPE_FIELD_NUMBER: builtins.int
        DEFAULTSTENCILTHICKNESS_FIELD_NUMBER: builtins.int
        DEFAULTSTENCILTHICKNESSUNITS_FIELD_NUMBER: builtins.int
        DEFAULTPARTTEMPRISE_FIELD_NUMBER: builtins.int
        DEFAULTPARTTEMPRISEUNITS_FIELD_NUMBER: builtins.int
        GUESSPARTPROPERTIES_FIELD_NUMBER: builtins.int
        GENERATEIMAGELAYERS_FIELD_NUMBER: builtins.int
        ccaName: typing.Text = ...
        """Project CCA name."""

        modelingRegionID: typing.Text = ...
        """ID of CCA's modeling region used to create new CCA."""

        description: typing.Text = ...
        """CCA's description."""

        defaultSolderType: typing.Text = ...
        """Default solder type."""

        defaultStencilThickness: builtins.float = ...
        """Default stencil thickness."""

        defaultStencilThicknessUnits: typing.Text = ...
        """Default stencil thickness units."""

        defaultPartTempRise: builtins.float = ...
        """Default part temp rise."""

        defaultPartTempRiseUnits: typing.Text = ...
        """Default part temp rise units."""

        guessPartProperties: builtins.bool = ...
        """Whether to enable guess part properties."""

        generateImageLayers: builtins.bool = ...
        """Whether to generate image layers"""

        def __init__(self,
            *,
            ccaName : typing.Text = ...,
            modelingRegionID : typing.Text = ...,
            description : typing.Text = ...,
            defaultSolderType : typing.Optional[typing.Text] = ...,
            defaultStencilThickness : typing.Optional[builtins.float] = ...,
            defaultStencilThicknessUnits : typing.Optional[typing.Text] = ...,
            defaultPartTempRise : typing.Optional[builtins.float] = ...,
            defaultPartTempRiseUnits : typing.Optional[typing.Text] = ...,
            guessPartProperties : typing.Optional[builtins.bool] = ...,
            generateImageLayers : typing.Optional[builtins.bool] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_defaultPartTempRise",b"_defaultPartTempRise","_defaultPartTempRiseUnits",b"_defaultPartTempRiseUnits","_defaultSolderType",b"_defaultSolderType","_defaultStencilThickness",b"_defaultStencilThickness","_defaultStencilThicknessUnits",b"_defaultStencilThicknessUnits","_generateImageLayers",b"_generateImageLayers","_guessPartProperties",b"_guessPartProperties","defaultPartTempRise",b"defaultPartTempRise","defaultPartTempRiseUnits",b"defaultPartTempRiseUnits","defaultSolderType",b"defaultSolderType","defaultStencilThickness",b"defaultStencilThickness","defaultStencilThicknessUnits",b"defaultStencilThicknessUnits","generateImageLayers",b"generateImageLayers","guessPartProperties",b"guessPartProperties"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_defaultPartTempRise",b"_defaultPartTempRise","_defaultPartTempRiseUnits",b"_defaultPartTempRiseUnits","_defaultSolderType",b"_defaultSolderType","_defaultStencilThickness",b"_defaultStencilThickness","_defaultStencilThicknessUnits",b"_defaultStencilThicknessUnits","_generateImageLayers",b"_generateImageLayers","_guessPartProperties",b"_guessPartProperties","ccaName",b"ccaName","defaultPartTempRise",b"defaultPartTempRise","defaultPartTempRiseUnits",b"defaultPartTempRiseUnits","defaultSolderType",b"defaultSolderType","defaultStencilThickness",b"defaultStencilThickness","defaultStencilThicknessUnits",b"defaultStencilThicknessUnits","description",b"description","generateImageLayers",b"generateImageLayers","guessPartProperties",b"guessPartProperties","modelingRegionID",b"modelingRegionID"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_defaultPartTempRise",b"_defaultPartTempRise"]) -> typing.Optional[typing_extensions.Literal["defaultPartTempRise"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_defaultPartTempRiseUnits",b"_defaultPartTempRiseUnits"]) -> typing.Optional[typing_extensions.Literal["defaultPartTempRiseUnits"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_defaultSolderType",b"_defaultSolderType"]) -> typing.Optional[typing_extensions.Literal["defaultSolderType"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_defaultStencilThickness",b"_defaultStencilThickness"]) -> typing.Optional[typing_extensions.Literal["defaultStencilThickness"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_defaultStencilThicknessUnits",b"_defaultStencilThicknessUnits"]) -> typing.Optional[typing_extensions.Literal["defaultStencilThicknessUnits"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_generateImageLayers",b"_generateImageLayers"]) -> typing.Optional[typing_extensions.Literal["generateImageLayers"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_guessPartProperties",b"_guessPartProperties"]) -> typing.Optional[typing_extensions.Literal["guessPartProperties"]]: ...

    PROJECT_FIELD_NUMBER: builtins.int
    CCASFROMMODELINGREGIONS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    @property
    def cCAsFromModelingRegions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CreateCcaFromModelingRegionRequest.CCAFromModelingRegion]:
        """CCAs from modeling regions to add."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        cCAsFromModelingRegions : typing.Optional[typing.Iterable[global___CreateCcaFromModelingRegionRequest.CCAFromModelingRegion]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cCAsFromModelingRegions",b"cCAsFromModelingRegions","project",b"project"]) -> None: ...
global___CreateCcaFromModelingRegionRequest = CreateCcaFromModelingRegionRequest

class OutlineFile(google.protobuf.message.Message):
    """*
    Defines an outline file and its properties to add to a Sherlock project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _FileType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _FileTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FileType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNKNOWN: OutlineFile.FileType.ValueType = ...  # 0
        """Default enum to catch invalid file type."""

        CsvExcel: OutlineFile.FileType.ValueType = ...  # 1
        """CSV or Excel outline file."""

        Gerber: OutlineFile.FileType.ValueType = ...  # 2
        """Gerber outline file."""

        IPC2581: OutlineFile.FileType.ValueType = ...  # 3
        """IPC2581 outline file."""

    class FileType(_FileType, metaclass=_FileTypeEnumTypeWrapper):
        pass

    UNKNOWN: OutlineFile.FileType.ValueType = ...  # 0
    """Default enum to catch invalid file type."""

    CsvExcel: OutlineFile.FileType.ValueType = ...  # 1
    """CSV or Excel outline file."""

    Gerber: OutlineFile.FileType.ValueType = ...  # 2
    """Gerber outline file."""

    IPC2581: OutlineFile.FileType.ValueType = ...  # 3
    """IPC2581 outline file."""


    class CsvExcelOutlineFile(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        HEADERROWCOUNT_FIELD_NUMBER: builtins.int
        XLOCATIONCOLUMN_FIELD_NUMBER: builtins.int
        YLOCATIONCOLUMN_FIELD_NUMBER: builtins.int
        LOCATIONUNITS_FIELD_NUMBER: builtins.int
        headerRowCount: builtins.int = ...
        """Number of rows before the column header in the file."""

        xLocationColumn: typing.Text = ...
        """X location column name."""

        yLocationColumn: typing.Text = ...
        """Y location column name."""

        locationUnits: typing.Text = ...
        """Units for location values."""

        def __init__(self,
            *,
            headerRowCount : builtins.int = ...,
            xLocationColumn : typing.Text = ...,
            yLocationColumn : typing.Text = ...,
            locationUnits : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["headerRowCount",b"headerRowCount","locationUnits",b"locationUnits","xLocationColumn",b"xLocationColumn","yLocationColumn",b"yLocationColumn"]) -> None: ...

    class GerberOutlineFile(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        PARSEDECIMALFIRST_FIELD_NUMBER: builtins.int
        parseDecimalFirst: builtins.bool = ...
        """Option to parse decimals based on the length of the format specifier."""

        def __init__(self,
            *,
            parseDecimalFirst : builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["parseDecimalFirst",b"parseDecimalFirst"]) -> None: ...

    FILENAME_FIELD_NUMBER: builtins.int
    FILECOMMENT_FIELD_NUMBER: builtins.int
    FILETYPE_FIELD_NUMBER: builtins.int
    CSVEXCELFILE_FIELD_NUMBER: builtins.int
    GERBERFILE_FIELD_NUMBER: builtins.int
    CCA_FIELD_NUMBER: builtins.int
    fileName: typing.Text = ...
    """The name of the outline file to add."""

    fileComment: typing.Text = ...
    """Comment or description for the file."""

    fileType: global___OutlineFile.FileType.ValueType = ...
    """Type of outline file."""

    @property
    def csvExcelFile(self) -> global___OutlineFile.CsvExcelOutlineFile:
        """Used to add CSV and Excel outline files."""
        pass
    @property
    def gerberFile(self) -> global___OutlineFile.GerberOutlineFile:
        """Used to add Gerber outline files."""
        pass
    @property
    def cca(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of CCA names to add the file to."""
        pass
    def __init__(self,
        *,
        fileName : typing.Text = ...,
        fileComment : typing.Text = ...,
        fileType : global___OutlineFile.FileType.ValueType = ...,
        csvExcelFile : typing.Optional[global___OutlineFile.CsvExcelOutlineFile] = ...,
        gerberFile : typing.Optional[global___OutlineFile.GerberOutlineFile] = ...,
        cca : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["csvExcelFile",b"csvExcelFile","gerberFile",b"gerberFile","outlineFileData",b"outlineFileData"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cca",b"cca","csvExcelFile",b"csvExcelFile","fileComment",b"fileComment","fileName",b"fileName","fileType",b"fileType","gerberFile",b"gerberFile","outlineFileData",b"outlineFileData"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["outlineFileData",b"outlineFileData"]) -> typing.Optional[typing_extensions.Literal["csvExcelFile","gerberFile"]]: ...
global___OutlineFile = OutlineFile

class AddOutlineFileRequest(google.protobuf.message.Message):
    """*
    Request to add outline files to a Sherlock project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    OUTLINEFILES_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    @property
    def outlineFiles(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OutlineFile]:
        """Outline files and properties to add to a Sherlock project."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        outlineFiles : typing.Optional[typing.Iterable[global___OutlineFile]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["outlineFiles",b"outlineFiles","project",b"project"]) -> None: ...
global___AddOutlineFileRequest = AddOutlineFileRequest

class CopperFile(google.protobuf.message.Message):
    """*
    Defines a copper file and its properties to add to a Sherlock project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _FileType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _FileTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FileType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        EDB: CopperFile.FileType.ValueType = ...  # 0
        """Copper Layer EDB file."""

        Gerber: CopperFile.FileType.ValueType = ...  # 1
        """Copper Layer GERBER file."""

        IPC2581: CopperFile.FileType.ValueType = ...  # 2
        """Copper Layer IPC2581 file."""

        Image: CopperFile.FileType.ValueType = ...  # 3
        """Copper Layer IMAGE file."""

        ODB_XML: CopperFile.FileType.ValueType = ...  # 4
        """Copper Layer ODB XML file."""

        ODB_PLUS: CopperFile.FileType.ValueType = ...  # 5
        """Copper Layer ODB++ file."""

        Trace: CopperFile.FileType.ValueType = ...  # 6
        """Copper Layer TRACE file."""

    class FileType(_FileType, metaclass=_FileTypeEnumTypeWrapper):
        pass

    EDB: CopperFile.FileType.ValueType = ...  # 0
    """Copper Layer EDB file."""

    Gerber: CopperFile.FileType.ValueType = ...  # 1
    """Copper Layer GERBER file."""

    IPC2581: CopperFile.FileType.ValueType = ...  # 2
    """Copper Layer IPC2581 file."""

    Image: CopperFile.FileType.ValueType = ...  # 3
    """Copper Layer IMAGE file."""

    ODB_XML: CopperFile.FileType.ValueType = ...  # 4
    """Copper Layer ODB XML file."""

    ODB_PLUS: CopperFile.FileType.ValueType = ...  # 5
    """Copper Layer ODB++ file."""

    Trace: CopperFile.FileType.ValueType = ...  # 6
    """Copper Layer TRACE file."""


    class _Polarity:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PolarityEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Polarity.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        Positive: CopperFile.Polarity.ValueType = ...  # 0
        """Positive polarity."""

        Negative: CopperFile.Polarity.ValueType = ...  # 1
        """Negative polarity."""

    class Polarity(_Polarity, metaclass=_PolarityEnumTypeWrapper):
        pass

    Positive: CopperFile.Polarity.ValueType = ...  # 0
    """Positive polarity."""

    Negative: CopperFile.Polarity.ValueType = ...  # 1
    """Negative polarity."""


    class _ImageType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ImageTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ImageType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        Background: CopperFile.ImageType.ValueType = ...  # 0
        """Background image."""

        Foreground: CopperFile.ImageType.ValueType = ...  # 1
        """Foreground image."""

    class ImageType(_ImageType, metaclass=_ImageTypeEnumTypeWrapper):
        pass

    Background: CopperFile.ImageType.ValueType = ...  # 0
    """Background image."""

    Foreground: CopperFile.ImageType.ValueType = ...  # 1
    """Foreground image."""


    class GerberFile(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        PARSEDECIMALFIRSTENABLED_FIELD_NUMBER: builtins.int
        parseDecimalFirstEnabled: builtins.bool = ...
        """Whether to parse decimal first is enabled."""

        def __init__(self,
            *,
            parseDecimalFirstEnabled : builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["parseDecimalFirstEnabled",b"parseDecimalFirstEnabled"]) -> None: ...

    class ImageFile(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        IMAGETYPE_FIELD_NUMBER: builtins.int
        IMAGECOLOR_FIELD_NUMBER: builtins.int
        imageType: global___CopperFile.ImageType.ValueType = ...
        """Background or Foreground image."""

        imageColor: typing.Text = ...
        """Color of the image."""

        def __init__(self,
            *,
            imageType : global___CopperFile.ImageType.ValueType = ...,
            imageColor : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["imageColor",b"imageColor","imageType",b"imageType"]) -> None: ...

    GERBERFILE_FIELD_NUMBER: builtins.int
    IMAGEFILE_FIELD_NUMBER: builtins.int
    FILENAME_FIELD_NUMBER: builtins.int
    FILETYPE_FIELD_NUMBER: builtins.int
    FILECOMMENT_FIELD_NUMBER: builtins.int
    COPPERLAYER_FIELD_NUMBER: builtins.int
    POLARITY_FIELD_NUMBER: builtins.int
    LAYERSNAPSHOTENABLED_FIELD_NUMBER: builtins.int
    CCA_FIELD_NUMBER: builtins.int
    @property
    def gerberFile(self) -> global___CopperFile.GerberFile:
        """Additional properties for Gerber files."""
        pass
    @property
    def imageFile(self) -> global___CopperFile.ImageFile:
        """Additional properties for Image files."""
        pass
    fileName: typing.Text = ...
    """The name of the copper file to import."""

    fileType: global___CopperFile.FileType.ValueType = ...
    """Type of Copper file."""

    fileComment: typing.Text = ...
    """Comment or description of the file."""

    copperLayer: typing.Text = ...
    """Name of the copper layer."""

    polarity: global___CopperFile.Polarity.ValueType = ...
    """Polarity of the copper layer."""

    layerSnapshotEnabled: builtins.bool = ...
    """Whether a layer snapshot is enabled."""

    @property
    def cca(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Project CCA Name."""
        pass
    def __init__(self,
        *,
        gerberFile : typing.Optional[global___CopperFile.GerberFile] = ...,
        imageFile : typing.Optional[global___CopperFile.ImageFile] = ...,
        fileName : typing.Text = ...,
        fileType : global___CopperFile.FileType.ValueType = ...,
        fileComment : typing.Text = ...,
        copperLayer : typing.Text = ...,
        polarity : global___CopperFile.Polarity.ValueType = ...,
        layerSnapshotEnabled : builtins.bool = ...,
        cca : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["fileData",b"fileData","gerberFile",b"gerberFile","imageFile",b"imageFile"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cca",b"cca","copperLayer",b"copperLayer","fileComment",b"fileComment","fileData",b"fileData","fileName",b"fileName","fileType",b"fileType","gerberFile",b"gerberFile","imageFile",b"imageFile","layerSnapshotEnabled",b"layerSnapshotEnabled","polarity",b"polarity"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["fileData",b"fileData"]) -> typing.Optional[typing_extensions.Literal["gerberFile","imageFile"]]: ...
global___CopperFile = CopperFile

class ImportCopperFilesRequest(google.protobuf.message.Message):
    """*
    Request to import copper layer files to a Sherlock project.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ImportCopperFile(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        COPPERFILE_FIELD_NUMBER: builtins.int
        COPPERFILEPROPERTIES_FIELD_NUMBER: builtins.int
        copperFile: typing.Text = ...
        """Full path to the Copper file to be imported."""

        @property
        def copperFileProperties(self) -> global___CopperFile:
            """Copper file properties."""
            pass
        def __init__(self,
            *,
            copperFile : typing.Text = ...,
            copperFileProperties : typing.Optional[global___CopperFile] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["copperFileProperties",b"copperFileProperties"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["copperFile",b"copperFile","copperFileProperties",b"copperFileProperties"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    COPPERFILES_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    @property
    def copperFiles(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ImportCopperFilesRequest.ImportCopperFile]:
        """Copper files and associated properties to be imported."""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        copperFiles : typing.Optional[typing.Iterable[global___ImportCopperFilesRequest.ImportCopperFile]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["copperFiles",b"copperFiles","project",b"project"]) -> None: ...
global___ImportCopperFilesRequest = ImportCopperFilesRequest

class ImportCopperFilesResponse(google.protobuf.message.Message):
    """*
    Response from importing Copper files.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETURNCODE_FIELD_NUMBER: builtins.int
    FILENAME_FIELD_NUMBER: builtins.int
    @property
    def returnCode(self) -> ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode:
        """Status code of response."""
        pass
    fileName: typing.Text = ...
    """The name of the copper file to import."""

    def __init__(self,
        *,
        returnCode : typing.Optional[ansys.api.sherlock.v0.SherlockCommonService_pb2.ReturnCode] = ...,
        fileName : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["returnCode",b"returnCode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["fileName",b"fileName","returnCode",b"returnCode"]) -> None: ...
global___ImportCopperFilesResponse = ImportCopperFilesResponse

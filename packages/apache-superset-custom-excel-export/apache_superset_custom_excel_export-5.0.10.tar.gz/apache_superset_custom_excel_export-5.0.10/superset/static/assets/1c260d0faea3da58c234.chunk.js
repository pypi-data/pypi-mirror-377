(globalThis.webpackChunksuperset=globalThis.webpackChunksuperset||[]).push([[3257,3574],{11743:(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>S,getLayer:()=>P,getPoints:()=>y});var a=o(2445),i=o(75077),r=o(82101),n=o(23197),s=o(16704),l=o(66341);const c="uniform arcUniforms {\n  bool greatCircle;\n  bool useShortestPath;\n  float numSegments;\n  float widthScale;\n  float widthMinPixels;\n  float widthMaxPixels;\n  highp int widthUnits;\n} arc;\n",d={name:"arc",vs:c,fs:c,uniformTypes:{greatCircle:"f32",useShortestPath:"f32",numSegments:"f32",widthScale:"f32",widthMinPixels:"f32",widthMaxPixels:"f32",widthUnits:"i32"}},u=[0,0,0,255],g={getSourcePosition:{type:"accessor",value:e=>e.sourcePosition},getTargetPosition:{type:"accessor",value:e=>e.targetPosition},getSourceColor:{type:"accessor",value:u},getTargetColor:{type:"accessor",value:u},getWidth:{type:"accessor",value:1},getHeight:{type:"accessor",value:1},getTilt:{type:"accessor",value:0},greatCircle:!1,numSegments:{type:"number",value:50,min:1},widthUnits:"pixels",widthScale:{type:"number",value:1,min:0},widthMinPixels:{type:"number",value:0,min:0},widthMaxPixels:{type:"number",value:Number.MAX_SAFE_INTEGER,min:0}};class p extends i.A{getBounds(){return this.getAttributeManager()?.getBounds(["instanceSourcePositions","instanceTargetPositions"])}getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME arc-layer-vertex-shader\nin vec4 instanceSourceColors;\nin vec4 instanceTargetColors;\nin vec3 instanceSourcePositions;\nin vec3 instanceSourcePositions64Low;\nin vec3 instanceTargetPositions;\nin vec3 instanceTargetPositions64Low;\nin vec3 instancePickingColors;\nin float instanceWidths;\nin float instanceHeights;\nin float instanceTilts;\nout vec4 vColor;\nout vec2 uv;\nout float isValid;\nfloat paraboloid(float distance, float sourceZ, float targetZ, float ratio) {\nfloat deltaZ = targetZ - sourceZ;\nfloat dh = distance * instanceHeights;\nif (dh == 0.0) {\nreturn sourceZ + deltaZ * ratio;\n}\nfloat unitZ = deltaZ / dh;\nfloat p2 = unitZ * unitZ + 1.0;\nfloat dir = step(deltaZ, 0.0);\nfloat z0 = mix(sourceZ, targetZ, dir);\nfloat r = mix(ratio, 1.0 - ratio, dir);\nreturn sqrt(r * (p2 - r)) * dh + z0;\n}\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\nvec2 dir_screenspace = normalize(line_clipspace * project.viewportSize);\ndir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\nreturn dir_screenspace * offset_direction * width / 2.0;\n}\nfloat getSegmentRatio(float index) {\nreturn smoothstep(0.0, 1.0, index / (arc.numSegments - 1.0));\n}\nvec3 interpolateFlat(vec3 source, vec3 target, float segmentRatio) {\nfloat distance = length(source.xy - target.xy);\nfloat z = paraboloid(distance, source.z, target.z, segmentRatio);\nfloat tiltAngle = radians(instanceTilts);\nvec2 tiltDirection = normalize(target.xy - source.xy);\nvec2 tilt = vec2(-tiltDirection.y, tiltDirection.x) * z * sin(tiltAngle);\nreturn vec3(\nmix(source.xy, target.xy, segmentRatio) + tilt,\nz * cos(tiltAngle)\n);\n}\nfloat getAngularDist (vec2 source, vec2 target) {\nvec2 sourceRadians = radians(source);\nvec2 targetRadians = radians(target);\nvec2 sin_half_delta = sin((sourceRadians - targetRadians) / 2.0);\nvec2 shd_sq = sin_half_delta * sin_half_delta;\nfloat a = shd_sq.y + cos(sourceRadians.y) * cos(targetRadians.y) * shd_sq.x;\nreturn 2.0 * asin(sqrt(a));\n}\nvec3 interpolateGreatCircle(vec3 source, vec3 target, vec3 source3D, vec3 target3D, float angularDist, float t) {\nvec2 lngLat;\nif(abs(angularDist - PI) < 0.001) {\nlngLat = (1.0 - t) * source.xy + t * target.xy;\n} else {\nfloat a = sin((1.0 - t) * angularDist);\nfloat b = sin(t * angularDist);\nvec3 p = source3D.yxz * a + target3D.yxz * b;\nlngLat = degrees(vec2(atan(p.y, -p.x), atan(p.z, length(p.xy))));\n}\nfloat z = paraboloid(angularDist * EARTH_RADIUS, source.z, target.z, t);\nreturn vec3(lngLat, z);\n}\nvoid main(void) {\ngeometry.worldPosition = instanceSourcePositions;\ngeometry.worldPositionAlt = instanceTargetPositions;\nfloat segmentIndex = float(gl_VertexID / 2);\nfloat segmentSide = mod(float(gl_VertexID), 2.) == 0. ? -1. : 1.;\nfloat segmentRatio = getSegmentRatio(segmentIndex);\nfloat prevSegmentRatio = getSegmentRatio(max(0.0, segmentIndex - 1.0));\nfloat nextSegmentRatio = getSegmentRatio(min(arc.numSegments - 1.0, segmentIndex + 1.0));\nfloat indexDir = mix(-1.0, 1.0, step(segmentIndex, 0.0));\nisValid = 1.0;\nuv = vec2(segmentRatio, segmentSide);\ngeometry.uv = uv;\ngeometry.pickingColor = instancePickingColors;\nvec4 curr;\nvec4 next;\nvec3 source;\nvec3 target;\nif ((arc.greatCircle || project.projectionMode == PROJECTION_MODE_GLOBE) && project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\nsource = project_globe_(vec3(instanceSourcePositions.xy, 0.0));\ntarget = project_globe_(vec3(instanceTargetPositions.xy, 0.0));\nfloat angularDist = getAngularDist(instanceSourcePositions.xy, instanceTargetPositions.xy);\nvec3 prevPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, prevSegmentRatio);\nvec3 currPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, segmentRatio);\nvec3 nextPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, nextSegmentRatio);\nif (abs(currPos.x - prevPos.x) > 180.0) {\nindexDir = -1.0;\nisValid = 0.0;\n} else if (abs(currPos.x - nextPos.x) > 180.0) {\nindexDir = 1.0;\nisValid = 0.0;\n}\nnextPos = indexDir < 0.0 ? prevPos : nextPos;\nnextSegmentRatio = indexDir < 0.0 ? prevSegmentRatio : nextSegmentRatio;\nif (isValid == 0.0) {\nnextPos.x += nextPos.x > 0.0 ? -360.0 : 360.0;\nfloat t = ((currPos.x > 0.0 ? 180.0 : -180.0) - currPos.x) / (nextPos.x - currPos.x);\ncurrPos = mix(currPos, nextPos, t);\nsegmentRatio = mix(segmentRatio, nextSegmentRatio, t);\n}\nvec3 currPos64Low = mix(instanceSourcePositions64Low, instanceTargetPositions64Low, segmentRatio);\nvec3 nextPos64Low = mix(instanceSourcePositions64Low, instanceTargetPositions64Low, nextSegmentRatio);\ncurr = project_position_to_clipspace(currPos, currPos64Low, vec3(0.0), geometry.position);\nnext = project_position_to_clipspace(nextPos, nextPos64Low, vec3(0.0));\n} else {\nvec3 source_world = instanceSourcePositions;\nvec3 target_world = instanceTargetPositions;\nif (arc.useShortestPath) {\nsource_world.x = mod(source_world.x + 180., 360.0) - 180.;\ntarget_world.x = mod(target_world.x + 180., 360.0) - 180.;\nfloat deltaLng = target_world.x - source_world.x;\nif (deltaLng > 180.) target_world.x -= 360.;\nif (deltaLng < -180.) source_world.x -= 360.;\n}\nsource = project_position(source_world, instanceSourcePositions64Low);\ntarget = project_position(target_world, instanceTargetPositions64Low);\nfloat antiMeridianX = 0.0;\nif (arc.useShortestPath) {\nif (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\nantiMeridianX = -(project.coordinateOrigin.x + 180.) / 360. * TILE_SIZE;\n}\nfloat thresholdRatio = (antiMeridianX - source.x) / (target.x - source.x);\nif (prevSegmentRatio <= thresholdRatio && nextSegmentRatio > thresholdRatio) {\nisValid = 0.0;\nindexDir = sign(segmentRatio - thresholdRatio);\nsegmentRatio = thresholdRatio;\n}\n}\nnextSegmentRatio = indexDir < 0.0 ? prevSegmentRatio : nextSegmentRatio;\nvec3 currPos = interpolateFlat(source, target, segmentRatio);\nvec3 nextPos = interpolateFlat(source, target, nextSegmentRatio);\nif (arc.useShortestPath) {\nif (nextPos.x < antiMeridianX) {\ncurrPos.x += TILE_SIZE;\nnextPos.x += TILE_SIZE;\n}\n}\ncurr = project_common_position_to_clipspace(vec4(currPos, 1.0));\nnext = project_common_position_to_clipspace(vec4(nextPos, 1.0));\ngeometry.position = vec4(currPos, 1.0);\n}\nfloat widthPixels = clamp(\nproject_size_to_pixel(instanceWidths * arc.widthScale, arc.widthUnits),\narc.widthMinPixels, arc.widthMaxPixels\n);\nvec3 offset = vec3(\ngetExtrusionOffset((next.xy - curr.xy) * indexDir, segmentSide, widthPixels),\n0.0);\nDECKGL_FILTER_SIZE(offset, geometry);\nDECKGL_FILTER_GL_POSITION(curr, geometry);\ngl_Position = curr + vec4(project_pixel_size_to_clipspace(offset.xy), 0.0, 0.0);\nvec4 color = mix(instanceSourceColors, instanceTargetColors, segmentRatio);\nvColor = vec4(color.rgb, color.a * layer.opacity);\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME arc-layer-fragment-shader\nprecision highp float;\nin vec4 vColor;\nin vec2 uv;\nin float isValid;\nout vec4 fragColor;\nvoid main(void) {\nif (isValid == 0.0) {\ndiscard;\n}\nfragColor = vColor;\ngeometry.uv = uv;\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",modules:[r.A,n.A,d]})}get wrapLongitude(){return!1}initializeState(){this.getAttributeManager().addInstanced({instanceSourcePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getSourcePosition"},instanceTargetPositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getTargetPosition"},instanceSourceColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getSourceColor",defaultValue:u},instanceTargetColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getTargetColor",defaultValue:u},instanceWidths:{size:1,transition:!0,accessor:"getWidth",defaultValue:1},instanceHeights:{size:1,transition:!0,accessor:"getHeight",defaultValue:1},instanceTilts:{size:1,transition:!0,accessor:"getTilt",defaultValue:0}})}updateState(e){super.updateState(e),e.changeFlags.extensionsChanged&&(this.state.model?.destroy(),this.state.model=this._getModel(),this.getAttributeManager().invalidateAll())}draw({uniforms:e}){const{widthUnits:t,widthScale:o,widthMinPixels:a,widthMaxPixels:i,greatCircle:r,wrapLongitude:n,numSegments:l}=this.props,c={numSegments:l,widthUnits:s.p5[t],widthScale:o,widthMinPixels:a,widthMaxPixels:i,greatCircle:r,useShortestPath:n},d=this.state.model;d.shaderInputs.setProps({arc:c}),d.setVertexCount(2*l),d.draw(this.context.renderPass)}_getModel(){return new l.K(this.context.device,{...this.getShaders(),id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),topology:"triangle-strip",isInstanced:!0})}}p.layerName="ArcLayer",p.defaultProps=g;const f=p;var h=o(95579),m=o(19375),_=o(68291),v=o(47823),x=o(32548);function y(e){const t=[];return e.forEach((e=>{t.push(e.sourcePosition),t.push(e.targetPosition)})),t}function C(e){return t=>{var o,i,r,n,s;return(0,a.FD)("div",{className:"deckgl-tooltip",children:[(0,a.Y)(x.A,{label:(0,h.t)("Start (Longitude, Latitude): "),value:`${null==(o=t.object)||null==(o=o.sourcePosition)?void 0:o[0]}, ${null==(i=t.object)||null==(i=i.sourcePosition)?void 0:i[1]}`}),(0,a.Y)(x.A,{label:(0,h.t)("End (Longitude, Latitude): "),value:`${null==(r=t.object)||null==(r=r.targetPosition)?void 0:r[0]}, ${null==(n=t.object)||null==(n=n.targetPosition)?void 0:n[1]}`}),e.dimension&&(0,a.Y)(x.A,{label:`${null==e?void 0:e.dimension}: `,value:`${null==(s=t.object)?void 0:s.cat_color}`})]})}}const P=function({formData:e,payload:t,setTooltip:o,filterState:a,setDataMask:i,onContextMenu:r,emitCrossFilters:n}){const s=e,l=t.data.features,c=s.color_picker,d=s.target_color_picker,u=s.color_scheme_type;return new f({data:l,getSourceColor:e=>u===m.wP.fixed_color?[c.r,c.g,c.b,255*c.a]:e.targetColor||e.color,getTargetColor:e=>u===m.wP.fixed_color?[d.r,d.g,d.b,255*d.a]:e.targetColor||e.color,id:`path-layer-${s.slice_id}`,getWidth:s.stroke_width?s.stroke_width:3,...(0,_.T$)({formData:s,setTooltip:o,setTooltipContent:C(s),onContextMenu:r,setDataMask:i,filterState:a,emitCrossFilters:n})})},S=(0,v.c)(P,y)},15570:(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>M,getLayer:()=>L,getPoints:()=>T});var a=o(2445),i=o(96540),r=o(95579),n=o(62952),s=o(84402),l=o(18277),c=o(81729),d=o(82077),u=o(91018),g=o(98595),p=o(93559);const f=[0,0,0,255],h={stroked:!0,filled:!0,extruded:!1,elevationScale:1,wireframe:!1,_normalize:!0,_windingOrder:"CW",lineWidthUnits:"meters",lineWidthScale:1,lineWidthMinPixels:0,lineWidthMaxPixels:Number.MAX_SAFE_INTEGER,lineJointRounded:!1,lineMiterLimit:4,getPolygon:{type:"accessor",value:e=>e.polygon},getFillColor:{type:"accessor",value:[0,0,0,255]},getLineColor:{type:"accessor",value:f},getLineWidth:{type:"accessor",value:1},getElevation:{type:"accessor",value:1e3},material:!0};class m extends s.A{initializeState(){this.state={paths:[],pathsDiff:null},this.props.getLineDashArray&&l.A.removed("getLineDashArray","PathStyleExtension")()}updateState({changeFlags:e}){const t=e.dataChanged||e.updateTriggersChanged&&(e.updateTriggersChanged.all||e.updateTriggersChanged.getPolygon);if(t&&Array.isArray(e.dataChanged)){const t=this.state.paths.slice(),o=e.dataChanged.map((e=>(0,p.J)({data:t,getIndex:e=>e.__source.index,dataRange:e,replace:this._getPaths(e)})));this.setState({paths:t,pathsDiff:o})}else t&&this.setState({paths:this._getPaths(),pathsDiff:null})}_getPaths(e={}){const{data:t,getPolygon:o,positionFormat:a,_normalize:i}=this.props,r=[],n="XY"===a?2:3,{startRow:s,endRow:l}=e,{iterable:d,objectInfo:u}=(0,c.X)(t,s,l);for(const e of d){u.index++;let t=o(e,u);i&&(t=g.S8(t,n));const{holeIndices:a}=t,s=t.positions||t;if(a)for(let t=0;t<=a.length;t++){const o=s.slice(a[t-1]||0,a[t]||s.length);r.push(this.getSubLayerRow({path:o},e,u.index))}else r.push(this.getSubLayerRow({path:s},e,u.index))}return r}renderLayers(){const{data:e,_dataDiff:t,stroked:o,filled:a,extruded:i,wireframe:r,_normalize:n,_windingOrder:s,elevationScale:l,transitions:c,positionFormat:g}=this.props,{lineWidthUnits:p,lineWidthScale:h,lineWidthMinPixels:m,lineWidthMaxPixels:_,lineJointRounded:v,lineMiterLimit:x,lineDashJustified:y}=this.props,{getFillColor:C,getLineColor:P,getLineWidth:S,getLineDashArray:b,getElevation:k,getPolygon:w,updateTriggers:D,material:L}=this.props,{paths:T,pathsDiff:A}=this.state,M=this.getSubLayerClass("fill",d.A),R=this.getSubLayerClass("stroke",u.A),j=this.shouldRenderSubLayer("fill",T)&&new M({_dataDiff:t,extruded:i,elevationScale:l,filled:a,wireframe:r,_normalize:n,_windingOrder:s,getElevation:k,getFillColor:C,getLineColor:i&&r?P:f,material:L,transitions:c},this.getSubLayerProps({id:"fill",updateTriggers:D&&{getPolygon:D.getPolygon,getElevation:D.getElevation,getFillColor:D.getFillColor,lineColors:i&&r,getLineColor:D.getLineColor}}),{data:e,positionFormat:g,getPolygon:w});return[!i&&j,!i&&o&&this.shouldRenderSubLayer("stroke",T)&&new R({_dataDiff:A&&(()=>A),widthUnits:p,widthScale:h,widthMinPixels:m,widthMaxPixels:_,jointRounded:v,miterLimit:x,dashJustified:y,_pathType:"loop",transitions:c&&{getWidth:c.getLineWidth,getColor:c.getLineColor,getPath:c.getPolygon},getColor:this.getSubLayerAccessor(P),getWidth:this.getSubLayerAccessor(S),getDashArray:this.getSubLayerAccessor(b)},this.getSubLayerProps({id:"stroke",updateTriggers:D&&{getWidth:D.getLineWidth,getColor:D.getLineColor,getDashArray:D.getLineDashArray}}),{data:T,positionFormat:g,getPath:e=>e.path}),i&&j]}}m.layerName="PolygonLayer",m.defaultProps=h;const _=m;var v=o(66671),x=o(32548),y=o(49672),C=o(68291),P=o(25564);function S(e){return"geometry"in e.polygon?e.polygon.geometry.coordinates[0]:e.polygon}var b=o(95490),k=o(70957),w=o(19375),D=o(55602);const L=function({formData:e,payload:t,setTooltip:o,filterState:i,setDataMask:s,onContextMenu:l,onSelect:c,selected:d,emitCrossFilters:u}){const g=e,p=g.fill_color_picker,f=g.stroke_color_picker,h=g.deafult_breakpoint_color;let m=[...t.data.features];g.js_data_mutator&&(m=(0,P.A)(g.js_data_mutator)(m));const v=g.color_scheme_type,b=g.metric?g.metric.label||g.metric:null,k=e=>e[b];let L;switch(v){case w.wP.fixed_color:L=()=>[p.r,p.g,p.b,255*p.a];break;case w.wP.linear_palette:L=null===g.metric?()=>[p.r,p.g,p.b,255*p.a]:(0,y.L6)(g,m,k);break;case w.wP.color_breakpoints:{const e=g.color_breakpoints;L=t=>{var o;const a=(0,C.JV)(k,t,e),i=void 0!==a&&(null==(o=e[a-1])?void 0:o.color);return i?[i.r,i.g,i.b,255]:h?[h.r,h.g,h.b,255*h.a]:[D.DL.r,D.DL.g,D.DL.b,255*D.DL.a]};break}default:L=()=>[p.r,p.g,p.b,255*p.a]}const T=e=>{const t=L(e)||[0,0,0,0];return(0,n.A)(d).includes(e[g.line_column])||(t[3]/=2),t},A=g.line_column&&g.metric&&["json","geohash","zipcode"].includes(g.line_type)?function(e){return t=>{var o,i,n,s;const l=(null==e||null==(o=e.metric)?void 0:o.label)||(null==e?void 0:e.metric);return(0,a.FD)("div",{className:"deckgl-tooltip",children:[(null==(i=t.object)?void 0:i.name)&&(0,a.Y)(x.A,{label:(0,r.t)("name")+": ",value:`${t.object.name}`}),(null==(n=t.object)?void 0:n[null==e?void 0:e.line_column])&&(0,a.Y)(x.A,{label:`${e.line_column}: `,value:`${t.object[e.line_column]}`}),(null==e?void 0:e.metric)&&(0,a.Y)(x.A,{label:`${l}: `,value:`${null==(s=t.object)?void 0:s[l]}`})]})}}(g):()=>null;return new _({id:`path-layer-${g.slice_id}`,data:m,filled:g.filled,stroked:g.stroked,getPolygon:S,getFillColor:T,getLineColor:f?[f.r,f.g,f.b,255*f.a]:void 0,getLineWidth:g.line_width,extruded:g.extruded,lineWidthUnits:g.line_width_unit,getElevation:e=>function(e,t){return 0===t(e)[3]?0:e.elevation}(e,T),elevationScale:g.multiplier,fp64:!0,...(0,C.T$)({formData:g,setTooltip:o,setTooltipContent:A,onSelect:c,filterState:i,onContextMenu:l,setDataMask:s,emitCrossFilters:u})})};function T(e){return e.flatMap(S)}const A=e=>{const t=(0,i.useRef)(),o=(0,i.useCallback)((()=>{let t={...e.viewport};if(e.formData.autozoom){const o=e.payload.data.features||[];t=(0,b.A)(t,{width:e.width,height:e.height,points:T(o)})}return t.zoom<0&&(t.zoom=0),t}),[e]),[r,n]=(0,i.useState)(0),[s,l]=(0,i.useState)(o()),[c,d]=(0,i.useState)(e.payload.form_data),[u,g]=(0,i.useState)([]);(0,i.useEffect)((()=>{const{payload:t}=e;t.form_data!==c&&(l(o()),g([]),n(0),d(t.form_data))}),[o,e,c,s]);const p=(0,i.useCallback)((e=>{const{current:o}=t;o&&o.setTooltip(e)}),[]),f=(0,i.useCallback)((t=>{const{formData:o,onAddFilter:a}=e,i=(new Date).getDate(),s=i-r<=250,l=[...u];if(s)l.splice(0,l.length,t);else if(o.toggle_polygons){const e=l.indexOf(t);-1===e?l.push(t):l.splice(e,1)}else l.splice(0,1,t);g(l),n(i),o.table_filter&&a(o.line_column,u,!1,!0)}),[r,e,u]),h=(0,i.useCallback)((()=>{const{formData:t,payload:o,onAddFilter:a,onContextMenu:i,setDataMask:r,filterState:n,emitCrossFilters:s}=e;return void 0===e.payload.data.features?[]:[L({formData:t,payload:o,onAddFilter:a,setTooltip:p,selected:u,onSelect:f,onContextMenu:i,setDataMask:r,filterState:n,emitCrossFilters:s})]}),[f,u,p,e]),{payload:m,formData:_,setControlValue:x}=e,C=_.metric?_.metric.label||_.metric:null,P=_.color_scheme_type?(0,y.BK)(_.color_breakpoints):(0,y.y1)(_,m.data.features,(e=>e[C]));return(0,a.FD)("div",{style:{position:"relative"},children:[(0,a.Y)(k.S,{ref:t,viewport:s,layers:h(),setControlValue:x,mapStyle:_.mapbox_style,mapboxApiAccessToken:m.data.mapboxApiKey,width:e.width,height:e.height}),null!==_.metric&&(0,a.Y)(v.A,{categories:P,position:_.legend_position,format:_.legend_format})]})},M=(0,i.memo)(A)},17861:(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>b,getLayer:()=>C,getPoints:()=>P});var a=o(2445),i=o(96540),r=o(63947),n=o(25879),s=o.n(n),l=o(70957),c=o(49443),d=o(25564),u=o(68291),g=o(32548),p=o(95490);const f={fillColor:"fillColor",color:"fillColor",fill:"fillColor","fill-color":"fillColor",strokeColor:"strokeColor","stroke-color":"strokeColor","stroke-width":"strokeWidth"},h=(e,t)=>{const o={};return Object.keys(e).forEach((t=>{t in f?o[f[t]]=e[t]:o[t]=e[t]})),"string"==typeof e.fillColor&&(o.fillColor=(0,c.hexToRGB)(e.fillColor)),"string"==typeof e.strokeColor&&(o.strokeColor=(0,c.hexToRGB)(e.strokeColor)),{...o,...t}};let m=[];const _=(e,t,o)=>{if(null!=e&&e.features&&e.features.forEach((a=>{_(a,t,e.extraProps||o)})),null!=e&&e.geometry){const a={...e,properties:h(e.properties,t)};a.extraProps||(a.extraProps=o),m.push(a)}};function v(e){var t;return(null==(t=e.object)?void 0:t.extraProps)&&(0,a.Y)("div",{className:"deckgl-tooltip",children:Object.keys(e.object.extraProps).map(((t,o)=>{var i;return(0,a.Y)(g.A,{label:`${t}: `,value:`${null==(i=e.object.extraProps)?void 0:i[t]}`},`prop-${o}`)}))})}const x=e=>{var t;return null==e||null==(t=e.properties)?void 0:t.fillColor},y=e=>{var t;return null==e||null==(t=e.properties)?void 0:t.strokeColor},C=function({formData:e,onContextMenu:t,filterState:o,setDataMask:a,payload:i,setTooltip:n,emitCrossFilters:s}){const l=e,c=l.fill_color_picker,g=l.stroke_color_picker,p=[c.r,c.g,c.b,255*c.a],f=[g.r,g.g,g.b,255*g.a],h={};p[3]>0&&(h.fillColor=p),f[3]>0&&(h.strokeColor=f),m=[],_(i.data,h);let C=m;return l.js_data_mutator&&(C=(0,d.A)(l.js_data_mutator)(m)),new r.A({id:`geojson-layer-${l.slice_id}`,data:C,extruded:l.extruded,filled:l.filled,stroked:l.stroked,getFillColor:x,getLineColor:y,getLineWidth:l.line_width||1,pointRadiusScale:l.point_radius_scale,lineWidthUnits:l.line_width_unit,...(0,u.T$)({formData:l,setTooltip:n,setTooltipContent:v,setDataMask:a,filterState:o,onContextMenu:t,emitCrossFilters:s})})};function P(e){return e.reduce(((e,t)=>{const o=s()(t);return o?[...e,[o[0],o[1]],[o[2],o[3]]]:e}),[])}const S=e=>{var t;const o=(0,i.useRef)(),r=(0,i.useCallback)((e=>{const{current:t}=o;t&&t.setTooltip(e)}),[]),{formData:n,payload:s,setControlValue:c,onAddFilter:d,height:u,width:g}=e,f=(0,i.useMemo)((()=>n.autozoom&&(P(s.data.features)||[]).length?(0,p.A)(e.viewport,{width:g,height:u,points:P(s.data.features)||[]}):e.viewport),[n.autozoom,u,null==s||null==(t=s.data)?void 0:t.features,e.viewport,g]),h=C({onContextMenu:e.onContextMenu,filterState:e.filterState,setDataMask:e.setDataMask,setTooltip:r,onAddFilter:d,payload:s,formData:n});return(0,a.Y)(l.S,{ref:o,mapboxApiAccessToken:s.data.mapboxApiKey,viewport:f,layers:[h],mapStyle:n.mapbox_style,setControlValue:c,height:u,width:g})},b=(0,i.memo)(S)},20901:(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>f,getLayer:()=>g,getPoints:()=>p});var a=o(2445),i=o(65476),r=o(95579),n=o(69161),s=o(68291),l=o(25564),c=o(47823),d=o(32548);function u(e){return(0,a.Y)("div",{className:"deckgl-tooltip",children:(0,a.Y)(d.A,{label:(0,r.t)("Centroid (Longitude and Latitude): "),value:`(${null==e?void 0:e.coordinate[0]}, ${null==e?void 0:e.coordinate[1]})`})})}const g=({formData:e,onContextMenu:t,filterState:o,setDataMask:a,setTooltip:r,payload:c,emitCrossFilters:d})=>{var g,p;const f=e,{intensity:h=1,radius_pixels:m=30,aggregation:_="SUM",js_data_mutator:v,linear_color_scheme:x}=f;let y=c.data.features;v&&(y=(0,l.A)(f.js_data_mutator)(y));const C=null==(g=(0,n.A)())||null==(g=g.get(x))?void 0:g.createLinearScale([0,6]),P=f.color_scheme_type,S=null==(p=(0,s.XC)({defaultBreakpointsColor:f.deafult_breakpoint_color,colorBreakpoints:f.color_breakpoints,fixedColor:f.color_picker,colorSchemeType:P,colorScale:C}))?void 0:p.reverse();return new i.A({id:`heatmap-layer-${f.slice_id}`,data:y,intensity:h,radiusPixels:m,colorRange:S,aggregation:_.toUpperCase(),getPosition:e=>e.position,getWeight:e=>e.weight?e.weight:1,...(0,s.T$)({formData:f,setTooltip:r,setTooltipContent:u,setDataMask:a,filterState:o,onContextMenu:t,emitCrossFilters:d})})};function p(e){return e.map((e=>e.position))}const f=(0,c.y)(g,p)},22213:(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>h,getLayer:()=>p,getPoints:()=>f});var a=o(2445),i=o(83206),r=o(95579),n=o(94963),s=o(19375),l=o(68291),c=o(25564),d=o(47823),u=o(32548);function g(e){return(0,a.FD)("div",{className:"deckgl-tooltip",children:[(0,a.Y)(u.A,{label:(0,r.t)("Centroid (Longitude and Latitude): "),value:`(${e.coordinate[0]}, ${e.coordinate[1]})`}),(0,a.Y)(u.A,{label:(0,r.t)("Height")+": ",value:`${e.object.elevationValue}`})]})}const p=function({formData:e,payload:t,setTooltip:o,onContextMenu:a,filterState:r,setDataMask:d,emitCrossFilters:u}){const p=e,f=p.color_scheme,h=n.getScale(f);let m=t.data.features;p.js_data_mutator&&(m=(0,c.A)(p.js_data_mutator)(m));const _=p.color_scheme_type,v=(0,l.XC)({defaultBreakpointsColor:p.deafult_breakpoint_color,colorBreakpoints:p.color_breakpoints,fixedColor:p.color_picker,colorSchemeType:_,colorScale:h}),x=p.color_breakpoints,y=(0,l.g_)(p.js_agg_function,(e=>e.weight)),C=_===s.wP.color_breakpoints?e=>(0,l.JV)(y,e,x):y;return new i.A({id:`hex-layer-${p.slice_id}-${JSON.stringify(x)}`,data:m,radius:p.grid_size,extruded:p.extruded,colorDomain:_===s.wP.color_breakpoints&&v?[0,v.length]:void 0,colorRange:v,outline:!1,getElevationValue:y,getColorValue:C,...(0,l.T$)({formData:p,setTooltip:o,setTooltipContent:g,setDataMask:d,filterState:r,onContextMenu:a,emitCrossFilters:u})})};function f(e){return e.map((e=>e.position))}const h=(0,d.y)(p,f)},41937:(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>f,getLayer:()=>p,getPoints:()=>u});var a=o(2445),i=o(50138),r=o(36770),n=o(95579),s=o(68291),l=o(47823),c=o(32548);const d=1609.34;function u(e){return e.map((e=>e.position))}function g(e,t){return o=>{var i,s,l,d,u,g,p;const f=(null==t?void 0:t[e.point_radius_fixed.value])||(0,r.A)(null==(i=e.point_radius_fixed)?void 0:i.value);return(0,a.FD)("div",{className:"deckgl-tooltip",children:[(0,a.Y)(c.A,{label:(0,n.t)("Longitude and Latitude")+": ",value:`${null==(s=o.object)||null==(s=s.position)?void 0:s[0]}, ${null==(l=o.object)||null==(l=l.position)?void 0:l[1]}`}),(null==(d=o.object)?void 0:d.cat_color)&&(0,a.Y)(c.A,{label:(0,n.t)("Category")+": ",value:`${null==(u=o.object)?void 0:u.cat_color}`}),(null==(g=o.object)?void 0:g.metric)&&(0,a.Y)(c.A,{label:`${f}: `,value:`${null==(p=o.object)?void 0:p.metric}`})]})}}const p=function({formData:e,payload:t,setTooltip:o,setDataMask:a,filterState:r,onContextMenu:n,datasource:l,emitCrossFilters:c}){const u=e,p=t.data.features.map((e=>{let t=(o=u.point_unit,a=e.radius,("square_m"===o?Math.sqrt(a/Math.PI):"radius_m"===o?a:"radius_km"===o?1e3*a:"radius_miles"===o?a*d:"square_km"===o?1e3*Math.sqrt(a/Math.PI):"square_miles"===o?Math.sqrt(a/Math.PI)*d:null)||10);var o,a;if(u.multiplier&&(t*=u.multiplier),e.color)return{...e,radius:t};const i=u.color_picker||{r:0,g:0,b:0,a:1},r=[i.r,i.g,i.b,255*i.a];return{...e,radius:t,color:r}}));return new i.A({id:`scatter-layer-${u.slice_id}`,data:p,fp64:!0,getFillColor:e=>e.color,getRadius:e=>e.radius,radiusMinPixels:Number(u.min_radius)||void 0,radiusMaxPixels:Number(u.max_radius)||void 0,stroked:!1,...(0,s.T$)({formData:u,setTooltip:o,setTooltipContent:g(u,null==l?void 0:l.verboseMap),setDataMask:a,filterState:r,onContextMenu:n,emitCrossFilters:c})})},f=(0,l.c)(p,u)},42634:()=>{},43979:(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>h,getLayer:()=>p,getPoints:()=>f});var a=o(2445),i=o(13596),r=o(95579),n=o(94963),s=o(68291),l=o(25564),c=o(47823),d=o(32548),u=o(19375);function g(e){return(0,a.FD)("div",{className:"deckgl-tooltip",children:[(0,a.Y)(d.A,{label:(0,r.t)("Longitude and Latitude")+": ",value:`${e.coordinate[0]}, ${e.coordinate[1]}`}),(0,a.Y)(d.A,{label:(0,r.t)("Height")+": ",value:`${e.object.elevationValue}`})]})}const p=function({formData:e,payload:t,setTooltip:o,setDataMask:a,onContextMenu:r,filterState:c,emitCrossFilters:d}){const p=e,f=p.color_scheme,h=n.getScale(f);let m=t.data.features;p.js_data_mutator&&(m=(0,l.A)(p.js_data_mutator)(m));const _=p.color_breakpoints,v=p.color_scheme_type,x=(0,s.XC)({defaultBreakpointsColor:p.deafult_breakpoint_color,colorSchemeType:v,colorScale:h,colorBreakpoints:_,fixedColor:p.color_picker}),y=(0,s.g_)(p.js_agg_function,(e=>e.weight)),C=v===u.wP.color_breakpoints?e=>(0,s.JV)(y,e,_):y;return new i.A({id:`grid-layer-${p.slice_id}-${JSON.stringify(_)}`,data:m,cellSize:p.grid_size,extruded:p.extruded,colorDomain:v===u.wP.color_breakpoints&&x?[0,x.length]:void 0,colorRange:x,outline:!1,getElevationValue:y,getColorValue:C,...(0,s.T$)({formData:p,setDataMask:a,setTooltip:o,setTooltipContent:g,filterState:c,onContextMenu:r,emitCrossFilters:d})})};function f(e){return e.map((e=>e.position))}const h=(0,c.y)(p,f)},50740:(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>L});var a=o(2404),i=o.n(a),r=o(2445),n=o(96540),s=o(62952),l=o(13270),c=o(35742),d=o(83505),u=o(70957),g=o(84193),p=o.n(g);function f(e,t,o=!0,a={}){if(!e.datasource)return;const i=new(p())("/"),r=function(e="base"){let t="/explore/";return["json","csv","query","results","samples"].includes(e)&&(t="/superset/explore_json/"),t}(t),n=i.search(!0);Object.keys(a).forEach((e=>{n[e]=a[e]})),n.form_data=function(e){const t=new Set;return JSON.stringify(e,((e,o)=>{if("object"==typeof o&&null!==o){if(t.has(o))try{return JSON.parse(JSON.stringify(o))}catch(e){return}t.add(o)}return o}))}(e),"standalone"===t&&(n.standalone="true");const s=i.directory(r).search(n).toString();return!o&&s.length>8e3?f({datasource:e.datasource,viz_type:e.viz_type},t,!1,{URL_IS_TOO_LONG_TO_SHARE:null}):s}var h=o(43979),m=o(44147),_=o(93897),v=o(22213),x=o(41937),y=o(17861),C=o(11743),P=o(15570),S=o(20901),b=o(71237);const k={deck_grid:h.getLayer,deck_screengrid:m.getLayer,deck_path:_.getLayer,deck_hex:v.getLayer,deck_scatter:x.getLayer,deck_geojson:y.getLayer,deck_arc:C.getLayer,deck_polygon:P.getLayer,deck_heatmap:S.getLayer,deck_contour:b.getLayer};var w=o(95490);const D=e=>{const t=(0,n.useRef)(),o=(0,n.useCallback)((()=>{let t={...e.viewport};const o=[...(0,P.getPoints)(e.payload.data.features.deck_polygon||[]),...(0,_.getPoints)(e.payload.data.features.deck_path||[]),...(0,h.getPoints)(e.payload.data.features.deck_grid||[]),...(0,x.getPoints)(e.payload.data.features.deck_scatter||[]),...(0,b.getPoints)(e.payload.data.features.deck_contour||[]),...(0,S.getPoints)(e.payload.data.features.deck_heatmap||[]),...(0,v.getPoints)(e.payload.data.features.deck_hex||[]),...(0,C.getPoints)(e.payload.data.features.deck_arc||[]),...(0,y.getPoints)(e.payload.data.features.deck_geojson||[]),...(0,m.getPoints)(e.payload.data.features.deck_screengrid||[])];return e.formData&&(t=(0,w.A)(t,{width:e.width,height:e.height,points:o})),t.zoom<0&&(t.zoom=0),t}),[e]),[a,g]=(0,n.useState)(o()),[p,D]=(0,n.useState)({}),L=(0,n.useCallback)((e=>{const{current:o}=t;o&&o.setTooltip(e)}),[]),T=(0,n.useCallback)(((e,t,o)=>o?o.indexOf(e):t),[]),A=(0,n.useCallback)(((e,t,o)=>{var a;const i=t.layer_filter_scope,r=[...e.form_data.extra_filters||[],...t.extra_filters||[]],n=[...(null==(a=e.form_data)?void 0:a.adhoc_filters)||[]];if(i){const e=t.filter_data_mapping||{};let a=!1;if(Object.entries(i).forEach((([t,i])=>{if((0,s.A)(i).includes(o)){a=!0;const o=e[t]||[];r.push(...o)}})),a){const e=t.adhoc_filters||[];n.push(...e)}}else{var l;const e=(null==(l=t.extra_form_data)?void 0:l.filters)||[];r.push(...e);const o=t.adhoc_filters||[];n.push(...o)}return{extraFilters:r,adhocFilters:n}}),[]),M=(0,n.useCallback)(((t,o)=>k[t.form_data.viz_type](t.form_data,o,e.onAddFilter,L,e.datasource,[],e.onSelect)),[e.onAddFilter,e.onSelect,e.datasource,L]),R=(0,n.useCallback)(((e,t,o)=>{const a=T(e.slice_id,o,t.deck_slices);let i=[],r=[];if((window.location.href||"").includes("explore"))r=(t.adhoc_filters||[]).map((e=>{if(!(0,l.A)(null==e?void 0:e.layerFilterScope))return e;if(Array.isArray(e.layerFilterScope)&&e.layerFilterScope.length>0){if(e.layerFilterScope.includes(-1))return e;if(e.layerFilterScope.includes(a))return e}})).filter((e=>(0,l.A)(e)));else{const{extraFilters:o,adhocFilters:n}=A(e,t,a);i=o,r=n}const n={...e,form_data:{...e.form_data,extra_filters:i,adhoc_filters:r}},s=f(n.form_data,"json");s&&c.A.get({endpoint:s}).then((({json:e})=>{const t=M(n,e);D((e=>({...e,[n.slice_id]:t})))})).catch((e=>{console.error(`Error loading layer for slice ${n.slice_id}:`,e)}))}),[T,A,M]),j=(0,n.useCallback)(((e,t,a)=>{g(o()),D({}),t.data.slices.forEach(((t,o)=>{R(t,e,o)}))}),[o,R]),F=(0,d.Z)(e.formData.deck_slices);(0,n.useEffect)((()=>{const{formData:t,payload:o}=e;!i()(F,t.deck_slices)&&j(t,o)}),[j,F,e]);const{payload:E,formData:$,setControlValue:z,height:O,width:I}=e,W=Object.values(p);return(0,r.Y)(u.S,{ref:t,mapboxApiAccessToken:E.data.mapboxApiKey,viewport:a,layers:W,mapStyle:$.mapbox_style,setControlValue:z,onViewportChange:g,height:O,width:I})},L=(0,n.memo)(D)},71237:(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>p,getLayer:()=>u,getPoints:()=>g});var a=o(2445),i=o(91059),r=o(95579),n=o(68291),s=o(25564),l=o(47823),c=o(32548);function d(e){var t;return(0,a.FD)("div",{className:"deckgl-tooltip",children:[(0,a.Y)(c.A,{label:(0,r.t)("Centroid (Longitude and Latitude): "),value:`(${null==e?void 0:e.coordinate[0]}, ${null==e?void 0:e.coordinate[1]})`}),(0,a.Y)(c.A,{label:(0,r.t)("Threshold: "),value:`${null==e||null==(t=e.object)||null==(t=t.contour)?void 0:t.threshold}`})]})}const u=function({formData:e,payload:t,filterState:o,setDataMask:a,onContextMenu:r,setTooltip:l,emitCrossFilters:c}){const u=e,{aggregation:g="SUM",js_data_mutator:p,contours:f,cellSize:h="200"}=u;let m=t.data.features;const _=null==f?void 0:f.map((e=>{const{lowerThreshold:t,upperThreshold:o,color:a,strokeWidth:i}=e;return o?{threshold:[t,o],color:[a.r,a.g,a.b]}:{threshold:t,color:[a.r,a.g,a.b],strokeWidth:i}}));return p&&(m=(0,s.A)(u.js_data_mutator)(m)),new i.A({id:`contourLayer-${u.slice_id}`,data:m,contours:_,cellSize:Number(h||"200"),aggregation:g.toUpperCase(),getPosition:e=>e.position,getWeight:e=>e.weight||0,...(0,n.T$)({formData:u,setTooltip:l,setTooltipContent:d,onContextMenu:r,setDataMask:a,filterState:o,emitCrossFilters:c})})};function g(e){return e.map((e=>e.position))}const p=(0,l.y)(u,g)},93897:(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>g,getLayer:()=>d,getPoints:()=>u});var a=o(2445),i=o(91018),r=o(68291),n=o(25564),s=o(47823),l=o(32548);function c(e){var t;return(null==(t=e.object)?void 0:t.extraProps)&&(0,a.Y)("div",{className:"deckgl-tooltip",children:Object.keys(e.object.extraProps).map(((t,o)=>(0,a.Y)(l.A,{label:`${t}: `,value:`${e.object.extraProps[t]}`},`prop-${o}`)))})}const d=function({formData:e,payload:t,onContextMenu:o,filterState:a,setDataMask:s,setTooltip:l,emitCrossFilters:d}){const u=e,g=u.color_picker,p=[g.r,g.g,g.b,255*g.a];let f=t.data.features.map((e=>({...e,path:e.path,width:u.line_width,color:p})));return u.js_data_mutator&&(f=(0,n.A)(u.js_data_mutator)(f)),new i.A({id:`path-layer-${u.slice_id}`,getColor:e=>e.color,getPath:e=>e.path,getWidth:e=>e.width,data:f,rounded:!0,widthScale:1,widthUnits:u.line_width_unit,...(0,r.T$)({formData:u,setTooltip:l,setTooltipContent:c,setDataMask:s,filterState:a,onContextMenu:o,emitCrossFilters:d})})};function u(e){let t=[];return e.forEach((e=>{t=t.concat(e.path)})),t}const g=(0,s.y)(d,u)}}]);
Metadata-Version: 2.4
Name: apikeyrotator
Version: 0.0.2
Summary: Ultra simple API key rotation for bypassing rate limits
Author-email: Prime Evolution <develop@eclips-team.ru>
License: MIT License
        
        Copyright (c) 2024 Prime Evolution
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: Homepage, https://github.com/PrimeevolutionZ/apikeyrotator
Project-URL: Repository, https://github.com/PrimeevolutionZ/apikeyrotator
Project-URL: Issues, https://github.com/PrimeevolutionZ/apikeyrotator/issues
Keywords: api,rotation,rate limit,requests
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests>=2.25.0
Dynamic: license-file

# API Key Rotator üîÑ

–ü—Ä–æ—Å—Ç–∞—è, –Ω–æ –º–æ—â–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—Ä–∞—â–µ–Ω–∏—è API –∫–ª—é—á–µ–π. –û–±—Ö–æ–¥–∏—Ç –ª–∏–º–∏—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ 429 –∏ –¥–µ–ª–∞–µ—Ç –≤–∞—à–∏ –∑–∞–ø—Ä–æ—Å—ã –Ω–µ—É—è–∑–≤–∏–º—ã–º–∏ –∫ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º API.

## –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ ‚ú®

- üîÑ **–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—Ä–∞—â–µ–Ω–∏–µ –∫–ª—é—á–µ–π** - Round-robin –∞–ª–≥–æ—Ä–∏—Ç–º
- ‚ö° **–ê–≤—Ç–æ–¥–µ—Ç–µ–∫—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏** - –°–∞–º –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç Bearer/API-Key —Ñ–æ—Ä–º–∞—Ç
- üîÅ **–£–º–Ω—ã–µ —Ä–µ—Ç—Ä–∞–∏** - –≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
- üõ°Ô∏è **–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫** - 429, 500, 502, 503, 504 –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
- üíª **–ü–æ–ª–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å** —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π `requests`
- üìù **–ü–æ–Ω—è—Ç–Ω—ã–µ –æ—à–∏–±–∫–∏** - –ü–æ–¥—Å–∫–∞–∑–∫–∏ –∫–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã

## –£—Å—Ç–∞–Ω–æ–≤–∫–∞ üì¶

```bash
pip install apikeyrotator
```

–ò–ª–∏ –∏–∑ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤:

```bash
git clone https://github.com/PrimeevolutionZ/apikeyrotator.git
cd apikeyrotator
pip install -e .
```

## –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç üöÄ

### –°–ø–æ—Å–æ–± 1: –ü–µ—Ä–µ–¥–∞—á–∞ –∫–ª—é—á–µ–π –Ω–∞–ø—Ä—è–º—É—é

```python
from apikeyrotator import APIKeyRotator

# –ü—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–¥–∞–π—Ç–µ –∫–ª—é—á–∏ —Å–ø–∏—Å–∫–æ–º
rotator = APIKeyRotator(api_keys=["key1", "key2", "key3"])

# –ò–ª–∏ —Å—Ç—Ä–æ–∫–æ–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é
rotator = APIKeyRotator(api_keys="key1,key2,key3")

# –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞–∫ –æ–±—ã—á–Ω—ã–π requests!
response = rotator.get("https://api.example.com/data")
print(response.json())
```

### –°–ø–æ—Å–æ–± 2: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è

–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª `.env` –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞:
```env
API_KEYS=your_key_1,your_key_2,your_key_3
```

–ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è:
```bash
# Linux/Mac
export API_KEYS="your_key_1,your_key_2,your_key_3"

# Windows
set API_KEYS=your_key_1,your_key_2,your_key_3
```

–¢–µ–ø–µ—Ä—å –ø—Ä–æ—Å—Ç–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ä–æ—Ç–∞—Ç–æ—Ä:
```python
from apikeyrotator import APIKeyRotator

rotator = APIKeyRotator()  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–π–¥–µ—Ç API_KEYS

response = rotator.get("https://api.example.com/data")
```

## –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è üìñ

### –ë–∞–∑–æ–≤—ã–µ HTTP-–∑–∞–ø—Ä–æ—Å—ã

```python
from apikeyrotator import APIKeyRotator

rotator = APIKeyRotator(api_keys=["key1", "key2", "key3"])

# GET –∑–∞–ø—Ä–æ—Å
response = rotator.get("https://api.example.com/users")

# POST –∑–∞–ø—Ä–æ—Å —Å –¥–∞–Ω–Ω—ã–º–∏
response = rotator.post(
    "https://api.example.com/users",
    json={"name": "John", "email": "john@example.com"}
)

# PUT –∑–∞–ø—Ä–æ—Å
response = rotator.put(
    "https://api.example.com/users/1",
    json={"name": "John Updated"}
)

# DELETE –∑–∞–ø—Ä–æ—Å
response = rotator.delete("https://api.example.com/users/1")
```

### –ö–∞—Å—Ç–æ–º–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏

```python
from apikeyrotator import APIKeyRotator

rotator = APIKeyRotator(api_keys=["key1", "key2"])

# –ö–∞—Å—Ç–æ–º–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
response = rotator.get(
    "https://api.example.com/data",
    headers={"X-Custom-Auth": "custom_value"}
)

# –ò–ª–∏ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–ª–Ω–æ—Å—Ç—å—é
response = rotator.get(
    "https://api.example.com/data",
    headers={"Authorization": "Custom your_token_here"}
)
```

### –†–∞–±–æ—Ç–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∑–∞–ø—Ä–æ—Å–∞

```python
from apikeyrotator import APIKeyRotator

rotator = APIKeyRotator(api_keys=["key1", "key2", "key3"])

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
response = rotator.get(
    "https://api.example.com/search",
    params={"query": "python", "limit": 10}
)

# JSON –¥–∞–Ω–Ω—ã–µ
response = rotator.post(
    "https://api.example.com/items",
    json={"name": "New Item", "price": 99.99}
)

# –¢–∞–π–º–∞—É—Ç
response = rotator.get(
    "https://api.example.com/data",
    timeout=10
)
```

### –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

```python
from apikeyrotator import APIKeyRotator, AllKeysExhaustedError

rotator = APIKeyRotator(api_keys=["key1", "key2"], max_retries=5)

try:
    response = rotator.get("https://api.example.com/limited")
    print("–£—Å–ø–µ—Ö!", response.json())
except AllKeysExhaustedError as e:
    print("–í—Å–µ –∫–ª—é—á–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã:", e)
except Exception as e:
    print("–î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞:", e)
```

## –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è

### –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤

```python
from apikeyrotator import APIKeyRotator

# –í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
rotator = APIKeyRotator(
    api_keys=["key1", "key2", "key3"],  # –ö–ª—é—á–∏
    env_var="CUSTOM_API_KEYS",          # –ö–∞—Å—Ç–æ–º–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
    max_retries=5,                      # –ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫
    base_delay=2.0                      # –ë–∞–∑–æ–≤–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
)

print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª—é—á–µ–π: {len(rotator)}")
print(f"–ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫: {rotator.max_retries}")
```

### –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–æ–¥–æ–º

```python
from apikeyrotator import APIKeyRotator
import requests

# –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ —Å requests
response = requests.get("https://api.example.com/data")

# –õ–µ–≥–∫–æ –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ APIKeyRotator
rotator = APIKeyRotator(api_keys=["key1", "key2", "key3"])
response = rotator.get("https://api.example.com/data")  # –¢–æ—Ç –∂–µ API!
```

## Best Practices ‚úÖ

### 1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏

```bash
# –ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Ö—Ä–∞–Ω–∏—Ç–µ –∫–ª—é—á–∏ –≤ –∫–æ–¥–µ!
# –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ .env —Ñ–∞–π–ª –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
export API_KEYS="your_production_key_1,your_production_key_2"
```

### 2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–¥–µ–∫–≤–∞—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫

```python
# –î–ª—è 3 –∫–ª—é—á–µ–π –∏ 2 –ø–æ–ø—ã—Ç–æ–∫ –Ω–∞ –∫–ª—é—á = 6 –≤—Å–µ–≥–æ –ø–æ–ø—ã—Ç–æ–∫
rotator = APIKeyRotator(
    api_keys=["key1", "key2", "key3"],
    max_retries=6
)
```

### 3. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–ª—é—á–µ–π

```python
rotator = APIKeyRotator(api_keys=["key1", "key2", "key3"])

# –ü–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
for i in range(10):
    rotator.get("https://api.example.com/test")

print("–†–æ—Ç–∞—Ç–æ—Ä –æ—Ç—Ä–∞–±–æ—Ç–∞–ª", len(rotator), "–∑–∞–ø—Ä–æ—Å–æ–≤")
```

## –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ ‚ùå

–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–Ω—è—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö:

### –ï—Å–ª–∏ –∫–ª—é—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã

```
‚ùå No API keys found.
   Please either:
   1. Pass keys directly: APIKeyRotator(api_keys=['key1', 'key2'])
   2. Set environment variable: export API_KEYS='key1,key2'
   3. Create .env file with: API_KEYS=key1,key2
```

### –ï—Å–ª–∏ –≤—Å–µ –∫–ª—é—á–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã

```python
try:
    response = rotator.get("https://api.example.com/limited")
except AllKeysExhaustedError as e:
    print(e)  # "All 3 keys exhausted after 6 attempts"
```

## –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å üîÑ

- **Python**: 3.7+
- **–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏**: —Ç–æ–ª—å–∫–æ `requests>=2.25.0`

## –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ üõ†Ô∏è

### –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

```bash
git clone https://github.com/PrimeevolutionZ/apikeyrotator.git
cd apikeyrotator
python -m venv venv
source venv/bin/activate  # Linux/Mac
# –∏–ª–∏
venv\Scripts\activate     # Windows
pip install -e .[dev]
```

### –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤

```bash
pytest tests/
```

### –°–±–æ—Ä–∫–∞ –ø–∞–∫–µ—Ç–∞

```bash
python setup.py sdist bdist_wheel
```

## –õ–∏—Ü–µ–Ω–∑–∏—è üìÑ

MIT License - —Å–º–æ—Ç—Ä–∏—Ç–µ —Ñ–∞–π–ª [LICENSE](LICENSE) –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.

## –ü–æ–¥–¥–µ—Ä–∂–∫–∞ ü§ù

–ù–∞—à–ª–∏ –±–∞–≥ –∏–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è? [–°–æ–∑–¥–∞–π—Ç–µ issue](https://github.com/yourusername/apikeyrotator/issues) –Ω–∞ GitHub!

---

**API Key Rotator** - —Å–¥–µ–ª–∞–π—Ç–µ –≤–∞—à–∏ API –∑–∞–ø—Ä–æ—Å—ã –Ω–µ—É—è–∑–≤–∏–º—ã–º–∏ –∫ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º! üöÄ

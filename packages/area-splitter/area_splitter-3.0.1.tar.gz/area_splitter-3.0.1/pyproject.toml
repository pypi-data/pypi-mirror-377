[project]
name = "area-splitter"
version = "3.0.1"
description = "A utility for splitting an AOI into multiple tasks."
authors = [
    {name = "Ivan Gayton", email = "ivan.gayton@hotosm.org"},
    {name = "Rob Savoye", email = "rob.savoye@hotosm.org"},
    {name = "Sam Woodcock", email = "sam.woodcock@hotosm.org"},
    {name = "Sujan Adhikari", email = "adhikarisujan.naxa@gmail.com"},   
]
dependencies = [
    "geojson>=2.5.0",
    "shapely>=1.8.1",
    "psycopg>=3.1.17",
    "osm-rawdata>=0.2.2",
]
requires-python = ">=3.10"
readme = "README.md"
license = "GPL-3.0-only"
keywords = ["field-tm", "aoi", "split", "postgis", "hot"]
classifiers = [
    "Topic :: Utilities",
    "Topic :: Scientific/Engineering :: GIS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.urls]
homepage = "https://hotosm.github.io/fmtm-splitter"
documentation = "https://hotosm.github.io/fmtm-splitter"
repository = "https://github.com/hotosm/field-tm/blob/main/src/backend/packages/area-splitter"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["area_splitter"]

[tool.commitizen]
name = "cz_conventional_commits"
version = "3.0.1"
version_provider = "uv"
version_files = [
    "pyproject.toml:version",
    "area_splitter/__version__.py",
]
update_changelog_on_bump = true
# Create tag version prepended with area-splitter
tag_format = "area-splitter-$version"
# Skip the tags for FieldTM
ignored_tag_formats = ["$version"]
bump_message = "bump: area-splitter version $current_version â†’ $new_version"

[tool.ruff]
fix = true
line-length = 88
target-version = "py310"
exclude = [
    ".git",
    ".ruff_cache",
    ".vscode",
    "__pypackages__",
    "build",
    "dist",
    "area_splitter/__version__.py",
]
[tool.ruff.lint]
select = ["I", "E", "W", "D", "B", "F", "N", "Q"]
ignore = ["N805", "B008"]
[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.sqlfluff.core]
dialect = "postgres"
templater = "placeholder"
[tool.sqlfluff.templater.placeholder]
param_style = "pyformat"  # For pyformat SQL %(num_buildings)s

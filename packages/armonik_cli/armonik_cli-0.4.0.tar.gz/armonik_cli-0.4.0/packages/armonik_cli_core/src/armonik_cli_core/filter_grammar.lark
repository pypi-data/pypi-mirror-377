?start: expr

expr: term (OR term)*

term: factor (AND factor)*

factor: NOT? atom

?atom: "(" expr ")"
    | identifier operator value -> comparison
    | identifier -> test

identifier: LITERAL | "options" LBRACKET value RBRACKET
?operator: EQ  | NEQ | LT | LTE | GT | GTE | CONTAINS | NOTCONTAINS
                | STARTSWITH | ENDSWIDTH | IS
?value: LITERAL | STRING | DATETIME | DURATION | SIGNED_NUMBER

// Boolean operators
OR: "or" | "OR" | "|" | "||"
AND: "and" | "AND" | "&" | "&&"
NOT: "not" | "NOT" | "!" | "~"

// Comparison operators
EQ: "=" | "=="
NEQ: "!="
LT: "<"
LTE: "<="
GT: ">"
GTE: ">="
CONTAINS: "contains" | "~"
NOTCONTAINS: "notcontains" | "!~"
STARTSWITH: "startswith"
ENDSWIDTH: "endswith"
IS: "is" | "IS"

// Terminals types
LITERAL: /[a-zA-Z_][a-zA-Z0-9-_\.]*/
STRING: /(".*?(?<!\\)(\\\\)*?"|'.*?(?<!\\)(\\\\)*?')/i
DATETIME: /\d{4}-\d{2}-\d{2}(?:T\d{1,2}:\d{2}:\d{2}(?:\.\d+)?)?/
DURATION: /-?(?:\d+\.)?\d{1,2}:\d{2}:\d{2}(?:\.\d+)?/
LBRACKET: "["
RBRACKET: "]"

%import common.SIGNED_NUMBER
%import common.WS

%ignore WS

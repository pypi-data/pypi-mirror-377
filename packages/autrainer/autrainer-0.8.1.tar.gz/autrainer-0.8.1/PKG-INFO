Metadata-Version: 2.4
Name: autrainer
Version: 0.8.1
Summary: A Modular and Extensible Deep Learning Toolkit for Computer Audition Tasks.
Project-URL: Repository, https://github.com/autrainer/autrainer
Project-URL: Documentation, https://autrainer.github.io/autrainer/
Author-email: Simon Rampp <simon.rampp@tum.de>, Andreas Triantafyllopoulos <andreas.triantafyllopoulos@tum.de>, Manuel Milling <manuel.milling@tum.de>, "Björn W. Schuller" <schuller@tum.de>
License-Expression: MIT
License-File: LICENSE
Keywords: artificial intelligence,command-line,computer audition,deep learning,hydra-core,pytorch,yaml
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: <3.12,>=3.10
Requires-Dist: audeer<3,>=2.2.1
Requires-Dist: audiofile<2,>=1.3.0
Requires-Dist: audmetric<2,>=1.2.0
Requires-Dist: audobject<0.8,>=0.7.11
Requires-Dist: audtorch<0.7,>=0.6.4
Requires-Dist: checksumdir<2,>=1.2.0
Requires-Dist: fsspec>=2025.3.2
Requires-Dist: hydra-core<2,>=1.3.2
Requires-Dist: hydra-filter-sweeper<3,>=2.0.1
Requires-Dist: matplotlib<4,>=3.7.1
Requires-Dist: numpy<2,>=1.24.1
Requires-Dist: omegaconf<3,>=2.3.0
Requires-Dist: pandas<3,>=2.1.1
Requires-Dist: pillow<10,>=9.3.0
Requires-Dist: psutil<6,>=5.0.0
Requires-Dist: pyyaml<7,>=6.0.1
Requires-Dist: requests<3,>=2.31.0
Requires-Dist: scikit-learn<2,>=1.3.1
Requires-Dist: seaborn<0.14,>=0.13.0
Requires-Dist: speechbrain<2,>=1.0.0
Requires-Dist: timm<2,>=1.0.3
Requires-Dist: torch<3,>=2.0.0
Requires-Dist: torchaudio>=2.0.0
Requires-Dist: torchinfo<2,>=1.8.0
Requires-Dist: torchlibrosa<0.2,>=0.1.0
Requires-Dist: torchvision>=0.15.0
Requires-Dist: tqdm<5,>=4.66.1
Requires-Dist: transformers<5,>=4.34.0
Provides-Extra: albumentations
Requires-Dist: albumentations<2,>=1.4.10; extra == 'albumentations'
Provides-Extra: all
Requires-Dist: albumentations<2,>=1.4.10; extra == 'all'
Requires-Dist: audiomentations<0.38,>=0.37.0; extra == 'all'
Requires-Dist: latex<0.8,>=0.7.0; extra == 'all'
Requires-Dist: mlflow<3,>=2.7.1; extra == 'all'
Requires-Dist: opensmile<3,>=2.5.0; extra == 'all'
Requires-Dist: tensorboard<3,>=2.16.2; extra == 'all'
Requires-Dist: torch-audiomentations<0.12,>=0.11.1; extra == 'all'
Provides-Extra: audiomentations
Requires-Dist: audiomentations<0.38,>=0.37.0; extra == 'audiomentations'
Provides-Extra: latex
Requires-Dist: latex<0.8,>=0.7.0; extra == 'latex'
Provides-Extra: mlflow
Requires-Dist: mlflow<3,>=2.7.1; extra == 'mlflow'
Provides-Extra: opensmile
Requires-Dist: opensmile<3,>=2.5.0; extra == 'opensmile'
Provides-Extra: tensorboard
Requires-Dist: tensorboard<3,>=2.16.2; extra == 'tensorboard'
Provides-Extra: torch-audiomentations
Requires-Dist: torch-audiomentations<0.12,>=0.11.1; extra == 'torch-audiomentations'
Description-Content-Type: text/x-rst

.. image:: https://autrainer.github.io/autrainer/_static/logo_banner.png
    :alt: autrainer — A Modular and Extensible Deep Learning Toolkit for Computer Audition Tasks
    :align: center


autrainer
=========

|pypi| |python_versions| |hugging_face| |license| |preprint|

A Modular and Extensible Deep Learning Toolkit for Computer Audition Tasks.

`autrainer` is built on top of `PyTorch <https://pytorch.org/>`_ and `Hydra <https://hydra.cc/>`_,
offering a modular and extensible way to perform reproducible deep learning experiments
for computer audition tasks using YAML configuration files and the command line.


.. _installation:

Installation
------------

It is recommended to install `autrainer` within a virtual environment.
To create a new virtual environment, refer to the `Python venv documentation <https://docs.python.org/3/library/venv.html>`_.

Next, install `autrainer` using `pip`.

.. code-block:: pip

   pip install autrainer

.. note::

   If you are using Windows, make sure that PyTorch (along with ``torchvision`` and ``torchaudio``) version 2.0 or higher is installed beforehand.
   For installation instructions, refer to the `PyTorch documentation <https://pytorch.org/get-started/locally/>`_.


The following optional dependencies can be installed to enable additional features:

* ``latex`` for LaTeX plotting (requires a LaTeX installation).
* ``mlflow`` for `MLflow <https://mlflow.org/>`_ logging.
* ``tensorboard`` for `TensorBoard <https://www.tensorflow.org/tensorboard>`_ logging.
* ``opensmile`` for audio feature extraction with `openSMILE <https://audeering.com/opensmile/>`_.
* ``albumentations`` for image augmentations with `Albumentations <https://albumentations.ai/>`_.
* ``audiomentations`` for audio augmentations with `audiomentations <https://github.com/iver56/audiomentations>`_.
* ``torch-audiomentations`` for audio augmentations with `torch-audiomentations <https://github.com/asteroid-team/torch-audiomentations>`_.

.. code-block:: pip

   pip install autrainer[latex]
   pip install autrainer[mlflow]
   pip install autrainer[tensorboard]
   pip install autrainer[opensmile]
   pip install autrainer[albumentations]
   pip install autrainer[audiomentations]
   pip install autrainer[torch-audiomentations]

To install `autrainer` with all optional dependencies, use the following command:

.. code-block:: pip

   pip install autrainer[all]


To install `autrainer` from source, refer to the `contribution guide <https://autrainer.github.io/autrainer/development/contributing>`_.


Next Steps
----------

To get started using `autrainer`, the `quickstart guide <https://autrainer.github.io/autrainer/usage/quickstart>`_
outlines the creation of a simple training configuration and `tutorials <https://autrainer.github.io/autrainer/usage/tutorials>`_
provide examples for implementing custom modules including their configurations.

For a complete list of available CLI commands, refer to the
`CLI reference <https://autrainer.github.io/autrainer/usage/cli_reference>`_ or the
`CLI wrapper <https://autrainer.github.io/autrainer/usage/cli_wrapper>`_.

.. |pypi| image:: https://img.shields.io/pypi/v/autrainer?logo=pypi&logoColor=b4befe&color=b4befe
   :target: https://pypi.org/project/autrainer/
   :alt: autrainer PyPI Version

.. |python_versions| image:: https://img.shields.io/pypi/pyversions/autrainer?logo=python&logoColor=b4befe&color=b4befe
   :target: https://pypi.org/project/autrainer/
   :alt: autrainer Python Versions

.. |hugging_face| image:: https://img.shields.io/badge/Hugging_Face-autrainer-b4befe?logo=huggingface&logoColor=b4befe
   :target: https://huggingface.co/autrainer
   :alt: autrainer Hugging Face

.. |license| image:: https://img.shields.io/badge/license-MIT-b4befe?logo=c
   :target: https://github.com/autrainer/autrainer/blob/main/LICENSE
   :alt: autrainer GitHub License

.. |preprint| image:: https://img.shields.io/badge/arXiv-2412.11943-AD1C18?logoColor=b4befe&color=b4befe
   :target: https://arxiv.org/abs/2412.11943
   :alt: autrainer arXiv preprint

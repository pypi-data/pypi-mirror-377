# coding: utf-8

# flake8: noqa

"""
    Backboard API

     # Welcome to Backboard API  Build conversational AI applications with persistent memory and intelligent document processing.  ## Endpoint URL ``` https://backboard.io/api ```  ## Core Features  ### **Persistent Conversations** Create conversation threads that maintain context across multiple messages and support file attachments.  ### **Intelligent Document Processing** Upload and process documents (PDF, text, Office files) with automatic chunking and indexing for retrieval.  ### **AI Assistants** Create specialized assistants with custom instructions, document access, and tool capabilities.  ## Quickstart  ```python import requests  API_KEY = \"your_api_key\" BASE_URL = \"https://backboard.io/api\" HEADERS = {\"X-API-Key\": API_KEY}  # 1) Create assistant response = requests.post(     f\"{BASE_URL}/assistants\",     json={\"name\": \"Support Bot\", \"description\": \"After every response, pass a joke at the end of the response!\"},     headers=HEADERS, ) assistant_id = response.json()[\"assistant_id\"]  # 2) Create thread response = requests.post(     f\"{BASE_URL}/assistants/{assistant_id}/threads\",     json={},     headers=HEADERS, ) thread_id = response.json()[\"thread_id\"]  # 3) Send message response = requests.post(     f\"{BASE_URL}/threads/{thread_id}/messages\",     headers=HEADERS,     data={\"content\": \"Tell me about Canada in detail.\", \"stream\": \"false\"}, ) print(response.json().get(\"latest_message\", {}).get(\"content\")) ```  ---  Explore the **Assistants**, **Threads**, and **Documents** sections in the sidebar.     

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


__version__ = "1.0.0"

# Define package exports
__all__ = [
    "AssistantsApi",
    "DocumentsApi",
    "ThreadsApi",
    "ApiResponse",
    "ApiClient",
    "Configuration",
    "OpenApiException",
    "ApiTypeError",
    "ApiValueError",
    "ApiKeyError",
    "ApiAttributeError",
    "ApiException",
    "APIKeyCreate",
    "APIKeyCreateResponse",
    "APIKeyRead",
    "Assistant",
    "AssistantCreate",
    "AssistantDeleteResponse",
    "AssistantUpdate",
    "AttachmentInfo",
    "AuthClientResponse",
    "AuthSessionResponse",
    "AuthStatusResponse",
    "AuthUserResponse",
    "BodySendChatMessageChatThreadsThreadIdMessagesPost",
    "BodyStreamChatMessageChatThreadsThreadIdMessagesStreamPost",
    "BodySubmitFeedbackFeedbackPost",
    "BodyUploadDocumentToChatThreadChatThreadsThreadIdDocumentsPost",
    "ChatAssistant",
    "ChatAssistantCreate",
    "ChatAttachment",
    "ChatDocument",
    "ChatMessage",
    "ChatOverview",
    "ChatThread",
    "ChatThreadCreate",
    "ChatThreadWithDetails",
    "CreditLedger",
    "CreditWallet",
    "DebitPreview",
    "DebitPreviewRequest",
    "DocumentDeleteResponse",
    "DocumentRead",
    "DocumentStatus",
    "DocumentStatusResponse",
    "EmailSentResponse",
    "FeedbackRead",
    "FeedbackResponse",
    "FunctionDefinitionInput",
    "FunctionDefinitionOutput",
    "HTTPValidationError",
    "LedgerReason",
    "Message",
    "MessageResponse",
    "MessageRole",
    "MessageStatus",
    "MessageWithAttachments",
    "ProfileUpdateRequest",
    "SigninRequest",
    "SignupRequest",
    "SubmitToolOutputsRequest",
    "SubscriptionPlan",
    "Thread",
    "ThreadDeleteResponse",
    "ToolDefinitionInput",
    "ToolDefinitionOutput",
    "ToolOutput",
    "ToolOutputsResponse",
    "ToolParameterProperties",
    "ToolParameters",
    "UsageEvent",
    "UserPreferencesResponse",
    "UserRole",
    "ValidationError",
    "ValidationErrorLocInner",
    "VerifyEmailRequest",
    "WaitlistEntryRequest",
]

# import apis into sdk package
from backboard.api.assistants_api import AssistantsApi as AssistantsApi
from backboard.api.documents_api import DocumentsApi as DocumentsApi
from backboard.api.threads_api import ThreadsApi as ThreadsApi

# import ApiClient
from backboard.api_response import ApiResponse as ApiResponse
from backboard.api_client import ApiClient as ApiClient
from backboard.configuration import Configuration as Configuration
from backboard.exceptions import OpenApiException as OpenApiException
from backboard.exceptions import ApiTypeError as ApiTypeError
from backboard.exceptions import ApiValueError as ApiValueError
from backboard.exceptions import ApiKeyError as ApiKeyError
from backboard.exceptions import ApiAttributeError as ApiAttributeError
from backboard.exceptions import ApiException as ApiException

# import models into sdk package
from backboard.models.api_key_create import APIKeyCreate as APIKeyCreate
from backboard.models.api_key_create_response import APIKeyCreateResponse as APIKeyCreateResponse
from backboard.models.api_key_read import APIKeyRead as APIKeyRead
from backboard.models.assistant import Assistant as Assistant
from backboard.models.assistant_create import AssistantCreate as AssistantCreate
from backboard.models.assistant_delete_response import AssistantDeleteResponse as AssistantDeleteResponse
from backboard.models.assistant_update import AssistantUpdate as AssistantUpdate
from backboard.models.attachment_info import AttachmentInfo as AttachmentInfo
from backboard.models.auth_client_response import AuthClientResponse as AuthClientResponse
from backboard.models.auth_session_response import AuthSessionResponse as AuthSessionResponse
from backboard.models.auth_status_response import AuthStatusResponse as AuthStatusResponse
from backboard.models.auth_user_response import AuthUserResponse as AuthUserResponse
from backboard.models.body_send_chat_message_chat_threads_thread_id_messages_post import BodySendChatMessageChatThreadsThreadIdMessagesPost as BodySendChatMessageChatThreadsThreadIdMessagesPost
from backboard.models.body_stream_chat_message_chat_threads_thread_id_messages_stream_post import BodyStreamChatMessageChatThreadsThreadIdMessagesStreamPost as BodyStreamChatMessageChatThreadsThreadIdMessagesStreamPost
from backboard.models.body_submit_feedback_feedback_post import BodySubmitFeedbackFeedbackPost as BodySubmitFeedbackFeedbackPost
from backboard.models.body_upload_document_to_chat_thread_chat_threads_thread_id_documents_post import BodyUploadDocumentToChatThreadChatThreadsThreadIdDocumentsPost as BodyUploadDocumentToChatThreadChatThreadsThreadIdDocumentsPost
from backboard.models.chat_assistant import ChatAssistant as ChatAssistant
from backboard.models.chat_assistant_create import ChatAssistantCreate as ChatAssistantCreate
from backboard.models.chat_attachment import ChatAttachment as ChatAttachment
from backboard.models.chat_document import ChatDocument as ChatDocument
from backboard.models.chat_message import ChatMessage as ChatMessage
from backboard.models.chat_overview import ChatOverview as ChatOverview
from backboard.models.chat_thread import ChatThread as ChatThread
from backboard.models.chat_thread_create import ChatThreadCreate as ChatThreadCreate
from backboard.models.chat_thread_with_details import ChatThreadWithDetails as ChatThreadWithDetails
from backboard.models.credit_ledger import CreditLedger as CreditLedger
from backboard.models.credit_wallet import CreditWallet as CreditWallet
from backboard.models.debit_preview import DebitPreview as DebitPreview
from backboard.models.debit_preview_request import DebitPreviewRequest as DebitPreviewRequest
from backboard.models.document_delete_response import DocumentDeleteResponse as DocumentDeleteResponse
from backboard.models.document_read import DocumentRead as DocumentRead
from backboard.models.document_status import DocumentStatus as DocumentStatus
from backboard.models.document_status_response import DocumentStatusResponse as DocumentStatusResponse
from backboard.models.email_sent_response import EmailSentResponse as EmailSentResponse
from backboard.models.feedback_read import FeedbackRead as FeedbackRead
from backboard.models.feedback_response import FeedbackResponse as FeedbackResponse
from backboard.models.function_definition_input import FunctionDefinitionInput as FunctionDefinitionInput
from backboard.models.function_definition_output import FunctionDefinitionOutput as FunctionDefinitionOutput
from backboard.models.http_validation_error import HTTPValidationError as HTTPValidationError
from backboard.models.ledger_reason import LedgerReason as LedgerReason
from backboard.models.message import Message as Message
from backboard.models.message_response import MessageResponse as MessageResponse
from backboard.models.message_role import MessageRole as MessageRole
from backboard.models.message_status import MessageStatus as MessageStatus
from backboard.models.message_with_attachments import MessageWithAttachments as MessageWithAttachments
from backboard.models.profile_update_request import ProfileUpdateRequest as ProfileUpdateRequest
from backboard.models.signin_request import SigninRequest as SigninRequest
from backboard.models.signup_request import SignupRequest as SignupRequest
from backboard.models.submit_tool_outputs_request import SubmitToolOutputsRequest as SubmitToolOutputsRequest
from backboard.models.subscription_plan import SubscriptionPlan as SubscriptionPlan
from backboard.models.thread import Thread as Thread
from backboard.models.thread_delete_response import ThreadDeleteResponse as ThreadDeleteResponse
from backboard.models.tool_definition_input import ToolDefinitionInput as ToolDefinitionInput
from backboard.models.tool_definition_output import ToolDefinitionOutput as ToolDefinitionOutput
from backboard.models.tool_output import ToolOutput as ToolOutput
from backboard.models.tool_outputs_response import ToolOutputsResponse as ToolOutputsResponse
from backboard.models.tool_parameter_properties import ToolParameterProperties as ToolParameterProperties
from backboard.models.tool_parameters import ToolParameters as ToolParameters
from backboard.models.usage_event import UsageEvent as UsageEvent
from backboard.models.user_preferences_response import UserPreferencesResponse as UserPreferencesResponse
from backboard.models.user_role import UserRole as UserRole
from backboard.models.validation_error import ValidationError as ValidationError
from backboard.models.validation_error_loc_inner import ValidationErrorLocInner as ValidationErrorLocInner
from backboard.models.verify_email_request import VerifyEmailRequest as VerifyEmailRequest
from backboard.models.waitlist_entry_request import WaitlistEntryRequest as WaitlistEntryRequest

# coding: utf-8

"""
    Backboard API

     # Welcome to Backboard API  Build conversational AI applications with persistent memory and intelligent document processing.  ## Endpoint URL ``` https://backboard.io/api ```  ## Core Features  ### **Persistent Conversations** Create conversation threads that maintain context across multiple messages and support file attachments.  ### **Intelligent Document Processing** Upload and process documents (PDF, text, Office files) with automatic chunking and indexing for retrieval.  ### **AI Assistants** Create specialized assistants with custom instructions, document access, and tool capabilities.  ## Quickstart  ```python import requests  API_KEY = \"your_api_key\" BASE_URL = \"https://backboard.io/api\" HEADERS = {\"X-API-Key\": API_KEY}  # 1) Create assistant response = requests.post(     f\"{BASE_URL}/assistants\",     json={\"name\": \"Support Bot\", \"description\": \"After every response, pass a joke at the end of the response!\"},     headers=HEADERS, ) assistant_id = response.json()[\"assistant_id\"]  # 2) Create thread response = requests.post(     f\"{BASE_URL}/assistants/{assistant_id}/threads\",     json={},     headers=HEADERS, ) thread_id = response.json()[\"thread_id\"]  # 3) Send message response = requests.post(     f\"{BASE_URL}/threads/{thread_id}/messages\",     headers=HEADERS,     data={\"content\": \"Tell me about Canada in detail.\", \"stream\": \"false\"}, ) print(response.json().get(\"latest_message\", {}).get(\"content\")) ```  ---  Explore the **Assistants**, **Threads**, and **Documents** sections in the sidebar.     

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from setuptools import setup, find_packages  # noqa: H301

# To install the library, run the following
#
# python setup.py install
#
# prerequisite: setuptools
# http://pypi.python.org/pypi/setuptools
NAME = "backboard-sdk"
VERSION = "1.0.0"
PYTHON_REQUIRES = ">= 3.9"
REQUIRES = [
    "urllib3 >= 2.1.0, < 3.0.0",
    "python-dateutil >= 2.8.2",
    "pydantic >= 2",
    "typing-extensions >= 4.7.1",
]

setup(
    name=NAME,
    version=VERSION,
    description="Backboard API",
    author="OpenAPI Generator community",
    author_email="team@openapitools.org",
    url="https://github.com/backboard/backboard-python-sdk",
    keywords=["OpenAPI", "OpenAPI-Generator", "Backboard API"],
    install_requires=REQUIRES,
    packages=find_packages(exclude=["test", "tests"]),
    include_package_data=True,
    long_description_content_type='text/markdown',
    long_description=r"""
Backboard API - Build conversational AI applications with persistent memory and intelligent document processing.

## Endpoint URL
```
https://backboard.io/api
```

## Core Features

### **Persistent Conversations**
Create conversation threads that maintain context across multiple messages and support file attachments.

### **Intelligent Document Processing**
Upload and process documents (PDF, text, Office files) with automatic chunking and indexing for retrieval.

### **AI Assistants**
Create specialized assistants with custom instructions, document access, and tool capabilities.

## Quickstart

```python
import requests

API_KEY = "your_api_key"
BASE_URL = "https://backboard.io/api"
HEADERS = {"X-API-Key": API_KEY}

# 1) Create assistant
response = requests.post(
    f"{BASE_URL}/assistants",
    json={"name": "Support Bot", "description": "After every response, pass a joke at the end of the response!"},
    headers=HEADERS,
)
assistant_id = response.json()["assistant_id"]

# 2) Create thread
response = requests.post(
    f"{BASE_URL}/assistants/{assistant_id}/threads",
    json={},
    headers=HEADERS,
)
thread_id = response.json()["thread_id"]

# 3) Send message
response = requests.post(
    f"{BASE_URL}/threads/{thread_id}/messages",
    headers=HEADERS,
    data={"content": "Tell me about Canada in detail.", "stream": "false"},
)
print(response.json().get("latest_message", {}).get("content"))
```

---

Explore the **Assistants**, **Threads**, and **Documents** sections in the sidebar.
    """,  # noqa: E501
    package_data={"backboard": ["py.typed"]},
)
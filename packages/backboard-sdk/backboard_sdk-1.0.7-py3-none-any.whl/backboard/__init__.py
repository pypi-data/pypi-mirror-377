# coding: utf-8

# flake8: noqa

"""
    Backboard API

     # Welcome to Backboard API  Build conversational AI applications with persistent memory and intelligent document processing.  ## Endpoint URL ``` https://backboard.io/api ```  ## Core Features  ### **Persistent Conversations** Create conversation threads that maintain context across multiple messages and support file attachments.  ### **Intelligent Document Processing** Upload and process documents (PDF, text, Office files) with automatic chunking and indexing for retrieval.  ### **AI Assistants** Create specialized assistants with custom instructions, document access, and tool capabilities.  ## Quickstart  ```python import requests  API_KEY = \"your_api_key\" BASE_URL = \"https://backboard.io/api\" HEADERS = {\"X-API-Key\": API_KEY}  # 1) Create assistant response = requests.post(     f\"{BASE_URL}/assistants\",     json={\"name\": \"Support Bot\", \"description\": \"After every response, pass a joke at the end of the response!\"},     headers=HEADERS, ) assistant_id = response.json()[\"assistant_id\"]  # 2) Create thread response = requests.post(     f\"{BASE_URL}/assistants/{assistant_id}/threads\",     json={},     headers=HEADERS, ) thread_id = response.json()[\"thread_id\"]  # 3) Send message response = requests.post(     f\"{BASE_URL}/threads/{thread_id}/messages\",     headers=HEADERS,     data={\"content\": \"Tell me about Canada in detail.\", \"stream\": \"false\"}, ) print(response.json().get(\"latest_message\", {}).get(\"content\")) ```  ---  Explore the **Assistants**, **Threads**, and **Documents** sections in the sidebar.     

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


__version__ = "1.0.7"

# Define package exports
__all__ = [
    "Backboard",
    "ApiResponse",
    "ApiClient",
    "Configuration",
    "OpenApiException",
    "ApiTypeError",
    "ApiValueError",
    "ApiKeyError",
    "ApiAttributeError",
    "ApiException",
    "Assistant",
    "AssistantCreate",
    "AssistantDeleteResponse",
    "AssistantUpdate",
    "AttachmentInfo",
    "BodyAddMessageToThreadThreadsThreadIdMessagesPost",
    "BodyUploadDocumentToAssistantAssistantsAssistantIdDocumentsPost",
    "BodyUploadDocumentToThreadThreadsThreadIdDocumentsPost",
    "DocumentDeleteResponse",
    "DocumentRead",
    "DocumentStatus",
    "DocumentStatusResponse",
    "HTTPValidationError",
    "Message",
    "MessageResponse",
    "MessageRole",
    "MessageStatus",
    "MessageWithAttachments",
    "Thread",
    "ThreadDeleteResponse",
    "ValidationError",
    "ValidationErrorLocInner",
]

# import apis into sdk package

# import ApiClient
from backboard.api_response import ApiResponse as ApiResponse
from backboard.api_client import ApiClient as ApiClient
from backboard.configuration import Configuration as Configuration
from backboard.exceptions import OpenApiException as OpenApiException
from backboard.exceptions import ApiTypeError as ApiTypeError
from backboard.exceptions import ApiValueError as ApiValueError
from backboard.exceptions import ApiKeyError as ApiKeyError
from backboard.exceptions import ApiAttributeError as ApiAttributeError
from backboard.exceptions import ApiException as ApiException

# import models into sdk package
from backboard.models.assistant import Assistant as Assistant
from backboard.models.assistant_create import AssistantCreate as AssistantCreate
from backboard.models.assistant_delete_response import AssistantDeleteResponse as AssistantDeleteResponse
from backboard.models.assistant_update import AssistantUpdate as AssistantUpdate
from backboard.models.attachment_info import AttachmentInfo as AttachmentInfo
from backboard.models.body_add_message_to_thread_threads_thread_id_messages_post import BodyAddMessageToThreadThreadsThreadIdMessagesPost as BodyAddMessageToThreadThreadsThreadIdMessagesPost
from backboard.models.body_upload_document_to_assistant_assistants_assistant_id_documents_post import BodyUploadDocumentToAssistantAssistantsAssistantIdDocumentsPost as BodyUploadDocumentToAssistantAssistantsAssistantIdDocumentsPost
from backboard.models.body_upload_document_to_thread_threads_thread_id_documents_post import BodyUploadDocumentToThreadThreadsThreadIdDocumentsPost as BodyUploadDocumentToThreadThreadsThreadIdDocumentsPost
from backboard.models.document_delete_response import DocumentDeleteResponse as DocumentDeleteResponse
from backboard.models.document_read import DocumentRead as DocumentRead
from backboard.models.document_status import DocumentStatus as DocumentStatus
from backboard.models.document_status_response import DocumentStatusResponse as DocumentStatusResponse
from backboard.models.http_validation_error import HTTPValidationError as HTTPValidationError
from backboard.models.message import Message as Message
from backboard.models.message_response import MessageResponse as MessageResponse
from backboard.models.message_role import MessageRole as MessageRole
from backboard.models.message_status import MessageStatus as MessageStatus
from backboard.models.message_with_attachments import MessageWithAttachments as MessageWithAttachments
from backboard.models.thread import Thread as Thread
from backboard.models.thread_delete_response import ThreadDeleteResponse as ThreadDeleteResponse
from backboard.models.validation_error import ValidationError as ValidationError
from backboard.models.validation_error_loc_inner import ValidationErrorLocInner as ValidationErrorLocInner
from backboard.client import Backboard as Backboard

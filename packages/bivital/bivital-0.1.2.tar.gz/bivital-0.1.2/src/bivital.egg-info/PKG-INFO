Metadata-Version: 2.4
Name: bivital
Version: 0.1.2
Summary: BiVital Library
Author-email: University Bielefeld <ks-bivital-support@techfak.uni-bielefeld.de>
License: MIT
Project-URL: Homepage, https://bivital.eu/
Project-URL: Repository, https://gitlab.ub.uni-bielefeld.de/bi-vital-open-source/py_bivital.git
Project-URL: Issues, https://gitlab.ub.uni-bielefeld.de/bi-vital-open-source/py_bivital/-/issues
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pandas<3.0,>=2.2
Requires-Dist: pyserial<4.0,>=3.5
Requires-Dist: matplotlib<4.0,>=3.10
Provides-Extra: notebook
Requires-Dist: jupyterlab<5,>=4; extra == "notebook"
Requires-Dist: ipykernel>=6; extra == "notebook"
Dynamic: license-file

# py_bivital

**py_bivital** is the official Python library for the BiVital data workflow.  
It helps you organize, preprocess and manage measurement projects, series, and raw data collected via BiVital systems.

---

## ðŸš€ Features

- Project structure setup
- Series and data import
- Label management
- CLI tool (`bvtool`) for fast interaction
- Ready for Jupyter workflows and pipeline processing

---

## ðŸ“¦ Installation

> âœ… **Recommended Python version: 3.11/3.12**  
> Other versions (e.g. 3.13) might cause compatibility issues with some dependencies like `pyarrow`.

### 1. Create and activate a virtual environment (recommended)

#### ðŸ”¹ Option A: Using `venv` (standard Python virtual environment)

Open a terminal and navigate to your project directory:
```
cd path/to/your/project
```
Then create and activate your virtual environment:
```bash
pip install virtualenv                     # If virtualenv is not installed
python -m venv <env>                       # Make sure Python 3.11/3.12 is installed
source <env>/bin/activate                  # On Linux/Mac
<env>\Scripts\activate                     # On Windows
```

#### ðŸ”¹ Option B: Using conda
```bash
conda create -n <env> python=3.12
conda activate <env>
conda install pip
```

### 2. Install via pip
```bash
pip install git+https://gitlab.ub.uni-bielefeld.de/bi-vital-open-source/py_bivital
```
---

## ðŸ›  Usage
### Command-Line Interface (CLI)
```bash
bvtool -h                     # Show help
bvtool project -p PATH -n NAME
bvtool series -p PATH -n NAME
bvtool data -p PATH -s pc
bvtool label -p PATH
````
---
## ðŸ“‚ Project Structure
Your project will be organized like this:
```
BiVitalProject/
â”œâ”€â”€ Series1/
â”‚   â””â”€â”€ MAC_01/
â”‚       â””â”€â”€ log_01.csv
â””â”€â”€ Series2/
    â””â”€â”€ ...
```

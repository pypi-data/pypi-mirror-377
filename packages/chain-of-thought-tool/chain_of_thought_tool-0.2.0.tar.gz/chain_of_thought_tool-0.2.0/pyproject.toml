[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "chain-of-thought-tool"
version = "0.2.0"
description = "A Python library for formal reasoning methods with LLM integration"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "reasoning-library contributors" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["reasoning", "logic", "ai", "llm", "functional-programming"]
requires-python = ">=3.10"
dependencies = [
    "numpy>=1.24.0",
    "pytest>=8.4.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/democratize-technology/reasoning_library"
Repository = "https://github.com/democratize-technology/reasoning_library"
Documentation = "https://github.com/democratize-technology/reasoning_library#readme"
Issues = "https://github.com/democratize-technology/reasoning_library/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/reasoning_library"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/examples",
    "/README.md",
    "/pyproject.toml",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]

[tool.coverage.run]
source = ["src/reasoning_library"]
branch = true

[tool.coverage.report]
show_missing = true
fail_under = 85

[tool.black]
line-length = 88
target-version = ["py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["reasoning_library"]

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["numpy.*"]
ignore_missing_imports = true

[dependency-groups]
dev = [
    "twine>=6.2.0",
]

name: Code Quality

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

permissions:
  contents: read

jobs:
  lock_file:
    name: üß∑ Prepare Locked Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - run: uv lock --locked


  linting:
    name: üîç Lint Code with Ruff
    runs-on: ubuntu-latest
    needs: [lock_file]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - run: uv run --all-extras ruff check .


  formatting:
    name: üßπ Check Code Formatting
    runs-on: ubuntu-latest
    needs: [lock_file]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - run: uv run --all-extras ruff format --check .


  type_consistency:
    name: üß† Check Type Consistency
    runs-on: ubuntu-latest
    needs: [lock_file]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Install the project
        run: uv sync

      - run: uv run --all-extras pyright .


  unit_tests:
    name: üß™ Unit Tests on ${{ matrix.os }} / Python ${{ matrix.python-version }}${{ matrix.experimental && ' (Experimental)' || '' }}
    runs-on: macos-latest
    needs: [lock_file]
    permissions:
      contents: read
      statuses: write
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        experimental: [false]
        include:
          - os: macos-latest
            python-version: "3.14"
            experimental: true
          - os: ubuntu-latest
            python-version: "3.14"
            experimental: true
          - os: windows-latest
            python-version: "3.14"
            experimental: true
    continue-on-error: ${{ matrix.experimental }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Run tests with pytest
        run: uv run --all-extras --python ${{ matrix.python-version }} pytest -n auto tests/unit

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true


  inclusive_language:
    name: üî§ Inclusive Language Check
    runs-on: ubuntu-latest
    needs: [lock_file]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Inclusive Language Check
        uses: get-woke/woke-action@v0
        with:
          fail-on-error: true

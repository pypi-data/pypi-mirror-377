"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .token_enum import TokenEnum
from compass_api_sdk.types import BaseModel
from typing_extensions import TypedDict


class UniswapPoolPriceResponseTypedDict(TypedDict):
    token_in: TokenEnum
    r"""A class representing the token.

    This class is used to represent the token in the system. Notice individual
    endpoints' documentation where per chain tokens are presented.
    """
    token_out: TokenEnum
    r"""A class representing the token.

    This class is used to represent the token in the system. Notice individual
    endpoints' documentation where per chain tokens are presented.
    """
    price: str
    r"""The price of the pool. This is expressed as an instantanteous amount of how many token0 you need to buy 1 token1. In any swap this will not change during the trade; use the quote endpoint to get a better idea of how much you will pay!"""
    tick: int
    r"""The current tick in the pool. This is a number that represents the price of the pool according to the uniswap v3 concentrated liquidity concept."""


class UniswapPoolPriceResponse(BaseModel):
    token_in: TokenEnum
    r"""A class representing the token.

    This class is used to represent the token in the system. Notice individual
    endpoints' documentation where per chain tokens are presented.
    """

    token_out: TokenEnum
    r"""A class representing the token.

    This class is used to represent the token in the system. Notice individual
    endpoints' documentation where per chain tokens are presented.
    """

    price: str
    r"""The price of the pool. This is expressed as an instantanteous amount of how many token0 you need to buy 1 token1. In any swap this will not change during the trade; use the quote endpoint to get a better idea of how much you will pay!"""

    tick: int
    r"""The current tick in the pool. This is a number that represents the price of the pool according to the uniswap v3 concentrated liquidity concept."""

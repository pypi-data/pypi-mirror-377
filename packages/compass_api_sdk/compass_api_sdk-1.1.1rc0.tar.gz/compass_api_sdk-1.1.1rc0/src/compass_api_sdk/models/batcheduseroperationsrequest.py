"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .useroperation import UserOperation, UserOperationTypedDict
from compass_api_sdk.types import BaseModel
from enum import Enum
from typing import List
from typing_extensions import TypedDict


class BatchedUserOperationsRequestChain(str, Enum):
    ARBITRUM = "arbitrum"
    BASE = "base"
    ETHEREUM = "ethereum"


class BatchedUserOperationsRequestTypedDict(TypedDict):
    r"""Request model for batching user operations."""

    chain: BatchedUserOperationsRequestChain
    sender: str
    r"""The address of the transaction sender."""
    operations: List[UserOperationTypedDict]
    r"""List of possible user operations"""


class BatchedUserOperationsRequest(BaseModel):
    r"""Request model for batching user operations."""

    chain: BatchedUserOperationsRequestChain

    sender: str
    r"""The address of the transaction sender."""

    operations: List[UserOperation]
    r"""List of possible user operations"""

workflow:
  rules:
    # build on merge request updates
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    # pushes to main
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    # and tags
    - if: $CI_COMMIT_TAG


stages:
  - lint
  - test
  - sonarqube
  - deploy


static:
  stage: lint
  image: "python:3.12"

  before_script:
    - apt update && apt install -y --no-install-recommends git
    - pip install pre-commit

  script:
    - pre-commit run --all-files


test:
  stage: test
  parallel:
    matrix:
      - PYTHON_VERSION:
          - "3.12"   # CTAO reference version, preparation for update
        RUCIO_VERSION:
          - "38.0.0" # Could test on more to prepare updates

  image: "python:$PYTHON_VERSION"
  variables:
    RUCIO_CONFIG: src/bdms_rucio_policy/tests/resources/rucio.cfg

  before_script:
    - python --version
    - pip install rucio==${RUCIO_VERSION}
    - pip install -e .[test]

  script:
    - pytest -v --color=yes

# Run the coverage on the oldest supported python version
# no special reason, just to have no "gap" in the versions in the matrix above
tests-with-cov:
  stage: test
  image: "python:3.9"
  variables:
    RUCIO_VERSION: "38.0.0"
    RUCIO_CONFIG: src/bdms_rucio_policy/tests/resources/rucio.cfg

  before_script:
    - python --version
    - pip install rucio==${RUCIO_VERSION}
    - pip install -e .[test]

  script:
    - pytest -v --color=yes --cov --cov-report=xml

  artifacts:
    paths:
      - coverage.xml

sonarqube:
  stage: sonarqube
  needs:
    - job: tests-with-cov
      artifacts: true
  image:
    name: harbor.cta-observatory.org/proxy_cache/sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]

  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"

  script:
    - sonar-scanner --debug -Dsonar.qualitygate.wait=true

  allow_failure: true


pypi:
  image: "python:3.12"
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - pip install -U twine build
    - python -m build
    - twine upload dist/*
  variables:
    TWINE_NON_INTERACTIVE: "true"
    TWINE_USERNAME: "__token__"

[project]
name = "datacontract-helper"
version = "0.1.51"
description = "Add your description here"
readme = "README.md"
# dynamic = ["version"]
requires-python = ">=3.13"
dependencies = [
    "attrs>=25.3.0",
    "build>=1.3.0",
    "click>=8.2.1",
    "confluent-kafka[all,protobuf,schema-registry]>=2.11.1",
    "datacontract-cli[all]>=0.10.35",
    "httpx>=0.28.1",
    "jsonschema>=4.25.1",
    "orjson>=3.11.3",
    "pip>=25.2",
    "requests>=2.32.5",
    "twine>=6.1.0",
]
# dynamic = ["version", "description"]


# [tool.setuptools.dynamic]
# version = {attr = "datacontract_helper.__version__"}
# description = {file = "README.md"}

[project.optional-dependencies]
dev = [
  "black",
  "flake8",
  "Flake8-pyproject",
  "pre-commit",
  "pylint",
  "ruff",
]
pypi = [
  "build",
  "pytest-runner",
  "setuptools-lint",
  "setuptools_scm",
  "twine",
  "wheel"
]
test = [
 "pytest",
 "pytest-cov",
]

# [tool.setuptools.packages-data]
# tcx2gpx = ["*.yaml", "*.json"]


[tool.setuptools.packages.find]
where = ["src"]


[tool.setuptools]
package-dir = {"" = "src"}


[build-system]
requires = [
    "setuptools >= 65.6.3",
    "wheel",
    #"setuptools_scm[toml]>=6.2"
    ]
build-backend = "setuptools.build_meta"



[project.scripts]
datacontract-helper = "cli.cli:cli"


# [tool.ruff]
# fixable = ["A", "B", "C", "D", "E", "F", "R", "S", "W", "U"]
# unfixable = []


# [tool.bumpver]
# current_version = "2025.1001-alpha"
# version_pattern = "YYYY.BUILD[-TAG]"
# commit_message = "bump version {old_version} -> {new_version}"
# tag_message = "{new_version}"
# tag_scope = "default"
# pre_commit_hook = ""
# post_commit_hook = ""
# commit = true
# tag = true
# push = true

# [tool.bumpver.file_patterns]
# "pyproject.toml" = [
#     'current_version = "{version}"',
# ]
# "README.md" = [
#     "{version}",
#     "{pep440_version}",
# ]






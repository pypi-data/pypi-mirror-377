Metadata-Version: 2.4
Name: dddx
Version: 0.1.0
Summary: Domain-Driven Design base classes and contracts
Author-email: Ariana Maghsoudi <ariana.maghsoudi82@gmail.com>
License: MIT
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: underpyx>=0.1.1
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: assertpy; extra == "dev"
Dynamic: license-file

# Python-DDD-Infrastructure

**A lightweight Python package for implementing Domain-Driven Design (DDD) building blocks.**  
Provides base classes for `ValueObject`, `Entity`, `AggregateRoot`, and `DomainEvent`, plus utility mixins for immutability and encapsulation.

---

## âœ¨ Features

- ðŸ“¦ **Core DDD Building Blocks**
  - `ValueObject` â€” immutable, equality-by-value objects.
  - `Entity` â€” objects identified by unique ID.
  - `AggregateRoot` â€” transactional consistency boundary.
  - `DomainEvent` â€” base class for event-sourced or message-driven domains.

- ðŸ”’ **Utility Foundations**
  - `Immutable` base â€” automatic immutability enforcement.
  - `Encapsulated` base â€” protected internal state with controlled exposure.
---

## ðŸ“¦ Installation

Clone the repository and install it locally:

```bash
git clone https://github.com/ariana126/Python-DDD-Infrastructure.git
cd Python-DDD-Infrastructure
pip install -e .[test]
```

Or set it in your `requirements.txt` as 
`git+https://github.com/ariana126/Python-DDD-Infrastructure.git@main#egg=ddd`

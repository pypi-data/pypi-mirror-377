# generated by datamodel-codegen:
#   filename:  create_media_dcr.json

from __future__ import annotations

from typing import Optional, Sequence

from typing_extensions import Literal, NotRequired, TypedDict

FormatType = Literal[
    'STRING',
    'INTEGER',
    'FLOAT',
    'EMAIL',
    'DATE_ISO8601',
    'PHONE_NUMBER_E164',
    'HASH_SHA256_HEX',
]


HashingAlgorithm = Literal['SHA256_HEX']


Permission = Literal[
    'VIEW_OVERLAP',
    'VIEW_INSIGHTS',
    'PROVIDE_SEED_AUDIENCE',
    'PROVIDE_BASE_AUDIENCE',
    'CREATE_CUSTOM_AUDIENCE',
    'EXPORT_AUDIENCE',
    'MODEL_QUALITY',
]


class PublishedPolicy(TypedDict):
    leafId: str
    policyId: str
    publishedAt: NotRequired[Optional[str]]
    publishedByEmail: NotRequired[Optional[str]]


class ParticipantGroup(TypedDict):
    emails: Sequence[str]
    id: str
    organizationId: NotRequired[Optional[str]]
    permissions: Sequence[Permission]
    role: str


class CreateMediaDcr1(TypedDict):
    enableDebugMode: bool
    enableInsights: bool
    enableLookalikeAudiences: bool
    enableRemarketing: bool
    enableRuleBasedAudiences: bool
    hashMatchingIdWith: NotRequired[Optional[HashingAlgorithm]]
    hideAbsoluteValuesFromInsights: bool
    matchingIdFormat: FormatType
    name: str
    participantGroups: Sequence[ParticipantGroup]
    policies: Sequence[PublishedPolicy]
    version: Literal['v0']


CreateMediaDcr = CreateMediaDcr1

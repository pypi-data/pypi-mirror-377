# generated by datamodel-codegen:
#   filename:  data_room_compute_action.json

from __future__ import annotations

from typing import Any, Mapping, Optional, Sequence, Union

from typing_extensions import Literal, NotRequired, TypedDict


class DataRoomComputeAction1(TypedDict):
    kind: Literal['media']
    getMatchingValidationReport: Mapping[str, Any]


class DataRoomComputeAction2(TypedDict):
    kind: Literal['media']
    getSegmentsValidationReport: Mapping[str, Any]


class DataRoomComputeAction3(TypedDict):
    kind: Literal['media']
    getDemographicsValidationReport: Mapping[str, Any]


class DataRoomComputeAction4(TypedDict):
    kind: Literal['media']
    getAudiencesValidationReport: Mapping[str, Any]


class DataRoomComputeAction5(TypedDict):
    kind: Literal['media']
    computeInsights: Mapping[str, Any]


class DataRoomComputeAction6(TypedDict):
    kind: Literal['media']
    computeOverlapStatistics: Mapping[str, Any]


class DataRoomComputeAction7(TypedDict):
    kind: Literal['media']
    getDataAttributes: Mapping[str, Any]


class DataRoomComputeAction8(TypedDict):
    kind: Literal['media']
    retrieveModelQualityReport: Mapping[str, Any]


class GetCustomAudiences(TypedDict):
    user: str


class DataRoomComputeAction10(TypedDict):
    kind: Literal['media']
    getCustomAudiences: GetCustomAudiences


class GetSeedAudiences(GetCustomAudiences):
    pass


class DataRoomComputeAction11(TypedDict):
    kind: Literal['media']
    getSeedAudiences: GetSeedAudiences


class AudienceReference19(TypedDict):
    kind: Literal['BASE']


class AudienceReference20(TypedDict):
    id: str
    kind: Literal['CUSTOM']


class AudienceReference21(TypedDict):
    audienceType: str
    kind: Literal['SEED']


AudienceReference = Union[AudienceReference19, AudienceReference20, AudienceReference21]


class AudienceReferenceOrDraft1(TypedDict):
    kind: Literal['REF']
    value: AudienceReference


BooleanOp = Literal['AND', 'OR']


CombineOperator = Literal['INTERSECT', 'UNION', 'DIFF']


class CustomAudienceDefinition19(TypedDict):
    excludeSeedAudience: NotRequired[Optional[bool]]
    kind: Literal['LOOKALIKE']
    reach: int
    sourceRef: AudienceReference


FilterOperator = Literal[
    'CONTAINS_ANY_OF', 'CONTAINS_NONE_OF', 'CONTAINS_ALL_OF', 'EMPTY', 'NOT_EMPTY'
]


class SeedAudienceReference(TypedDict):
    audienceType: str


class GetLookalikeAudienceStatistics(TypedDict):
    audienceRef: AudienceReference


class DataRoomComputeAction9(TypedDict):
    kind: Literal['media']
    getLookalikeAudienceStatistics: GetLookalikeAudienceStatistics


class GetAudienceUserList(GetLookalikeAudienceStatistics):
    pass


class DataRoomComputeAction13(TypedDict):
    kind: Literal['media']
    getAudienceUserList: GetAudienceUserList


class AudienceFilter(TypedDict):
    attribute: str
    operator: FilterOperator
    values: NotRequired[Sequence[str]]


class AudienceFilters(TypedDict):
    booleanOp: BooleanOp
    filters: Sequence[AudienceFilter]


class CustomAudienceDefinition21(TypedDict):
    kind: Literal['REMARKETING']
    seedAudienceRef: SeedAudienceReference


class AudienceCombinator(TypedDict):
    filters: NotRequired[Optional[AudienceFilters]]
    operator: CombineOperator
    sourceRef: AudienceReference


class CustomAudienceDefinition20(TypedDict):
    combine: NotRequired[Sequence[AudienceCombinator]]
    filters: NotRequired[Optional[AudienceFilters]]
    kind: Literal['RULE_BASED']
    sourceRef: AudienceReference


CustomAudienceDefinition = Union[
    CustomAudienceDefinition19, CustomAudienceDefinition20, CustomAudienceDefinition21
]


class AudienceReferenceOrDraft2(TypedDict):
    kind: Literal['DRAFT']
    value: CustomAudienceDefinition


AudienceReferenceOrDraft = Union[AudienceReferenceOrDraft1, AudienceReferenceOrDraft2]


class EstimateAudienceSize(TypedDict):
    audience: AudienceReferenceOrDraft


class DataRoomComputeAction12(TypedDict):
    kind: Literal['media']
    estimateAudienceSize: EstimateAudienceSize


DataRoomComputeAction = Union[
    DataRoomComputeAction1,
    DataRoomComputeAction2,
    DataRoomComputeAction3,
    DataRoomComputeAction4,
    DataRoomComputeAction5,
    DataRoomComputeAction6,
    DataRoomComputeAction7,
    DataRoomComputeAction8,
    DataRoomComputeAction9,
    DataRoomComputeAction10,
    DataRoomComputeAction11,
    DataRoomComputeAction12,
    DataRoomComputeAction13,
]

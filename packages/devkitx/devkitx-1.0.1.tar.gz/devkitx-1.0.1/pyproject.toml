[build-system]
requires = ["hatchling>=1.25"]
build-backend = "hatchling.build"

[project]
name = "devkitx"
version = "1.0.1"
description = "A pragmatic Python toolkit: HTTP, JSON, async bridges, security, CLI."
readme = "README.md"
license = { text = "MIT" }
authors = [{ name = "LadyCami" }]
requires-python = ">=3.10"
dependencies = [
  "typing-extensions>=4.6; python_version<'3.11'"
]
keywords = [
  "utilities", "developer-tools", "json", "logging", "cli", "http", "files", 
  "devtools", "async", "configuration", "validation", "security", 
  "string-manipulation", "time-utils", "system-utils", "debugging", 
  "profiling", "jwt", "bcrypt", "yaml", "toml", "env-files", "retry-logic",
  "progress-bars", "colored-output", "cross-platform", "type-safe"
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "License :: OSI Approved :: MIT License",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Utilities",
  "Topic :: System :: Systems Administration",
  "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
  "Topic :: Security :: Cryptography",
  "Topic :: Text Processing :: General",
  "Typing :: Typed",
  "Operating System :: OS Independent",
  "Environment :: Console",
]

[project.urls]
Homepage = "https://github.com/ladycami/devkitx"
Issues = "https://github.com/ladycami/devkitx/issues"
Docs = "https://github.com/ladycami/devkitx#readme"

[project.scripts]
devkitx = "devkitx.__main__:main"

[project.optional-dependencies]
http = ["httpx>=0.27,<0.28"]
cli = ["click>=8.1", "rich>=13.7"]
jwt = ["PyJWT[crypto]>=2.8"]
bcrypt = ["bcrypt>=4.1"]
yaml = ["pyyaml>=6.0.1"]
toml = ["tomli>=2.0.1; python_version<'3.11'", "tomli-w>=1.0.0"]

dev = [
  "pytest>=8.0",
  "pytest-cov>=5.0",
  "pytest-asyncio>=0.23",
  "hypothesis>=6.0",
  "mypy>=1.10",
  "ruff>=0.5",
  "black>=24.0",
  "build>=1.2",
  "twine>=5.1",
]

[tool.hatch.build.targets.sdist]
include = ["src/devkitx", "README.md", "LICENSE"]

[tool.hatch.build.targets.wheel]
packages = ["src/devkitx"]

[tool.hatch.build.targets.wheel.force-include]
"src/devkitx/py.typed" = "devkitx/py.typed"

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.black]
line-length = 100
target-version = ["py310"]

[tool.mypy]
python_version = "3.10"
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
pretty = true

[tool.pytest.ini_options]
addopts = [
  "-q",
  "--strict-markers",
  "--strict-config",
  "--cov=devkitx",
  "--cov-report=term-missing",
  "--cov-report=html",
  "--cov-fail-under=30",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "integration: marks tests as integration tests",
  "unit: marks tests as unit tests",
]
filterwarnings = [
  "error",
  "ignore::UserWarning",
  "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src/devkitx"]
omit = [
  "src/devkitx/__main__.py",
  "src/devkitx/cli_utils.py",
  "src/devkitx/config_utils.py",
  "src/devkitx/data_utils.py",
  "src/devkitx/dev_utils.py",
  "src/devkitx/file_utils.py",
  "src/devkitx/log_utils.py",
  "src/devkitx/security_utils.py",
  "src/devkitx/string_utils.py",
  "src/devkitx/system_utils.py",
  "src/devkitx/time_utils.py",
  "src/devkitx/validation_utils.py",
  "src/devkitx/json_utils.py",
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]
[project]
name = "djvite"
version = "1.4.2"
description = "Integrates Vite resources into a Django web site."
authors = [
  { name = "Cyrille Pontvieux", email = "cyrille@enialis.net" },
]
license-files = ["LICENSE"]
license = "MIT"
readme = "README.md"
keywords = ["django", "vite", "javascript"]
# https://pypi.org/classifiers/
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: JavaScript",
  "Framework :: Django",
  "Topic :: Software Development :: Build Tools",
  "Typing :: Typed",
]
requires-python = ">=3.12"
dependencies = [
  "django",
]

[dependency-groups]
dev = [
  "poethepoet",
  "ruff",
  "mypy",
  "django-stubs",
  "pytest",
  "pytest-cov",
  "pytest-html",
  "pytest-django",
  "tomlkit",
  "pdbpp",
]

[project.urls]
# https://github.com/pypi/warehouse/blob/main/warehouse/templates/packaging/detail.html#L20
"Repository" = "https://gitlab.com/jrdasm/djvite"
"Documentation" = "https://gitlab.com/jrdasm/djvite/-/blob/master/README.md"
"Bug Tracker" = "https://gitlab.com/jrdasm/djvite/-/issues"
"Merge Requests" = "https://gitlab.com/jrdasm/djvite/-/merge_requests"
"Changelog" = "https://gitlab.com/jrdasm/djvite/-/blob/master/CHANGELOG.md"
"Contributing" = "https://gitlab.com/jrdasm/djvite/-/blob/master/CONTRIBUTING.md"

[tool.poe]
include = [
  ".poe/versions.toml",
  ".poe/linters.toml",
  ".poe/tests.toml",
  ".poe/dockers.toml",
]

[tool.ruff]
line-length = 160
target-version = "py312"
exclude = [
  "node_modules",
  "examples",
]
[tool.ruff.lint]
preview = true
# https://docs.astral.sh/ruff/rules
select = [
  "F", # pyflake8
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "I", # isort
  "N", # pep8-naming
  "U", # pyupgrade, avoid using deprecated syntax
  "B", # bugbear, avoid non-sense statements
  "COM", # commas
  "DTZ", # datetime timezone
  "PTH", # prefer pathlib
  "LOG", # logging
  "T100", # debugger
  "T203", # pprint
  "FIX", # lines with TODO, FIXME, XXX and HACK
  "Q001", "Q002", "Q004", # double quotes for multiline and pydoc + check for unnecessary escape
]
ignore = [
  "COM812", # conflict with ruff formatter
]
[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true
[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true
force-single-line = true
relative-imports-order = "closest-to-furthest"
split-on-trailing-comma = false
[tool.ruff.format]
quote-style = "preserve"
line-ending = "lf"

[tool.mypy]
exclude = [
  ".venv/*",
  ".cache/*",
  "node_modules/*",
  "examples/*",
]

[tool.pytest.ini_options]
pythonpath = "." # indicate the root path
DJANGO_SETTINGS_MODULE = "tests.settings"
junit_family = "xunit2"
junit_logging = "all"
addopts = [
  "--ignore=node_modules",
  "--ignore=examples",
  "--color=auto",
  "--code-highlight=yes",
  "--junit-xml=reports/report.xunit",
  "--html=reports/report.html",
  "--self-contained-html",
  "--cov",
  "--cov-report=term",
  "--cov-report=xml",
  "--cov-report=html",
]
[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "*/__init__.py"]
branch = true
relative_files = true
[tool.coverage.report]
precision = 2
[tool.coverage.xml]
output = "reports/coverage.xml"
[tool.coverage.html]
directory = "reports/coverage"

[build-system]
# https://docs.astral.sh/uv/concepts/build-backend
requires = ["uv_build>=0.8.15,<0.9.0"]
build-backend = "uv_build"
[tool.uv.build-backend]
source-include = ["CONTRIBUTING.md", "CHANGELOG.md"]

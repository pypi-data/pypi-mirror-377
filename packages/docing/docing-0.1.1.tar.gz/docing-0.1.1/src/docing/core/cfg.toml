[classical-patterns-by-name-prefix]
"" = "self%sother"
i = "self%s=other"
r = "other%sself"

[classical-operators-by-name]
add = "+"
and = "&"
floordiv = "//"
lshift = "<<"
matmul = "@"
mod = "%"
mul = "*"
or = "|"
rshift = ">>"
sub = "-"
truediv = "/"
xor = "^"

[atypical-magic-implements-by-name]
abs = "abs(self)"
bool = "bool(self)"
call = "calling self"
ceil = "math.ceil(self)"
divmod = "divmod(self, other)"
eq = "self==other"
float = "float(self)"
floor = "floor(self)"
ge = "self>=other"
gt = "self>other"
hash = "hash(self)"
int = "int(self)"
invert = "~self"
le = "self<=other"
lt = "self<other"
modf = "math.modf(self)"
ne = "self!=other"
neg = "-self"
pos = "+self"
pow = "pow(self, other)"
rdivmod = "divmod(other, self)"
repr = "repr(self)"
round = "round(self) and round(self, other)"
rpow = "pow(other, self)"
str = "str(self)"
trunc = "math.trunc(self)"

[atypical-magic-explanations-by-name]
init = "initializes self"
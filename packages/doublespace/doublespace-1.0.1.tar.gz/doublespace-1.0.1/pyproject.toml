[project]
name = "doublespace"
version = "1.0.1"
description = "Python extension for doublespace decompression"
license = "GPL-2.0-or-later"
requires-python = ">=3.12"
keywords = [
    "Compression",
    "Doublespace",
    "libdeds"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Other Environment",
    "Intended Audience :: Developers",
    "Operating System :: POSIX",
    "Programming Language :: C",
    "Topic :: System :: Archiving :: Compression",
    "Topic :: Software Development :: Libraries"
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[[project.authors]]
name = "Armin Wolf"
email = "W_Armin@gmx.de"

[project.urls]
Repository = "https://github.com/Wer-Wolf/doublespace"
Bugtracker = "https://github.com/Wer-Wolf/doublespace/issues"

[build-system]
requires = ["meson-python"]
build-backend = "mesonpy"

[tool.meson-python]
limited-api = true

[tool.meson-python.args]
setup = ["--default-library=static"]
install = ["--skip-subprojects"]

[tool.hatch.envs.hatch-test]
installer = "pip"

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.12", "3.13"]

[tool.hatch.build.targets.sdist]
exclude = ["/.github"]

[tool.cibuildwheel]
# musllinux builds are not supported for now as there exists no way
# for modifying the before-all option depeneding on the image used.
# Additionally free-threaded builds are not supported as we require
# support for the limited API.
skip = ["*-musllinux_*", "*t-*"]
test-command = "pytest {project}/tests"
test-sources = ["tests/compressed.bin", "tests/decompressed.bin"]
test-requires = "pytest"

[tool.cibuildwheel.linux]
# meson-python uses popen() to execute the ninja build system, so we
# have to install it using the system package manager.
before-all = "dnf install ninja-build -y"
repair-wheel-command = [
  "auditwheel repair -w {dest_dir} {wheel}",
  "pipx run abi3audit --strict --report {wheel}",
]

[tool.cibuildwheel.macos]
# meson-python uses popen() to execute the ninja build system, so we
# have to install it using the system package manager.
before-all = "brew install ninja"
repair-wheel-command = [
  "delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}",
  "pipx run abi3audit --strict --report {wheel}",
]

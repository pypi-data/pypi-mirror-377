import math
import numpy as np
import threading

from typing import Optional

# Type aliases
SatID = int

GRAVITATIONAL_CONSTANT: float = 6.67430e-11
""" Gravitational constant, in m^3 / (kg * s^2) """

EARTH_MASS = 5.9722e24
""" Mass of the Earth, in kg """
EARTH_RADIUS = 6.3781e6
""" Radius of the Earth, in m """
EARTH_ROTATION_PERIOD = 86400.0
""" Rotation period of the Earth, in s """
EARTH_ORBITAL_PERIOD = 365.256 * 86400.0
""" Orbital period of the Earth, in s """
EARTH_ORBITAL_RADIUS = 149.598e9
""" Orbital radius of the Earth, in m """

MARS_MASS = 6.4171e23
""" Mass of Mars, in kg """
MARS_RADIUS = 3.3895e6
""" Radius of Mars, in m """
MARS_ROTATION_PERIOD = 88619.62
""" Rotation period of Mars, in s """
MARS_ORBITAL_PERIOD = 686.98 * 86400.0
""" Orbital period of Mars, in s """
MARS_ORBITAL_RADIUS = 227.939e9
""" Orbital radius of Mars, in m """

MOON_MASS = 7.342e22
""" Mass of the Moon, in kg """
MOON_RADIUS = 1.7374e6
""" Radius of the Moon, in m """
MOON_ROTATION_PERIOD = 27.321661 * 86400.0
""" Rotation period of the Moon, in s """
MOON_ORBITAL_PERIOD = 27.321661 * 86400.0#MOON_ROTATION_PERIOD
""" Orbital period of the Moon, in s """
MOON_ORBITAL_RADIUS = 384.748e6
""" Orbital radius of the Moon, in m """

SPEED_OF_LIGHT = 299792458.0
""" Speed of light, in m/s """

GROUND_STATIONS_AWS = np.array([
    (53.7798, -7.3055, 0.0), # Ireland
    (59.3293, 18.0686, 0.0), # Stockholm
    (26.0667, 50.5577, 0.0), # Bahrain
    (-33.9249, 18.4241, 0.0), # Cape Town
    (37.5665, 126.9780, 0.0), # Seoul
    (1.3521, 103.8198, 0.0), # Singapore
    #(-33.8688, 151.2093, 0.0), # Sydney
    (-32.2430, 148.6048, 0.0), # Dubbo
    (19.8968, -155.5828, 0.0), # Hawaii
    (43.8041, -120.5542, 0.0), # Oregon
    (40.4173, -82.9071, 0.0), # Ohio
    (-53.1634, -70.9078, 0.0), # Punta Arenas
    (62.0758, -153.6101, 0.0), # Alaska
])
"""
Locations of cities/countries containing AWS ground stations
From https://aws.amazon.com/ground-station/locations/
"""

GROUND_STATIONS_UNIFORM = np.array([
    [  -7.42317752,  109.67566285,    0.        ],
    [  30.106071  ,   75.28085502,    0.        ],
    [  24.38243789,   47.32430917,    0.        ],
    [  20.40728541,   -7.7178718 ,    0.        ],
    [  66.96965324,  177.80296916,    0.        ],
    [  -6.88033252,   37.57746126,    0.        ],
    [ -13.13822602,  136.37416237,    0.        ],
    [ -28.71839674,  126.14616595,    0.        ],
    [  22.22027611,   -9.64439909,    0.        ],
    [   7.87189546,   23.34461774,    0.        ],
    [ -24.84186678,  113.91984214,    0.        ],
    [  35.07302567,    8.63612008,    0.        ],
    [  27.40093121,   17.37046194,    0.        ],
    [  56.09087963, -121.25503636,    0.        ],
    [ -27.98040873,  -50.62537826,    0.        ],
    [  33.23587886,   99.90636707,    0.        ],
    [  -2.89131456,  -51.45484021,    0.        ],
    [ -10.43063629,  -56.77919881,    0.        ],
    [  20.8489383 ,   82.99779389,    0.        ],
    [  53.75328246,   57.90752798,    0.        ],
    [  12.96628244,  -12.35897328,    0.        ],
    [  57.17453567,  -66.12287733,    0.        ],
    [  61.05142044,    5.89612486,    0.        ],
    [  57.62331628,   45.10948152,    0.        ],
    [ -18.10674624,  134.74542082,    0.        ],
    [  63.5572252 ,   42.2133544 ,    0.        ],
    [  68.30199928,  136.23535396,    0.        ],
    [  15.58453883,   26.10973587,    0.        ],
    [  30.61818313,   46.13779112,    0.        ],
    [  -2.94990102,   29.30079957,    0.        ],
    [  62.34245184,  133.65731496,    0.        ],
    [  64.21280673,  175.53753548,    0.        ],
    [   7.80042545,   99.89121697,    0.        ],
    [  68.69064094,   88.41112185,    0.        ],
    [ -11.75012502,  -49.55644231,    0.        ],
    [ -25.54275191,  118.74229734,    0.        ],
    [  60.78296462,  -72.91492857,    0.        ],
    [ -11.37739338,  -54.1619054 ,    0.        ],
    [  51.70651913,   15.35417919,    0.        ],
    [ -27.44600931,  -50.86915905,    0.        ],
    [  64.1475959 ,  176.50646997,    0.        ],
    [  72.35114773, -115.63339657,    0.        ],
    [  10.17749432,   16.02845772,    0.        ],
    [  49.93930478, -112.02439846,    0.        ],
    [  58.82079931,   33.39986897,    0.        ],
    [  -2.37373628,  -67.00945678,    0.        ],
    [  16.9475703 ,  101.15542425,    0.        ],
    [  35.9878993 ,  105.27770218,    0.        ],
    [  -3.38921739,   30.25121967,    0.        ],
    [  61.99768842,  151.00393082,    0.        ],
    [  23.8087146 ,   28.34596793,    0.        ],
    [  69.3909556 , -142.25304284,    0.        ],
    [  44.16010705,   96.98324547,    0.        ],
    [  55.10578748,   61.81849493,    0.        ],
    [   0.9061381 ,  111.24341861,    0.        ],
    [  18.48515636,   76.69065501,    0.        ],
    [  62.45981556, -100.59690508,    0.        ],
    [  75.65654937,  -26.5030721 ,    0.        ],
    [  32.49352716,   76.65038312,    0.        ],
    [  44.2231879 ,   20.57869244,    0.        ],
    [  33.49723097,    3.42319173,    0.        ],
    [  46.44437411,   56.92272988,    0.        ],
    [  15.83010517,    9.59904156,    0.        ],
    [  55.12746684,  155.76659364,    0.        ],
    [  66.49547575,   57.35675043,    0.        ],
    [ -36.9667435 ,  144.76924793,    0.        ],
    [  63.33195889,   43.75232137,    0.        ],
    [ -26.20504032,  -61.20788744,    0.        ],
    [ -31.0424808 ,  149.3939578 ,    0.        ],
    [ -16.65215173,  -64.03181719,    0.        ],
    [  28.31246502,   12.83123966,    0.        ],
    [ -28.21202865,  -50.3523055 ,    0.        ],
    [  -6.65764217,   20.25425886,    0.        ],
    [  38.89219713,  -96.23983906,    0.        ],
    [  45.18112244,   38.92396153,    0.        ],
    [  42.80976434,  -88.24575314,    0.        ],
    [  -3.36557534,  -53.36717355,    0.        ],
    [  40.57241151,   81.77416074,    0.        ],
    [  44.13965765,  118.92692744,    0.        ],
    [  -2.77639216,  111.03820532,    0.        ],
    [  50.129124  ,   72.72212822,    0.        ],
    [  30.74231708, -110.1738687 ,    0.        ],
    [   5.09515791,   -6.78976827,    0.        ],
    [  66.19009853, -112.67933127,    0.        ],
    [  44.36691744,   74.31288094,    0.        ],
    [  67.88604524,  171.12583516,    0.        ],
    [ -19.15081711,  -62.60774296,    0.        ],
    [  69.620127  ,  135.73383362,    0.        ],
    [  61.02563914,   65.85296582,    0.        ],
    [  60.52115113, -107.59731384,    0.        ],
    [  17.10160458,    9.13679181,    0.        ],
    [  45.24053107,   33.66010107,    0.        ],
    [  49.99803521,  118.53297512,    0.        ],
    [  24.56848477,   88.50678102,    0.        ],
    [  64.4469088 , -132.21595282,    0.        ],
    [ -17.06215812,   47.22191273,    0.        ],
    [   2.05003602,   33.57237983,    0.        ],
    [  58.05423324,   84.72274989,    0.        ],
    [  44.08833773,   76.61529218,    0.        ],
    [  48.56649917,  -72.17567897,    0.        ],
    [ -17.67821188,   22.95315808,    0.        ],
    [  14.87214492,  -89.33918552,    0.        ],
    [  35.68637167,  -86.27170982,    0.        ],
    [  47.54143453, -118.7587794 ,    0.        ],
    [  36.21063932,   37.51417304,    0.        ],
    [ -29.04455122,   18.46182894,    0.        ],
    [  46.44691956,  -93.03875592,    0.        ],
    [ -19.46918798,   26.22138488,    0.        ],
    [   2.39440006,  -59.68019874,    0.        ],
    [  14.03670884,   -9.59473301,    0.        ],
    [   5.45276029,   27.98784613,    0.        ],
    [  -4.57926608,   23.32324016,    0.        ],
    [ -30.09118106,  -61.08235923,    0.        ],
    [  -1.4051945 ,  -65.58105437,    0.        ],
    [  63.3311869 ,   52.3404769 ,    0.        ],
    [  21.63384214,  -15.62304891,    0.        ],
    [ -28.5104698 ,  128.23420658,    0.        ],
    [  33.09151194,   98.54318856,    0.        ],
    [  -9.09618998,   21.01768141,    0.        ],
    [  57.21312338,  105.6939178 ,    0.        ],
    [ -19.12184818,  141.46074474,    0.        ],
    [  39.42056106,   71.42851378,    0.        ],
    [   5.44833158,   32.58789285,    0.        ],
    [   9.76675338,  -67.23833146,    0.        ],
    [  55.20855443,   81.60729888,    0.        ],
    [  66.14571133,   75.94808501,    0.        ],
    [  61.83747281,  148.22897184,    0.        ],
    [ -49.82964228,  -69.6518373 ,    0.        ],
    [  41.87204392,  -89.40407207,    0.        ],
    [ -20.55959739,   26.05184221,    0.        ],
    [  71.54532196,  -54.63434656,    0.        ],
    [  49.72870307, -103.17417473,    0.        ],
    [  27.54223886,  -98.8229351 ,    0.        ],
    [  -6.24644852,  -57.90281285,    0.        ],
    [  15.95522701,  -92.84568778,    0.        ],
    [ -28.56804952,  -49.36231005,    0.        ],
    [  56.25841338,   92.31610096,    0.        ],
    [ -18.74761897,  -45.5325046 ,    0.        ],
    [  60.01586089,   48.89495039,    0.        ],
    [  27.81570824,   80.7214409 ,    0.        ],
    [  44.62836738,    1.25357025,    0.        ],
    [  43.09176568,   80.72279652,    0.        ],
    [  45.23237755,  120.20080134,    0.        ],
    [  75.2363985 ,   94.3274031 ,    0.        ],
    [  49.63642743,  -78.29017547,    0.        ],
    [ -41.66768688,  -66.91800063,    0.        ],
    [  26.71381662,  -10.66570647,    0.        ],
    [ -16.10849501,  -68.47609418,    0.        ],
    [  52.82763281,  -61.92856711,    0.        ],
    [  46.20818887,    7.25894934,    0.        ],
    [ -32.34997989,  -56.14291087,    0.        ],
    [   7.83862324,  -80.88236756,    0.        ],
    [ -11.56035726,  -54.67792694,    0.        ],
    [  27.07758777,   69.48492319,    0.        ],
    [  41.65916855,   -5.49261723,    0.        ],
    [   5.76780037,   44.50546757,    0.        ],
    [ -22.06867199,  142.97323896,    0.        ],
    [  -4.81034903,  -79.94351513,    0.        ],
    [  25.34989167,   76.04464086,    0.        ],
    [  -2.42159376,   27.51694608,    0.        ],
    [   2.75663767,   12.11698979,    0.        ],
    [ -37.13385495,  -66.46828429,    0.        ],
    [  39.37415516,   -3.40370713,    0.        ],
    [  64.7293865 ,  -49.69854797,    0.        ],
    [  42.60578157,   22.44354608,    0.        ],
    [  67.144183  , -117.41465514,    0.        ],
    [  12.25204034,   17.73311229,    0.        ],
    [ -49.2729858 ,  -69.99900861,    0.        ],
    [   6.47020624,   -1.39458871,    0.        ],
    [  46.98834964,  -80.98620156,    0.        ],
    [  -4.85054866,   24.3594751 ,    0.        ],
    [  36.57909918,   80.73184508,    0.        ],
    [  16.06126247,   34.74279973,    0.        ],
    [  -2.41199162,  105.92963401,    0.        ],
    [  56.94496201,  161.31788672,    0.        ],
    [ -11.1787207 ,   20.02040325,    0.        ],
    [  28.86444851,   62.78366568,    0.        ],
    [  53.84043474,  -85.77532054,    0.        ],
    [  36.60621747,  -98.79378595,    0.        ],
    [  61.06146856,   68.6369289 ,    0.        ],
    [  30.60063758,   57.06244747,    0.        ],
    [  56.31675704,   77.49792904,    0.        ],
    [  12.21315688,   21.91752031,    0.        ],
    [  16.92934674,   47.24104191,    0.        ],
    [  49.28997883,  125.3057437 ,    0.        ],
    [  68.78343592, -139.04478242,    0.        ],
    [  61.18429852,  115.5476997 ,    0.        ],
    [ -30.7790284 ,  138.43050206,    0.        ],
    [  14.47047517,   27.09221728,    0.        ],
    [  37.52811955,   55.4012989 ,    0.        ],
    [  -1.17789071,   24.11822887,    0.        ],
    [  63.35826645,  116.46608162,    0.        ],
    [  33.89731674,   57.41665679,    0.        ],
    [  58.53866987,   94.22954516,    0.        ],
    [  47.93237849,  -71.97952497,    0.        ],
    [  69.85850922, -103.28508739,    0.        ],
    [  60.28337271,   54.96205561,    0.        ],
    [ -18.5321437 ,  -49.75170456,    0.        ],
    [  16.26508328,  -97.0655482 ,    0.        ],
    [  41.20384899,   23.14767896,    0.        ],
    [  -0.89903771,  -54.52360505,    0.        ],
    [  -5.49466339,   23.49779454,    0.        ],
    [  39.49840916, -105.88028391,    0.        ],
    [  49.29068791, -102.07408229,    0.        ],
    [  47.06376349,  -93.78648758,    0.        ],
    [  71.22676349,  105.84085942,    0.        ],
    [  15.65163099,  -93.21440726,    0.        ],
    [  68.08664446,   75.08644893,    0.        ],
    [  -0.35288589,   36.86766717,    0.        ],
    [   5.58810348,   14.15462146,    0.        ],
    [   0.70688927,   43.09821232,    0.        ],
    [   9.08387845,  -68.69015549,    0.        ],
    [  21.41647988,   29.73801941,    0.        ],
    [  30.55104517, -115.53353855,    0.        ],
    [ -37.10790448,  -61.24681786,    0.        ],
    [  37.09121145,   44.45766791,    0.        ],
    [  52.89551025,    6.55394924,    0.        ],
    [  16.26823692,   35.87234341,    0.        ],
    [   8.09071627,  -67.51305442,    0.        ],
    [  60.55904708, -123.11729534,    0.        ],
    [ -21.80357086,  -42.68737774,    0.        ],
    [  11.24106118,   17.06210193,    0.        ],
    [  29.99653399,   63.23786153,    0.        ],
    [  -4.45585262,   35.32680234,    0.        ],
    [  21.08063925,  -11.8966891 ,    0.        ],
    [  -8.4067159 ,  -77.07473151,    0.        ],
    [  48.13509814,  135.79599289,    0.        ],
    [  21.4782725 ,   85.39075889,    0.        ],
    [  40.18259179,  -92.80556515,    0.        ],
    [ -10.7197505 ,  -55.02985863,    0.        ],
    [  -9.20415549,   16.30516487,    0.        ],
    [  13.14383271,   12.28649809,    0.        ],
    [  65.22921902,  145.388868  ,    0.        ],
    [  16.59526381,   26.17055599,    0.        ],
    [  36.64418611,  105.92596917,    0.        ],
    [  48.97888795,   23.42392795,    0.        ],
    [  62.106732  , -138.73962222,    0.        ],
    [  34.44057118,    6.19827934,    0.        ],
    [  32.05762245,   70.68290535,    0.        ],
    [ -14.97656346,  -46.34934117,    0.        ],
    [   9.43353324,  -61.52096786,    0.        ],
    [  39.5411864 ,  122.67803632,    0.        ],
    [ -23.96893444,  143.43307581,    0.        ],
    [   6.60794384,   46.09057446,    0.        ],
    [   4.74717955,   42.48289826,    0.        ],
    [  57.3908724 ,   89.72058835,    0.        ],
    [  13.2788281 ,   23.34433925,    0.        ],
    [  40.59990714,   94.24089497,    0.        ],
    [  28.86309735, -102.0203859 ,    0.        ],
    [  24.82320376,   12.26495595,    0.        ],
    [  55.25829176,  110.23408294,    0.        ],
    [  50.97074641,  131.11303277,    0.        ],
    [ -18.54327363,  -51.38449437,    0.        ],
    [  -3.7490007 ,  -52.29372814,    0.        ],
    [  57.70935795,   30.36195401,    0.        ],
    [  70.23672782,  146.49657101,    0.        ],
])
# Randomly generated ground station locations
# See ground_stations.ipynb for generator code

def orbital_period(semi_major_axis: float, mass: float, gravitational_constant: float = GRAVITATIONAL_CONSTANT):
    """
    Calculate the orbital period of an orbit given its semi-major axis and the mass of the central body.

    Parameters:
        semi_major_axis: Semi-major axis of the orbit (m).
        mass: Mass of the central body (kg).
        gravitational_constant: Gravitational constant (m^3 / (kg * s^2)).

    Returns:
        Orbital period (s).
    """

    return 2 * math.pi * math.sqrt(math.pow(semi_major_axis, 3) / (mass * gravitational_constant))

def get_semi_major_axis(orbital_period: float, mass: float, gravitational_constant: float = GRAVITATIONAL_CONSTANT):
    """
    Calculate the semi-major axis of an orbit given its orbital period and the mass of the central body.

    Parameters:
        orbital_period: Orbital period (s).
        mass: Mass of the central body (kg).
        gravitational_constant: Gravitational constant (m^3 / (kg * s^2)).

    Returns:
        Semi-major axis of the orbit (m).
    """
    return math.pow(math.pow(orbital_period / (2 * math.pi), 2) * (mass * gravitational_constant), 1/3)

def lat_lon_alt_to_xyz(lat_lon_alt: np.ndarray, host_radius: float) -> np.ndarray:
    """
    Convert a set of latitude, longitude and altitude coordinates to Cartesian coordinates.

    Parameters:
        lat_lon_alt: Array of latitude, longitude and altitude coordinates (degrees, degrees, m).
        host_radius: Radius of the central body (m).

    Returns:
        Array of Cartesian coordinates (m, m, m).
    """

    lat = np.radians(lat_lon_alt[:,0])
    lon = np.radians(lat_lon_alt[:,1])
    alt = lat_lon_alt[:,2]

    x = (host_radius + alt) * np.cos(lat) * np.cos(lon)
    y = (host_radius + alt) * np.cos(lat) * np.sin(lon)
    z = (host_radius + alt) * np.sin(lat)

    return np.stack((x, y, z), axis=1)


class IDHelper:
    """
    Helper class for generating unique IDs.
    """

    def __init__(self):
        """
        Initialise the ID helper.
        """

        self.ids: list[tuple[str, SatID]] = [] # Mapping of names to IDs
        self.next_id = 0

    def get_id(self, name: str) -> Optional[SatID]:
        """
        Get the ID for a given name.

        Parameters:
            name: Name to look up.

        Returns:
            ID for the given name, or None if no ID has been assigned.
        """

        for name_, id_ in self.ids:
            if name_ == name:
                return id_

        return None

    def get_name(self, id_: SatID) -> Optional[str]:
        """
        Get the name for a given ID.

        Parameters:
            id: ID to look up.

        Returns:
            Name for the given ID, or None if the ID has not been assigned.
        """

        for name, id__ in self.ids:
            if id__ == id_:
                return name

        return None

    def assign_id(self, name: str) -> SatID:
        """
        Assign an ID to a name.

        Parameters:
            name: Name to assign an ID to.

        Returns:
            ID for the given name.
        """

        id_ = self.get_id(name)
        if id_ is not None:
            raise ValueError(f"{name} already has an ID assigned: {id_}")

        id_ = self.next_id
        self.ids.append((name, id_))
        self.next_id += 1

        return id_


def threaded(fn):
    """
    Decorator for running a function in a separate thread.
    """
    def wrapper(*args, **kwargs):
        thread = threading.Thread(target=fn, args=args, kwargs=kwargs)
        thread.start()
        return thread
    return wrapper
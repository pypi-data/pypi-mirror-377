Metadata-Version: 2.4
Name: edd-tool
Version: 0.1.1
Summary: EDD deployment and plugin management tool
Author-email: Ewan Barr <ebarr@mpifr-bonn.mpg.de>
License: Copyright 2025 Ewan Barr
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
        
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: ansible-core<2.20,>=2.14
Dynamic: license-file

# EDD Tool

`edd-tool` is a command-line utility for deploying and managing EDD (Effelsberg Direct Digitisation) backend instances.  
It automates cloning site repositories, resolving variables from Ansible inventories, installing plugins, and running playbooks.

## Purpose

The `edd-tool` simplifies the deployment of EDD site repositories managing the docker update cycle and plugin installation phases of an EDD backend deployment.

## Installation

It is strongly recommended to install and run `edd-tool` inside a Python virtual environment to avoid dependency conflicts.

```bash
# Create and activate a virtual environment
python3 -m venv .venv
source .venv/bin/activate

# Install from PyPI
pip install edd-tool
```

You can verify the installation with:

```bash
edd-tool --help
```

## Basic usage

```
usage: edd-tool deploy [-h] [--log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}] [--version VERSION] [--deploy-dir DEPLOY_DIR] --inventory
                       INVENTORY --vault-pass-file VAULT_PASS_FILE --site-config SITE_CONFIG
                       [--plugin-install-method {galaxy,git-submodule}] [--no-pullremote] [--force] [--dry-run]
                       project

positional arguments:
  project               Git URL of the EDD site repository

options:
  -h, --help            show this help message and exit
  --log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}
                        Set the logging level (default: INFO)
  --version VERSION     Branch or tag for the site repository
  --deploy-dir DEPLOY_DIR
                        Deployment directory
  --inventory INVENTORY
                        Ansible inventory path (file, dir, or script)
  --vault-pass-file VAULT_PASS_FILE
                        Path to vault password file
  --site-config SITE_CONFIG
                        Path to site configuration YAML
  --plugin-install-method {galaxy,git-submodule}
  --no-pullremote       Skip pullremote tag
  --force               Force overwrite of deployment directory
  --dry-run             Dry run the deployment
```

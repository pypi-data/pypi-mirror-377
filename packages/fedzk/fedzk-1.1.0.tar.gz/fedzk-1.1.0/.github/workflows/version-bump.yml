name: "Version Bump"

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: "Type of version bump"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major
      pre_release_tag:
        description: "Pre-release tag (or none for stable release)"
        required: true
        default: "none"
        type: choice
        options:
          - none
          - dev
          - alpha
          - beta
          - rc

jobs:
  bump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bumpversion

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Bump version
        id: bump_version
        run: |
          if [ "${{ github.event.inputs.pre_release_tag }}" == "none" ]; then
            # For stable releases, use regular bump
            bumpversion --verbose ${{ github.event.inputs.bump_type }}
            echo "version=$(python -c 'from fedzk import __version__; print(__version__)')" >> $GITHUB_OUTPUT
          else
            # For pre-releases
            bumpversion --verbose --no-commit --no-tag ${{ github.event.inputs.bump_type }}
            bumpversion --verbose --no-commit --no-tag prerelease --pre-release-tag ${{ github.event.inputs.pre_release_tag }}
            git add .
            version=$(python -c 'from fedzk import __version__; print(__version__)')
            echo "version=$version" >> $GITHUB_OUTPUT
          fi

      - name: Generate changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issuesLabel: "**Closed Issues:**"
          prLabel: "**Merged Pull Requests:**"
          addSections: '{"documentation":{"prefix":"**Documentation Updates:**","labels":["documentation"]},"tests":{"prefix":"**Tests:**","labels":["tests"]}}'

      - name: Commit changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            git add .
            if [ "${{ github.event.inputs.pre_release_tag }}" == "none" ]; then
              git commit -m "chore: bump version to ${{ steps.bump_version.outputs.version }}"
              git tag v${{ steps.bump_version.outputs.version }}
            else
              git commit -m "chore: bump version to ${{ steps.bump_version.outputs.version }}"
              git tag v${{ steps.bump_version.outputs.version }}
            fi
            git push origin master --tags
          else
            echo "No changes to commit"
          fi

      - name: Update CHANGELOG
        run: |
          # Get the new version after bump
          version=$(python -c 'from fedzk import __version__; print(__version__)')
          echo "New version for changelog: $version"
          # (commands to update changelog would go here if automated)
# FEDZK Quality Gates Configuration
# Defines quality standards and thresholds for automated quality assurance

# Code Quality Standards
code_quality:
  # Python Code Quality
  python:
    max_line_length: 88
    max_function_length: 50
    max_class_length: 300
    max_complexity: 15
    required_docstrings: true
    type_hints_required: true

  # File Structure
  files:
    max_file_size_kb: 500
    required_files:
      - README.md
      - LICENSE
      - pyproject.toml
      - .pre-commit-config.yaml
    forbidden_patterns:
      - "*.pyc"
      - "__pycache__/"
      - "*.log"
      - ".env"

# Security Standards
security:
  # Vulnerability Thresholds
  critical_threshold: 0
  high_threshold: 0
  medium_threshold: 5

  # Required Security Checks
  required_checks:
    - hardcoded_secrets
    - sql_injection
    - command_injection
    - path_traversal
    - weak_crypto
    - insecure_deserialization

  # Compliance Frameworks
  compliance:
    owasp_top_10: true
    nist_cybersecurity: true
    gdpr: true
    hipaa: true

# Performance Standards
performance:
  # Performance Thresholds
  thresholds:
    zk_proof_generation_time_seconds: 2.0
    memory_usage_mb: 512
    cpu_usage_percent: 80
    network_latency_ms: 100
    training_step_time_seconds: 1.0

  # Performance Regression Limits
  regression_limits:
    critical_threshold_percent: 50
    high_threshold_percent: 25
    medium_threshold_percent: 10

  # Resource Limits
  resource_limits:
    max_memory_mb: 1024
    max_cpu_percent: 90
    max_disk_percent: 85

# Testing Standards
testing:
  # Coverage Requirements
  coverage:
    minimum_overall: 85
    minimum_critical: 90
    minimum_security: 95

  # Test Types Required
  required_tests:
    - unit_tests
    - integration_tests
    - end_to_end_tests
    - security_tests
    - performance_tests
    - compliance_tests

  # Test Quality Metrics
  quality_metrics:
    max_test_failures: 0
    min_test_success_rate: 95
    max_flaky_tests: 1

# Documentation Standards
documentation:
  # Required Documentation
  required_docs:
    - api_reference
    - user_guide
    - deployment_guide
    - troubleshooting_guide
    - security_guide
    - performance_guide

  # Documentation Quality
  quality_checks:
    - broken_links: false
    - outdated_content: false
    - missing_examples: false
    - incomplete_api_docs: false

# License Compliance
license:
  # Approved Licenses
  approved_licenses:
    - MIT
    - Apache-2.0
    - BSD-3-Clause
    - BSD-2-Clause
    - ISC

  # Forbidden Licenses
  forbidden_licenses:
    - GPL-3.0
    - GPL-2.0
    - LGPL-3.0
    - LGPL-2.1
    - AGPL-3.0

  # License Scan Configuration
  scan_config:
    confidence_threshold: 0.8
    fail_on_unknown: true

# Dependency Management
dependencies:
  # Vulnerability Scanning
  vulnerability_scan:
    enabled: true
    fail_on_high: true
    fail_on_critical: true
    update_check: true

  # Dependency Age Limits
  age_limits:
    max_age_days: 365
    warn_age_days: 180

  # Size Limits
  size_limits:
    max_bundle_size_mb: 50
    max_single_dep_size_mb: 10

# CI/CD Pipeline Standards
ci_cd:
  # Required Pipeline Stages
  required_stages:
    - lint
    - test
    - security_scan
    - performance_test
    - build
    - deploy

  # Pipeline Quality Gates
  quality_gates:
    - code_quality_pass: true
    - tests_pass: true
    - security_scan_pass: true
    - performance_tests_pass: true
    - coverage_meets_minimum: true

  # Pipeline Performance
  performance:
    max_pipeline_duration_minutes: 30
    max_stage_duration_minutes: 10

# Release Standards
release:
  # Version Management
  versioning:
    semantic_versioning: true
    changelog_required: true
    breaking_changes_documented: true

  # Release Quality Gates
  quality_gates:
    - all_tests_pass: true
    - security_audit_pass: true
    - performance_benchmarks_pass: true
    - documentation_complete: true
    - license_compliance_pass: true

  # Distribution Channels
  distribution:
    pypi: true
    docker_hub: true
    github_releases: true
    helm_registry: true

# Monitoring Standards
monitoring:
  # Required Metrics
  required_metrics:
    - code_coverage
    - performance_benchmarks
    - security_scan_results
    - dependency_vulnerabilities
    - ci_cd_pipeline_status

  # Alert Thresholds
  alerts:
    critical_coverage_drop: 5
    security_vulnerability_found: true
    performance_regression: 10
    pipeline_failure: true

  # Dashboard Requirements
  dashboard:
    real_time_metrics: true
    historical_trends: true
    alert_integration: true
    stakeholder_reports: true

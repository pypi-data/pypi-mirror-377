name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write   # required for OIDC Trusted Publishing
    environment:
        name: pypi
        url: https://github.com/pyl1b/find-stuff/
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          python -m pip install pipx
          pipx install build
          pipx install twine

      - name: Install setuptools_scm for version check
        run: python -m pip install --upgrade setuptools_scm[toml]

      - name: Assert tag == project version
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          TAG="${TAG#v}"  # allow vX.Y.Z tags

          # Ask setuptools_scm for the version (uses your pyproject config)
          PKG_VERSION=$(python - <<'PY'
          from setuptools_scm import get_version
          print(get_version())
          PY
          )

          # Drop any local version (+gSHA etc.) so 1.2.3+gabc matches tag 1.2.3
          PKG_VERSION_BASE="${PKG_VERSION%%+*}"

          echo "Tag: $TAG"
          echo "Computed version (setuptools_scm): $PKG_VERSION"
          [ "$TAG" = "$PKG_VERSION_BASE" ] || { echo "Version mismatch"; exit 1; }

      - name: Build sdist and wheel
        run: pipx run build

      - name: Check the distribution
        run: pipx run twine check dist/*

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
          skip-existing: true
          # No token needed: uses OIDC Trusted Publishing.

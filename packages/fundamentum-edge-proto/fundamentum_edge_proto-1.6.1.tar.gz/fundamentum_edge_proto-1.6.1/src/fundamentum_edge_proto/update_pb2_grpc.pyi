"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import collections.abc
import google.protobuf.empty_pb2
import grpc
import grpc.aio
import typing
from . import update_pb2
_T = typing.TypeVar('_T')

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta):
    ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):
    ...

class FirmwareUpdateStub:
    """Fundamentum Edge's firmware update service."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None:
        ...
    Subscribe: grpc.UnaryStreamMultiCallable[google.protobuf.empty_pb2.Empty, update_pb2.FirmwareUpdateRequest]
    'Subscribe to firmware update stream.'
    UpdateStatus: grpc.UnaryUnaryMultiCallable[update_pb2.FirmwareUpdateResponse, google.protobuf.empty_pb2.Empty]
    'Update the status of the firmware update.'

class FirmwareUpdateAsyncStub:
    """Fundamentum Edge's firmware update service."""
    Subscribe: grpc.aio.UnaryStreamMultiCallable[google.protobuf.empty_pb2.Empty, update_pb2.FirmwareUpdateRequest]
    'Subscribe to firmware update stream.'
    UpdateStatus: grpc.aio.UnaryUnaryMultiCallable[update_pb2.FirmwareUpdateResponse, google.protobuf.empty_pb2.Empty]
    'Update the status of the firmware update.'

class FirmwareUpdateServicer(metaclass=abc.ABCMeta):
    """Fundamentum Edge's firmware update service."""

    @abc.abstractmethod
    def Subscribe(self, request: google.protobuf.empty_pb2.Empty, context: _ServicerContext) -> typing.Union[collections.abc.Iterator[update_pb2.FirmwareUpdateRequest], collections.abc.AsyncIterator[update_pb2.FirmwareUpdateRequest]]:
        """Subscribe to firmware update stream."""

    @abc.abstractmethod
    def UpdateStatus(self, request: update_pb2.FirmwareUpdateResponse, context: _ServicerContext) -> typing.Union[google.protobuf.empty_pb2.Empty, collections.abc.Awaitable[google.protobuf.empty_pb2.Empty]]:
        """Update the status of the firmware update."""

def add_FirmwareUpdateServicer_to_server(servicer: FirmwareUpdateServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None:
    ...
# Generated by ariadne-codegen
# Source: codegen/indexer_status/queries

from typing import Any, List, Literal, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import Health
from .mixins import LatestBlockMixin


class SyncedSubgraphs(BaseModel):
    indexing_statuses: List["SyncedSubgraphsIndexingStatuses"] = Field(
        alias="indexingStatuses"
    )


class SyncedSubgraphsIndexingStatuses(BaseModel, LatestBlockMixin):
    subgraph: str
    health: Health
    entity_count: int = Field(alias="entityCount")
    fatal_error: Optional["SyncedSubgraphsIndexingStatusesFatalError"] = Field(
        alias="fatalError"
    )
    chains: List["SyncedSubgraphsIndexingStatusesChains"]


class SyncedSubgraphsIndexingStatusesFatalError(BaseModel):
    message: str
    deterministic: bool


class SyncedSubgraphsIndexingStatusesChains(BaseModel):
    typename__: Literal["ChainIndexingStatus", "EthereumIndexingStatus"] = Field(
        alias="__typename"
    )
    network: str
    chain_head_block: Optional[
        "SyncedSubgraphsIndexingStatusesChainsChainHeadBlock"
    ] = Field(alias="chainHeadBlock")
    latest_block: Optional["SyncedSubgraphsIndexingStatusesChainsLatestBlock"] = Field(
        alias="latestBlock"
    )


class SyncedSubgraphsIndexingStatusesChainsChainHeadBlock(BaseModel):
    hash: Any
    number: int


class SyncedSubgraphsIndexingStatusesChainsLatestBlock(BaseModel):
    hash: Any
    number: int


SyncedSubgraphs.model_rebuild()
SyncedSubgraphsIndexingStatuses.model_rebuild()
SyncedSubgraphsIndexingStatusesChains.model_rebuild()

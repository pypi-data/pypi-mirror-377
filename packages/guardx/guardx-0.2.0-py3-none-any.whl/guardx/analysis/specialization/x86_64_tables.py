"""Standard libraries mappers for x86_64."""

from enum import Enum


class Syscall(str, Enum):
    """Enumeration for x86_64 syscalls."""

    ACCEPT = "accept"
    ACCEPT4 = "accept4"
    ACCESS = "access"
    ACCT = "acct"
    ADD_KEY = "add_key"
    ADJTIMEX = "adjtimex"
    ALARM = "alarm"
    ARCH_PRCTL = "arch_prctl"
    BIND = "bind"
    BPF = "bpf"
    BRK = "brk"
    CACHESTAT = "cachestat"
    CAPGET = "capget"
    CAPSET = "capset"
    CHDIR = "chdir"
    CHMOD = "chmod"
    CHOWN = "chown"
    CHROOT = "chroot"
    CLOCK_ADJTIME = "clock_adjtime"
    CLOCK_GETRES = "clock_getres"
    CLOCK_GETTIME = "clock_gettime"
    CLOCK_NANOSLEEP = "clock_nanosleep"
    CLOCK_SETTIME = "clock_settime"
    CLONE = "clone"
    CLONE3 = "clone3"
    CLOSE = "close"
    CLOSE_RANGE = "close_range"
    CONNECT = "connect"
    COPY_FILE_RANGE = "copy_file_range"
    CREAT = "creat"
    DELETE_MODULE = "delete_module"
    DUP = "dup"
    DUP2 = "dup2"
    DUP3 = "dup3"
    EPOLL_CREATE = "epoll_create"
    EPOLL_CREATE1 = "epoll_create1"
    EPOLL_CTL = "epoll_ctl"
    EPOLL_CTL_OLD = "epoll_ctl_old"
    EPOLL_PWAIT = "epoll_pwait"
    EPOLL_PWAIT2 = "epoll_pwait2"
    EPOLL_WAIT = "epoll_wait"
    EPOLL_WAIT_OLD = "epoll_wait_old"
    EVENTFD = "eventfd"
    EVENTFD2 = "eventfd2"
    EXECVE = "execve"
    EXECVEAT = "execveat"
    EXIT = "exit"
    EXIT_GROUP = "exit_group"
    FACCESSAT = "faccessat"
    FACCESSAT2 = "faccessat2"
    FADVISE64 = "fadvise64"
    FALLOCATE = "fallocate"
    FANOTIFY_INIT = "fanotify_init"
    FANOTIFY_MARK = "fanotify_mark"
    FCHDIR = "fchdir"
    FCHMOD = "fchmod"
    FCHMODAT = "fchmodat"
    FCHMODAT2 = "fchmodat2"
    FCHOWN = "fchown"
    FCHOWNAT = "fchownat"
    FCNTL = "fcntl"
    FDATASYNC = "fdatasync"
    FGETXATTR = "fgetxattr"
    FINIT_MODULE = "finit_module"
    FLISTXATTR = "flistxattr"
    FLOCK = "flock"
    FORK = "fork"
    FREMOVEXATTR = "fremovexattr"
    FSCONFIG = "fsconfig"
    FSETXATTR = "fsetxattr"
    FSMOUNT = "fsmount"
    FSOPEN = "fsopen"
    FSPICK = "fspick"
    FSTAT = "fstat"
    FSTATFS = "fstatfs"
    FSYNC = "fsync"
    FTRUNCATE = "ftruncate"
    FUTEX = "futex"
    FUTEX_REQUEUE = "futex_requeue"
    FUTEX_WAIT = "futex_wait"
    FUTEX_WAITV = "futex_waitv"
    FUTEX_WAKE = "futex_wake"
    FUTIMESAT = "futimesat"
    GET_MEMPOLICY = "get_mempolicy"
    GET_ROBUST_LIST = "get_robust_list"
    GET_THREAD_AREA = "get_thread_area"
    GETCPU = "getcpu"
    GETCWD = "getcwd"
    GETDENTS = "getdents"
    GETDENTS64 = "getdents64"
    GETEGID = "getegid"
    GETEUID = "geteuid"
    GETGID = "getgid"
    GETGROUPS = "getgroups"
    GETITIMER = "getitimer"
    GETPEERNAME = "getpeername"
    GETPGID = "getpgid"
    GETPGRP = "getpgrp"
    GETPID = "getpid"
    GETPPID = "getppid"
    GETPRIORITY = "getpriority"
    GETRANDOM = "getrandom"
    GETRESGID = "getresgid"
    GETRESUID = "getresuid"
    GETRLIMIT = "getrlimit"
    GETRUSAGE = "getrusage"
    GETSID = "getsid"
    GETSOCKNAME = "getsockname"
    GETSOCKOPT = "getsockopt"
    GETTID = "gettid"
    GETTIMEOFDAY = "gettimeofday"
    GETUID = "getuid"
    GETXATTR = "getxattr"
    INIT_MODULE = "init_module"
    INOTIFY_ADD_WATCH = "inotify_add_watch"
    INOTIFY_INIT = "inotify_init"
    INOTIFY_INIT1 = "inotify_init1"
    INOTIFY_RM_WATCH = "inotify_rm_watch"
    IO_CANCEL = "io_cancel"
    IO_DESTROY = "io_destroy"
    IO_GETEVENTS = "io_getevents"
    IO_PGETEVENTS = "io_pgetevents"
    IO_SETUP = "io_setup"
    IO_SUBMIT = "io_submit"
    IO_URING_ENTER = "io_uring_enter"
    IO_URING_REGISTER = "io_uring_register"
    IO_URING_SETUP = "io_uring_setup"
    IOCTL = "ioctl"
    IOPERM = "ioperm"
    IOPL = "iopl"
    IOPRIO_GET = "ioprio_get"
    IOPRIO_SET = "ioprio_set"
    KCMP = "kcmp"
    KEXEC_FILE_LOAD = "kexec_file_load"
    KEXEC_LOAD = "kexec_load"
    KEYCTL = "keyctl"
    KILL = "kill"
    LANDLOCK_ADD_RULE = "landlock_add_rule"
    LANDLOCK_CREATE_RULESET = "landlock_create_ruleset"
    LANDLOCK_RESTRICT_SELF = "landlock_restrict_self"
    LCHOWN = "lchown"
    LGETXATTR = "lgetxattr"
    LINK = "link"
    LINKAT = "linkat"
    LISTEN = "listen"
    LISTXATTR = "listxattr"
    LLISTXATTR = "llistxattr"
    LOOKUP_DCOOKIE = "lookup_dcookie"
    LREMOVEXATTR = "lremovexattr"
    LSEEK = "lseek"
    LSETXATTR = "lsetxattr"
    LSTAT = "lstat"
    MADVISE = "madvise"
    MAP_SHADOW_STACK = "map_shadow_stack"
    MBIND = "mbind"
    MEMBARRIER = "membarrier"
    MEMFD_CREATE = "memfd_create"
    MEMFD_SECRET = "memfd_secret"
    MIGRATE_PAGES = "migrate_pages"
    MINCORE = "mincore"
    MKDIR = "mkdir"
    MKDIRAT = "mkdirat"
    MKNOD = "mknod"
    MKNODAT = "mknodat"
    MLOCK = "mlock"
    MLOCK2 = "mlock2"
    MLOCKALL = "mlockall"
    MMAP = "mmap"
    MODIFY_LDT = "modify_ldt"
    MOUNT = "mount"
    MOUNT_SETATTR = "mount_setattr"
    MOVE_MOUNT = "move_mount"
    MOVE_PAGES = "move_pages"
    MPROTECT = "mprotect"
    MQ_GETSETATTR = "mq_getsetattr"
    MQ_NOTIFY = "mq_notify"
    MQ_OPEN = "mq_open"
    MQ_TIMEDRECEIVE = "mq_timedreceive"
    MQ_TIMEDSEND = "mq_timedsend"
    MQ_UNLINK = "mq_unlink"
    MREMAP = "mremap"
    MSGCTL = "msgctl"
    MSGGET = "msgget"
    MSGRCV = "msgrcv"
    MSGSND = "msgsnd"
    MSYNC = "msync"
    MUNLOCK = "munlock"
    MUNLOCKALL = "munlockall"
    MUNMAP = "munmap"
    NAME_TO_HANDLE_AT = "name_to_handle_at"
    NANOSLEEP = "nanosleep"
    NEWFSTATAT = "newfstatat"
    OPEN = "open"
    OPEN_BY_HANDLE_AT = "open_by_handle_at"
    OPEN_TREE = "open_tree"
    OPENAT = "openat"
    OPENAT2 = "openat2"
    PAUSE = "pause"
    PERF_EVENT_OPEN = "perf_event_open"
    PERSONALITY = "personality"
    PIDFD_GETFD = "pidfd_getfd"
    PIDFD_OPEN = "pidfd_open"
    PIDFD_SEND_SIGNAL = "pidfd_send_signal"
    PIPE = "pipe"
    PIPE2 = "pipe2"
    PIVOT_ROOT = "pivot_root"
    PKEY_ALLOC = "pkey_alloc"
    PKEY_FREE = "pkey_free"
    PKEY_MPROTECT = "pkey_mprotect"
    POLL = "poll"
    PPOLL = "ppoll"
    PRCTL = "prctl"
    PREAD64 = "pread64"
    PREADV = "preadv"
    PREADV2 = "preadv2"
    PRLIMIT64 = "prlimit64"
    PROCESS_MADVISE = "process_madvise"
    PROCESS_MRELEASE = "process_mrelease"
    PROCESS_VM_READV = "process_vm_readv"
    PROCESS_VM_WRITEV = "process_vm_writev"
    PSELECT6 = "pselect6"
    PTRACE = "ptrace"
    PWRITE64 = "pwrite64"
    PWRITEV = "pwritev"
    PWRITEV2 = "pwritev2"
    QUOTACTL = "quotactl"
    QUOTACTL_FD = "quotactl_fd"
    READ = "read"
    READAHEAD = "readahead"
    READLINK = "readlink"
    READLINKAT = "readlinkat"
    READV = "readv"
    REBOOT = "reboot"
    RECVFROM = "recvfrom"
    RECVMMSG = "recvmmsg"
    RECVMSG = "recvmsg"
    REMAP_FILE_PAGES = "remap_file_pages"
    REMOVEXATTR = "removexattr"
    RENAME = "rename"
    RENAMEAT = "renameat"
    RENAMEAT2 = "renameat2"
    REQUEST_KEY = "request_key"
    RESTART_SYSCALL = "restart_syscall"
    RMDIR = "rmdir"
    RSEQ = "rseq"
    RT_SIGACTION = "rt_sigaction"
    RT_SIGPENDING = "rt_sigpending"
    RT_SIGPROCMASK = "rt_sigprocmask"
    RT_SIGQUEUEINFO = "rt_sigqueueinfo"
    RT_SIGRETURN = "rt_sigreturn"
    RT_SIGSUSPEND = "rt_sigsuspend"
    RT_SIGTIMEDWAIT = "rt_sigtimedwait"
    RT_TGSIGQUEUEINFO = "rt_tgsigqueueinfo"
    SCHED_GET_PRIORITY_MAX = "sched_get_priority_max"
    SCHED_GET_PRIORITY_MIN = "sched_get_priority_min"
    SCHED_GETAFFINITY = "sched_getaffinity"
    SCHED_GETATTR = "sched_getattr"
    SCHED_GETPARAM = "sched_getparam"
    SCHED_GETSCHEDULER = "sched_getscheduler"
    SCHED_RR_GET_INTERVAL = "sched_rr_get_interval"
    SCHED_SETAFFINITY = "sched_setaffinity"
    SCHED_SETATTR = "sched_setattr"
    SCHED_SETPARAM = "sched_setparam"
    SCHED_SETSCHEDULER = "sched_setscheduler"
    SCHED_YIELD = "sched_yield"
    SECCOMP = "seccomp"
    SELECT = "select"
    SEMCTL = "semctl"
    SEMGET = "semget"
    SEMOP = "semop"
    SEMTIMEDOP = "semtimedop"
    SENDFILE = "sendfile"
    SENDMMSG = "sendmmsg"
    SENDMSG = "sendmsg"
    SENDTO = "sendto"
    SET_MEMPOLICY = "set_mempolicy"
    SET_MEMPOLICY_HOME_NODE = "set_mempolicy_home_node"
    SET_ROBUST_LIST = "set_robust_list"
    SET_THREAD_AREA = "set_thread_area"
    SET_TID_ADDRESS = "set_tid_address"
    SETDOMAINNAME = "setdomainname"
    SETFSGID = "setfsgid"
    SETFSUID = "setfsuid"
    SETGID = "setgid"
    SETGROUPS = "setgroups"
    SETHOSTNAME = "sethostname"
    SETITIMER = "setitimer"
    SETNS = "setns"
    SETPGID = "setpgid"
    SETPRIORITY = "setpriority"
    SETREGID = "setregid"
    SETRESGID = "setresgid"
    SETRESUID = "setresuid"
    SETREUID = "setreuid"
    SETRLIMIT = "setrlimit"
    SETSID = "setsid"
    SETSOCKOPT = "setsockopt"
    SETTIMEOFDAY = "settimeofday"
    SETUID = "setuid"
    SETXATTR = "setxattr"
    SHMAT = "shmat"
    SHMCTL = "shmctl"
    SHMDT = "shmdt"
    SHMGET = "shmget"
    SHUTDOWN = "shutdown"
    SIGALTSTACK = "sigaltstack"
    SIGNALFD = "signalfd"
    SIGNALFD4 = "signalfd4"
    SOCKET = "socket"
    SOCKETPAIR = "socketpair"
    SPLICE = "splice"
    STAT = "stat"
    STATFS = "statfs"
    STATX = "statx"
    SWAPOFF = "swapoff"
    SWAPON = "swapon"
    SYMLINK = "symlink"
    SYMLINKAT = "symlinkat"
    SYNC = "sync"
    SYNC_FILE_RANGE = "sync_file_range"
    SYNCFS = "syncfs"
    SYSFS = "sysfs"
    SYSINFO = "sysinfo"
    SYSLOG = "syslog"
    TEE = "tee"
    TGKILL = "tgkill"
    TIME = "time"
    TIMER_CREATE = "timer_create"
    TIMER_DELETE = "timer_delete"
    TIMER_GETOVERRUN = "timer_getoverrun"
    TIMER_GETTIME = "timer_gettime"
    TIMER_SETTIME = "timer_settime"
    TIMERFD_CREATE = "timerfd_create"
    TIMERFD_GETTIME = "timerfd_gettime"
    TIMERFD_SETTIME = "timerfd_settime"
    TIMES = "times"
    TKILL = "tkill"
    TRUNCATE = "truncate"
    UMASK = "umask"
    UMOUNT2 = "umount2"
    UNAME = "uname"
    UNLINK = "unlink"
    UNLINKAT = "unlinkat"
    UNSHARE = "unshare"
    USERFAULTFD = "userfaultfd"
    USTAT = "ustat"
    UTIME = "utime"
    UTIMENSAT = "utimensat"
    UTIMES = "utimes"
    VFORK = "vfork"
    VHANGUP = "vhangup"
    VMSPLICE = "vmsplice"
    WAIT4 = "wait4"
    WAITID = "waitid"
    WRITE = "write"
    WRITEV = "writev"

    def __str__(self) -> str:
        return str(self.value)


LIB_SEQ_SC_MAP = {
    "seq_init": {Syscall.BRK, Syscall.MMAP, Syscall.ACCESS, Syscall.READ},
    "seq_assert_failed": {},
    "seq_alloc": {Syscall.BRK, Syscall.MMAP},
    "seq_alloc_atomic": {Syscall.BRK, Syscall.MMAP},
    "seq_realloc": {Syscall.BRK, Syscall.MMAP, Syscall.MUNMAP},
    "seq_free": {Syscall.BRK, Syscall.MUNMAP},
    "seq_register_finalizer": {},
    "seq_alloc_exc": {Syscall.BRK, Syscall.MMAP, Syscall.MUNMAP},
    "seq_throw": {},
    "seq_personality": {},
    "seq_exc_offset": {},
    "seq_exc_class": {},
    "seq_str_int": {Syscall.BRK, Syscall.MMAP},
    "seq_str_uint": {Syscall.BRK, Syscall.MMAP, Syscall.MUNMAP},
    "seq_str_float": {Syscall.BRK, Syscall.MMAP},
    "seq_str_bool": {Syscall.BRK, Syscall.MMAP},
    "seq_str_byte": {Syscall.BRK, Syscall.MMAP},
    "seq_str_ptr": {Syscall.BRK, Syscall.MMAP},
    "seq_str_tuple": {Syscall.BRK, Syscall.MMAP},
    "seq_print": {Syscall.WRITE},
    "seq_print_full": {Syscall.WRITE},
    "string_conv": {Syscall.BRK, Syscall.MMAP, Syscall.MUNMAP},
}

GLIBC_SC_MAP = {
    "fopen": {Syscall.STAT, Syscall.OPEN},
    "fwrite": {Syscall.WRITE},
    "fclose": {Syscall.CLOSE},
    # TBD: complete mappings
}


def map_stdlib_sc(fn: str) -> {}:
    if fn in LIB_SEQ_SC_MAP:
        return LIB_SEQ_SC_MAP[fn]
    elif "@GLIBC" in fn:
        fname = fn.split("@")[0]
        if fname in GLIBC_SC_MAP:
            return GLIBC_SC_MAP[fname]
    return {}

"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
UPDATE NOTICE

If you introduce new features or make breaking changes to the GRPC protocol
definitions, please update VersionUitl.java and apiversion.properties as
described in the projects README.md
"""

import builtins
import collections.abc
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class RpcNull(google.protobuf.message.Message):
    """*
    This proto file contains message definitions from the primitive data structures, such
    as integers, dates, lists, etc...

    *
    Message representing a 'null' reference value.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___RpcNull = RpcNull

@typing.final
class RpcBytes(google.protobuf.message.Message):
    """*
    Message representing a sequence of bytes.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    value: builtins.bytes
    def __init__(
        self,
        *,
        value: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["value", b"value"]) -> None: ...

global___RpcBytes = RpcBytes

@typing.final
class RpcBoolean(google.protobuf.message.Message):
    """*
    Message representing a boolean value.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    value: builtins.bool
    def __init__(
        self,
        *,
        value: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["value", b"value"]) -> None: ...

global___RpcBoolean = RpcBoolean

@typing.final
class RpcInteger(google.protobuf.message.Message):
    """*
    Message representing a 32-bit signed integer.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    value: builtins.int
    def __init__(
        self,
        *,
        value: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["value", b"value"]) -> None: ...

global___RpcInteger = RpcInteger

@typing.final
class RpcLong(google.protobuf.message.Message):
    """*
    Message representing a 64-bit signed integer.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    value: builtins.int
    def __init__(
        self,
        *,
        value: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["value", b"value"]) -> None: ...

global___RpcLong = RpcLong

@typing.final
class RpcDouble(google.protobuf.message.Message):
    """*
    Message representing a double-precision 64-bit IEEE 754 floating point.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    value: builtins.float
    def __init__(
        self,
        *,
        value: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["value", b"value"]) -> None: ...

global___RpcDouble = RpcDouble

@typing.final
class RpcString(google.protobuf.message.Message):
    """*
    Message representing a string (a sequence of characters).
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    value: builtins.str
    def __init__(
        self,
        *,
        value: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["value", b"value"]) -> None: ...

global___RpcString = RpcString

@typing.final
class RpcLatLong(google.protobuf.message.Message):
    """*
    Message representing a latitude and longitude pair (i.e. a location).
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LATITUDE_FIELD_NUMBER: builtins.int
    LONGITUDE_FIELD_NUMBER: builtins.int
    latitude: builtins.float
    longitude: builtins.float
    def __init__(
        self,
        *,
        latitude: builtins.float = ...,
        longitude: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["latitude", b"latitude", "longitude", b"longitude"]) -> None: ...

global___RpcLatLong = RpcLatLong

@typing.final
class RpcUnixTime(google.protobuf.message.Message):
    """*
    Message representing a Unix timestamp, in milliseconds.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    value: builtins.int
    def __init__(
        self,
        *,
        value: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["value", b"value"]) -> None: ...

global___RpcUnixTime = RpcUnixTime

@typing.final
class RpcVector(google.protobuf.message.Message):
    """*
    Message representing a vector.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    value: builtins.bytes
    def __init__(
        self,
        *,
        value: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["value", b"value"]) -> None: ...

global___RpcVector = RpcVector

@typing.final
class RpcZonedDateTime(google.protobuf.message.Message):
    """*
    Message representing a timestamp in a specific zone with a specific offset. For a
    description of the valid values of these properties, such as the zone ID, refer to the ZonedDateTime JavaDoc:
    <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/ZonedDateTime.html">
    ZonedDateTime JavaDoc</a>.
    <p>
    All fields are required.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EPOCHSECOND_FIELD_NUMBER: builtins.int
    NANOOFSECOND_FIELD_NUMBER: builtins.int
    ZONEOFFSET_FIELD_NUMBER: builtins.int
    ZONEID_FIELD_NUMBER: builtins.int
    epochSecond: builtins.int
    """number of seconds since 1970-01-01T00:00:00Z"""
    nanoOfSecond: builtins.int
    """the sub-second time in nanoseconds"""
    zoneOffset: builtins.str
    """the offset from Greenwich/UTC"""
    zoneId: builtins.str
    """the zone id, for example 'Europe/Amsterdam'"""
    def __init__(
        self,
        *,
        epochSecond: builtins.int = ...,
        nanoOfSecond: builtins.int = ...,
        zoneOffset: builtins.str = ...,
        zoneId: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["epochSecond", b"epochSecond", "nanoOfSecond", b"nanoOfSecond", "zoneId", b"zoneId", "zoneOffset", b"zoneOffset"]) -> None: ...

global___RpcZonedDateTime = RpcZonedDateTime

@typing.final
class RpcIsoDateString(google.protobuf.message.Message):
    """*
    Message representing an as is string implementation of an ISO 8601 date. This should mainly be used with Python
    <b>datetime</b> objects because of their lack of precision due to the underlying floating point posix time.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    value: builtins.str
    def __init__(
        self,
        *,
        value: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["value", b"value"]) -> None: ...

global___RpcIsoDateString = RpcIsoDateString

@typing.final
class RpcEmptyList(google.protobuf.message.Message):
    """*
    Message representing an empty list of any type.

    Note: in Java, it is generally not possible to retrieve the runtime generic parameter
    type of a list. In case it is empty, there is also no element to base the type on.
    One should use this empty list message in that case, as it is clear in intent.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___RpcEmptyList = RpcEmptyList

@typing.final
class RpcStringList(google.protobuf.message.Message):
    """*
    Message representing a list of string values.
    @deprecated: use RpcList instead.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        values: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["values", b"values"]) -> None: ...

global___RpcStringList = RpcStringList

@typing.final
class RpcLongList(google.protobuf.message.Message):
    """*
    Message representing a list of long values.
    @deprecated: use RpcList instead.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(
        self,
        *,
        values: collections.abc.Iterable[builtins.int] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["values", b"values"]) -> None: ...

global___RpcLongList = RpcLongList

@typing.final
class RpcDoubleList(google.protobuf.message.Message):
    """*
    Message representing a list of double-precision values.
    @deprecated: use RpcList instead.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    def __init__(
        self,
        *,
        values: collections.abc.Iterable[builtins.float] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["values", b"values"]) -> None: ...

global___RpcDoubleList = RpcDoubleList

@typing.final
class RpcList(google.protobuf.message.Message):
    """*
    Message representing a list of any value.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.protobuf.any_pb2.Any]: ...
    def __init__(
        self,
        *,
        values: collections.abc.Iterable[google.protobuf.any_pb2.Any] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["values", b"values"]) -> None: ...

global___RpcList = RpcList

@typing.final
class RpcEmptyMap(google.protobuf.message.Message):
    """*
    Message representing an empty map of any key-value type.

    Note: in Java, it is generally not possible to retrieve the runtime generic parameter
    type of a map. In case it is empty, there is also no element to base the type on.
    One should use this empty map message in that case, as it is clear in intent.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___RpcEmptyMap = RpcEmptyMap

@typing.final
class RpcStringMap(google.protobuf.message.Message):
    """*
    Message representing a map of string keys and values.
    @deprecated: use RpcMap instead.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class EntriesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    ENTRIES_FIELD_NUMBER: builtins.int
    @property
    def entries(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    def __init__(
        self,
        *,
        entries: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["entries", b"entries"]) -> None: ...

global___RpcStringMap = RpcStringMap

@typing.final
class RpcMap(google.protobuf.message.Message):
    """*
    Message representing a map of string keys and any of the supported RPC types as values.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class EntriesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> google.protobuf.any_pb2.Any: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: google.protobuf.any_pb2.Any | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    ENTRIES_FIELD_NUMBER: builtins.int
    @property
    def entries(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, google.protobuf.any_pb2.Any]: ...
    def __init__(
        self,
        *,
        entries: collections.abc.Mapping[builtins.str, google.protobuf.any_pb2.Any] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["entries", b"entries"]) -> None: ...

global___RpcMap = RpcMap

herostools.helper
=================

.. py:module:: herostools.helper


Attributes
----------

.. autoapisummary::

   herostools.helper.SPAM
   herostools.helper.format
   herostools.helper.log


Classes
-------

.. autoapisummary::

   herostools.helper.Logger


Module Contents
---------------

.. py:data:: SPAM
   :value: 5


.. py:class:: Logger(name, level=NOTSET)

   Bases: :py:obj:`logging.Logger`


   Instances of the Logger class represent a single logging channel. A
   "logging channel" indicates an area of an application. Exactly how an
   "area" is defined is up to the application developer. Since an
   application can have any number of areas, logging channels are identified
   by a unique string. Application areas can be nested (e.g. an area
   of "input processing" might include sub-areas "read CSV files", "read
   XLS files" and "read Gnumeric files"). To cater for this natural nesting,
   channel names are organized into a namespace hierarchy where levels are
   separated by periods, much like the Java or Python package namespace. So
   in the instance given above, channel names might be "input" for the upper
   level, and "input.csv", "input.xls" and "input.gnu" for the sub-levels.
   There is no arbitrary limit to the depth of nesting.


   .. py:method:: setLevel(level, globally=False)

      Set the logging level of this logger.  level must be an int or a str.



   .. py:method:: spam(msg, *args, **kwargs)


.. py:data:: format
   :value: '%(asctime)-15s %(name)s: %(message)s'


.. py:data:: log


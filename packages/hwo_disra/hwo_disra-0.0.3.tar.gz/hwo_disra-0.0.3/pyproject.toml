[build-system]
requires = [
  "setuptools>=62.1",
  "setuptools_scm[toml]>=8.0.0",
  "wheel",]
build-backend = "setuptools.build_meta"

[project]
name = "hwo_disra"
description = ""
version="0.0.3"
requires-python = ">=3.10"
readme = { file = "README.rst", content-type = "text/x-rst" }
license = { file = "licenses/LICENSE.rst" }
authors = [
  { name = "Andrew Myers", email = "amyers@stsci.edu" },
  { name = "Adric Riedel", email = "riedel@stsci.edu" },
  { name = "Nazma Ferdous", email = "ferdous@stsci.edu" },
  { name = "Rachel Vander Vliet", email = "rvandervliet@stsci.edu" },
  { name = "Jason Tumlinson", email = "tumlinson@stsci.edu" },
]

# This only lists the dependencies necessary for the client.
# When using this to evaluate notebooks there are additional
# requirements, everything is in requirements.txt.
# We should probably consider splitting this into a client
# and evaluation package.
dependencies = [
    "syotools==1.2",
    "numpy < 2",
    "hwo_sci_eng==0.1.9"
]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov"
]
docs = [
    "sphinx",
    "sphinx-automodapi",
]

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
include = ["hwo_disra*"]

[tool.setuptools_scm]
version_file = "hwo_disra/version.py"

[tool.pytest.ini_options]
testpaths = [
  "hwo_disra",
#  "docs",
]
doctest_plus = "enabled"
text_file_format = "rst"
#addopts = "--doctest-rst"
norecursedirs = ["hwo_disra[\\/]_dev"]

[tool.coverage.run]
omit = [
 "hwo_disra/__init*",
 "hwo_disra/conftest.py",
 "hwo_disra/*setup_package*",
 "hwo_disra/tests/*",
 "hwo_disra/*/tests/*",
 "hwo_disra/extern/*",
 "hwo_disra/version*",
 "*/hwo_disra/__init*",
 "*/hwo_disra/conftest.py",
 "*/hwo_disra/*setup_package*",
 "*/hwo_disra/tests/*",
 "*/hwo_disra/*/tests/*",
 "*/hwo_disra/extern/*",
 "*/hwo_disra/version*",
]

[tool.coverage.report]
exclude_lines = [
  # Have to re-enable the standard pragma
  "pragma: no cover",
  # Don't complain about packages we have installed
  "except ImportError",
  # Don't complain if tests don't hit assertions
  "raise AssertionError",
  "raise NotImplementedError",
  # Don't complain about script hooks
  "def main(.*):",
  # Ignore branches that don't pertain to this version of Python
  "pragma: py{ignore_python_version}",
  # Don't complain about IPython completion helper
  "def _ipython_key_completions_",
  # typing.TYPE_CHECKING is False at runtime
  "if TYPE_CHECKING:",
  # Ignore typing overloads
  "@overload",
]

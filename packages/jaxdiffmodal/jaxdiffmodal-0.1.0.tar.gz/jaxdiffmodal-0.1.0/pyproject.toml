[project]
name="jaxdiffmodal"
version = "0.1.0"
description = "A collection of vibration models (e.g. von Kármán plates, tension-modulated and stiff strings) implemented in JAX for fast, differentiable simulations"
readme = "README.md"
requires-python=">=3.11"
authors = [
    {name = "Rodrigo Diaz", email = "rodrigodzf@gmail.com"},
]
license = {text = "GPL-3.0"}
keywords = ["JAX", "differentiable", "physics", "simulation", "vibration", "acoustics", "musical instruments"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Physics",
]
urls = {homepage = "https://github.com/rodrigodzf/jaxdiffmodal"}
dependencies = [
    "jax>=0.7.0; sys_platform != 'linux'",
    "jax[cuda12]>=0.7.0; sys_platform == 'linux'",
    "einops>=0.8.0",
    "nemus-magpie",
    "numpy==2.1.0",
    "scipy>=1.15.1",
    "tabulate>=0.9.0",
    "equinox>=0.11.12",
    "jaxtyping>=0.3.2",
]

[project.optional-dependencies]
cuda = [
    "cuquantum-python-cu12>=24.11.0; sys_platform == 'linux'",
    "cupy-cuda12x>=13.3.0",
]
dev = [
    "soundfile>=0.13.1",
    "tqdm>=4.67.1",
    "matplotlib>=3.10.0",
    "scienceplots>=2.1.1",
    "ffmpeg-python>=0.2.0",
    "nbformat>=5.10.4",
    "nbclient>=0.10.2",
    "ipykernel>=6.29.5",
    "poethepoet>=0.32.1",
    "ruff>=0.9.2",
    "pytest>=8.4.1",
    "quartodoc>=0.11.1",
]
benchmark = [
    "pandas>=2.2.3",
    "jaxopt>=0.8.3",
    "spectrum>=0.9.0",
    "lineax>=0.0.7",
    "soxr>=0.5.0.post1",
    "seaborn>=0.13.2",
    "scienceplots>=2.1.1",
    "llvmlite>=0.44.0",
    "numba>=0.57",
    "librosa>=0.11.0",
    "torch>=2.4.1",
    "torchaudio>=2.4.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "jaxdiffmodal/__init__.py"

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
line-length = 88
target-version = "py312"
output-format = "concise"

[tool.ruff.lint]
fixable = ["I001", "F401", "UP"]
ignore = ["E402", "E721", "E731", "E741", "F722", "UP038"]
ignore-init-module-imports = true
select = ["E", "F", "I001", "UP"]

[tool.ruff.lint.isort]
combine-as-imports = true
extra-standard-library = ["typing_extensions"]
lines-after-imports = 2
order-by-type = false

[tool.poe]
verbosity = 0

[tool.poe.tasks]
# Notebook tasks
_nb_check_format = "uv run ruff format nbs --check"
_nb_clean = "uv run nbdev_clean"
_nb_format = "uv run ruff format nbs"
_nb_export = "uv run nbdev_export"
_nb_update = "uv run nbdev_update"
_nb_test = { cmd = "uv run nbdev_test", env = { JAX_PLATFORMS = "cpu", JAX_ENABLE_X64 = "true" } }
_nb_readme = { cmd = "uv run nbdev_readme", env = { JAX_PLATFORMS = "cpu" } }
_nb_proc = "uv run nbdev_proc_nbs"

# Code quality tasks
_ruff = "uv run ruff check --output-format=concise"
_format = "uv run ruff format"
_check_format = "uv run ruff format --diff"
_mypy = "uv run mypy ."

# Package management
_sync = "uv sync --extra dev"
[tool.poe.tasks.clean]
help = "Remove temporary files generated during build process"
cmd = """
rm -rf .coverage
       .mypy_cache
       .pytest_cache
       ./**/__pycache__
       _proc
       .ruff_cache
"""

[tool.poe.tasks.format]
help = "Reformat all notebooks and python files"
sequence = ["_nb_format", "_format"]

[tool.poe.tasks.sync]
help = "Synchronize package: clean, format, export library files and update dependencies"
sequence = [
    "_nb_clean",
    "_nb_format", 
    "_nb_export",
    "_format",
    "_sync",
    "clean"
]

[tool.poe.tasks.fullsync]
help = "Full package synchronization including readme update"
sequence = [
    "_nb_clean",
    "_nb_format",
    "_nb_export", 
    # "_nb_readme",
    "_format",
    "_sync",
    "clean"
]

[tool.poe.tasks.update]
help = "Update notebooks based on library changes"
sequence = [
    "_nb_clean",
    "_nb_format",
    "_nb_update",
    "_format", 
    "_sync",
    "clean"
]

[tool.poe.tasks.test]
help = "Run test suite"
sequence = ["_nb_test"]

[tool.poe.tasks.preview]
help = "Preview documentation with quarto"
shell = "quartodoc build && quarto preview"
env = { JAX_PLATFORMS = "cpu" }
cwd = "docs"

[tool.poe.tasks.publish]
help = "Publish documentation to GitHub Pages"
shell = "quartodoc build && quarto publish gh-pages --no-prompt"
env = { JAX_PLATFORMS = "cpu" }
cwd = "docs"

[tool.uv.sources]
nemus-magpie = { git = "https://github.com/Nemus-Project/magpie-python" }
# torch = { url = "https://download.pytorch.org/whl/nightly/cu128/torch-2.8.0.dev20250319%2Bcu128-cp39-cp39-manylinux_2_28_x86_64.whl" }
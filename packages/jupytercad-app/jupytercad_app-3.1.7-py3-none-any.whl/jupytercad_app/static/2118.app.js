"use strict";(self.webpackChunk_JUPYTERLAB_CORE_OUTPUT=self.webpackChunk_JUPYTERLAB_CORE_OUTPUT||[]).push([[2118],{42118:(e,n,t)=>{t.r(n),t.d(n,{default:()=>C});var o=t(86012),i=t(64530),r=t(29950),l=t(59182),a=t(90182),c=t(47079),s=t(95870),d=t.n(s);const m="availableProviders";function p(e){const{schema:n}=e,t=n.title,o=n.description,i=e.formContext.settings,r=i.get(m).user,l={...n.default};if(r)for(const e of Object.keys(l))l[e]=e in r?r[e]:-1;const[a,c]=(0,s.useState)(l);return d().createElement("div",null,d().createElement("fieldset",null,d().createElement("legend",null,t),d().createElement("p",{className:"field-description"},o),Object.keys(l).map(e=>d().createElement("div",{key:e,className:"form-group small-field"},d().createElement("div",null,d().createElement("h3",null," ",e),d().createElement("div",{className:"inputFieldWrapper"},d().createElement("input",{className:"form-control",type:"number",value:a[e],onChange:n=>{((e,n)=>{const t={...a,[e]:parseInt(n.target.value)};i.set(m,t).catch(console.error),c(t)})(e,n)}})))))))}const u="@jupyterlab/completer-extension:manager",v="@jupyterlab/completer-extension:inline-completer";var I;!function(e){e.nextInline="inline-completer:next",e.previousInline="inline-completer:previous",e.acceptInline="inline-completer:accept",e.invokeInline="inline-completer:invoke"}(I||(I={}));const f={id:"@jupyterlab/completer-extension:base-service",description:"Adds context and kernel completion providers.",requires:[r.ICompletionProviderManager],autoStart:!0,activate:(e,n)=>{n.registerProvider(new r.ContextCompleterProvider),n.registerProvider(new r.KernelCompleterProvider)}},g={id:"@jupyterlab/completer-extension:inline-history",description:"Adds inline completion provider suggesting code from execution history.",requires:[r.ICompletionProviderManager],optional:[a.ITranslator],autoStart:!0,activate:(e,n,t)=>{n.registerInlineProvider(new r.HistoryInlineCompletionProvider({translator:null!=t?t:a.nullTranslator}))}},h={id:"@jupyterlab/completer-extension:inline-completer-factory",description:"Provides a factory for inline completer.",provides:r.IInlineCompleterFactory,optional:[a.ITranslator],autoStart:!0,activate:(e,n)=>{const t=(n||a.nullTranslator).load("jupyterlab");return{factory:n=>{const o=new r.InlineCompleter({...n,trans:t}),l=n=>{const t=e.commands.keyBindings.find(e=>e.command===n),o=t?c.CommandRegistry.formatKeystroke(t.keys):"";return o?`${o}`:""},a={[I.previousInline]:l(I.previousInline),[I.nextInline]:l(I.nextInline),[I.acceptInline]:l(I.acceptInline)};return e.commands.keyBindingChanged.connect((n,t)=>{const o=t.binding.command;if(a.hasOwnProperty(o)){const n=a[o],t=l(o);t!==n&&(a[o]=t,e.commands.notifyCommandChanged(o))}}),o.toolbar.addItem("previous-inline-completion",new i.CommandToolbarButton({commands:e.commands,icon:i.caretLeftIcon,id:I.previousInline,label:()=>a[I.previousInline],caption:t.__("Previous")})),o.toolbar.addItem("next-inline-completion",new i.CommandToolbarButton({commands:e.commands,icon:i.caretRightIcon,id:I.nextInline,label:()=>a[I.nextInline],caption:t.__("Next")})),o.toolbar.addItem("accept-inline-completion",new i.CommandToolbarButton({commands:e.commands,icon:i.checkIcon,id:I.acceptInline,label:()=>a[I.acceptInline],caption:t.__("Accept")})),o.model.suggestionsChanged.connect(()=>{for(const n of[I.previousInline,I.nextInline,I.acceptInline])e.commands.notifyCommandChanged(n)}),o}}}},b={id:v,description:"Registers the inline completer factory; adds inline completer commands, shortcuts and settings.",requires:[r.ICompletionProviderManager,r.IInlineCompleterFactory,l.ISettingRegistry],optional:[a.ITranslator],autoStart:!0,activate:(e,n,t,i,r)=>{n.setInlineCompleterFactory(t);const l=(r||a.nullTranslator).load("jupyterlab"),c=()=>!!e.shell.currentWidget&&!!n.inline;let s;e.commands.addCommand(I.nextInline,{execute:()=>{var t;null===(t=n.inline)||void 0===t||t.cycle(e.shell.currentWidget.id,"next")},label:l.__("Next Inline Completion"),isEnabled:c}),e.commands.addCommand(I.previousInline,{execute:()=>{var t;null===(t=n.inline)||void 0===t||t.cycle(e.shell.currentWidget.id,"previous")},label:l.__("Previous Inline Completion"),isEnabled:c}),e.commands.addCommand(I.acceptInline,{execute:()=>{var t;null===(t=n.inline)||void 0===t||t.accept(e.shell.currentWidget.id)},label:l.__("Accept Inline Completion"),isEnabled:()=>c()&&n.inline.isActive(e.shell.currentWidget.id)}),e.commands.addCommand(I.invokeInline,{execute:()=>{var t;null===(t=n.inline)||void 0===t||t.invoke(e.shell.currentWidget.id)},label:l.__("Invoke Inline Completer"),isEnabled:c});const d=e=>{var t;s=e.composite,null===(t=n.inline)||void 0===t||t.configure(s)};e.restored.then(()=>{var e;const t=null!==(e=n.inlineProviders)&&void 0!==e?e:[],o=e=>{var n,t;return{enabled:!0,autoFillInMiddle:!1,timeout:5e3,debouncerDelay:0,...null!==(t=null===(n=e.schema)||void 0===n?void 0:n.default)&&void 0!==t?t:{}}};i.transform(v,{compose:e=>{var n,i;const r=null!==(n=e.data.composite.providers)&&void 0!==n?n:{};for(const e of t){const n=o(e);r[e.identifier]={...n,...null!==(i=r[e.identifier])&&void 0!==i?i:{}}}return e.data.composite.providers=r,e},fetch:e=>{var n,i;const r=e.schema.properties,a={};for(const e of t)a[e.identifier]={title:l.__("%1 provider",e.name),properties:{...null!==(i=null===(n=e.schema)||void 0===n?void 0:n.properties)&&void 0!==i?i:{},timeout:{title:l.__("Timeout"),description:l.__("Timeout for %1 provider (in milliseconds).",e.name),type:"number",minimum:0},debouncerDelay:{title:l.__("Debouncer delay"),minimum:0,description:l.__("Time since the last key press to wait before requesting completions from %1 provider (in milliseconds).",e.name),type:"number"},enabled:{title:l.__("Enabled"),description:l.__("Whether to fetch completions %1 provider.",e.name),type:"boolean"},autoFillInMiddle:{title:l.__("Fill in middle on typing"),description:l.__("Whether to show completions in the middle of the code line from %1 provider on typing.",e.name),type:"boolean"}},default:o(e),type:"object"};return r.providers.properties=a,e}}),i.load(v).then(e=>{d(e),e.changed.connect(e=>{d(e)})}).catch(console.error)}).catch(console.error);const m=n=>e.commands.keyBindings.find(e=>e.command===n),p={[I.acceptInline]:m(I.acceptInline),[I.invokeInline]:m(I.invokeInline)};e.commands.keyBindingChanged.connect((e,n)=>{const t=n.binding.command;p.hasOwnProperty(t)&&(p[t]=m(t))}),document.addEventListener("keydown",n=>{if(!(n.target instanceof Element))return;const t=n.target;switch(n.keyCode){case 9:{const i=[p[I.acceptInline],p[I.invokeInline]];for(const r of i)if(r&&1===r.keys.length&&"Tab"===r.keys[0]&&t.closest(r.selector)&&e.commands.isEnabled(r.command)){const i=t.closest("."+o.COMPLETER_ACTIVE_CLASS);if((null==s?void 0:s.suppressIfTabCompleterActive)&&i)return;return e.commands.execute(r.command).catch(console.error),n.preventDefault(),n.stopPropagation(),void n.stopImmediatePropagation()}break}default:return}},!0)}},y={id:u,description:"Provides the completion provider manager.",requires:[l.ISettingRegistry],optional:[i.IFormRendererRegistry],provides:r.ICompletionProviderManager,autoStart:!0,activate:(e,n,t)=>{const o="availableProviders",i=new r.CompletionProviderManager,l=(e,n)=>{var t;const r=e.get(o),l=e.composite;i.setTimeout(l.providerTimeout),i.setShowDocumentationPanel(l.showDocumentationPanel),i.setContinuousHinting(l.autoCompletion),i.setSuppressIfInlineCompleterActive(l.suppressIfInlineCompleterActive);const a=null!==(t=r.user)&&void 0!==t?t:r.composite,c=Object.entries(null!=a?a:{}).filter(e=>e[1]>=0&&n.includes(e[0])).sort(([,e],[,n])=>n-e).map(e=>e[0]);i.activateProvider(c)};if(e.restored.then(()=>{const e=[...i.getProviders().entries()],t=e.map(([e,n])=>e);n.transform(u,{fetch:n=>{const t=n.schema.properties,i={};return e.forEach(([e,n],t)=>{var o;i[e]=null!==(o=n.rank)&&void 0!==o?o:10*(t+1)}),t[o].default=i,n}}),n.load(u).then(e=>{l(e,t),e.changed.connect(e=>{l(e,t)})}).catch(console.error)}).catch(console.error),t){const e={fieldRenderer:e=>p(e)};t.addRenderer(`${u}.availableProviders`,e)}return i}},C=[y,f,g,h,b]}}]);
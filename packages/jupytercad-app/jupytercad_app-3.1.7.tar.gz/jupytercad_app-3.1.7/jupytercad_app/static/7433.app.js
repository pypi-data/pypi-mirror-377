"use strict";(self.webpackChunk_JUPYTERLAB_CORE_OUTPUT=self.webpackChunk_JUPYTERLAB_CORE_OUTPUT||[]).push([[7433],{37433:(e,o,n)=>{n.r(o),n.d(o,{default:()=>M});var t=n(96576),r=n(18504),s=n(86012),l=n(29950),a=n(5514),i=n(69464),c=n(38888),d=n(31480),u=n(40488),p=n(59182),m=n(90182),C=n(64530),g=n(45945),v=n(68211),h=n(49711),b=n(80281),f=n(76231);const y={id:"@jupyterlab/console-extension:foreign",description:"Add foreign handler of IOPub messages to the console.",requires:[a.IConsoleTracker,p.ISettingRegistry,m.ITranslator],optional:[r.ICommandPalette],activate:function(e,o,n,t,r){var s;const l=t.load("jupyterlab"),{shell:i}=e;o.widgetAdded.connect((e,o)=>{const t=o.console,r=new a.ForeignHandler({sessionContext:t.sessionContext,parent:t});x.foreignHandlerProperty.set(t,r),n.get("@jupyterlab/console-extension:tracker","showAllKernelActivity").then(({composite:e})=>{const o=e;r.enabled=o}),t.disposed.connect(()=>{r.dispose()})});const{commands:c}=e,d=l.__("Console"),u="console:toggle-show-all-kernel-activity";c.addCommand(u,{label:e=>l.__("Show All Kernel Activity"),execute:e=>{const n=function(e){const n=o.currentWidget;return!1!==e.activate&&n&&i.activateById(n.id),n}(e);if(!n)return;const t=x.foreignHandlerProperty.get(n.console);t&&(t.enabled=!t.enabled)},isToggled:()=>{var e;return null!==o.currentWidget&&!!(null===(e=x.foreignHandlerProperty.get(o.currentWidget.console))||void 0===e?void 0:e.enabled)},isEnabled:()=>null!==o.currentWidget&&o.currentWidget===i.currentWidget});const p=()=>{c.notifyCommandChanged(u)};o.currentChanged.connect(p),null===(s=i.currentChanged)||void 0===s||s.connect(p),r&&r.addItem({command:u,category:d,args:{isPalette:!0}})},autoStart:!0},k=y;var x;!function(e){e.foreignHandlerProperty=new f.AttachedProperty({name:"foreignHandler",create:()=>{}})}(x||(x={}));const w={id:"@jupyterlab/console-extension:cell-executor",description:"Provides the console cell executor.",autoStart:!0,provides:a.IConsoleCellExecutor,activate:()=>Object.freeze({runCell:a.runCell})};var _;!function(e){e.autoClosingBrackets="console:toggle-autoclosing-brackets",e.create="console:create",e.clear="console:clear",e.runUnforced="console:run-unforced",e.runForced="console:run-forced",e.linebreak="console:linebreak",e.interrupt="console:interrupt-kernel",e.restart="console:restart-kernel",e.closeAndShutdown="console:close-and-shutdown",e.open="console:open",e.inject="console:inject",e.changeKernel="console:change-kernel",e.getKernel="console:get-kernel",e.interactionMode="console:interaction-mode",e.redo="console:redo",e.replaceSelection="console:replace-selection",e.shutdown="console:shutdown",e.undo="console:undo",e.invokeCompleter="completer:invoke-console",e.selectCompleter="completer:select-console"}(_||(_={}));const I={id:"@jupyterlab/console-extension:tracker",description:"Provides the console widget tracker.",provides:a.IConsoleTracker,requires:[a.ConsolePanel.IContentFactory,s.IEditorServices,a.IConsoleCellExecutor,u.IRenderMimeRegistry,p.ISettingRegistry],optional:[t.ILayoutRestorer,i.IDefaultFileBrowser,d.IMainMenu,r.ICommandPalette,c.ILauncher,t.ILabStatus,r.ISessionContextDialogs,C.IFormRendererRegistry,m.ITranslator,r.ISessionContextDialogs,r.IToolbarWidgetRegistry],activate:async function(e,o,n,t,s,l,i,c,d,u,p,f,y,k,x,w,I){var E;const P=null!=x?x:m.nullTranslator,S=P.load("jupyterlab"),M=e.serviceManager,{commands:T,shell:j}=e,B=S.__("Console"),R=null!=y?y:new r.SessionContextDialogs({translator:P}),K="@jupyterlab/console-extension:tracker",A=["top","bottom","left","right"];let U;if(I){const e="ConsolePanel";U=(0,r.createToolbarFactory)(I,l,e,K,P),w&&I.addFactory(e,"kernelName",e=>r.Toolbar.createKernelNameItem(e.sessionContext,w,P)),I.addFactory(e,"kernelStatus",e=>{const o=e.sessionContext;return r.Toolbar.createKernelStatusItem(o)});const o=new b.Menu({commands:T});o.addClass("jp-CodeConsolePromptMenu"),A.forEach(e=>{o.addItem({command:`console:prompt-to-${e}`})}),I.addFactory(e,"promptPosition",e=>{const n=new C.ToolbarButton({tooltip:S.__("Change Console Prompt Position"),icon:C.dotsIcon,onClick:()=>{const e=n.node.getBoundingClientRect().right,t=n.node.getBoundingClientRect().bottom;o.open(e,t,{horizontalAlignment:"right"})}});return n})}const W=new r.WidgetTracker({namespace:"console"});async function D(e){var i,c;await M.ready;const d=new a.ConsolePanel({manager:M,contentFactory:o,mimeTypeService:n.mimeTypeService,rendermime:s,sessionDialogs:R,executor:t,translator:P,setBusy:null!==(i=f&&(()=>f.setBusy()))&&void 0!==i?i:void 0,...e});U&&(0,r.setToolbar)(d,U);const u=(await l.get("@jupyterlab/console-extension:tracker","interactionMode")).composite;return d.console.node.dataset.jpInteractionMode=u,await W.add(d),d.sessionContext.propertyChanged.connect(()=>{W.save(d)}),e.subshell&&d.sessionContext.kernelChanged.connect(async()=>{d.sessionContext.isDisposed||d.sessionContext.ready.then(async()=>{if(null===d.sessionContext.session)console.error("Cannot create subshell without session");else if(null===d.sessionContext.session.kernel)console.error("Cannot create subshell without kernel");else{const{kernel:e}=d.sessionContext.session;await e.info;const o=await e.requestCreateSubshell({}).done;e.subshellId=o.content.subshell_id}}).catch(e=>{console.error("Failed to initialize SessionContext or create new subshell.",e)})}),j.add(d,"main",{ref:e.ref,mode:e.insertMode,activate:!1!==e.activate,type:null!==(c=e.type)&&void 0!==c?c:"Console"}),d}i&&i.restore(W,{command:_.create,args:e=>{const{path:o,name:n,kernelPreference:t}=e.console.sessionContext;return{path:o,name:n,kernelPreference:{...t}}},name:e=>{var o;return null!==(o=e.console.sessionContext.path)&&void 0!==o?o:v.UUID.uuid4()},when:M.ready}),p&&M.ready.then(()=>{let e=null;const o=()=>{e&&(e.dispose(),e=null);const o=M.kernelspecs.specs;if(o){e=new h.DisposableSet;for(const n in o.kernelspecs){const t=n===o.default?0:1/0,r=o.kernelspecs[n],s=r.resources["logo-svg"]||r.resources["logo-64x64"];e.add(p.add({command:_.create,args:{isLauncher:!0,kernelPreference:{name:n}},category:S.__("Console"),rank:t,kernelIconUrl:s,metadata:{kernel:v.JSONExt.deepCopy(r.metadata||{})}}))}}};o(),M.kernelspecs.specsChanged.connect(o)});let F,O,L,q,z,H,$={};async function N(e){F=(await l.get(K,"clearCellsOnExecute")).composite,O=(await l.get(K,"clearCodeContentOnExecute")).composite,L=(await l.get(K,"hideCodeInput")).composite,q=(await l.get(K,"interactionMode")).composite,$=(await l.get(K,"promptCellConfig")).composite,z=(await l.get(K,"promptCellPosition")).composite,H=(await l.get(K,"showBanner")).composite;const o=e=>{var o,n;e.console.node.dataset.jpInteractionMode=q,e.console.editorConfig=$,null===(n=null===(o=e.console.promptCell)||void 0===o?void 0:o.editor)||void 0===n||n.setOptions($),e.console.setConfig({clearCellsOnExecute:F,clearCodeContentOnExecute:O,hideCodeInput:L,promptCellPosition:z,showBanner:H})};e?o(e):W.forEach(o)}if(l.pluginChanged.connect((e,o)=>{o===K&&N()}),await N(),k){const e=k.getRenderer("@jupyterlab/codemirror-extension:plugin.defaultConfig");e&&k.addRenderer("@jupyterlab/console-extension:tracker.promptCellConfig",e)}function G(){return null!==W.currentWidget&&W.currentWidget===j.currentWidget}function J(e){var o;const n=e[r.SemanticCommand.WIDGET]?null!==(o=W.find(o=>o.id===e[r.SemanticCommand.WIDGET]))&&void 0!==o?o:null:W.currentWidget;return!1!==e.activate&&n&&j.activateById(n.id),n}W.widgetAdded.connect((e,o)=>{N(o)}),T.addCommand(_.autoClosingBrackets,{execute:async e=>{var o;$.autoClosingBrackets=!!(null!==(o=e.force)&&void 0!==o?o:!$.autoClosingBrackets),await l.set(K,"promptCellConfig",$)},label:S.__("Auto Close Brackets for Code Console Prompt"),isToggled:()=>$.autoClosingBrackets}),T.addCommand(_.open,{label:S.__("Open a console for the provided `path`."),execute:e=>{const o=e.path,n=W.find(e=>{var n;return(null===(n=e.console.sessionContext.session)||void 0===n?void 0:n.path)===o});return n?(!1!==e.activate&&j.activateById(n.id),n):M.ready.then(()=>(0,g.find)(M.sessions.running(),e=>e.path===o)?D(e):Promise.reject(`No running kernel session for path: ${o}`))}}),T.addCommand(_.create,{label:e=>{var o,n,t,r;if(e.isPalette)return S.__("New Console");if(e.isLauncher&&e.kernelPreference){const s=e.kernelPreference;return null!==(r=null===(t=null===(n=null===(o=M.kernelspecs)||void 0===o?void 0:o.specs)||void 0===n?void 0:n.kernelspecs[s.name||""])||void 0===t?void 0:t.display_name)&&void 0!==r?r:""}return S.__("Console")},icon:e=>e.isPalette?void 0:C.consoleIcon,execute:e=>{var o;return D({basePath:null!==(o=e.basePath||e.cwd||(null==c?void 0:c.model.path))&&void 0!==o?o:"",...e})}});const Y={top:C.dockTopIcon,bottom:C.dockBottomIcon,right:C.dockRightIcon,left:C.dockLeftIcon};A.forEach(e=>{const o=`console:prompt-to-${e}`;T.addCommand(o,{execute:o=>{const n=J(o);n&&n.console.setConfig({promptCellPosition:e})},isEnabled:G,label:S.__(`Prompt to ${e}`),icon:o=>o.isPalette?void 0:Y[e]}),u&&u.addItem({command:o,category:B,args:{isPalette:!0}})}),T.addCommand(_.undo,{execute:e=>{var o;const n=J(e);if(!n)return;const t=null===(o=n.console.promptCell)||void 0===o?void 0:o.editor;t&&t.undo()},isEnabled:e=>{var o,n,t;if(!G())return!1;const r=null===(t=null===(n=null===(o=J(e))||void 0===o?void 0:o.console)||void 0===n?void 0:n.promptCell)||void 0===t?void 0:t.editor;return!!r&&r.model.sharedModel.canUndo()},icon:C.undoIcon.bindprops({stylesheet:"menuItem"}),label:S.__("Undo")}),T.addCommand(_.redo,{execute:e=>{var o;const n=J(e);if(!n)return;const t=null===(o=n.console.promptCell)||void 0===o?void 0:o.editor;t&&t.redo()},isEnabled:e=>{var o,n,t;if(!G())return!1;const r=null===(t=null===(n=null===(o=J(e))||void 0===o?void 0:o.console)||void 0===n?void 0:n.promptCell)||void 0===t?void 0:t.editor;return!!r&&r.model.sharedModel.canRedo()},icon:C.redoIcon.bindprops({stylesheet:"menuItem"}),label:S.__("Redo")}),T.addCommand(_.clear,{label:S.__("Clear Console Cells"),icon:e=>e.toolbar?C.clearIcon:void 0,execute:e=>{const o=J(e);o&&o.console.clear()},isEnabled:G}),T.addCommand(_.runUnforced,{label:S.__("Run Cell (unforced)"),icon:e=>e.toolbar?C.runIcon:void 0,execute:e=>{const o=J(e);if(o)return o.console.execute()},isEnabled:G}),T.addCommand(_.runForced,{label:S.__("Run Cell (forced)"),icon:e=>e.toolbar?C.runIcon:void 0,execute:e=>{const o=J(e);if(o)return o.console.execute(!0)},isEnabled:G}),T.addCommand(_.linebreak,{label:S.__("Insert Line Break"),execute:e=>{const o=J(e);o&&o.console.insertLinebreak()},isEnabled:G}),T.addCommand(_.replaceSelection,{label:S.__("Replace Selection in Console"),execute:e=>{const o=J(e);if(!o)return;const n=e.text||"";o.console.replaceSelection(n)},isEnabled:G}),T.addCommand(_.interrupt,{label:S.__("Interrupt Kernel"),execute:e=>{var o;const n=J(e);if(!n)return;const t=null===(o=n.console.sessionContext.session)||void 0===o?void 0:o.kernel;return t?t.interrupt():void 0},isEnabled:G}),T.addCommand(_.restart,{label:S.__("Restart Kernel…"),icon:e=>e.toolbar?C.refreshIcon:void 0,execute:e=>{const o=J(e);if(o)return R.restart(o.console.sessionContext)},isEnabled:G}),T.addCommand(_.shutdown,{label:S.__("Shut Down"),execute:e=>{const o=J(e);if(o)return o.console.sessionContext.shutdown()}}),T.addCommand(_.closeAndShutdown,{label:S.__("Close and Shut Down…"),execute:e=>{const o=J(e);if(o)return(0,r.showDialog)({title:S.__("Shut down the console?"),body:S.__('Are you sure you want to close "%1"?',o.title.label),buttons:[r.Dialog.cancelButton({ariaLabel:S.__("Cancel console Shut Down")}),r.Dialog.warnButton({ariaLabel:S.__("Confirm console Shut Down")})]}).then(e=>!!e.button.accept&&T.execute(_.shutdown,{activate:!1}).then(()=>(o.dispose(),!0)))},isEnabled:G}),T.addCommand(_.inject,{label:S.__("Inject some code in a console."),execute:e=>{const o=e.path;W.find(n=>{var t;return(null===(t=n.console.sessionContext.session)||void 0===t?void 0:t.path)===o&&(!1!==e.activate&&j.activateById(n.id),n.console.inject(e.code,e.metadata),!0)})},isEnabled:G}),T.addCommand(_.changeKernel,{label:S.__("Change Kernel…"),execute:e=>{const o=J(e);if(o)return R.selectKernel(o.console.sessionContext)},isEnabled:G}),T.addCommand(_.getKernel,{label:S.__("Get Kernel"),execute:e=>{var o;const n=J({activate:!1,...e});if(n)return null===(o=n.sessionContext.session)||void 0===o?void 0:o.kernel},isEnabled:G});const Q=[_.create],V=()=>{Object.values(_).filter(e=>!Q.includes(e)).forEach(o=>e.commands.notifyCommandChanged(o))};W.currentChanged.connect(V),null===(E=j.currentChanged)||void 0===E||E.connect(V),u&&[_.create,_.linebreak,_.clear,_.runUnforced,_.runForced,_.restart,_.interrupt,_.changeKernel,_.closeAndShutdown].forEach(e=>{u.addItem({command:e,category:B,args:{isPalette:!0}})}),d&&(d.fileMenu.closeAndCleaners.add({id:_.closeAndShutdown,isEnabled:G}),d.kernelMenu.kernelUsers.changeKernel.add({id:_.changeKernel,isEnabled:G}),d.kernelMenu.kernelUsers.clearWidget.add({id:_.clear,isEnabled:G}),d.kernelMenu.kernelUsers.interruptKernel.add({id:_.interrupt,isEnabled:G}),d.kernelMenu.kernelUsers.restartKernel.add({id:_.restart,isEnabled:G}),d.kernelMenu.kernelUsers.shutdownKernel.add({id:_.shutdown,isEnabled:G}),d.runMenu.codeRunners.run.add({id:_.runForced,isEnabled:G}),d.editMenu.clearers.clearCurrent.add({id:_.clear,isEnabled:G}),d.editMenu.undoers.redo.add({id:_.redo,isEnabled:G}),d.editMenu.undoers.undo.add({id:_.undo,isEnabled:G}),d.helpMenu.getKernel.add({id:_.getKernel,isEnabled:G}));const X={notebook:S.__("Execute with Shift+Enter"),terminal:S.__("Execute with Enter")};return T.addCommand(_.interactionMode,{label:e=>{var o;return null!==(o=X[e.interactionMode])&&void 0!==o?o:"Set the console interaction mode."},execute:async e=>{try{await l.set(K,"interactionMode",e.interactionMode)}catch(e){console.error(`Failed to set ${K}:keyMap - ${e.message}`)}},isToggled:e=>e.interactionMode===q}),W},autoStart:!0},E={id:"@jupyterlab/console-extension:factory",description:"Provides the console widget content factory.",provides:a.ConsolePanel.IContentFactory,requires:[s.IEditorServices],autoStart:!0,activate:(e,o)=>{const n=o.factoryService.newInlineEditor;return new a.ConsolePanel.ContentFactory({editorFactory:n})}},P={id:"@jupyterlab/console-extension:kernel-status",description:"Adds the console to the kernel status indicator model.",autoStart:!0,requires:[a.IConsoleTracker,r.IKernelStatusModel],activate:(e,o,n)=>{n.addSessionProvider(e=>e&&o.has(e)?e.sessionContext:null)}},S={id:"@jupyterlab/console-extension:cursor-position",description:"Adds the console to the code editor cursor position model.",autoStart:!0,requires:[a.IConsoleTracker,s.IPositionModel],activate:(e,o,n)=>{let t=null;n.addEditorProvider(async e=>{let r=null;if(e!==t){if(null==t||t.console.promptCellCreated.disconnect(n.update),t=null,e&&o.has(e)){e.console.promptCellCreated.connect(n.update);const o=e.console.promptCell;r=null,o&&(await o.ready,r=o.editor),t=e}}else if(e){const o=e.console.promptCell;r=null,o&&(await o.ready,r=o.editor)}return r})}},M=[E,I,k,P,S,{id:"@jupyterlab/console-extension:completer",description:"Adds completion to the console.",autoStart:!0,requires:[a.IConsoleTracker],optional:[l.ICompletionProviderManager,m.ITranslator,r.ISanitizer],activate:function(e,o,n,t,s){if(!n)return;const l=(null!=t?t:m.nullTranslator).load("jupyterlab"),a=null!=s?s:new r.Sanitizer;e.commands.addCommand(_.invokeCompleter,{label:l.__("Display the completion helper."),execute:()=>{const e=o.currentWidget&&o.currentWidget.id;if(e)return n.invoke(e)}}),e.commands.addCommand(_.selectCompleter,{label:l.__("Select the completion suggestion."),execute:()=>{const e=o.currentWidget&&o.currentWidget.id;if(e)return n.select(e)}}),e.commands.addKeyBinding({command:_.selectCompleter,keys:["Enter"],selector:".jp-ConsolePanel .jp-mod-completer-active"});const i=async(e,o)=>{var t,r;const s={editor:null!==(r=null===(t=o.console.promptCell)||void 0===t?void 0:t.editor)&&void 0!==r?r:null,session:o.console.sessionContext.session,widget:o};await n.updateCompleter(s),o.console.promptCellCreated.connect((e,t)=>{const r={editor:t.editor,session:e.sessionContext.session,widget:o,sanitzer:a};n.updateCompleter(r).catch(console.error)}),o.console.sessionContext.sessionChanged.connect(()=>{var e,t;const r={editor:null!==(t=null===(e=o.console.promptCell)||void 0===e?void 0:e.editor)&&void 0!==t?t:null,session:o.console.sessionContext.session,widget:o,sanitizer:a};n.updateCompleter(r).catch(console.error)})};o.widgetAdded.connect(i),n.activeProvidersChanged.connect(()=>{o.forEach(e=>{i(0,e).catch(e=>console.error(e))})})}},w]}}]);
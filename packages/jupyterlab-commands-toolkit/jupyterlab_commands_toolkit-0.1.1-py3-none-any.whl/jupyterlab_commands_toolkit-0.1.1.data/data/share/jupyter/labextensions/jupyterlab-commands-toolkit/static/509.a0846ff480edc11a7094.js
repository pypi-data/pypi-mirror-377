"use strict";(self.webpackChunkjupyterlab_commands_toolkit=self.webpackChunkjupyterlab_commands_toolkit||[]).push([[509],{509:(t,e,s)=>{s.r(e),s.d(e,{default:()=>o});const o={id:"jupyterlab-commands-toolkit:plugin",description:"A Jupyter extension that provides an AI toolkit for JupyterLab commands.",autoStart:!0,requires:[s(51).IEventListener],activate:(t,e)=>{console.log("JupyterLab extension jupyterlab-commands-toolkit is activated 2342521263!");const{commands:s}=t;e.addListener("https://events.jupyter.org/jupyterlab_command_toolkit/lab_command/v1",async(e,s,o)=>{var a,i,n,c;const l=o,d={requestId:l.requestId||"",success:!1};try{const e=await t.commands.execute(l.name,l.args);let s;if(d.success=!0,e&&"object"==typeof e&&((null===(i=null===(a=e.constructor)||void 0===a?void 0:a.name)||void 0===i?void 0:i.includes("Widget"))||e.id))s={type:(null===(n=e.constructor)||void 0===n?void 0:n.name)||"Widget",id:e.id,title:(null===(c=e.title)||void 0===c?void 0:c.label)||e.title,className:e.className};else try{s=JSON.parse(JSON.stringify(e))}catch(t){s=e?"[Complex object - cannot serialize]":"Command executed successfully"}d.result=s}catch(t){d.success=!1,d.error=t instanceof Error?t.message:String(t)}l.requestId&&e.emit({schema_id:"https://events.jupyter.org/jupyterlab_command_toolkit/lab_command_result/v1",version:"1",data:d})}),s.addCommand("jupyterlab-commands-toolkit:list-all-commands",{label:"List All Commands",describedBy:{args:{}},execute:async()=>{const t=[],e=s.listCommands();for(const o of e){const e=await s.describedBy(o),a=s.label(o),i=s.caption(o),n=s.usage(o);t.push({id:o,label:a||void 0,caption:i||void 0,description:n||void 0,args:(null==e?void 0:e.args)||void 0})}return t}})}}}}]);
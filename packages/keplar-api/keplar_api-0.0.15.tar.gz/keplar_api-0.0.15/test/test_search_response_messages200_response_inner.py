# coding: utf-8

"""
    Fastify Template API

    API documentation using Swagger

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from keplar_api.models.search_response_messages200_response_inner import SearchResponseMessages200ResponseInner

class TestSearchResponseMessages200ResponseInner(unittest.TestCase):
    """SearchResponseMessages200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchResponseMessages200ResponseInner:
        """Test SearchResponseMessages200ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchResponseMessages200ResponseInner`
        """
        model = SearchResponseMessages200ResponseInner()
        if include_optional:
            return SearchResponseMessages200ResponseInner(
                call_id = '',
                index = 1.337,
                time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                duration = 1.337,
                seconds_from_start = 1.337,
                message = '',
                role = '',
                recording_url = ''
            )
        else:
            return SearchResponseMessages200ResponseInner(
                call_id = '',
                index = 1.337,
                time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                duration = 1.337,
                seconds_from_start = 1.337,
                message = '',
                role = '',
        )
        """

    def testSearchResponseMessages200ResponseInner(self):
        """Test SearchResponseMessages200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

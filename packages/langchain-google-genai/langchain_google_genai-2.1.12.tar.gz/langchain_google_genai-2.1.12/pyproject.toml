[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[project]
name = "langchain-google-genai"
version = "2.1.12"
description = "An integration package connecting Google's genai package and LangChain"
authors = []
requires-python = ">=3.9"
readme = "README.md"
repository = "https://github.com/langchain-ai/langchain-google"
dependencies = [
    "langchain-core>=0.3.75",
    "google-ai-generativelanguage>=0.7,<1",
    "pydantic>=2,<3",
    "filetype>=1.2,<2",
]

[project.license]
text = "MIT"

[project.urls]
"Source Code" = "https://github.com/langchain-ai/langchain-google/tree/main/libs/genai"
"Release Notes" = "https://github.com/langchain-ai/langchain-google/releases"
repository = "https://github.com/langchain-ai/langchain-google"

[dependency-groups]
lint = [
    "ruff<0.13,>=0.12.2",
]
typing = [
    "mypy<1.19,>=1.18.1",
    "types-requests>=2.31,<3",
    "types-google-cloud-ndb>=2.2.0.1,<3",
    "types-protobuf>=4.24.0.20240302,<5",
    "numpy>=1.26.2",
]
test = [
    "pytest>=8.4,<9",
    "freezegun>=1.5,<2",
    "pytest-mock>=3.14,<4",
    "syrupy>=4.9,<5",
    "pytest-watcher>=0.4,<1",
    "pytest-asyncio>=0.21,<1",
    "pytest-retry>=1.7,<2",
    "pytest-socket>=0.7,<1",
    "numpy>=1.26.4; python_version<'3.13'",
    "numpy>=2.1.0; python_version>='3.13'",
    "langchain-tests>=0.3,<1",
]
test_integration = [
    "pytest>=8.4,<9",
]
dev = []

[tool.ruff]
fix = true

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "E",
    "F",
    "I",
]
ignore = [
    "C90",
    "COM812",
    "CPY",
    "FIX002",
    "ISC001",
    "PERF203",
    "PLR09",
    "RUF012",
    "TC001",
    "TC002",
    "TC003",
    "TD002",
    "TD003",
    "UP007",
    "UP006",
    "UP038",
    "UP045",
    "FA100",
    "ANN401",
    "BLE",
    "DOC",
    "ERA",
    "PLR2004",
]
unfixable = [
    "B028",
    "PLW1510",
]

[tool.ruff.lint.pydocstyle]
convention = "google"
ignore-var-parameters = true

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "D1",
    "S",
    "SLF",
    "ARG001",
    "PGH003",
    "PT011",
]
"scripts/**" = [
    "INP",
    "S",
]

[tool.mypy]
plugins = [
    "pydantic.mypy",
]
strict = true
disallow_untyped_defs = true
disallow_any_generics = false
warn_return_any = false

[tool.coverage.run]
omit = [
    "tests/*",
]

[tool.pytest.ini_options]
markers = [
    "requires: mark tests as requiring a specific library",
    "asyncio: mark tests as requiring asyncio",
    "compile: mark placeholder test used to compile integration tests without running them",
]
asyncio_mode = "auto"

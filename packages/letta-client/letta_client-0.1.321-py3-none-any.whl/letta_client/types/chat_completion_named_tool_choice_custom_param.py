# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .openai_types_chat_chat_completion_named_tool_choice_custom_param_custom import (
    OpenaiTypesChatChatCompletionNamedToolChoiceCustomParamCustom,
)


class ChatCompletionNamedToolChoiceCustomParam(UncheckedBaseModel):
    custom: OpenaiTypesChatChatCompletionNamedToolChoiceCustomParamCustom
    type: typing.Literal["custom"] = "custom"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

{"version":3,"file":"main.DashboardItems_SiteContext.d1fc47304004199bf359.js","mappings":"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","sources":["webpack://lino_react/./lino_react/react/components/DashboardItems.jsx"],"sourcesContent":["export const name = \"DashboardItems\";\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { RegisterImportPool, Component } from \"./Base\";\n\nlet ex; const exModulePromises = ex = {\n    lm: import(/* webpackChunkName: \"LoadingMask_DashboardItems\" */\"./LoadingMask\"),\n    prButton: import(/* webpackChunkName: \"prButton_DashboardItems\" */\"primereact/button\"),\n    queryString: import(/* webpackChunkName: \"queryString_DashboardItems\" */\"query-string\"),\n};RegisterImportPool(ex);\n\n\nclass DashboardItem extends Component {\n    static requiredModules = ['lm', 'queryString', 'prButton'];\n    static iPool = ex;\n\n    static propTypes = {\n        itemIndex: (props, ...args) => {\n            if (!props.dashboardMain) return PropTypes.number.isRequired(props, ...args);\n        },\n        dashboardMain: PropTypes.bool.isRequired,\n        APP: PropTypes.object.isRequired\n    }\n    static defaultProps = {\n        dashboardMain: false\n    }\n    async prepare() {\n        super.prepare();\n        this.ex.queryString = this.ex.queryString.default;\n    }\n    constructor(props) {\n        super(props);\n        this.state = {...this.state, data: null, mask: true, actorID: null}\n        this.reload = this.reloadData;\n    }\n\n    onReady() {\n        this.reloadData();\n    }\n\n    componentWillUnmount() {\n        delete this.props.APP.URLContext.globals.panels[this.state.actorID];\n    }\n\n    liveUpdate = (params) => this.reload();\n\n    /**\n    * @param {bool} selfInit self-initiated reload through the refresh button\n    */\n    reloadData = (selfInit) => {\n        this.setState({mask: true});\n        const query = {fmt: 'json'}, { APP } = this.props,\n            { actionHandler } = APP.URLContext;\n        actionHandler.commonParams(query);\n        const path = this.props.dashboardMain ? 'api/main_html' : `dashboard/${this.props.itemIndex}`;\n        actionHandler.silentFetch({\n            path: `${path}?${this.ex.queryString.stringify(query)}`,\n            signal: actionHandler.abortController.signal\n        }).then((data) => {\n            if (data.version_mismatch && (this.props.itemIndex === 0 || selfInit)) {\n                APP.reload();\n                return;\n            }\n            this.setState({data: data.html, mask: false, actorID: data.actorID});\n        })\n    }\n\n    render() {\n        if (!this.state.ready) return null;\n        const {data} = this.state;\n        if (!this.props.APP.URLContext.filled(data)) return null;\n        return <this.ex.lm.LoadingMask mask={this.state.mask}>\n            {!this.props.dashboardMain && <this.ex.prButton.Button\n                icon=\"pi pi-refresh\" style={{float: 'right'}}\n                onClick={(e) => {\n                    this.reloadData(true);\n                }}/>}\n            <div dangerouslySetInnerHTML={{__html: data}}/>\n        </this.ex.lm.LoadingMask>\n    }\n}\n\n\nexport class DashboardItems extends Component {\n    static propTypes = {\n        APP: PropTypes.object.isRequired\n    };\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...this.state,\n            items: Array((props.APP.state.user_settings.dashboard_items || 0) + 1)\n        };\n        this.reloadData = this.reload;\n    }\n\n    reload() {\n        this.props.APP.URLContext.actionHandler.clearRequestPool();\n        this.state.items.forEach((item, i) => {\n            item.reload()\n        });\n    }\n\n    render() {\n        if (!this.state.ready) return null;\n        return <div>\n            {[...this.state.items.keys()].map(i =>\n                <DashboardItem\n                    dashboardMain={i === 0} itemIndex={i - 1} APP={this.props.APP}\n                    key={i} ref={ref => this.state.items[i] = ref}/>\n            )}\n        </div>\n    }\n}\n"],"names":["ex","name","lm","prButton","queryString","RegisterImportPool","DashboardItem","_Component","props","_this","_classCallCheck","_callSuper","_initialiseProps","call","state","_objectSpread","data","mask","actorID","reload","reloadData","_inherits","_createClass","key","value","_prepare","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","_superPropGet","this","stop","apply","arguments","APP","URLContext","globals","panels","_this2","ready","filled","React","LoadingMask","dashboardMain","Button","icon","style","float","onClick","e","dangerouslySetInnerHTML","__html","Component","requiredModules","iPool","propTypes","itemIndex","_PropTypes$number","_len","length","args","Array","_key","PropTypes","isRequired","concat","defaultProps","_this5","liveUpdate","params","selfInit","setState","query","fmt","actionHandler","commonParams","path","silentFetch","stringify","signal","abortController","then","version_mismatch","html","DashboardItems","_Component2","_this3","items","user_settings","dashboard_items","clearRequestPool","forEach","item","i","_this4","_toConsumableArray","keys","map","ref"],"sourceRoot":""}
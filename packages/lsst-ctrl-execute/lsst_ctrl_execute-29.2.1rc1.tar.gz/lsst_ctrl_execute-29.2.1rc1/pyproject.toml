[project]
name = "lsst-ctrl-execute"
requires-python = ">=3.11.0,<3.13.0"
description = "Utilities for executing and managing workloads."
license = {text = "BSD 3-Clause License"}
authors = [
    {name="Rubin Observatory Data Management", email="dm-admin@lists.lsst.org"},
]
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Astronomy",
]
keywords = ["lsst"]
dependencies = [
    "lsst-ctrl-bps-htcondor>=28.2024.5000; sys_platform == 'linux'",
    "lsst-pex-config",
    "lsst-resources",
    "lsst-utils",
]
dynamic = ["version"]

[dependency-groups]
dev = [
    "pre-commit>=4.0.1",
    "pytest",
    "pytest-xdist",
    "pytest-cov",
]

[project.urls]
"Homepage" = "https://github.com/lsst/ctrl_execute"

[project.scripts]
"allocateNodes.py" = "lsst.ctrl.execute.libexec.allocateNodes:main"
"dagIdInfo.py" = "lsst.ctrl.execute.libexec.dagIdInfo:main"
"qdelete.py" = "lsst.ctrl.execute.libexec.qdelete:main"
"qstatus.py" = "lsst.ctrl.execute.libexec.qstatus:main"

[build-system]
requires = ["hatchling", "lsst-versions >= 1.6.0"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "lsst"

[tool.hatch.build.targets.wheel]
packages = ["python/lsst"]

[tool.black]
line-length = 110
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 110
known_first_party = ["lsst"]

[tool.ruff]
line-length = 110
target-version = "py311"
exclude = [
    "__init__.py",
]

[tool.ruff.lint]
ignore = [
    "N802",
    "N803",
    "N806",
    "N812",
    "N815",
    "N816",
    "N999",
    "D107",
    "D105",
    "D102",
    "D104",
    "D100",
    "D200",
    "D205",
    "D400",
]
select = [
    "E",  # pycodestyle
    "F",  # pycodestyle
    "N",  # pep8-naming
    "W",  # pycodestyle
    "UP",  # pyupgrade
    "I",  # isort
    "RUF022",  # sort __all__
]

[tool.ruff.lint.isort]
known-first-party = ["lsst"]

[tool.ruff.lint.pycodestyle]
max-doc-length = 79

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
docstring-code-format = true
# Formatter does not know about indenting.
docstring-code-line-length = 69

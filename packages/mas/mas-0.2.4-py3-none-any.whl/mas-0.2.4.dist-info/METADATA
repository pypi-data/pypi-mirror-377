Metadata-Version: 2.4
Name: mas
Version: 0.2.4
Summary: MAS is a Python library for automated trading and backtesting on MetaTrader 5 with KPI reports and dynamic visualization.
Project-URL: Homepage, https://mindaismart.com/
Project-URL: Register, https://mas.mindaismart.com/
Project-URL: AI Trading Assistant, https://mindaismart.com/product_ai
Project-URL: Documentation, https://doc.mindaismart.com/
Author-email: Sam <mas@mindaismart.com>
License: # LICENSE-API
        
        ## üìú API Terms of Use
        
        ### 1. Introduction
        
        These API Terms of Use (hereinafter referred to as "Terms") are established by Mas Intelligent Technology Ltd. (hereinafter referred to as "the Company") and apply to all individuals, corporations, or entities (hereinafter referred to as "Users") who use the API services provided by the Company.
        
        By accessing or using the API, Users acknowledge that they have read, understood, and agreed to these Terms.
        
        ### 2. License and Scope of Use
        
        * **License Type**: Non-exclusive, non-transferable, and revocable.
        * **Prohibited Activities**:
        
          * Using the API for illegal, improper, or unauthorized purposes.
          * Engaging in high-frequency trading (HFT) or activities that affect market fairness.
          * Reverse engineering, reselling, or redistributing the API.
          * Unauthorized access to or modification of data.
          * Activities causing system overload or interfering with other users.
        
        ### 3. API Key Management
        
        * Users must register and obtain an API key.
        * API keys must be kept confidential. If compromised, Users must notify the Company immediately.
        * The Company reserves the right to limit or revoke API access based on security assessments.
        
        ### 4. Billing and Fees
        
        * The API provides both free and paid plans.
        * Access may be suspended for overdue payments.
        * Invoices can be issued upon request.
        
        ### 5. Data Privacy and Protection
        
        * Users must comply with GDPR, CCPA, and other applicable data protection regulations.
        * API activity logs may be stored for compliance and security purposes.
        * Users may request data deletion by contacting support.
        
        ### 6. Risk and Disclaimer
        
        * The API is provided **"as is"** without any warranties, express or implied.
        * Market data provided via the API is for reference only and does not constitute investment advice.
        * Executable files (EXE) generated through the API are based on user strategies; the Company does not guarantee correct execution or bear responsibility for financial losses.
        * Users are responsible for thorough backtesting and simulation before using strategies in live trading and assume all associated risks.
        
        ### 7. Termination and Suspension
        
        * The Company may immediately terminate API access if these Terms are violated.
        * Users may terminate usage at any time; payments made are non-refundable.
        * The Company may suspend the API for maintenance or security concerns without prior notice.
        
        ### 8. Governing Law and Jurisdiction
        
        * These Terms are governed by the laws of the Republic of China (Taiwan).
        * In the event of disputes, the Taipei District Court of Taiwan shall be the court of first instance.
        
        ### 9. Amendments
        
        * The Company reserves the right to modify these Terms at any time.
        * Significant changes will be announced via the official website or email.
        * Continued use of the API constitutes acceptance of the revised Terms.
        
        ---
        
        ¬© 2025 Mas Intelligent Technology Ltd.
License-File: LICENSE
Keywords: Algorithmic trading,Automated Trading,Backtesting,Forex,KPI Reports,MT5,MetaTrader5,Quantitative Trading
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Financial and Insurance Industry
Classifier: Intended Audience :: Science/Research
Classifier: License :: Other/Proprietary License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Office/Business :: Financial :: Investment
Requires-Python: >=3.8
Requires-Dist: matplotlib>=3.4.0
Requires-Dist: metatrader5>=5.0.37
Requires-Dist: numpy>=1.21.0
Requires-Dist: pandas>=1.3.0
Description-Content-Type: text/markdown

# MAS Trading Library

[![PyPI version](https://img.shields.io/pypi/v/mas.svg)](https://pypi.org/project/mas/)
[![License](https://img.shields.io/github/license/yourname/mas-trading-lib.svg)](LICENSE)

> **PyPI Package Name:** `mas`
<!-- > **GitHub Repository:** `mas-trading-lib` -->

`mas` is a **Python trading library** built specifically for **MetaTrader 5 (MT5)** to quickly build, backtest, and deploy fully automated trading strategies.
It supports **real-time and historical market data access, order execution, strategy backtesting, static KPI reports, and dynamic trade visualization**, and can be integrated with **WinForm GUI desktop applications**.

This library is ideal for **Forex trading, Gold (XAUUSD), Indices, Stocks, and Cryptocurrencies**, offering a complete workflow for **quantitative traders, financial engineers, and automated strategy developers**. With the built-in **AI Trading Assistant**, even non-programmers can easily generate strategies and backtest reports.

---

## üìà Key Features

* **MetaTrader 5 Python API Integration**: Fast access to MT5 real-time and historical market data.
* **Cross-Market Support**: Works for Forex, Gold, Indices, and Cryptocurrencies.
* **Full Automated Trading Workflow**: From data ‚Üí strategy ‚Üí backtest ‚Üí KPI report ‚Üí live deployment.
* **AI Strategy Generator**: Lowers the barrier to entry for automated trading by generating strategies quickly.
* **Dynamic Trading Visualization**: Displays trade signals, equity curves, and position changes in real-time.
* **KPI & Risk Reports**: Includes Sharpe Ratio, Profit Factor, Win Rate, Maximum Drawdown, and more.
* **Desktop App Integration**: Supports WinForm GUI for user-friendly desktop applications.
* **Highly Modular**: Designed for scalable quantitative trading systems and financial data analysis.

> üìå **SEO Keywords**: MetaTrader5 Python Library, MT5 API, Automated Trading, Quantitative Trading, Backtesting, KPI Report, Forex Trading Bot, Algorithmic Trading SDK, AI Trading Assistant, MAS Trading Library, Python Quant Framework.

---

## üì¶ Installation

### 1Ô∏è‚É£ Register an Account (Required)

Before installing and using `mas`, you must register on the official website to activate API and backtesting features.

üîó [Register on the Official Website(Free)](https://mas.mindaismart.com/authentication/sign-up)

### 2Ô∏è‚É£ Install the Python Package

```bash
pip install mas
```

### 3Ô∏è‚É£ Install the MAS Data Analysis & Backtest Tool

This project requires the **MAS Backtest Tool** to generate complete KPI reports and dynamic analytics.

üì• [Download MAS Backtest Tool](https://mindaismart.com/product_lib)

After installation, ensure the tool is running and log in with your registered account. `mas` will then be able to connect and generate reports properly.

---

## üöÄ Quick Start

```python
import mas

class MASStrategy(mas):
    def __init__(self, toggle):
        super().__init__()
        self.index = 0
        self.hold = False
        self.ma = 0
        self.toggle = toggle
        self.order_id = None

    def receive_bars(self, symbol, data, is_end):
        single = self.index % self.ma

        if single == 0:
            if not self.hold:
                self.order_id = self.send_order({
                    "symbol": "EURUSD",
                    "order_type": "buy",
                    "volume": 0.1,
                    "backtest_toggle": self.toggle
                })
                self.hold = True
            else:
                self.send_order({
                    "symbol": "EURUSD",
                    "order_type": "sell",
                    "order_id": self.order_id,
                    "volume": 0.1,
                    "backtest_toggle": self.toggle
                })
                self.hold = False

        self.index += 1
        if is_end:
            data = self.generate_data_report()
            data_source = data.get("data")
            print(data_source)
            self.generate_kpi_report()
            self.generate_trade_chart()

def main():
    try:
        toggle = True
        mas_c = MASStrategy(toggle)
        params = {
            "account": YOUR_ACCOUNT,
            "password": YOUR_PASSWORD,
            "server": YOUR_SERVER
        }

        mas_c.login(params)
        params = {
            "symbol": "EURUSD",
            "from": '2020-01-01',
            "to": '2024-12-31',
            "timeframe": "D1",
            "backtest_toggle": mas_c.toggle
        }
        mas_c.ma = 50
        df = mas_c.subscribe_bars(params)
    except Exception as e:
        return {
            'status': False,
            'error': str(e)
        }

if __name__ == "__main__":
    main()
```

---

## üåê Online Documentation

üìñ [View Full Documentation](https://doc.mindaismart.com/)

![Online Documentation Preview](https://github.com/ma2750335/mas-img/blob/main/lib/lib_1.jpg?raw=true)

---

## üìä Report Previews

### Full Data Report

![Full Data Report Example](https://github.com/ma2750335/mas-img/blob/main/lib/lib_4.jpg?raw=true)

### KPI Report

![KPI Report Example](https://github.com/ma2750335/mas-img/blob/main/lib/lib_5.jpg?raw=true)

### Trade Signal Visualization

![Trade Signal Example](https://github.com/ma2750335/mas-img/blob/main/lib/lib_8.jpg?raw=true)

> üìå **Note**: These images are for demonstration purposes only. Actual reports will be generated based on your strategies and backtest data.

---

## üåç Official Website & AI Trading Assistant

üîó [Mas Intelligent Technology Official Website](https://mindaismart.com/)
ü§ñ [Use AI Trading Assistant (No Coding Required)](https://mindaismart.com/product_ai)

### AI Trading Workflow Previews

#### Input Your Strategy Ideas

![Input Strategy Ideas](https://github.com/ma2750335/mas-img/blob/main/ai/ai_1.jpg?raw=true)

#### Strategy Example Assistance

![Strategy Example Assistance](https://github.com/ma2750335/mas-img/blob/main/ai/ai_2.jpg?raw=true)

#### Confirm and Refine Logic

![Confirm and Refine Logic](https://github.com/ma2750335/mas-img/blob/main/ai/ai_3.jpg?raw=true)

#### Perform Data Analysis & Generate Reports

![Data Analysis & Reports](https://github.com/ma2750335/mas-img/blob/main/ai/ai_4.jpg?raw=true)

---

## üìö Resources

* [Official Website](https://mindaismart.com/)
* [Official Website Registration](https://mas.mindaismart.com/authentication/sign-up)
* [Documentation](https://doc.mindaismart.com/)
* [Download MAS Backtest Tool](https://mindaismart.com/product_lib)
<!-- * [GitHub](https://github.com/ma2750335/mas-trading-lib) -->
* [PyPI](https://pypi.org/project/mas/)

---

## üìÑ License

[API-License](https://mindaismart.com/terms_api)

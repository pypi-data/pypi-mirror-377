name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .[dev]
        
    - name: Format check with black
      run: |
        black --check .

    - name: Sort imports check with isort
      run: |
        isort --check-only .

    - name: Lint with ruff
      run: |
        ruff check .
        
    - name: Type check with mypy
      run: |
        mypy . --ignore-missing-imports
        
    - name: Test import
      run: |
        python -c "import mcp_server_glm_vision; print('Import successful')"
        
    - name: Test entry point
      run: |
        python -c "from mcp_server_glm_vision import mcp; print('MCP server accessible')"

    - name: Test server startup
      run: |
        python -c "import mcp_server_glm_vision; print('Server module can be imported')"

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: Build package
      run: python -m build
      
    - name: Check package
      run: twine check dist/*
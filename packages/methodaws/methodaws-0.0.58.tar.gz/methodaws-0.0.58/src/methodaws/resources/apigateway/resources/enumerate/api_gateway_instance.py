# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
from .api_gateway_identification_info import ApiGatewayIdentificationInfo
from .api_gateway_configuration_info import ApiGatewayConfigurationInfo
import typing
from .api_gateway_resource_info import ApiGatewayResourceInfo
from .access_log_settings import AccessLogSettings
import pydantic
from .cors_configuration import CorsConfiguration
from .certificate import Certificate
from .api_gateway_security import ApiGatewaySecurity
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class ApiGatewayInstance(UniversalBaseModel):
    identification: ApiGatewayIdentificationInfo
    configuration: ApiGatewayConfigurationInfo
    resources: typing.Optional[ApiGatewayResourceInfo] = None
    access_log_settings: typing.Optional[AccessLogSettings] = pydantic.Field(alias="accessLogSettings", default=None)
    cors_configuration: typing.Optional[CorsConfiguration] = pydantic.Field(alias="corsConfiguration", default=None)
    client_certificate_id: typing.Optional[str] = pydantic.Field(alias="clientCertificateId", default=None)
    certificates: typing.Optional[typing.List[Certificate]] = None
    security: typing.Optional[ApiGatewaySecurity] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow

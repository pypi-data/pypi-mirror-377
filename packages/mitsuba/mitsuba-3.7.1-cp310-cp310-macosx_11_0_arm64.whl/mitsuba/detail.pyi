from collections.abc import Callable


class TransformWrapper:
    """
    Helper functor that wraps Transform3f/Transform4f methods so that the following two
    calling conventions are equivalent:

     - Transform4f().translate().scale()...
     - Transform4f.translate().scale()...
    """

    def __init__(self, method_name, original_method): ...

    def __get__(self, obj, objtype=None): ...

def patch_transform(transform_cls): ...

def add_variant_callback(arg: Callable, /) -> None: ...

def remove_variant_callback(arg: Callable, /) -> None: ...

def clear_variant_callbacks() -> None: ...

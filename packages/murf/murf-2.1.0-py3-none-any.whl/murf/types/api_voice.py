# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
import pydantic
import typing_extensions
from ..core.serialization import FieldMetadata
from .api_voice_gender import ApiVoiceGender
from .style_details import StyleDetails
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ApiVoice(UncheckedBaseModel):
    accent: typing.Optional[str] = pydantic.Field(default=None)
    """
    This field has been deprecated. Please refer to 'supportedLocales.detail' instead.
    """

    available_styles: typing_extensions.Annotated[
        typing.Optional[typing.List[str]], FieldMetadata(alias="availableStyles")
    ] = pydantic.Field(default=None)
    """
    This field has been deprecated. Please refer to 'supportedLocales.availableStyles' instead.
    """

    description: typing.Optional[str] = None
    display_language: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="displayLanguage")] = (
        pydantic.Field(default=None)
    )
    """
    This field has been deprecated. Please refer to 'supportedLocales.detail' instead.
    """

    display_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="displayName")] = None
    gender: typing.Optional[ApiVoiceGender] = None
    locale: typing.Optional[str] = None
    supported_locales: typing_extensions.Annotated[
        typing.Optional[typing.Dict[str, StyleDetails]], FieldMetadata(alias="supportedLocales")
    ] = None
    voice_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="voiceId")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

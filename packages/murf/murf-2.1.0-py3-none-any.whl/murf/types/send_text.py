# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import pydantic
import typing
from .send_text_voice_config import SendTextVoiceConfig
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class SendText(UncheckedBaseModel):
    text: str = pydantic.Field()
    """
    The text to convert to speech
    """

    context_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Optional context identifier
    """

    end: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Indicates if this is the end of the text stream (optional)
    """

    voice_config: typing.Optional[SendTextVoiceConfig] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

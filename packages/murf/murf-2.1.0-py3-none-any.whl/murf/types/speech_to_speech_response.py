# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import pydantic
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class SpeechToSpeechResponse(UncheckedBaseModel):
    audio_file: str = pydantic.Field()
    """
    The URL or path of the generated audio file.
    """

    audio_length_in_seconds: float = pydantic.Field()
    """
    Length of the generated audio in seconds.
    """

    encoded_audio: typing.Optional[str] = pydantic.Field(default=None)
    """
    Base64 encoded string of the generated audio. Used when audio is returned directly in the response.
    """

    remaining_character_count: int = pydantic.Field()
    """
    Remaining number of characters available for synthesis in the current billing cycle.
    """

    transcription: typing.Optional[str] = pydantic.Field(default=None)
    """
    Transcript of the generated audio, if transcription was requested.
    """

    warning: typing.Optional[str] = pydantic.Field(default=None)
    """
    Any warning or informational message related to the audio generation process.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

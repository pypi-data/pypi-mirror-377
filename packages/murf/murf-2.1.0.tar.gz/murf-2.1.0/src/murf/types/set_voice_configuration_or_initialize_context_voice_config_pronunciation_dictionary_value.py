# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
from .set_voice_configuration_or_initialize_context_voice_config_pronunciation_dictionary_value_type import (
    SetVoiceConfigurationOrInitializeContextVoiceConfigPronunciationDictionaryValueType,
)
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class SetVoiceConfigurationOrInitializeContextVoiceConfigPronunciationDictionaryValue(UncheckedBaseModel):
    type: SetVoiceConfigurationOrInitializeContextVoiceConfigPronunciationDictionaryValueType = pydantic.Field()
    """
    Type of pronunciation (IPA or SAY_AS)
    """

    pronunciation: str = pydantic.Field()
    """
    The actual pronunciation string
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
from .tts_request_both_payload_voice_config import TtsRequestBothPayloadVoiceConfig
import pydantic
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class TtsRequestBothPayload(UncheckedBaseModel):
    voice_config: TtsRequestBothPayloadVoiceConfig
    text: str = pydantic.Field()
    """
    The text to convert to speech
    """

    context_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Optional context identifier
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

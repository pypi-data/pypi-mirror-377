# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing_extensions
import typing
from ..core.serialization import FieldMetadata
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class WordDurationResponse(UncheckedBaseModel):
    end_ms: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="endMs")] = None
    pitch_scale_maximum: typing_extensions.Annotated[
        typing.Optional[float], FieldMetadata(alias="pitchScaleMaximum")
    ] = pydantic.Field(default=None)
    """
    This field has been deprecated.
    """

    pitch_scale_minimum: typing_extensions.Annotated[
        typing.Optional[float], FieldMetadata(alias="pitchScaleMinimum")
    ] = pydantic.Field(default=None)
    """
    This field has been deprecated.
    """

    source_word_index: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="sourceWordIndex")] = (
        pydantic.Field(default=None)
    )
    """
    This field has been deprecated.
    """

    start_ms: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="startMs")] = None
    word: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "netstealth"
version = "0.1.0"
description = "Advanced stealth automation library with anti-detection browser control and proxy management"
authors = [
    { name = "NetStealth Contributors", email = "contributors@netstealth.io" }
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.8"
keywords = ["automation", "stealth", "browser", "proxy", "fingerprint", "anti-detection"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
    "Topic :: Internet :: Proxy Servers",
    "Topic :: Security",
]

dependencies = [
    "pydantic>=2.0.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
# Browser automation dependencies
browser = [
    "undetected-chromedriver>=3.5.0",
    "selenium>=4.15.0",
]

# Proxy management dependencies
proxy = [
    "mitmproxy>=10.0.0",
]

# Fingerprint management dependencies
fingerprint = [
    "tls-client>=1.0.0",
]

# Full functionality (all optional dependencies)
full = [
    "undetected-chromedriver>=3.5.0",
    "selenium>=4.15.0",
    "mitmproxy>=10.0.0",
    "tls-client>=1.0.0",
]

# Development dependencies
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "bump2version>=1.0.1",
    "build>=0.10.0",
    "twine>=4.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/netstealth/netstealth"
Repository = "https://github.com/netstealth/netstealth"
Documentation = "https://netstealth.readthedocs.io/"
Issues = "https://github.com/netstealth/netstealth/issues"

[project.scripts]
netstealth-check = "netstealth.utils.lazy_imports:print_dependency_status"

[tool.hatch.build.targets.wheel]
packages = ["netstealth"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "browser: marks tests that require browser dependencies",
    "proxy: marks tests that require proxy dependencies",
]

[tool.coverage.run]
source = ["netstealth"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true
omit = [
    "*/tests/*",
    "*/test_*.py",
]

[build-system]
requires = ["setuptools>=65", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nokta-ai"
version = "0.1.0"
description = "Turkish Diacritics Restoration with Neural Networks"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "nokta-ai contributors", email = "contributors@nokta-ai.org"}
]
keywords = ["turkish", "nlp", "neural-networks", "diacritics", "restoration"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]

dependencies = [
    "torch>=2.0.0",
    "numpy<2.0.0",
    "tqdm>=4.65.0",
    "pyyaml>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
data = [
    "requests>=2.28.0",
]

[project.urls]
Homepage = "https://github.com/armish/nokta-ai"
Repository = "https://github.com/armish/nokta-ai"
Documentation = "https://github.com/armish/nokta-ai#readme"
"Bug Tracker" = "https://github.com/armish/nokta-ai/issues"

[project.scripts]
nokta = "nokta_ai.cli.main:main"
nokta-train = "nokta_ai.cli.train_constrained:main"
nokta-restore = "nokta_ai.cli.main:restore_main"
nokta-evaluate = "nokta_ai.cli.evaluate_constrained:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["nokta_ai*"]

[tool.setuptools.package-data]
"nokta_ai" = ["*.yaml", "*.yml"]

[tool.black]
line-length = 88
target-version = ['py39']

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
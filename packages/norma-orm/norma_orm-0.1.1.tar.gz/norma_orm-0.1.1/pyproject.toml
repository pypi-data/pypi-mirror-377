[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "norma-orm"
version = "0.1.1"
authors = [
    {name = "Geoion", email = "eski.yin@gmail.com"},
]
description = "A modern Python ORM framework with dataclass support"
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
keywords = ["orm", "database", "dataclass", "pydantic", "postgresql", "sqlite", "mongodb", "cassandra", "CLI", "flask", "fastapi"]
dependencies = [
    "pydantic>=2.0.0",
    "typer>=0.9.0",
    "sqlalchemy>=2.0.0",
    "motor>=3.0.0",
    "pymongo>=4.0.0",
    "asyncpg>=0.28.0",
    "aiosqlite>=0.19.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "rich>=13.0.0",
    "watchdog>=3.0.0",  # For file watching in CLI
]
postgres = ["psycopg2-binary>=2.9.0"]
mysql = ["pymysql>=1.0.0"]
cassandra = ["cassandra-driver>=3.25.0"]
cli = ["rich>=13.0.0"]

[project.urls]
Homepage = "https://github.com/Geoion/Norma"
Documentation = "https://github.com/Geoion/Norma"
Repository = "https://github.com/Geoion/Norma.git"
"Bug Tracker" = "https://github.com/Geoion/Norma/issues"

[project.scripts]
norma = "norma.cli:app"

[tool.setuptools.packages.find]
include = ["norma*"]
exclude = ["tests*"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto" 
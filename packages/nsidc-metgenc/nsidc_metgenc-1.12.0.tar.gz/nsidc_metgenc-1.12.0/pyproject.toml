[tool.poetry]
name = "nsidc-metgenc"
version = "1.12.0"
description = "The nsidc-metgenc package enables data producers as well as Operations staff managing the data ingest workflow to create metadata files conforming to NASA's Common Metadata Repository UMM-G specification."
authors = ["National Snow and Ice Data Center (NSIDC) <nsidc@nsidc.org>"]
readme = "README.md"
package-mode = true
packages = [{include = "nsidc", from = "src"}, {include = "tests"}]

[tool.poetry.dependencies]
python = "^3.12"
click = "^8.1.7"
pyfiglet = "^1.0.2"
netCDF4 = "^1.6.5"
rich = "^13.7.1"
boto3 = "^1.35.22"
xarray = "^2024.09.0"
pyproj = "^3.7.0"
jsonschema = "^4.23.0"
check-jsonschema = "^0.29.4"
returns = "^0.23.0"
toolz = "^1.0.0"
funcy = "^2.0"
pandas = "^2.2.3"
isoduration = "^20.11.0"
shapely = "^2.0.6"
earthaccess = "^0.14.0"
geopandas = "^1.1.0"
alphashape = "^1.3.1"
concave-hull = "^0.0.9"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.2"
moto = {extras = ["all"], version = "^5.0.14"}
pytest-watcher = "^0.4.3"

[tool.poetry.group.dev.dependencies]
ruff = "^0.12.0"
mypy = "^1.11.1"
bump-my-version = "^1.2.1"
sphinx = "^8.1.3"
myst-parser = "^4.0.0"
matplotlib = "^3.10.3"
folium = "^0.20.0"
xarray = ">=2024.09.0"
pandas = "^2.3.0"
numpy = "^2.3.1"
geopandas = "^1.1.0"
shapely = "^2.1.1"
scipy = "^1.16.0"
netcdf4 = "^1.7.2"
requests = "^2.32.4"
beautifulsoup4 = "^4.13.4"

[tool.bumpversion]
current_version = "1.12.0"
parse = """(?x)
    (?P<major>0|[1-9]\\d*)\\.
    (?P<minor>0|[1-9]\\d*)\\.
    (?P<patch>0|[1-9]\\d*)
    (?:
        (?P<release>[a-zA-Z-]+)     # release-candidate label
        (?P<rc>0|[1-9]\\d*)        # release-candidate version number
    )?                              # release-candidate section is optional
"""
serialize = [
    "{major}.{minor}.{patch}{release}{rc}",
    "{major}.{minor}.{patch}",
]
search = "{current_version}"
replace = "{new_version}"
regex = true
ignore_missing_version = false
ignore_missing_files = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
commit_args = ""
setup_hooks = []
pre_commit_hooks = []
post_commit_hooks = []

[[tool.bumpversion.files]]
filename = "src/nsidc/metgen/__init__.py"

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
search = "UNRELEASED"
replace = "v{new_version} ({utcnow:%Y-%m-%d})"

[[tool.bumpversion.files]]
filename = "docs/source/conf.py"
search = "release = \"v{current_version}\""
replace = "release = \"v{new_version}\""

[[tool.bumpversion.files]]
filename = "docs/source/conf.py"
search = "version = \"v{current_version}\""
replace = "version = \"v{new_version}\""

[tool.bumpversion.parts.release]
values = ["rc", "release"]
optional_value = "release"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["E501"]

[tool.mypy]
files = ["src", "tests"]

[tool.pytest.ini_options]
pythonpath = ["src"]
addopts = [
    "--import-mode=importlib",
]

[tool.poetry.scripts]
metgenc = 'nsidc.metgen.cli:cli'
metgenc-lab-polygons = 'nsidc.metgen.lab.spatial_cli:cli'
metgenc-env = { reference = "scripts/metgenc-env.sh", type= "file" }
metgenc-integration-tests = 'tests.integration.run_integration_tests:main'
metgenc-lab-olvis1a = 'nsidc.metgen.lab.olvis1a_processor:main'

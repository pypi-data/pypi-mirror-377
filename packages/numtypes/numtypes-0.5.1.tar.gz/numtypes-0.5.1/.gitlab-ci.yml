stages:
  - verify
  - publish

variables:
  PYTHON_VERSION: "3.13"
  UV_VERSION: "0.8.4"
  UV_CACHE_DIR: "$CI_PROJECT_DIR/.cache/uv"
  PYPI_PROJECT_NAME: "numtypes"

.cache:
  cache:
    key: "$CI_COMMIT_REF_SLUG-python-${PYTHON_VERSION}"
    paths:
      - .cache/uv
      - .venv
    policy: pull-push

.base:
  image: ghcr.io/astral-sh/uv:${UV_VERSION}-python${PYTHON_VERSION}-bookworm-slim
  extends: .cache
  before_script:
    - uv sync

lint:
  stage: verify
  extends: .base
  script:
    - uv run ruff check .
    - uv run ruff format --check .
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_TAG'

type-check:
  stage: verify
  extends: .base
  script:
    - uv run pyright
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_TAG'

test:
  stage: verify
  extends: .base
  script:
    - uv run pytest -v
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_TAG'

publish:pypi:
  stage: publish
  extends: .base
  script:
    - if [ -z "$PYPI_API_TOKEN" ]; then echo "PYPI_API_TOKEN is not set. Can't publish to PyPI."; exit 1; fi
    - uv build --no-cache 
    - uv publish --token $PYPI_API_TOKEN
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'
  environment:
    name: pypi
    url: https://pypi.org/project/${PYPI_PROJECT_NAME}/
build-job:
  stage: build
  image: python:3.13-slim
  script:
    - apt update && apt install -y git
    - python -m pip install --upgrade build setuptools setuptools-scm
    - git fetch --tags
    - python -m build
  artifacts:
    paths:
      - "dist/"

publish-job:
  stage: deploy
  image: python:3.13-slim
  dependencies:
    - build-job
  environment:
    name: release
  only:
    - tags
  except:
    - branches
  id_tokens:
    PYPI_ID_TOKEN:
      aud: pypi
  script:
    # Install dependencies
    - apt update && apt install -y jq curl
    - python -m pip install -U twine id

    # Retrieve the OIDC token from GitLab CI/CD, and exchange it for a PyPI API token
    - oidc_token=$(python -m id PYPI)
    - resp=$(curl -X POST https://pypi.org/_/oidc/mint-token -d "{\"token\":\"${oidc_token}\"}")
    - api_token=$(jq --raw-output '.token' <<< "${resp}")

    # Upload to PyPI authenticating via the newly-minted token
    - twine upload -u __token__ -p "${api_token}" dist/*
    
CreateRelease:
  image: registry.gitlab.com/gitlab-org/cli:latest
  stage: deploy
  needs:
    - job: build-job
      artifacts: true
  before_script:
    - apk add --no-cache curl
  script:
    - |
      FILE=$(ls dist/oasis_gui-*.tar.gz)
      BASENAME=$(basename "$FILE")
      curl --header "JOB-TOKEN: $CI_JOB_TOKEN" \
           --upload-file "$FILE" \
           "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/oasis-gui/${CI_COMMIT_TAG}/'$BASENAME'"
  release:
    name: "Release $CI_COMMIT_TAG"
    tag_name: "$CI_COMMIT_TAG"
    description: "Automatically generated release for $CI_COMMIT_TAG"
    assets:
      links:
        - name: "OASIS-GUI Package"
          url: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/oasis-gui/${CI_COMMIT_TAG}/'$BASENAME'"
  rules:
    - if: '$CI_COMMIT_TAG'

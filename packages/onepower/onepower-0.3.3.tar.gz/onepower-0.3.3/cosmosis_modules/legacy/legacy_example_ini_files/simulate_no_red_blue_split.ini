
[runtime]
sampler = test
root = ${COSMOSIS_SRC_DIR}

[test]
save_dir=runs/test1/output
fatal-errors = T
fatal_errors = T

[DEFAULT]
nz_def = 6
zmin_def =  0.2
zmax_def = 1.2
nmass_def = 200
logmassmin_def = 9.0
logmassmax_def = 16.0
pipeline_path = halomodel_for_cosmosis/dev/v3

[pipeline]
quiet=F
timing=T
debug=T
modules = consistency camb halofit extrapolate hmf_and_halo_bias hod_red red_centrals_alignment red_satellites_alignment nfw_halo radial_satellite_alignment_red pk_red
values = runs/test1/values.ini
likelihoods =


[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=5000
feedback=0
zmin= 0.

[halofit]
file = cosmosis-standard-library/boltzmann/halofit_takahashi/halofit_interface.so
kmin=1e-5
kmax=500.0
nk=1000

[extrapolate]
file = cosmosis-standard-library/boltzmann/extrapolate/extrapolate_power.py
kmax = 1e8
nmax = 2580

[hmf_and_halo_bias]
file = %(pipeline_path)s/hmf_and_hbf_tinker.py
log_mass_min = %(logmassmin_def)s
log_mass_max = %(logmassmax_def)s
nmass = %(nmass_def)s
zmin= %(zmin_def)s
zmax= %(zmax_def)s
nz= %(nz_def)s
do_halo_bias = True

[hod_red]
file = %(pipeline_path)s/hod_interface_v2.py
; if luminosities_z = True, then the luminosities are read from the luminosities_file [z_mid, lum_min(z), lum_max(z)]
luminosities_z = True
luminosities_file = runs/test1/input/red_cen_lum_pdf.txt
nlum = 200
; -
; lum_min, lum_max, zmin, zmax and nz are only needed if luminosities_z = False
; -
;lum_min = 4.698941e+08
;lum_max = 1.180321e+11
;zmin = %(zmin_def)s
;zmax = %(zmax_def)s
;nz = %(nz_def)s
abs_mag_sun = 4.68
log_mass_min = %(logmassmin_def)s
log_mass_max = %(logmassmax_def)s
nmass = %(nmass_def)s
z_median = 0.4
do_hod = True
do_number_density = True
do_galaxy_linear_bias = True
do_luminosity_function = False
; options are: "lf_z" or "lf_zmed" depending if you want to calculate the LF per each redshift or on the median one
lf_mode = "lf_z"
do_clf_quantities = False
name = red

[nfw_halo]
file = %(pipeline_path)s/nfw_halo.py
zmin = %(zmin_def)s
zmax = %(zmax_def)s
nz = %(nz_def)s
log_mass_min = %(logmassmin_def)s
log_mass_max = %(logmassmax_def)s
nmass = 20
nmass_fast =

[red_centrals_alignment]
file = %(pipeline_path)s/ia_amplitudes_all_models.py
galaxy_type = centrals
; if galaxy_type = centrals, then the choices are : 'None', 'Joachimi2011' (single power law), 'double_powerlaw'
luminosity_dependence='double_powerlaw'
z_loglum_file= runs/test1/input/redcen_lum.fits ; a fits file containing the columns 'z' and 'loglum'
zmin= %(zmin_def)s
zmax= %(zmax_def)s
nz = %(nz_def)s
name = red

[red_satellites_alignment]
file = %(pipeline_path)s/ia_amplitudes_all_models.py
galaxy_type = satellites
; if galaxy_type = satellites, then the choices are : 'None', 'satellite_luminosity_dependence' (power law)
luminosity_dependence='satellite_luminosity_dependence'
z_loglum_file= runs/test1/input/redsat_lum.fits
zmin= %(zmin_def)s
zmax= %(zmax_def)s
nz = %(nz_def)s
name = red

[radial_satellite_alignment_red]
file = %(pipeline_path)s/wkm_interp_interface_v3_eps.py
zmin = %(zmin_def)s
zmax = %(zmax_def)s
nz = %(nz_def)s
log_mass_min = %(logmassmin_def)s
log_mass_max = %(logmassmax_def)s
nmass = %(nmass_def)s
kmin = 0.1
kmax = 1000.
nk = 1000
name=red

[pk_red]
file= %(pipeline_path)s/pk_interface_v3.py
;log-spaced mass in units of M_sun/h
log_mass_min = %(logmassmin_def)s
log_mass_max = %(logmassmax_def)s
nmass = %(nmass_def)s
zmin = %(zmin_def)s
zmax = %(zmax_def)s
nz = %(nz_def)s
pipeline = False
p_GG = False
p_nn = False
p_xgG = False
p_gI = False
p_xGI = True
p_II = True
two_halo_only = False
hod_section_name = hod_red
name = red

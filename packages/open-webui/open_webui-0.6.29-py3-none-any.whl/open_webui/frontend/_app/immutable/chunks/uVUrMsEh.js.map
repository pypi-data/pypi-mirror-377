{"version":3,"mappings":"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","names":["insert_hydration","target","button","anchor","ctx","input","div","set_input_value","dirty","div3","append_hydration","div1","div0","ul","li0","li1","div2","set_data","t0","t0_value","t2","t2_value","t4","t4_value","t6","t6_value","t14_value","_c","_b","_a","_d","n","info","div13","div12","form","div11","div6","div4","button0","div5","div7","div10","div9","div8","span0","br","span1","button1","t9","t9_value","t11","t11_value","current","t14","t16","t16_value","i18n","getContext","formElement","showConfirm","showAccessControlModal","edit","$$props","clone","onSave","id","name","meta","content","accessControl","_content","updateContent","$$invalidate","codeEditor","boilerplate","saveHandler","submitHandler","tick","res","value","goto","e","$$value"],"ignoreList":[],"sources":["../../../../../../src/lib/components/workspace/Tools/ToolkitEditor.svelte"],"sourcesContent":["<script>\n\timport { getContext, onMount, tick } from 'svelte';\n\n\tconst i18n = getContext('i18n');\n\n\timport { goto } from '$app/navigation';\n\timport ConfirmDialog from '$lib/components/common/ConfirmDialog.svelte';\n\timport Badge from '$lib/components/common/Badge.svelte';\n\timport ChevronLeft from '$lib/components/icons/ChevronLeft.svelte';\n\timport Tooltip from '$lib/components/common/Tooltip.svelte';\n\timport LockClosed from '$lib/components/icons/LockClosed.svelte';\n\timport AccessControlModal from '../common/AccessControlModal.svelte';\n\timport { user } from '$lib/stores';\n\n\tlet formElement = null;\n\tlet loading = false;\n\n\tlet showConfirm = false;\n\tlet showAccessControlModal = false;\n\n\texport let edit = false;\n\texport let clone = false;\n\n\texport let onSave = () => {};\n\n\texport let id = '';\n\texport let name = '';\n\texport let meta = {\n\t\tdescription: ''\n\t};\n\texport let content = '';\n\texport let accessControl = {};\n\n\tlet _content = '';\n\n\t$: if (content) {\n\t\tupdateContent();\n\t}\n\n\tconst updateContent = () => {\n\t\t_content = content;\n\t};\n\n\t$: if (name && !edit && !clone) {\n\t\tid = name.replace(/\\s+/g, '_').toLowerCase();\n\t}\n\n\tlet codeEditor;\n\tlet boilerplate = `import os\nimport requests\nfrom datetime import datetime\nfrom pydantic import BaseModel, Field\n\nclass Tools:\n    def __init__(self):\n        pass\n\n    # Add your custom tools using pure Python code here, make sure to add type hints and descriptions\n\t\n    def get_user_name_and_email_and_id(self, __user__: dict = {}) -> str:\n        \"\"\"\n        Get the user name, Email and ID from the user object.\n        \"\"\"\n\n        # Do not include a descrption for __user__ as it should not be shown in the tool's specification\n        # The session user object will be passed as a parameter when the function is called\n\n        print(__user__)\n        result = \"\"\n\n        if \"name\" in __user__:\n            result += f\"User: {__user__['name']}\"\n        if \"id\" in __user__:\n            result += f\" (ID: {__user__['id']})\"\n        if \"email\" in __user__:\n            result += f\" (Email: {__user__['email']})\"\n\n        if result == \"\":\n            result = \"User: Unknown\"\n\n        return result\n\n    def get_current_time(self) -> str:\n        \"\"\"\n        Get the current time in a more human-readable format.\n        \"\"\"\n\n        now = datetime.now()\n        current_time = now.strftime(\"%I:%M:%S %p\")  # Using 12-hour format with AM/PM\n        current_date = now.strftime(\n            \"%A, %B %d, %Y\"\n        )  # Full weekday, month name, day, and year\n\n        return f\"Current Date and Time = {current_date}, {current_time}\"\n\n    def calculator(\n        self,\n        equation: str = Field(\n            ..., description=\"The mathematical equation to calculate.\"\n        ),\n    ) -> str:\n        \"\"\"\n        Calculate the result of an equation.\n        \"\"\"\n\n        # Avoid using eval in production code\n        # https://nedbatchelder.com/blog/201206/eval_really_is_dangerous.html\n        try:\n            result = eval(equation)\n            return f\"{equation} = {result}\"\n        except Exception as e:\n            print(e)\n            return \"Invalid equation\"\n\n    def get_current_weather(\n        self,\n        city: str = Field(\n            \"New York, NY\", description=\"Get the current weather for a given city.\"\n        ),\n    ) -> str:\n        \"\"\"\n        Get the current weather for a given city.\n        \"\"\"\n\n        api_key = os.getenv(\"OPENWEATHER_API_KEY\")\n        if not api_key:\n            return (\n                \"API key is not set in the environment variable 'OPENWEATHER_API_KEY'.\"\n            )\n\n        base_url = \"http://api.openweathermap.org/data/2.5/weather\"\n        params = {\n            \"q\": city,\n            \"appid\": api_key,\n            \"units\": \"metric\",  # Optional: Use 'imperial' for Fahrenheit\n        }\n\n        try:\n            response = requests.get(base_url, params=params)\n            response.raise_for_status()  # Raise HTTPError for bad responses (4xx and 5xx)\n            data = response.json()\n\n            if data.get(\"cod\") != 200:\n                return f\"Error fetching weather data: {data.get('message')}\"\n\n            weather_description = data[\"weather\"][0][\"description\"]\n            temperature = data[\"main\"][\"temp\"]\n            humidity = data[\"main\"][\"humidity\"]\n            wind_speed = data[\"wind\"][\"speed\"]\n\n            return f\"Weather in {city}: {temperature}Â°C\"\n        except requests.RequestException as e:\n            return f\"Error fetching weather data: {str(e)}\"\n`;\n\n\tconst saveHandler = async () => {\n\t\tloading = true;\n\t\tonSave({\n\t\t\tid,\n\t\t\tname,\n\t\t\tmeta,\n\t\t\tcontent,\n\t\t\taccess_control: accessControl\n\t\t});\n\t};\n\n\tconst submitHandler = async () => {\n\t\tif (codeEditor) {\n\t\t\tcontent = _content;\n\t\t\tawait tick();\n\n\t\t\tconst res = await codeEditor.formatPythonCodeHandler();\n\t\t\tawait tick();\n\n\t\t\tcontent = _content;\n\t\t\tawait tick();\n\n\t\t\tif (res) {\n\t\t\t\tconsole.log('Code formatted successfully');\n\n\t\t\t\tsaveHandler();\n\t\t\t}\n\t\t}\n\t};\n</script>\n\n<AccessControlModal\n\tbind:show={showAccessControlModal}\n\tbind:accessControl\n\taccessRoles={['read', 'write']}\n\tallowPublic={$user?.permissions?.sharing?.public_tools || $user?.role === 'admin'}\n/>\n\n<div class=\" flex flex-col justify-between w-full overflow-y-auto h-full\">\n\t<div class=\"mx-auto w-full md:px-0 h-full\">\n\t\t<form\n\t\t\tbind:this={formElement}\n\t\t\tclass=\" flex flex-col max-h-[100dvh] h-full\"\n\t\t\ton:submit|preventDefault={() => {\n\t\t\t\tif (edit) {\n\t\t\t\t\tsubmitHandler();\n\t\t\t\t} else {\n\t\t\t\t\tshowConfirm = true;\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t<div class=\"flex flex-col flex-1 overflow-auto h-0 rounded-lg\">\n\t\t\t\t<div class=\"w-full mb-2 flex flex-col gap-0.5\">\n\t\t\t\t\t<div class=\"flex w-full items-center\">\n\t\t\t\t\t\t<div class=\" shrink-0 mr-2\">\n\t\t\t\t\t\t\t<Tooltip content={$i18n.t('Back')}>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass=\"w-full text-left text-sm py-1.5 px-1 rounded-lg dark:text-gray-300 dark:hover:text-white hover:bg-black/5 dark:hover:bg-gray-850\"\n\t\t\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\t\t\tgoto('/workspace/tools');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<ChevronLeft strokeWidth=\"2.5\" />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"flex-1\">\n\t\t\t\t\t\t\t<Tooltip content={$i18n.t('e.g. My Tools')} placement=\"top-start\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclass=\"w-full text-2xl font-medium bg-transparent outline-hidden font-primary\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder={$i18n.t('Tool Name')}\n\t\t\t\t\t\t\t\t\tbind:value={name}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"self-center shrink-0\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclass=\"bg-gray-50 hover:bg-gray-100 text-black dark:bg-gray-850 dark:hover:bg-gray-800 dark:text-white transition px-2 py-1 rounded-full flex gap-1 items-center\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\t\tshowAccessControlModal = true;\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<LockClosed strokeWidth=\"2.5\" className=\"size-3.5\" />\n\n\t\t\t\t\t\t\t\t<div class=\"text-sm font-medium shrink-0\">\n\t\t\t\t\t\t\t\t\t{$i18n.t('Access')}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\" flex gap-2 px-1 items-center\">\n\t\t\t\t\t\t{#if edit}\n\t\t\t\t\t\t\t<div class=\"text-sm text-gray-500 shrink-0\">\n\t\t\t\t\t\t\t\t{id}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t<Tooltip className=\"w-full\" content={$i18n.t('e.g. my_tools')} placement=\"top-start\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclass=\"w-full text-sm disabled:text-gray-500 bg-transparent outline-hidden\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder={$i18n.t('Tool ID')}\n\t\t\t\t\t\t\t\t\tbind:value={id}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tdisabled={edit}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t{/if}\n\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\tclassName=\"w-full self-center items-center flex\"\n\t\t\t\t\t\t\tcontent={$i18n.t('e.g. Tools for performing various operations')}\n\t\t\t\t\t\t\tplacement=\"top-start\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclass=\"w-full text-sm bg-transparent outline-hidden\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder={$i18n.t('Tool Description')}\n\t\t\t\t\t\t\t\tbind:value={meta.description}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"mb-2 flex-1 overflow-auto h-0 rounded-lg\">\n\t\t\t\t\t{#await import('$lib/components/common/CodeEditor.svelte') then { default: CodeEditor }}\n\t\t\t\t\t\t<CodeEditor\n\t\t\t\t\t\t\tbind:this={codeEditor}\n\t\t\t\t\t\t\tvalue={content}\n\t\t\t\t\t\t\tlang=\"python\"\n\t\t\t\t\t\t\t{boilerplate}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t_content = e;\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonSave={async () => {\n\t\t\t\t\t\t\t\tif (formElement) {\n\t\t\t\t\t\t\t\t\tformElement.requestSubmit();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t{/await}\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"pb-3 flex justify-between\">\n\t\t\t\t\t<div class=\"flex-1 pr-3\">\n\t\t\t\t\t\t<div class=\"text-xs text-gray-500 line-clamp-2\">\n\t\t\t\t\t\t\t<span class=\" font-semibold dark:text-gray-200\">{$i18n.t('Warning:')}</span>\n\t\t\t\t\t\t\t{$i18n.t('Tools are a function calling system with arbitrary code execution')} <br />â\n\t\t\t\t\t\t\t<span class=\" font-medium dark:text-gray-400\"\n\t\t\t\t\t\t\t\t>{$i18n.t(`don't install random tools from sources you don't trust.`)}</span\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass=\"px-3.5 py-1.5 text-sm font-medium bg-black hover:bg-gray-900 text-white dark:bg-white dark:text-black dark:hover:bg-gray-100 transition rounded-full\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{$i18n.t('Save')}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\t</div>\n</div>\n\n<ConfirmDialog\n\tbind:show={showConfirm}\n\ton:confirm={() => {\n\t\tsubmitHandler();\n\t}}\n>\n\t<div class=\"text-sm text-gray-500\">\n\t\t<div class=\" bg-yellow-500/20 text-yellow-700 dark:text-yellow-200 rounded-lg px-4 py-3\">\n\t\t\t<div>{$i18n.t('Please carefully review the following warnings:')}</div>\n\n\t\t\t<ul class=\" mt-1 list-disc pl-4 text-xs\">\n\t\t\t\t<li>\n\t\t\t\t\t{$i18n.t('Tools have a function calling system that allows arbitrary code execution.')}\n\t\t\t\t</li>\n\t\t\t\t<li>{$i18n.t('Do not install tools from sources you do not fully trust.')}</li>\n\t\t\t</ul>\n\t\t</div>\n\n\t\t<div class=\"my-3\">\n\t\t\t{$i18n.t(\n\t\t\t\t'I acknowledge that I have read and I understand the implications of my action. I am aware of the risks associated with executing arbitrary code and I have verified the trustworthiness of the source.'\n\t\t\t)}\n\t\t</div>\n\t</div>\n</ConfirmDialog>\n"],"file":"_app/immutable/chunks/uVUrMsEh.js"}
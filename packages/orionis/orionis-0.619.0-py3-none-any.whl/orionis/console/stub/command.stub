from orionis.console.base.command import BaseCommand
from orionis.console.args.argument import CLIArgument
from orionis.console.exceptions import CLIOrionisRuntimeError

class {{class_name}}(BaseCommand):
    """
    Command: {{signature}}
    {{description}}
    """

    # Enable timestamps
    timestamps: bool = True

    # Command signature
    signature: str = "{{signature}}"

    # Command description
    description: str = "{{description}}"

    # Arguments (edit as needed)
    arguments = [
        CLIArgument(
            flags=["--example", "-e"],
            type=str,
            help="Example argument for {{class_name}}",
            default=None,
            required=False,
            metavar="EXAMPLE",
            dest="example",
            action="store",
        ),
    ]

    async def handle(self, *args, **kwargs) -> None:
        try:
            self.textSuccessBold("{{class_name}} executed successfully!")
            example_value = self.argument("example")
            if example_value:
                self.info(f"Received argument: {example_value}")

        except Exception as e:
            raise CLIOrionisRuntimeError(f"An error occurred: {str(e)}") from e
'''
This code was copied from the straylight area of the BMG svn repo

These globals were refactored from the top of the straylight accessor because
some of them are also used by the thermal accessor.
'''


import os
import math
from pandeia.engine.helpers.background.multimission.mod_healpix_func import *

bmg_url = os.environ.get('BMG_URL', 'NONE')

D2R = math.pi / 180.
R2D = 180. / math.pi

# C structure used to write the stray light binary file.
# One record per file.
#    typedef struct {
#              double pix_ra;
#              double pix_dec;
#              double pos[3];
#              double nonzodi_bg[SL_NWAVE];  // The in-field ism+cib for each pixel.
#            } sl_pix;
#              Then for every day with the target in the FOR,the following three items are written.
#              double day;
#              double zodi_bg[SL_NWAVE];  //  The combined in-field zodi for each pixel.
#              double stray_light_bg[SL_NWAVE];  //The equivalent in-field background from stray light from zodi, stellar,ism, cib

# Number of days in a year
NUM_DAYS = 366

'''
In principle, this wavelist should be identical (ideally, read from) the standard
wavelength set delivered with the BMG in bgmodel/inputs/std_spectrum_wavelengths.txt.

In practice, it must be identical to the waveset used BACK WHEN the cached data was
generated by other code in the straylight area of the BMG svn repo.

Note that the comment above, which describes the structure of that file, refers to [SL_NWAVE].
'''

#-----------------------------------------------------------------------------------
# THE WAVELENGTH ARRAY:
#
# Copied directly from pandeia/backgrounds/straylight/std_wavelengths.c
#
# NOTE!!! when this is changed it affects THREE (3) hard-coded places:
# 1) here
# 2) pandeia/backgrounds/straylight/std_wavelengths.c (the wave array)
# 3) pandeia/backgrounds/bmg/src/libBG/bmg_user.h (the value of SPECTRUM_ELEMENTS)
#
# (also edit all counterparts in pandeia/backgrounds/bmg_for_straylight)
#-----------------------------------------------------------------------------------

wavelist = [
    0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1,
    2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.7, 4.0, 4.25,
    4.5, 4.75, 5.0, 5.1, 5.2, 5.3, 5.4, 5.5, 5.7, 5.9, 6.1, 6.3, 6.5, 6.7, 6.9, 7.1, 7.3,
    7.5, 7.7, 7.9, 8.1, 8.3, 8.5, 8.7, 8.9, 9.1, 9.3, 9.5, 9.7, 9.9, 10.1, 10.3, 10.5,
    10.7, 10.9, 11.1, 11.3, 11.5, 11.7, 11.9, 12.1, 12.3, 12.5, 12.7, 12.9, 13.1, 13.3,
    13.5, 13.7, 13.9, 14.1, 14.3, 14.5, 14.7, 14.9, 15.1, 15.3, 15.5, 16.5, 17.5, 18.5,
    19.5, 20.5, 21.5, 22.5, 23.5, 24.5, 25.5, 26.5, 27.5, 28.5, 29.5, 30.5, 31.0
]

# precomputed 1.2 micron bug correction arrays from
# devtools/generate_1p2micron_correction.py. These correction arrays were intentionally
# precomputed for the superset of the Roman and JWST background wavelength arrays as of
# 2025-07-30. Correction developed by E. Han (JETC-4464)
correction_1p2_wave = [0.35,0.36,0.37,0.38,0.389,0.399,0.41,0.42,0.43,0.439,0.449,0.459,0.47,0.48,0.49,0.5,0.51,
                       0.52,0.53,0.54,0.55,0.559,0.57,0.58,0.59,0.6,0.61,0.62,0.63,0.639,0.649,0.659,0.669,0.679,
                       0.69,0.7,0.71,0.72,0.73,0.74,0.75,0.76,0.77,0.78,0.79,0.8,0.81,0.82,0.83,0.84,0.85,0.86,
                       0.87,0.88,0.89,0.9,0.91,0.92,0.929,0.94,0.95,0.96,0.97,0.98,0.99,1.0,1.01,1.02,1.03,1.04,
                       1.05,1.06,1.069,1.08,1.089,1.1,1.109,1.12,1.13,1.14,1.15,1.16,1.17,1.18,1.19,1.2,1.21,1.22,
                       1.23,1.24,1.25,1.26,1.27,1.28,1.29,1.3,1.31,1.319,1.33,1.339,1.35,1.359,1.37,1.38,1.39,1.4,
                       1.41,1.42,1.43,1.44,1.45,1.46,1.47,1.48,1.49,1.5,1.509,1.52,1.529,1.54,1.549,1.56,1.569,1.58,
                       1.589,1.6,1.609,1.62,1.63,1.64,1.65,1.66,
                       1.67,1.68,1.69,1.7,1.71,1.72,1.73,1.74,1.75,1.759,1.77,1.779,1.79,1.799,1.8,1.81,1.819,1.83,
                       1.839,1.85,1.859,1.87,1.88,1.89,1.9,1.91,1.92,1.93,1.94,1.95,1.96,1.97,1.98,1.99,2.0,2.01,
                       2.02,2.029,2.04,2.05,2.06,2.07,2.08,2.09,2.1,2.11,2.12,2.13,2.14,2.15,2.16,2.17,2.18,2.19,2.2,
                       2.21,2.22,2.23,2.24,2.25,2.26,2.27,2.28,2.29,2.3,2.31,2.32,2.33,2.34,2.35,2.36,2.37,2.38,2.39,
                       2.4,2.41,2.42,2.43,2.44,2.45,2.46,2.47,2.48,2.49,2.5,2.51,2.52,2.53,2.54,2.55,2.56,2.57,2.58,
                       2.59,2.6,2.61,2.62,2.63,2.64,2.65,2.66,2.67,2.68,2.69,2.7,2.71,2.72,2.73,2.74,2.75,2.76,2.77,
                       2.78,2.79,2.8,2.81,2.82,2.83,2.84,2.85,2.86,2.87,2.88,2.89,2.9,2.91,2.92,2.93,2.94,2.95,2.96,
                       2.97,2.98,2.99,3.0,3.1,3.2,3.3,3.4,3.5,3.7,4.0,4.25,4.5,4.75,5.0,5.1,5.2,5.3,5.4,5.5,5.7,5.9,
                       6.1,6.3,6.5,6.7,6.9,7.1,7.3,7.5,7.7,7.9,8.1,8.3,8.5,8.7,8.9,9.1,9.3,9.5,9.7,9.9,10.1,10.3,
                       10.5,10.7,10.9,11.1,11.3,11.5,11.7,11.9,12.1,12.3,12.5,12.7,12.9,13.1,13.3,13.5,13.7,13.9,
                       14.1,14.3,14.5,14.7,14.9,15.1,15.3,15.5,16.5,17.5,18.5,19.5,20.5,21.5,22.5,23.5,24.5,25.5,
                       26.5,27.5,28.5,29.5,30.5,31.0]

correction_1p2_corr = [1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.5965228013468001,0.597628994648981,0.598664449674294,
                       0.5998592675394755,0.6011007299114993,0.6025202129261286,0.6038596287625215,0.6052456891057569,
                       0.6066783939558347,0.6081577433127549,0.6096837371765175,0.6112563755471225,0.61287565842457,
                       0.6145415858088599,0.6160808015080711,0.618013374097967,0.619819235002784,0.6216717404144436,
                       0.6235708903329455,0.62551668475829,0.6275091236904768,0.6308609914915972,0.6338776725126055,
                       0.6372295403137259,0.6405814081148463,0.6439332759159667,0.6472851437170871,0.6509721982983194,
                       0.6543240660994398,0.6566091370558376,0.6578274111675128,0.6590456852791878,0.660263959390863,
                       0.6614822335025381,0.6627005076142133,0.6639187817258884,0.6651370558375634,0.6663553299492386,
                       0.6675736040609137,0.6687918781725889,0.670010152284264,0.6712284263959392,0.6724467005076142,
                       0.6736649746192894,0.6748832487309645,0.6761015228426397,0.6773197969543148,0.6785380710659898,
                       0.679756345177665,0.6844126984126985,0.6899285714285714,0.6948928571428572,0.7009603174603175,
                       0.7064761904761905,0.7119920634920635,0.7175079365079365,0.7230238095238095,0.7285396825396826,
                       0.7340555555555556,0.7395714285714285,0.7450873015873016,0.7506031746031746,0.7561190476190477,
                       0.7616349206349207,0.7671507936507936,0.7721150793650794,0.7781825396825397,0.7831468253968253,
                       0.7892142857142858,0.7941785714285714,0.8002460317460318,0.8057619047619047,0.8112777777777778,
                       0.8167936507936507,0.8218184438040346,0.8265158501440921,0.8312132564841498,0.8359106628242075,
                       0.8406080691642651,0.8453054755043228,0.8500028818443804,0.854700288184438,0.8593976945244957,
                       0.8640951008645533,0.868792507204611,0.8734899135446687,0.8781873198847262,0.8828847262247839,
                       0.8875821325648415,0.8922795389048992,0.896507204610951,0.9016743515850144,0.9059020172910662,
                       0.9110691642651297,0.9152968299711816,0.9204639769452451,0.9251613832853026,0.9298587896253602,
                       0.9345561959654178,0.9392536023054755,0.9439510086455332,0.9486484149855908,0.9533458213256484,
                       0.958043227665706,0.9627406340057637,0.9674380403458214,0.972135446685879,0.9768328530259366,
                       0.9815302593659943,0.9828520710059171,0.9840236686390532,0.98498224852071,0.9861538461538462,
                       0.987112426035503,0.9882840236686391,0.9892426035502958,0.9904142011834319,0.9913727810650887,
                       0.9925443786982249,0.9935029585798817,0.9946745562130178,0.9957396449704142,0.9968047337278106,
                       0.9978698224852071,0.9989349112426036,
                       1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,
                       1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,
                       1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,
                       1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,
                       1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,
                       1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,
                       1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,
                       1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,
                       1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,
                       1.0]

SL_NWAVE = len(wavelist)
IDX_OF_3P5 = wavelist.index(3.5)  # will throw an exception if fails (which we want)
IDX_OF_1P5 = wavelist.index(1.5)  # Former Roman wavelength.
IDX_OF_0P6 = wavelist.index(0.6)  # The wavelength Roman wants to normalize at (actually 0.6291 microns)

nside = 128
Npix = 12 * nside * nside

# This file contains tables indicating the fraction of total psf falling
# within the given aperture (extraction region).
#
# These tables are read at the time the instrument object gets initialized.
# The code that reads this file lives in pyetc/engine/instrument.py; the
# actual handling is done by instrument-dependent code in
# pyetc/instruments/hst/cos/instr_functions.py


# Pedigree dates below are given as DD/MM/YYYY

{
# the following are used to select which table should be used
'modes': ['detector','aperture_shape','gyromode','science_mode', 'cenwave'],
#
#cos pixel size depends on mode and grism
# detector values: fuv, nuv
# aperture_shape values: square, circle
# gyromode values: normal, twogyro
# cenwave: central wavelength value
# mode values: imaging, spectroscopic, targetaquisition, spectroscopicacq
'quantities':['lambda','size'],

'tables': [

# Note that spectroscopic tables for segments 'a' and 'b' below are actually the
# same table. This segment-independent table resulted from merging (by hand) the
# two separate tables, one for each segment, initially generated by the instrument
# team. This was possible because of the unique mapping that exists in between
# segment names and wavelength ranges. The merged table is a workaround for the code
# in etc_engine/extraction_region.py, which does not build a correct merged table
# out of the two tables originally supplied.
#
# The merging process required that some data be "made up", in order to fill
# empty gaps in the wavelength X size space defined by the merged table. The
# '0.95' fraction found in some of the table cells is fictitious. It can be
# changed to something more accurate when, and if, we find them necessary, and
# the instrument team delivers better values. For now, these values are harmless
# (they are not used) as long as the spectral_box_width and spectral_box_height
# extraction attributes are defined as in etc_instruments/cos/cos_config.dat at r7590.

{
'detector':'fuv',
'aperture_shape':'rectangle',
'gyromode':'normal',
'science_mode': 'spectroscopic',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'a',
'grating': 'g130m',
'cenwave': '1055',
'pedigree':'''FUV/G130M/1055/[A,B]: 13070-01 for the pix=1 EE, and
x6q17586l_1dx.fits (12806-04, 12890-02) for the 100% radius. 21/12/2012''',
'data': [
# lambda(angstroms)/radius(pixels)
[-999,    1,    63,      65,   250.0],
[ 899,   0.05,   1,       1,      1,],
[1044.,  0.05,   1,       1,      1,],
[1053.,  0.05,   0.95,    1,      1,],
[1200.,  0.05,   0.95,    1,      1,]
]
},

{
'detector':'fuv',
'aperture_shape':'rectangle',
'gyromode':'normal',
'science_mode': 'spectroscopic',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'b',
'grating': 'g130m',
'cenwave': '1055',
'pedigree':'''FUV/G130M/1055/[A,B]: 13070-01 for the pix=1 EE, and
x6q17586l_1dx.fits (12806-04, 12890-02) for the 100% radius. 21/12/2012''',
'data': [
# lambda(angstroms)/radius(pixels)
[-999,    1,    63,      65,   250.0],
[ 899,   0.05,   1,       1,      1,],
[1044.,  0.05,   1,       1,      1,],
[1053.,  0.05,   0.95,    1,      1,],
[1200.,  0.05,   0.95,    1,      1,]
]
},


# same comment above applies to the next four tables:


{
'detector':'fuv',
'aperture_shape':'rectangle',
'gyromode':'normal',
'science_mode': 'spectroscopic',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'a',
'grating': 'g130m',
'cenwave': '1096',
'pedigree':'''FUV/G130M/1096/[A,B]: 13070-01 for the pix=1 EE, and
x6q17586l_1dx.fits (12806-04, 12715-40, 12715-41, 12906-01) for the
100% radius. 23/03/2013''',
'data': [
# lambda(angstroms)/radius(pixels)
[-999,     1,    59,      63,  250.0],
[ 939,     0.05,  1,       1,    1,],
[1085.,    0.05,  1,       1,    1,],
[1094.,    0.05,  0.95,    1,    1,],
[1240.,    0.05,  0.95,    1,    1,]
]
},

{
'detector':'fuv',
'aperture_shape':'rectangle',
'gyromode':'normal',
'science_mode': 'spectroscopic',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'b',
'grating': 'g130m',
'cenwave': '1096',
'pedigree':'''FUV/G130M/1096/[A,B]: 13070-01 for the pix=1 EE, and
x6q17586l_1dx.fits (12806-04, 12715-40, 12715-41, 12906-01) for the
100% radius. 23/03/2013''',
'data': [
# lambda(angstroms)/radius(pixels)
[-999,     1,    59,      63,  250.0],
[ 939,     0.05,  1,       1,    1,],
[1085.,    0.05,  1,       1,    1,],
[1094.,    0.05,  0.95,    1,    1,],
[1240.,    0.05,  0.95,    1,    1,]
]
},

{
'detector':'fuv',
'aperture_shape':'rectangle',
'gyromode':'normal',
'science_mode': 'spectroscopic',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'a',
'grating': 'g130m',
'cenwave': '1222',
'pedigree':'''FUV/G130M/1222/[A,B]: 13070-01 for the pix=1 EE, and x1v17418l_1dx.fits
(12715-51, 12806-04, 12806-1a, 13070-01, 13070-02, 13119-01, 13119-30, 13119-31) for the
100% radius. 14/12/2012''',
'data': [
# lambda(angstroms)/height(pixels)
[-999,     1,    45,      47,  250.0],
[1065,     0.05,  1,       1,    1,],
[1209.,    0.05,  1,       1,    1,],
[1221.,    0.05,  0.95,    1,    1,],
[1365.,    0.05,  0.95,    1,    1,]
]
},

{
'detector':'fuv',
'aperture_shape':'rectangle',
'gyromode':'normal',
'science_mode': 'spectroscopic',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'b',
'grating': 'g130m',
'cenwave': '1222',
'pedigree':'''FUV/G130M/1222/[A,B]: 13070-01 for the pix=1 EE, and x1v17418l_1dx.fits
(12715-51, 12806-04, 12806-1a, 13070-01, 13070-02, 13119-01, 13119-30, 13119-31) for the
100% radius. 14/12/2012''',
'data': [
# lambda(angstroms)/height(pixels)
[-999,     1,    45,      47,  250.0],
[1065,     0.05,  1,       1,    1,],
[1209.,    0.05,  1,       1,    1,],
[1221.,    0.05,  0.95,    1,    1,],
[1365.,    0.05,  0.95,    1,    1,]
]
},


# the following tables, down to the end of the file,
# are outside the scope of the above commentary.


{
'detector':'fuv',
'aperture_shape':'rectangle',
'gyromode':'normal',
'science_mode': 'spectroscopic',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'a',
'grating': 'g130m',
'pedigree':'''FUV/G130M/[A,B]: COS ISR 2013-07 (FCAL2 12805) for the pix=1 EE, and
s5n1734rl_1dx.fits for the 100% radius (22/05/2010). 11/09/2012''',
'data': [
# lambda(angstroms)/radius(pixels)
[-999,    1,    35,  250.0],
[800.,    0.130406, 1,  1,],
[9000.,   0.130406, 1,  1,]
]
},

{
'detector':'fuv',
'aperture_shape':'rectangle',
'gyromode':'normal',
'science_mode': 'spectroscopic',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'b',
'grating': 'g130m',
'pedigree':'''FUV/G130M/[A,B]: COS ISR 2013-07 (FCAL2 12805) for the pix=1 EE, and
s5n1734rl_1dx.fits for the 100% radius (22/05/2010). 11/09/2012''',
'data': [
# lambda(angstroms)/radius(pixels)
[-999,    1,    35,   250.0],
[800.,   0.163303, 1,   1,],
[9000.,  0.163303, 1,   1,]
]
},

{
'detector':'fuv',
'aperture_shape':'rectangle',
'gyromode':'normal',
'science_mode': 'spectroscopic',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'a',
'grating': 'g160m',
'pedigree':'''FUV/G160M/[A,B]: COS ISR 2013-07 (FCAL2 12805) for the pix=1 EE, and
s5n1734rl_1dx.fits for the 100% radius (22/05/2010). 11/09/2012''',
'data': [
# lambda(angstroms)/radius(pixels)
[-999,    1,    35,   250.0],
[800.,    0.133768, 1, 1,],
[9000.,   0.133768, 1, 1,]
]
},

{
'detector':'fuv',
'aperture_shape':'rectangle',
'gyromode':'normal',
'science_mode': 'spectroscopic',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'b',
'grating': 'g160m',
'pedigree':'''FUV/G160M/[A,B]: COS ISR 2013-07 (FCAL2 12805) for the pix=1 EE, and
s5n1734rl_1dx.fits for the 100% radius (22/05/2010). 11/09/2012''',
'data': [
# lambda(angstroms)/radius(pixels)
[-999,    1,    35,   250.0],
[800.,    0.148080, 1,  1,],
[9000.,   0.148080, 1,  1,]
]
},

{
'detector':'fuv',
'aperture_shape':'rectangle',
'gyromode':'normal',
'science_mode': 'spectroscopic',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'a',
'grating': 'g140l',
'pedigree':'''FUV/G140L/[A,B]: COS ISR 2013-07 (FENA3 12796) for the pix=1 EE, and
s5n1734rl_1dx.fits for the 100% radius (22/05/2010). 17/04/2012''',
'data': [
# lambda(angstroms)/radius(pixels)
[-999,    1,    57,   250.0],
[800.,    0.153846, 1,  1,],
[9000.,   0.153846, 1,  1,]
]
},

{
'detector':'fuv',
'aperture_shape':'rectangle',
'gyromode':'normal',
'science_mode': 'spectroscopic',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'b',
'grating': 'g140l',
'pedigree':'''FUV/G140L/[A,B]: COS ISR 2013-07 (FENA3 12796) for the pix=1 EE, and
s5n1734rl_1dx.fits for the 100% radius (22/05/2010). 17/04/2012''',
'data': [
# lambda(angstroms)/radius(pixels)
[-999,    1,    57,   250.0],
[800.,    0.0930233,    1,  1,],
[9000.,   0.0930233, 1, 1,]
]
},

# the following two tables support the G140L/800 combination, 
# which has a different 100% extraction height (HETC-4).

{
'detector':'fuv',
'aperture_shape':'rectangle',
'gyromode':'normal',
'science_mode': 'spectroscopic',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'a',
'grating': 'g140l',
'cenwave': '800',
'pedigree':'''FUV/G140L/[A,B]: COS ISR 2013-07 (FENA3 12796) for the pix=1 EE, and
s5n1734rl_1dx.fits for the 100% radius (22/05/2010). 17/04/2012''',
'data': [
# lambda(angstroms)/radius(pixels)
[-999,    1,    30,   250.0],
[800.,    0.153846, 1,  1,],
[9000.,   0.153846, 1,  1,]
]
},

{
'detector':'fuv',
'aperture_shape':'rectangle',
'gyromode':'normal',
'science_mode': 'spectroscopic',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'b',
'grating': 'g140l',
'cenwave': '800',
'pedigree':'''FUV/G140L/[A,B]: COS ISR 2013-07 (FENA3 12796) for the pix=1 EE, and
s5n1734rl_1dx.fits for the 100% radius (22/05/2010). 17/04/2012''',
'data': [
# lambda(angstroms)/radius(pixels)
[-999,    1,    30,   250.0],
[800.,    0.0930233,    1,  1,],
[9000.,   0.0930233, 1, 1,]
]
},


#####   NUV  spectroscopic    #####

{
'detector':'nuv',
'aperture_shape':'rectangle',
'gyromode':'normal',
'science_mode': 'spectroscopic',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'a',
'grating': 'None',
'pedigree':'''NUV/[A,B,C]: The modern version appears in trunk/pyetc/etc_instruments/cos/cos_aperture_fraction.dat @ 3244.
I’m not sure where this came from.''',
'data': [
# lambda(angstroms)/radius(pixels)
[-999,    1,    8,    250.,],
[800.,    0.509458, 1, 1,],
[9000.,   0.509458, 1, 1,]
]
},

{
'detector':'nuv',
'aperture_shape':'rectangle',
'gyromode':'normal',
'science_mode': 'spectroscopic',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'b',
'grating': 'None',
'pedigree':'''NUV/[A,B,C]: The modern version appears in trunk/pyetc/etc_instruments/cos/cos_aperture_fraction.dat @ 3244.
I’m not sure where this came from.''',
'data': [
# lambda(angstroms)/radius(pixels)
[-999,    1,    8,    250.0,],
[800.,    0.474531, 1, 1,],
[9000.,   0.474531, 1, 1,]
]
},

{
'detector':'nuv',
'aperture_shape':'rectangle',
'gyromode':'normal',
'science_mode': 'spectroscopic',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'c',
'grating': 'None',
'pedigree':'''NUV/[A,B,C]: The modern version appears in trunk/pyetc/etc_instruments/cos/cos_aperture_fraction.dat @ 3244.
I’m not sure where this came from.''',
'data': [
# lambda(angstroms)/radius(pixels)
[-999,   1, 8,   250.0,],
[800.,    0.456375, 1, 1,],
[9000.,   0.456375, 1, 1,]
]
},



#####   NUV imaging    #####


# There is only one table for NUV imaging and imaging target acquisition,
# for both square and rectangular shapes. For compatibility with other
# instruments, this one table was reproduced below for every single
# exisitng combination of science mode, aperture shape, and segment.


{
'detector':'nuv',
'aperture_shape':'circle',
'gyromode':'normal',
'science_mode': 'imaging',
'lambda_units':'angstroms',
'size_units':'arcsec',
'half_size':'true',
'segment': 'None',
'grating': 'None',
'pedigree':'''The COS NUV imaging EE tables are derived from ISR 2010-10 (11473). 11/09/2009''',
'data': [
# lambda(angstroms)/radius(arcsec)
[-999,   0.01,  0.02,  0.03,  0.04,  0.05,  0.06,  0.07,  0.08,  0.09,  0.10,  1000.0],
[800.0,  0.083, 0.295, 0.544, 0.754, 0.889, 0.957, 0.986, 0.996, 0.999, 1.000,  1.000],
[8000.0, 0.083, 0.295, 0.544, 0.754, 0.889, 0.957, 0.986, 0.996, 0.999, 1.000,  1.000],
]
},

{
'detector':'nuv',
'aperture_shape':'square',
'gyromode':'normal',
'science_mode': 'imaging',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'a',
'grating': 'None',
'pedigree':'''The COS NUV imaging EE tables are derived from ISR 2010-10 (11473). 11/09/2009''',
'data': [
# lambda(angstroms)/radius(pixels)
[-999,  1.0,    2.0,    3.0,    4.0,    5.0,   6.0,    7.0,    7.20461, 10.0, 1000.],
[800.0, 0.1388, 0.2776, 0.4164, 0.5552, 0.694, 0.8328, 0.9716, 1.0, 1.0,       1.0],
[9000.0, 0.1388, 0.2776, 0.4164, 0.5552, 0.694, 0.8328, 0.9716, 1.0, 1.0,      1.0],
]
},

{
'detector':'nuv',
'aperture_shape':'square',
'gyromode':'normal',
'science_mode': 'imaging',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'b',
'grating': 'None',
'pedigree':'''The COS NUV imaging EE tables are derived from ISR 2010-10 (11473). 11/09/2009''',
'data': [
# lambda(angstroms)/radius(pixels)
[-999,  1.0,    2.0,    3.0,    4.0,    5.0,   6.0,    7.0,    7.20461, 10.0, 1000.],
[800.0, 0.1388, 0.2776, 0.4164, 0.5552, 0.694, 0.8328, 0.9716, 1.0, 1.0,       1.0],
[9000.0, 0.1388, 0.2776, 0.4164, 0.5552, 0.694, 0.8328, 0.9716, 1.0, 1.0,      1.0],
]
},

{
'detector':'nuv',
'aperture_shape':'square',
'gyromode':'normal',
'science_mode': 'imaging',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'c',
'grating': 'None',
'pedigree':'''The COS NUV imaging EE tables are derived from ISR 2010-10 (11473). 11/09/2009''',
'data': [
# lambda(angstroms)/radius(pixels)
[-999,  1.0,    2.0,    3.0,    4.0,    5.0,   6.0,    7.0,    7.20461, 10.0, 1000.],
[800.0, 0.1388, 0.2776, 0.4164, 0.5552, 0.694, 0.8328, 0.9716, 1.0, 1.0,       1.0],
[9000.0, 0.1388, 0.2776, 0.4164, 0.5552, 0.694, 0.8328, 0.9716, 1.0, 1.0,      1.0],
]
},

{
'detector':'nuv',
'aperture_shape':'rectangle',
'gyromode':'normal',
'science_mode': 'imaging',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'a',
'grating': 'None',
'pedigree':'''The COS NUV imaging EE tables are derived from ISR 2010-10 (11473). 11/09/2009''',
'data': [
# lambda(angstroms)/radius(pixels)
[-999,  1.0,    2.0,    3.0,    4.0,    5.0,   6.0,    7.0,    7.20461, 10.0, 1000.],
[800.0, 0.1388, 0.2776, 0.4164, 0.5552, 0.694, 0.8328, 0.9716, 1.0, 1.0,       1.0],
[9000.0, 0.1388, 0.2776, 0.4164, 0.5552, 0.694, 0.8328, 0.9716, 1.0, 1.0,      1.0],
]
},

{
'detector':'nuv',
'aperture_shape':'rectangle',
'gyromode':'normal',
'science_mode': 'imaging',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'b',
'grating': 'None',
'pedigree':'''The COS NUV imaging EE tables are derived from ISR 2010-10 (11473). 11/09/2009''',
'data': [
# lambda(angstroms)/radius(pixels)
[-999,  1.0,    2.0,    3.0,    4.0,    5.0,   6.0,    7.0,    7.20461, 10.0, 1000.],
[800.0, 0.1388, 0.2776, 0.4164, 0.5552, 0.694, 0.8328, 0.9716, 1.0, 1.0,       1.0],
[9000.0, 0.1388, 0.2776, 0.4164, 0.5552, 0.694, 0.8328, 0.9716, 1.0, 1.0,      1.0],
]
},

{
'detector':'nuv',
'aperture_shape':'rectangle',
'gyromode':'normal',
'science_mode': 'imaging',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'c',
'grating': 'None',
'pedigree':'''The COS NUV imaging EE tables are derived from ISR 2010-10 (11473). 11/09/2009''',
'data': [
# lambda(angstroms)/radius(pixels)
[-999,  1.0,    2.0,    3.0,    4.0,    5.0,   6.0,    7.0,    7.20461, 10.0, 1000.],
[800.0, 0.1388, 0.2776, 0.4164, 0.5552, 0.694, 0.8328, 0.9716, 1.0, 1.0,       1.0],
[9000.0, 0.1388, 0.2776, 0.4164, 0.5552, 0.694, 0.8328, 0.9716, 1.0, 1.0,      1.0],
]
},


#####   NUV imaging target acquisition  #####


{
'detector':'nuv',
'aperture_shape':'circle',
'gyromode':'normal',
'science_mode': 'targetacquisition',
'lambda_units':'angstroms',
'size_units':'arcsec',
'half_size':'true',
'segment': 'None',
'grating': 'None',
'pedigree':'''The COS NUV targetacquisition EE tables are copies of the imaging tables. 11/09/2009''',
'data': [
# lambda(angstroms)/radius(arcsec)
[-999,   0.01,  0.02,  0.03,  0.04,  0.05,  0.06,  0.07,  0.08,  0.09,  0.10,  1000.0],
[800.0,  0.083, 0.295, 0.544, 0.754, 0.889, 0.957, 0.986, 0.996, 0.999, 1.000,  1.000],
[8000.0, 0.083, 0.295, 0.544, 0.754, 0.889, 0.957, 0.986, 0.996, 0.999, 1.000,  1.000],
]
},

{
'detector':'nuv',
'aperture_shape':'square',
'gyromode':'normal',
'science_mode': 'targetacquisition',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'None',
'grating': 'None',
'pedigree':'''The COS NUV targetacquisition EE tables are copies of the imaging tables. 11/09/2009''',
'data': [
# lambda(angstroms)/radius(pixels)
[-999,  1.0,    2.0,    3.0,    4.0,    5.0,   6.0,    7.0,    7.20461, 10.0, 1000.],
[800.0, 0.1388, 0.2776, 0.4164, 0.5552, 0.694, 0.8328, 0.9716, 1.0, 1.0,       1.0],
[9000.0, 0.1388, 0.2776, 0.4164, 0.5552, 0.694, 0.8328, 0.9716, 1.0, 1.0,      1.0],
],
},

{
'detector':'nuv',
'aperture_shape':'rectangle',
'gyromode':'normal',
'science_mode': 'targetacquisition',
'lambda_units':'angstroms',
'size_units':'pixels',
'segment': 'None',
'grating': 'None',
'pedigree':'''The COS NUV targetacquisition EE tables are copies of the imaging tables. 11/09/2009''',
'data': [
# lambda(angstroms)/radius(pixels)
[-999,  1.0,    2.0,    3.0,    4.0,    5.0,   6.0,    7.0,    7.20461, 10.0, 1000.],
[800.0, 0.1388, 0.2776, 0.4164, 0.5552, 0.694, 0.8328, 0.9716, 1.0, 1.0,       1.0],
[9000.0, 0.1388, 0.2776, 0.4164, 0.5552, 0.694, 0.8328, 0.9716, 1.0, 1.0,      1.0],
],
},

], # end tables
}


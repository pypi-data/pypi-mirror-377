#
# |---------------------------------------------------------|
# |                                                         |
# |                 Give Feedback / Get Help                |
# | https://github.com/Pebbling-ai/pebble/issues/new/choose |
# |                                                         |
# |---------------------------------------------------------|
#
#  Thank you users! We ‚ù§Ô∏è you! - üêß

"""Display utilities for the Pebbling server."""

from rich import box
from rich.console import Console
from rich.panel import Panel
from rich.text import Text


def prepare_server_display(host: str = None, port: int = None, agent_id: str = None) -> str:
    """Prepare the colorful ASCII display for the server.

    Args:
        host: Server hostname
        port: Server port
        agent_id: Agent identifier

    Returns:
        A string containing a formatted ASCII art display for the server
    """
    # Define ASCII art once for reuse
    pebbling_art = r"""
#####################################################################
                 ____       _     _     _ _                                       
                |  _ \ ___ | |__ | |__ | (_)_ __   __ _                           
                | |_) / _ \| '_ \| '_ \| | | '_ \ / _` |                          
                |  __/  __/| |_) | |_) | | | | | | (_| |                          
                |_|   \___||_.__/|_.__/|_|_|_| |_|\__, |
                                                     | | 
                                                   |___/                           
#####################################################################
#####################################################################

                              ‚£Ä‚£†‚£§‚£§‚£§‚£§‚£§‚£§‚£Ä‚°Ä                              
                          ‚£†‚£¥‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£§‚°Ä                            
                          ‚£†‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚°Ä                            
                          ‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ñ                            
                          ‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ä                          
                          ‚¢†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£á                           
                          ‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø                           
                          ‚¢∏‚°ü‚†Å‚†Ä‚†ô‚¢ø‚£ø‚£ø‚£ø‚°ø‚†ã‚†Ä‚†Ä‚†Ä‚†ô‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á                          
                          ‚¢π‚°Ä‚†Ä‚†Ä‚†Ä‚†à‚£ø‚£ø‚£ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á                          
                          ‚¢®‚†Å‚¢†‚£æ‚£∂‚£¶‚†Ä‚¢∏‚£ø‚£ø‚¢†‚£æ‚£ø‚£∂‚°Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á                         
                          ‚¢∏‚†Ä‚¢∏‚£ø‚£ø‚£ø‚†§‚†ò‚†Ä‚†ò‚†º‚£ø‚£ø‚£ø‚°á‚†Ä‚¢Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø                         
                          ‚¢Ä‚°ü‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†â‚†â‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ñ                          
                          ‚¢∏‚°Ü‚†£‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚°§‚†ñ‚†Ä‚†Ä‚£†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß                          
                          ‚£º‚£ø‚£¶‚°ò‚†¢‚†§‚†§‚†§‚†§‚†§‚†í‚†â‚†Å‚†Ä‚¢Ä‚£†‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£á                         
                        ‚£º‚£ø‚£ø‚†ü‚†â‚†¢‚£Ñ‚£¢‚†ê‚£Ñ‚††‚£Ñ‚¢¢‚£º‚†û‚†â‚†Ä‚†à‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ü                        
                        ‚¢Ä‚£º‚£ø‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚†â‚†ô‚†ö‚†ì‚†ä‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ü                       
                       ‚¢†‚£æ‚£ø‚£ø‚£ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß                     
                      ‚£∞‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°Ä                   
                     ‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°Ä                  
                    ‚£∞‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑                  


#####################################################################
#####################################################################
"""

    try:
        console = Console(record=True)

        version_info = Text("v0.1.0", style="bold bright_yellow")

        # Create colorful display with the pebbling art
        display_content = (
            Text(pebbling_art, style="bold bright_cyan")
            + "\n\n"
            + Text("Pebbling ", style="bold bright_magenta")
            + version_info
            + "\n"
            + Text("üêß A Protocol Framework for Agent to Agent Communication", style="bold bright_green italic")
        )

        # Add server information if provided
        if host or port or agent_id:
            display_content += "\n\n"

            if host and port:
                display_content += Text("üöÄ Starting Pebbling Server...\n", style="bold bright_yellow")
                display_content += Text("üì° Server URL: ", style="bold bright_blue")
                display_content += Text(f"http://{host}:{port}", style="bold bright_cyan underline")
                display_content += "\n"

            if agent_id:
                display_content += Text("üêß Penguine ID: ", style="bold bright_magenta")
                display_content += Text(f"{agent_id}", style="bold bright_yellow")

        display_panel = Panel.fit(
            display_content,
            title="[bold rainbow]üêß Pebbling Protocol Framework[/bold rainbow]",
            border_style="bright_blue",
            box=box.DOUBLE,
        )

        # Don't print here, just capture and return the output
        with console.capture() as capture:
            console.print(display_panel)
        return capture.get()
    except ImportError:
        # Fallback display without rich formatting - reuse the same art
        fallback = (
            pebbling_art
            + "\n\nüêß Pebbling Protocol Framework v0.1.0\nPebbling - A Protocol Framework for Agent to Agent Communication"
        )

        if host and port:
            fallback += f"\nüöÄ Starting Pebbling Server...\nüì° Server URL: http://{host}:{port}"
        if agent_id:
            fallback += f"\nüêß Agent ID: {agent_id}"

        return fallback

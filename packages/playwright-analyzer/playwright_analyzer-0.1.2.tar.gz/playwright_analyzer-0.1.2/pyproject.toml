[project]
name = "playwright-analyzer"
version = "0.1.2"
description = "AI-powered Playwright test report analyzer using PydanticAI"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "ramchiyan1093@gmail.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Testing",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = ["playwright", "testing", "ai", "analysis", "test-reports"]
requires-python = ">=3.9"
dependencies = [
    "pydantic-ai>=0.0.16",
    "pydantic>=2.0.0",
    "openai>=1.0.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "python-dotenv>=1.0.0",
    "rich>=13.0.0",
    "jinja2>=3.1.0",
    "aiofiles>=24.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.3.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.22.0",
]

[project.scripts]
playwright-analyzer = "playwright_analyzer.analyze_report:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/playwright_analyzer"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']
skip-string-normalization = false
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | dist
  | build
)/
'''

[tool.ruff]
line-length = 100
target-version = "py39"
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "W",    # pycodestyle warnings
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "T10",  # flake8-debugger
    "T20",  # flake8-print
    "Q",    # flake8-quotes
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long
    "B008",  # do not perform function calls in argument defaults
]
exclude = [
    ".git",
    ".venv",
    "dist",
    "build",
    "__pycache__",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["T20"]  # Allow print statements in tests

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=src/playwright_analyzer",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
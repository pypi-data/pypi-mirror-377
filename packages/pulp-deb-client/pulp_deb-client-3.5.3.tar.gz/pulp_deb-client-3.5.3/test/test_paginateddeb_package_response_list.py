# coding: utf-8

"""
    Pulp 3 API

    Fetch, Upload, Organize, and Distribute Software Packages

    The version of the OpenAPI document: v3
    Contact: pulp-list@redhat.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pulpcore.client.pulp_deb.models.paginateddeb_package_response_list import PaginateddebPackageResponseList

class TestPaginateddebPackageResponseList(unittest.TestCase):
    """PaginateddebPackageResponseList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginateddebPackageResponseList:
        """Test PaginateddebPackageResponseList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaginateddebPackageResponseList`
        """
        model = PaginateddebPackageResponseList()
        if include_optional:
            return PaginateddebPackageResponseList(
                count = 123,
                next = 'http://api.example.org/accounts/?offset=400&limit=100',
                previous = 'http://api.example.org/accounts/?offset=200&limit=100',
                results = [
                    pulpcore.client.pulp_deb.models.deb/package_response.deb.PackageResponse(
                        pulp_href = '', 
                        prn = '', 
                        pulp_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        pulp_last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        pulp_labels = {
                            'key' : ''
                            }, 
                        artifact = '', 
                        relative_path = '', 
                        distribution = '', 
                        component = '', 
                        md5 = '', 
                        sha1 = '', 
                        sha224 = '', 
                        sha256 = '', 
                        sha384 = '', 
                        sha512 = '', 
                        package = '', 
                        source = '', 
                        version = '', 
                        architecture = '', 
                        section = '', 
                        priority = '', 
                        origin = '', 
                        tag = '', 
                        bugs = '', 
                        essential = '', 
                        build_essential = '', 
                        installed_size = '', 
                        maintainer = '', 
                        original_maintainer = '', 
                        description = '', 
                        description_md5 = '', 
                        homepage = '', 
                        built_using = '', 
                        auto_built_package = '', 
                        multi_arch = '', 
                        breaks = '', 
                        conflicts = '', 
                        depends = '', 
                        recommends = '', 
                        suggests = '', 
                        enhances = '', 
                        pre_depends = '', 
                        provides = '', 
                        replaces = '', )
                    ]
            )
        else:
            return PaginateddebPackageResponseList(
                count = 123,
                results = [
                    pulpcore.client.pulp_deb.models.deb/package_response.deb.PackageResponse(
                        pulp_href = '', 
                        prn = '', 
                        pulp_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        pulp_last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        pulp_labels = {
                            'key' : ''
                            }, 
                        artifact = '', 
                        relative_path = '', 
                        distribution = '', 
                        component = '', 
                        md5 = '', 
                        sha1 = '', 
                        sha224 = '', 
                        sha256 = '', 
                        sha384 = '', 
                        sha512 = '', 
                        package = '', 
                        source = '', 
                        version = '', 
                        architecture = '', 
                        section = '', 
                        priority = '', 
                        origin = '', 
                        tag = '', 
                        bugs = '', 
                        essential = '', 
                        build_essential = '', 
                        installed_size = '', 
                        maintainer = '', 
                        original_maintainer = '', 
                        description = '', 
                        description_md5 = '', 
                        homepage = '', 
                        built_using = '', 
                        auto_built_package = '', 
                        multi_arch = '', 
                        breaks = '', 
                        conflicts = '', 
                        depends = '', 
                        recommends = '', 
                        suggests = '', 
                        enhances = '', 
                        pre_depends = '', 
                        provides = '', 
                        replaces = '', )
                    ],
        )
        """

    def testPaginateddebPackageResponseList(self):
        """Test PaginateddebPackageResponseList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

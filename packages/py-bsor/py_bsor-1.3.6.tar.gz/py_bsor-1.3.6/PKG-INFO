Metadata-Version: 2.4
Name: py-bsor
Version: 1.3.6
Summary: BS Open Replay Parser, with added support for controlleroffsets and userdata/treecksaber
Author-email: Carsten Schipmann <theschippi+gh@gmail.com>
License: MIT License
        
        Copyright (c) 2022 Carsten Schipmann
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/Schippi/py-bsor
Project-URL: Bug Tracker, https://github.com/Schippi/py-bsor/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Dynamic: license-file

# BS Open Replay Python parser

[Beat Saber Open Replay format](https://github.com/BeatLeader/BS-Open-Replay) parser written in Python

## Usage
```sh
pip install py-bsor
```

example - read bsor file and print some info:
```python
from bsor.Bsor import make_bsor
from bsor.Scoring import calc_stats
import os
import io

if __name__ == '__main__':
    filename = 'D:/something/easy.bsor'
    print('File name :    ', os.path.basename(filename))
    with open(filename, 'rb') as f:
        m = make_bsor(f)
        print(f'BSOR Version: {m.file_version}')
        print(f'BSOR notes: {len(m.notes)}')
        print(m.info)
        stats = calc_stats(m)
        print(stats)
        
        
        #change player and write to file
        m.info.playerId = '76561198026425351'
        m.info.playerName = 'Schippi'
        with open('D:/_TMP/easy.testx', 'wb') as fo:
            m.write(fo)

```

build:
```sh
git tag x 
git push origin --tags
py build
py -m twine upload --repository pypi .\dist\*x*
```

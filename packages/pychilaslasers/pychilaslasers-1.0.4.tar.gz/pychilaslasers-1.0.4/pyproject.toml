[project]
name = "pychilaslasers"
version = "1.0.4"
description = "Python library for controlling Chilas lasers"
readme = "README.md"
authors = [
  { name = "Chilas B.V.", email = "software@chilas.com" }
]
license =  "Apache-2.0"

requires-python = ">=3.10"
dependencies = [
    "packaging>=25.0",
    "pyserial>=3.5",
]

[dependency-groups]
dev = [
    "pre-commit>=4.3.0",
    "pychilaslasers",
    "pytest>=8.4.1",
    "types-pyserial>=3.5.0.20250914",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-api-autonav>=0.3.1",
    "mkdocs-drawio-exporter>=0.10.2",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-literate-nav>=0.6.2",
    "mkdocs-material>=9.6.18",
    "mkdocstrings[python]>=0.30.0",
]

[tool.uv.sources]
pychilaslasers = { workspace = true }


[tool.pyright]

reportOptionalMemberAccess = "warning"
reportAttributeAccessIssue = "warning"

[tool.mypy]
ignore_missing_imports = true
mypy_path = ["src"]


[tool.ruff]
exclude = [
    "utils.py",
    "docs/",
    "examples/",
    "tests/",
    "test/"
]

[tool.ruff.lint]

select = ["D100", "D101", "D102", "D103", "D104", "D105", "D107","F","E","W",
"I","UP","B","D","RUF", "TID", "TCH","N"]

# Ignore one side of each conflict:
ignore = [
  "D203",  # prefer D211 (no blank line before class)
  "D213",  # prefer D212 (summary on first line)
]

[tool.ruff.lint.isort]
known-first-party = ["pychilaslasers"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
combine-as-imports = true
force-sort-within-sections = true


[tool.ruff.lint.flake8-type-checking]
strict = true             # pushes typing-only imports into `if TYPE_CHECKING:`


[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
# Optional: Ruff formatter settings
indent-style = "space"

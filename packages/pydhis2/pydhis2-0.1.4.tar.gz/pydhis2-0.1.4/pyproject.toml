[build-system]
requires = ["hatchling>=1.0.0"]
build-backend = "hatchling.build"

[project]
name = "pydhis2"
version = "0.1.4"
description = "Reproducible DHIS2 Python SDK for LMIC scenarios"
readme = "README_EN.md"
license = "Apache-2.0"
authors = [
    {name = "pydhis2 contributors"},
]
keywords = ["dhis2", "health", "data", "analytics", "async", "pandas"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Healthcare Industry",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "aiohttp>=3.8.0",
    "pydantic>=2.0.0",
    "pandas>=1.5.0",
    "pyarrow>=10.0.0",
    "jinja2>=3.0.0",
    "typer>=0.9.0",
    "tenacity>=8.0.0",
    "aiolimiter>=1.1.0",
    "keyring>=24.0.0",
    "pyyaml>=6.0.0",
    "plotly>=5.0.0",
    "rich>=13.0.0",
    "aiofiles>=23.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "hypothesis>=6.0.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "cookiecutter>=2.1.0",
]
docs = [
    "sphinx>=6.0.0", 
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
otel = [
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
    "opentelemetry-instrumentation-aiohttp-client>=0.41b0",
]

[project.scripts]
pydhis2 = "pydhis2.cli.main:app"
pydhis2-quick-demo = "quick_demo:main"
pydhis2-demo-test = "demo_test:main"
pydhis2-health-demo = "real_health_data_demo:main"
pydhis2-daily-sync = "examples.daily_sync:main"
pydhis2-monthly-report = "examples.monthly_report:main"

[project.urls]
Homepage = "https://github.com/pydhis2/pydhis2"
Documentation = "https://pydhis2.readthedocs.io"
Repository = "https://github.com/pydhis2/pydhis2"
Issues = "https://github.com/pydhis2/pydhis2/issues"

[tool.hatch.build.targets.wheel]
packages = ["pydhis2"]

[tool.hatch.build.targets.sdist]
# Only include essential files
include = [
    "LICENSE",
    "CHANGELOG.md", 
    "CONTRIBUTING.md",
    "README_EN.md",
    "demo_test.py",
    "real_health_data_demo.py", 
    "quick_demo.py",
    "examples/*.py",
    "pydhis2/",
]
exclude = [
    "SSM_Health_Systems_Submission/",
    "temp_dhis2_lib/",
]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*", "*Tests"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=pydhis2",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["pydhis2"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

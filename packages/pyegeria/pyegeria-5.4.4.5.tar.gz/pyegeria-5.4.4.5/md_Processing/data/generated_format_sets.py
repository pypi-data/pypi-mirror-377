# Auto-generated by gen_format_sets.py
from pyegeria._output_format_models import Column, Format, ActionParameter, FormatSet, FormatSetDict

generated_format_sets = FormatSetDict({
    'Agreement-DrE': FormatSet(target_type='Agreement-DrE', heading='Agreement-DrE Attributes', description='Auto-generated format for Agreement (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Description', key='description'), Column(name='Identifier', key='agreement_identifier'), Column(name='Category', key='category'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Version Identifier', key='version_identifier'), Column(name='Agreement Actors', key='agreement_actors'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='CollectionManager.find_collections', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['Agreement']})),
    'Business-Imperative-DrE': FormatSet(target_type='Business-Imperative-DrE', heading='Business-Imperative-DrE Attributes', description='Auto-generated format for Business Imperative (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Identifier', key='identifier'), Column(name='Version Identifier', key='version_identifier'), Column(name='Usage', key='usage'), Column(name='Scope', key='scope'), Column(name='Importance', key='importance'), Column(name='Implications', key='implications'), Column(name='Outcomes', key='outcomes'), Column(name='Results', key='results'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GovernanceOfficer.find_governance_definitions', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['GovernanceDriver']})),
    'Campaign-DrE': FormatSet(target_type='Campaign-DrE', heading='Campaign-DrE Attributes', description='Auto-generated format for Campaign (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Description', key='description'), Column(name='Project Type', key='project_type'), Column(name='Category', key='category'), Column(name='Identifier', key='project_identifier'), Column(name='Mission', key='mission'), Column(name='Purposes', key='purposes'), Column(name='Start Date', key='start_date'), Column(name='Planned End Date', key='end_date'), Column(name='Priority', key='priority'), Column(name='Project Phase', key='project_phase'), Column(name='Project Status', key='project_status'), Column(name='Project Health', key='project_health'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='ProjectManager.find_projects', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'classification_names': ['Campaign']})),
    'Certification-Type-DrE': FormatSet(target_type='Certification-Type-DrE', heading='Certification-Type-DrE Attributes', description='Auto-generated format for Certification Type (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Document Identifier', key='document_identifier'), Column(name='Version Identifier', key='version_identifier'), Column(name='Scope', key='scope'), Column(name='Importance', key='importance'), Column(name='Details', key='details'), Column(name='Implications', key='implications'), Column(name='Outcomes', key='outcomes'), Column(name='Results', key='results'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GovernanceOfficer.find_governance_definitions', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['CertificationTYpe']})),
    'Collection-DrE': FormatSet(target_type='Collection-DrE', heading='Collection-DrE Attributes', description='Auto-generated format for Collection (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Description', key='description'), Column(name='Classifications', key='classifications'), Column(name='Category', key='category'), Column(name='Version Identifier', key='current_version'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='CollectionManager.find_collections', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'])),
    'Data-Class-DrE': FormatSet(target_type='Data-Class-DrE', heading='Data-Class-DrE Attributes', description='Auto-generated format for Data Class (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Status', key='element_status'), Column(name='Namespace', key='namespace'), Column(name='Match Property Names', key='match_property_names'), Column(name='Match Threshold', key='match_threshold'), Column(name='IsCaseSensitive', key='is_case_sensitive'), Column(name='Data Type', key='data_type'), Column(name='Allow Duplicate Values', key='duplicates_allowed'), Column(name='isNullable', key='is_nullable'), Column(name='Default Value', key='default_value'), Column(name='Average Value', key='avg_value'), Column(name='Value List', key='value_list'), Column(name='Value Range From', key='value_range_from'), Column(name='Value Range To', key='value_range_to'), Column(name='Sample Values', key='sample_values'), Column(name='Data Patterns', key='data_patterns'), Column(name='In Data Dictionary', key='in_data_dictionary'), Column(name='Containing Data Class', key='containing_data_class'), Column(name='Specializes Data Class', key='specializes_data_class'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='DataDesigner.find_data_classes', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'])),
    'Data-Dictionary-DrE': FormatSet(target_type='Data-Dictionary-DrE', heading='Data-Dictionary-DrE Attributes', description='Auto-generated format for Data Dictionary (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='CollectionManager.find_collections', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['DataDictionary']})),
    'Data-Field-DrE': FormatSet(target_type='Data-Field-DrE', heading='Data-Field-DrE Attributes', description='Auto-generated format for Data Field (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Status', key='element_status'), Column(name='Data Type', key='data_type'), Column(name='Position', key='position'), Column(name='Minimum Cardinality', key='min_cardinality'), Column(name='Maximum Cardinality', key='max_cardinality'), Column(name='In Data Structure', key='in_data_structure'), Column(name='Data Class', key='data_class'), Column(name='Glossary Term', key='glossary_term'), Column(name='isNullable', key='is_nullable'), Column(name='Minimum Length', key='min_length'), Column(name='Length', key='length'), Column(name='Precision', key='precision'), Column(name='Ordered Values', key='ordered_values'), Column(name='Units', key='units'), Column(name='Default Value', key='default_value'), Column(name='Version Identifier', key='version_id'), Column(name='In Data Dictionary', key='in_data_dictionary'), Column(name='Parent Data Field', key='parent_data_field'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='DataDesigner.find_data_fields', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'])),
    'Data-Processing-Purpose-DrE': FormatSet(target_type='Data-Processing-Purpose-DrE', heading='Data-Processing-Purpose-DrE Attributes', description='Auto-generated format for Data Processing Purpose (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Identifier', key='identifier'), Column(name='Version Identifier', key='version_identifier'), Column(name='Usage', key='usage'), Column(name='Scope', key='scope'), Column(name='Importance', key='importance'), Column(name='Implications', key='implications'), Column(name='Outcomes', key='outcomes'), Column(name='Results', key='results'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GovernanceOfficer.find_governance_definitions', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['DataProcessingPurpose']})),
    'Data-Sharing-Agreement-DrE': FormatSet(target_type='Data-Sharing-Agreement-DrE', heading='Data-Sharing-Agreement-DrE Attributes', description='Auto-generated format for Data Sharing Agreement (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Identifier', key='identifier'), Column(name='Status', key='element_status'), Column(name='User_Defined_Status', key='user_defined_status'), Column(name='Version Identifier', key='version_identifier'), Column(name='Product Manager', key='product_manager'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='CollectionManager.find_collections', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'classification_names': ['DataSharingAgreement']})),
    'Data-Specification-DrE': FormatSet(target_type='Data-Specification-DrE', heading='Data-Specification-DrE Attributes', description='Auto-generated format for Data Specification (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='CollectionManager.find_collections', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['DataSpec']})),
    'Data-Structure-DrE': FormatSet(target_type='Data-Structure-DrE', heading='Data-Structure-DrE Attributes', description='Auto-generated format for Data Structure (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Status', key='element_status'), Column(name='In Data Specification', key='in_data_spec'), Column(name='In Data Dictionary', key='in_data_dictionary'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='DataDesigner.find_data_structures', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'])),
    'Digital-Product-DrE': FormatSet(target_type='Digital-Product-DrE', heading='Digital-Product-DrE Attributes', description='Auto-generated format for Digital Product (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Description', key='description'), Column(name='Product Name', key='product_name'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Category', key='category'), Column(name='Identifier', key='identifier'), Column(name='Maturity', key='maturity'), Column(name='Service Life', key='service_life'), Column(name='Introduction Date', key='introduction_date'), Column(name='Next Version Date', key='next_version_date'), Column(name='Withdrawal Date', key='withdrawal_date'), Column(name='Version Identifier', key='current_version'), Column(name='Product Manager', key='product_manager'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='CollectionManager.find_collections', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['DigitalProduct']})),
    'Digital-Subscription-DrE': FormatSet(target_type='Digital-Subscription-DrE', heading='Digital-Subscription-DrE Attributes', description='Auto-generated format for Digital Subscription (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Description', key='description'), Column(name='Identifier', key='identifier'), Column(name='Category', key='category'), Column(name='Status', key='element_status'), Column(name='User_Defined_Status', key='user_defined_status'), Column(name='Support Level', key='support_level'), Column(name='Service Levels', key='service_levels'), Column(name='Version Identifier', key='version_identifier'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='CollectionManager.find_collections', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['DigitalSubscription']})),
    'External-Data-Source-DrE': FormatSet(target_type='External-Data-Source-DrE', heading='External-Data-Source-DrE Attributes', description='Auto-generated format for External Data Source (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Reference Title', key='reference_title'), Column(name='Reference Abstract', key='reference_abstract'), Column(name='Authors', key='authors'), Column(name='Organization', key='organization'), Column(name='URL', key='reference_url'), Column(name='Sources', key='reference_sources'), Column(name='License', key='license'), Column(name='Copyright', key='copyright'), Column(name='Version Identifier', key='current_version'), Column(name='Classifications', key='classifications'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='ExternalReference.find_external_references', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['ExternalDataSource']})),
    'External-Reference-DrE': FormatSet(target_type='External-Reference-DrE', heading='External-Reference-DrE Attributes', description='Auto-generated format for External Reference (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Reference Title', key='reference_title'), Column(name='Reference Abstract', key='reference_abstract'), Column(name='Authors', key='authors'), Column(name='Organization', key='organization'), Column(name='URL', key='reference_url'), Column(name='Sources', key='reference_sources'), Column(name='License', key='license'), Column(name='Copyright', key='copyright'), Column(name='Number of Pages', key='number_of_pages'), Column(name='Page Range', key='page_range'), Column(name='Publication Series', key='publication_series'), Column(name='Publication Series Volume', key='pub_series_volume'), Column(name='Publisher', key='publisher'), Column(name='First Publication Date', key='first_pub_date'), Column(name='Publication Date', key='pub_date'), Column(name='Publication City', key='pub_city'), Column(name='Publication Year', key='pub_year'), Column(name='Publication Numbers', key='pub_numbers'), Column(name='Version Identifier', key='current_version'), Column(name='Classifications', key='classifications'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='ExternalReference.find_external_references', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['CitedDocument']})),
    'Glossary-DrE': FormatSet(target_type='Glossary-DrE', heading='Glossary-DrE Attributes', description='Auto-generated format for Glossary (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Language', key='language'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='CollectionManager.find_collections', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['Glossary']})),
    'Glossary-Term-DrE': FormatSet(target_type='Glossary-Term-DrE', heading='Glossary-Term-DrE Attributes', description='Auto-generated format for Glossary Term (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='term_name'), Column(name='Glossary', key='glossary_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Abbreviation', key='abbreviation'), Column(name='Example', key='example'), Column(name='Usage', key='usage'), Column(name='Status', key='element_status'), Column(name='Version Identifier', key='version_identifier'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GlossaryManager.find_glossary_terms', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'])),
    'Governance-Action-DrE': FormatSet(target_type='Governance-Action-DrE', heading='Governance-Action-DrE Attributes', description='Auto-generated format for Governance Action (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Identifier', key='identifier'), Column(name='Version Identifier', key='version_identifier'), Column(name='Usage', key='usage'), Column(name='Scope', key='scope'), Column(name='Importance', key='importance'), Column(name='Implications', key='implications'), Column(name='Outcomes', key='outcomes'), Column(name='Results', key='results'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GovernanceOfficer.find_governance_definitions', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['GovernanceAction']})),
    'Governance-Approach-DrE': FormatSet(target_type='Governance-Approach-DrE', heading='Governance-Approach-DrE Attributes', description='Auto-generated format for Governance Approach (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Identifier', key='identifier'), Column(name='Version Identifier', key='version_identifier'), Column(name='Usage', key='usage'), Column(name='Scope', key='scope'), Column(name='Importance', key='importance'), Column(name='Implications', key='implications'), Column(name='Outcomes', key='outcomes'), Column(name='Results', key='results'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GovernanceOfficer.find_governance_definitions', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['GovernanceApproach']})),
    'Governance-Control-DrE': FormatSet(target_type='Governance-Control-DrE', heading='Governance-Control-DrE Attributes', description='Auto-generated format for Governance Control (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Identifier', key='identifier'), Column(name='Version Identifier', key='version_identifier'), Column(name='Usage', key='usage'), Column(name='Scope', key='scope'), Column(name='Importance', key='importance'), Column(name='measurement', key='measurement'), Column(name='target', key='target'), Column(name='Implications', key='implications'), Column(name='Outcomes', key='outcomes'), Column(name='Results', key='results'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GovernanceOfficer.find_governance_definitions', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['GovernanceMetric']})),
    'Governance-Driver-DrE': FormatSet(target_type='Governance-Driver-DrE', heading='Governance-Driver-DrE Attributes', description='Auto-generated format for Governance Driver (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Identifier', key='identifier'), Column(name='Version Identifier', key='version_identifier'), Column(name='Usage', key='usage'), Column(name='Scope', key='scope'), Column(name='Importance', key='importance'), Column(name='Implications', key='implications'), Column(name='Outcomes', key='outcomes'), Column(name='Results', key='results'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GovernanceOfficer.find_governance_definitions', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['GovernanceDriver']})),
    'Governance-Obligation-DrE': FormatSet(target_type='Governance-Obligation-DrE', heading='Governance-Obligation-DrE Attributes', description='Auto-generated format for Governance Obligation (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Identifier', key='identifier'), Column(name='Version Identifier', key='version_identifier'), Column(name='Usage', key='usage'), Column(name='Scope', key='scope'), Column(name='Importance', key='importance'), Column(name='Implications', key='implications'), Column(name='Outcomes', key='outcomes'), Column(name='Results', key='results'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GovernanceOfficer.find_governance_definitions', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['GovernanceObligation']})),
    'Governance-Policy-DrE': FormatSet(target_type='Governance-Policy-DrE', heading='Governance-Policy-DrE Attributes', description='Auto-generated format for Governance Policy (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Identifier', key='identifier'), Column(name='Version Identifier', key='version_identifier'), Column(name='Usage', key='usage'), Column(name='Scope', key='scope'), Column(name='Importance', key='importance'), Column(name='Implications', key='implications'), Column(name='Outcomes', key='outcomes'), Column(name='Results', key='results'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GovernanceOfficer.find_governance_definitions', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['GovernancePolicy']})),
    'Governance-Principle-DrE': FormatSet(target_type='Governance-Principle-DrE', heading='Governance-Principle-DrE Attributes', description='Auto-generated format for Governance Principle (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Identifier', key='identifier'), Column(name='Version Identifier', key='version_identifier'), Column(name='Usage', key='usage'), Column(name='Scope', key='scope'), Column(name='Importance', key='importance'), Column(name='Implications', key='implications'), Column(name='Outcomes', key='outcomes'), Column(name='Results', key='results'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GovernanceOfficer.find_governance_definitions', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['GovernancePrinciple']})),
    'Governance-Procedure-DrE': FormatSet(target_type='Governance-Procedure-DrE', heading='Governance-Procedure-DrE Attributes', description='Auto-generated format for Governance Procedure (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Document Identifier', key='document_identifier'), Column(name='Version Identifier', key='version_identifier'), Column(name='Scope', key='scope'), Column(name='Importance', key='importance'), Column(name='Implementation Description', key='implementation_description'), Column(name='Supports Policies', key='supports_policies'), Column(name='Implications', key='implications'), Column(name='Outcomes', key='outcomes'), Column(name='Results', key='results'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GovernanceOfficer.find_governance_definitions', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['GovernanceProcedure']})),
    'Governance-Responsibility-DrE': FormatSet(target_type='Governance-Responsibility-DrE', heading='Governance-Responsibility-DrE Attributes', description='Auto-generated format for Governance Responsibility (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Document Identifier', key='document_identifier'), Column(name='Version Identifier', key='version_identifier'), Column(name='Scope', key='scope'), Column(name='Importance', key='importance'), Column(name='Implementation Description', key='implementation_description'), Column(name='Supports Policies', key='supports_policies'), Column(name='Implications', key='implications'), Column(name='Outcomes', key='outcomes'), Column(name='Results', key='results'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GovernanceOfficer.find_governance_definitions', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['GovernanceResponsibility']})),
    'Governance-Rule-DrE': FormatSet(target_type='Governance-Rule-DrE', heading='Governance-Rule-DrE Attributes', description='Auto-generated format for Governance Rule (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Document Identifier', key='document_identifier'), Column(name='Version Identifier', key='version_identifier'), Column(name='Scope', key='scope'), Column(name='Importance', key='importance'), Column(name='Implementation Description', key='implementation_description'), Column(name='Supports Policies', key='supports_policies'), Column(name='Implications', key='implications'), Column(name='Outcomes', key='outcomes'), Column(name='Results', key='results'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GovernanceOfficer.find_governance_definitions', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['GovernanceRule']})),
    'Governance-Strategy-DrE': FormatSet(target_type='Governance-Strategy-DrE', heading='Governance-Strategy-DrE Attributes', description='Auto-generated format for Governance Strategy (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Identifier', key='identifier'), Column(name='Version Identifier', key='version_identifier'), Column(name='Usage', key='usage'), Column(name='Scope', key='scope'), Column(name='Importance', key='importance'), Column(name='Implications', key='implications'), Column(name='Outcomes', key='outcomes'), Column(name='Results', key='results'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GovernanceOfficer.find_governance_definitions', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['GovernanceStrategy']})),
    'Information-Supply-Chain-DrE': FormatSet(target_type='Information-Supply-Chain-DrE', heading='Information-Supply-Chain-DrE Attributes', description='Auto-generated format for Information Supply Chain (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Scope', key='scope'), Column(name='Purposes', key='purposes'), Column(name='Nested Information Supply Chains', key='nested_info_supply_chains'), Column(name='In Information Supply Chain', key='in_supply_chain'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid'), Column(name='Merge Update', key='merge_update')])], action=ActionParameter(function='SolutionArchitect.find_information_supply_chains', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'])),
    'License-Type-DrE': FormatSet(target_type='License-Type-DrE', heading='License-Type-DrE Attributes', description='Auto-generated format for License Type (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Document Identifier', key='document_identifier'), Column(name='Version Identifier', key='version_identifier'), Column(name='Scope', key='scope'), Column(name='Importance', key='importance'), Column(name='Details', key='details'), Column(name='Implications', key='implications'), Column(name='Outcomes', key='outcomes'), Column(name='Results', key='results'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GovernanceOfficer.find_governance_definitions', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['LicenseType']})),
    'Naming-Standard-Rule-DrE': FormatSet(target_type='Naming-Standard-Rule-DrE', heading='Naming-Standard-Rule-DrE Attributes', description='Auto-generated format for Naming Standard Rule (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Document Identifier', key='document_identifier'), Column(name='Version Identifier', key='version_identifier'), Column(name='Scope', key='scope'), Column(name='Importance', key='importance'), Column(name='Implementation Description', key='implementation_description'), Column(name='Supports Policies', key='supports_policies'), Column(name='Name Patterns', key='implications'), Column(name='Outcomes', key='outcomes'), Column(name='Results', key='results'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GovernanceOfficer.find_governance_definitions', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['NamingStandardRule']})),
    'Personal-Project-DrE': FormatSet(target_type='Personal-Project-DrE', heading='Personal-Project-DrE Attributes', description='Auto-generated format for Personal Project (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Description', key='description'), Column(name='Project Type', key='project_type'), Column(name='Category', key='category'), Column(name='Identifier', key='project_identifier'), Column(name='Mission', key='mission'), Column(name='Purposes', key='purposes'), Column(name='Start Date', key='start_date'), Column(name='Planned End Date', key='end_date'), Column(name='Priority', key='priority'), Column(name='Project Phase', key='project_phase'), Column(name='Project Status', key='project_status'), Column(name='Project Health', key='project_health'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='ProjectManager.find_projects', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'classification_names': ['PersonalProject']})),
    'Project-DrE': FormatSet(target_type='Project-DrE', heading='Project-DrE Attributes', description='Auto-generated format for Project (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Description', key='description'), Column(name='Project Type', key='project_type'), Column(name='Category', key='category'), Column(name='Identifier', key='project_identifier'), Column(name='Mission', key='mission'), Column(name='Purposes', key='purposes'), Column(name='Start Date', key='start_date'), Column(name='Planned End Date', key='end_date'), Column(name='Priority', key='priority'), Column(name='Project Phase', key='project_phase'), Column(name='Project Status', key='project_status'), Column(name='Project Health', key='project_health'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='ProjectManager.find_projects', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'])),
    'Regulation-Article-DrE': FormatSet(target_type='Regulation-Article-DrE', heading='Regulation-Article-DrE Attributes', description='Auto-generated format for Regulation Article (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Identifier', key='identifier'), Column(name='Version Identifier', key='version_identifier'), Column(name='Usage', key='usage'), Column(name='Scope', key='scope'), Column(name='Importance', key='importance'), Column(name='Implications', key='implications'), Column(name='Outcomes', key='outcomes'), Column(name='Results', key='results'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GovernanceOfficer.find_governance_definitions', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['RegulationArticle']})),
    'Regulation-DrE': FormatSet(target_type='Regulation-DrE', heading='Regulation-DrE Attributes', description='Auto-generated format for Regulation (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Identifier', key='identifier'), Column(name='Version Identifier', key='version_identifier'), Column(name='Usage', key='usage'), Column(name='Scope', key='scope'), Column(name='Importance', key='importance'), Column(name='Regulation Source', key='regulation_source'), Column(name='Regulators', key='regulators'), Column(name='Implications', key='implications'), Column(name='Outcomes', key='outcomes'), Column(name='Results', key='results'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GovernanceOfficer.find_governance_definitions', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['Regulation']})),
    'Security-Access-Control-DrE': FormatSet(target_type='Security-Access-Control-DrE', heading='Security-Access-Control-DrE Attributes', description='Auto-generated format for Security Access Control (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Identifier', key='identifier'), Column(name='Version Identifier', key='version_identifier'), Column(name='Usage', key='usage'), Column(name='Scope', key='scope'), Column(name='Importance', key='importance'), Column(name='Implications', key='implications'), Column(name='Outcomes', key='outcomes'), Column(name='Results', key='results'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GovernanceOfficer.find_governance_definitions', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['SecurityAccessControl']})),
    'Security-Group-DrE': FormatSet(target_type='Security-Group-DrE', heading='Security-Group-DrE Attributes', description='Auto-generated format for Security Group (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Identifier', key='identifier'), Column(name='Version Identifier', key='version_identifier'), Column(name='Usage', key='usage'), Column(name='Scope', key='scope'), Column(name='Importance', key='importance'), Column(name='Implications', key='implications'), Column(name='Outcomes', key='outcomes'), Column(name='Results', key='results'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GovernanceOfficer.find_governance_definitions', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['SEcurityGroup']})),
    'security_access_control-DrE': FormatSet(target_type='security_access_control-DrE', heading='security_access_control-DrE Attributes', description='Auto-generated format for security_access_control (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Identifier', key='identifier'), Column(name='Version Identifier', key='version_identifier'), Column(name='Usage', key='usage'), Column(name='Scope', key='scope'), Column(name='Importance', key='importance'), Column(name='criteria', key='criteria'), Column(name='Implications', key='implications'), Column(name='Outcomes', key='outcomes'), Column(name='Results', key='results'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GovernanceOfficer.find_governance_definitions', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['GovernanceZone']})),
    'Service-Level-Objectives-DrE': FormatSet(target_type='Service-Level-Objectives-DrE', heading='Service-Level-Objectives-DrE Attributes', description='Auto-generated format for Service Level Objectives (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Document Identifier', key='document_identifier'), Column(name='Version Identifier', key='version_identifier'), Column(name='Scope', key='scope'), Column(name='Importance', key='importance'), Column(name='Implementation Description', key='implementation_description'), Column(name='Supports Policies', key='supports_policies'), Column(name='Implications', key='implications'), Column(name='Outcomes', key='outcomes'), Column(name='Results', key='results'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GovernanceOfficer.find_governance_definitions', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['ServiceLevelObjectives']})),
    'Solution-Blueprint-DrE': FormatSet(target_type='Solution-Blueprint-DrE', heading='Solution-Blueprint-DrE Attributes', description='Auto-generated format for Solution Blueprint (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Status', key='element_status'), Column(name='Version Identifier', key='version_id'), Column(name='Solution Components', key='solution_components'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='SolutionArchitect.find_solution_blueprints', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'])),
    'Solution-Component-DrE': FormatSet(target_type='Solution-Component-DrE', heading='Solution-Component-DrE Attributes', description='Auto-generated format for Solution Component (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Qualified Name', key='qualified_name'), Column(name='Category', key='category'), Column(name='Description', key='description'), Column(name='Status', key='element_status'), Column(name='Solution Component Type', key='soln_comp_type'), Column(name='Planned Deployed Implementation Type', key='planned_deployed_impl_type'), Column(name='Initial Status', key='initial_status'), Column(name='In Solution Components', key='in_components'), Column(name='In Solution Blueprints', key='solution_blueprints'), Column(name='In Information Supply Chains', key='in_supply_chains'), Column(name='Actors', key='actors'), Column(name='GUID', key='guid'), Column(name='Merge Update', key='merge_update')])], action=ActionParameter(function='SolutionArchitect.find_solution_components', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'])),
    'Solution-Role-DrE': FormatSet(target_type='Solution-Role-DrE', heading='Solution-Role-DrE Attributes', description='Auto-generated format for Solution Role (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Name', key='name'), Column(name='Description', key='description'), Column(name='Title', key='title'), Column(name='Scope', key='scope'), Column(name='identifier', key='identifier'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Category', key='category'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='SolutionArchitect.find_solution_roles', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'])),
    'Study-Project-DrE': FormatSet(target_type='Study-Project-DrE', heading='Study-Project-DrE Attributes', description='Auto-generated format for Study Project (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Description', key='description'), Column(name='Project Type', key='project_type'), Column(name='Category', key='category'), Column(name='Identifier', key='project_identifier'), Column(name='Mission', key='mission'), Column(name='Purposes', key='purposes'), Column(name='Start Date', key='start_date'), Column(name='Planned End Date', key='end_date'), Column(name='Priority', key='priority'), Column(name='Project Phase', key='project_phase'), Column(name='Project Status', key='project_status'), Column(name='Project Health', key='project_health'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='ProjectManager.find_projects', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'classification_names': ['StudyProject']})),
    'Task-DrE': FormatSet(target_type='Task-DrE', heading='Task-DrE Attributes', description='Auto-generated format for Task (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Description', key='description'), Column(name='Project Type', key='project_type'), Column(name='Category', key='category'), Column(name='Identifier', key='project_identifier'), Column(name='Mission', key='mission'), Column(name='Purposes', key='purposes'), Column(name='Start Date', key='start_date'), Column(name='Planned End Date', key='end_date'), Column(name='Priority', key='priority'), Column(name='Project Phase', key='project_phase'), Column(name='Project Status', key='project_status'), Column(name='Project Health', key='project_health'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='ProjectManager.find_projects', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'classification_names': ['Task']})),
    'Threat-Definition-DrE': FormatSet(target_type='Threat-Definition-DrE', heading='Threat-Definition-DrE Attributes', description='Auto-generated format for Threat Definition (Create).', formats=[Format(types=['ALL'], columns=[Column(name='Display Name', key='display_name'), Column(name='Summary', key='summary'), Column(name='Description', key='description'), Column(name='Category', key='category'), Column(name='Domain Identifier', key='domain_identifier'), Column(name='Identifier', key='identifier'), Column(name='Version Identifier', key='version_identifier'), Column(name='Usage', key='usage'), Column(name='Scope', key='scope'), Column(name='Importance', key='importance'), Column(name='Implications', key='implications'), Column(name='Outcomes', key='outcomes'), Column(name='Results', key='results'), Column(name='Status', key='element_status'), Column(name='User Defined Status', key='user_defined_status'), Column(name='Qualified Name', key='qualified_name'), Column(name='GUID', key='guid')])], action=ActionParameter(function='GovernanceOfficer.find_governance_definitions', required_params=['search_string'], optional_params=['page_size', 'start_from', 'starts_with', 'ends_with', 'ignore_case'], spec_params={'metadata_element_types': ['ThreatDefinition']}))
})

# .github/workflows/publish.yml
name: Publish to PyPI

on:
  release:
    types: [published]  # üéØ This triggers when you create a release

permissions:
  contents: read
  id-token: write  # For trusted publishing to PyPI

jobs:
  publish:
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pysfmc
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'  # Required for tomlib

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
        
    # TODO : fix toml / tomllib import
    #- name: Verify version matches tag
    #  run: |
    #    TAG_VERSION=${GITHUB_REF#refs/tags/v}
    #    PACKAGE_VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")
    #    if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
    #      echo "Tag version ($TAG_VERSION) doesn't match package version ($PACKAGE_VERSION)"
    #      exit 1
    #    fi

    - name: Build package
      run: uv build

    - name: Validate build artifacts
      run: |
        echo "üîç Validating build artifacts..."
        ls -la dist/
        # Check that both wheel and sdist were created
        if [ ! -f dist/*.whl ]; then
          echo "‚ùå No wheel file found in dist/"
          exit 1
        fi
        if [ ! -f dist/*.tar.gz ]; then
          echo "‚ùå No source distribution found in dist/"
          exit 1
        fi
        echo "‚úÖ Build artifacts validated successfully"

    - name: Publish to PyPI
      run: |
        echo "üöÄ Publishing to PyPI..."
        uv publish
        echo "‚úÖ Successfully published to PyPI"
      env:
        UV_PUBLISH_TOKEN: ${{ secrets.PYPI_API_TOKEN }}

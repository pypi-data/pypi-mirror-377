name: Build & Release

on:
  push:
    tags:
      - "[0-9][0-9][0-9][0-9].[1-9][0-2]?.[0-9]"
      - "[0-9][0-9][0-9][0-9].[1-9][0-2]?.[0-9]+b[0-9]+"

run-name: "Build and release ${{ github.ref_name }}"

env:
  ARTIFACT_PATH: artifacts
  BETA_RELEASE: ${{ contains(github.ref_name, 'b') }} 
  PACKAGE_NAME: pyvelop

jobs:
  init:
    name: Initialise
    outputs:
      beta_release: ${{ steps.variables.outputs.beta_release }}
      
    runs-on: ubuntu-latest
    steps:
      - name: Variables
        id: variables
        run: |
          echo "beta_release=${{ env.BETA_RELEASE }}" >> "$GITHUB_OUTPUT"

  build:
    name: Build
    needs:
      - init
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
          
      - name: Install prereqs
        run: |
          python -m pip install aiohttp build Sphinx sphinx-rtd-theme

      - name: Build distribution packages
        run: |
          python -m build --outdir ${{ env.ARTIFACT_PATH }}/dist

      - name: Build & clean documentation
        run: |
          sphinx-build --builder html --doctree-dir .doctrees --fresh-env --write-all docs/source docs/build
          mkdir ${{ env.ARTIFACT_PATH }}/docs
          cd docs/build
          zip -r "${{ env.PACKAGE_NAME }}-${{ github.ref_name }}-help.zip" *.html *.js _static
          mv "${{ env.PACKAGE_NAME }}-${{ github.ref_name }}-help.zip" "../../${{ env.ARTIFACT_PATH }}/docs"

      - name: Upload the artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.PACKAGE_NAME }}-${{ github.ref_name }}"
          path: "${{ env.ARTIFACT_PATH }}"
          if-no-files-found: error
          retention-days: 1  

  release:
    name: Release
    needs: 
      - init
      - build
    runs-on: ubuntu-latest
    
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: |
            ${{ env.PACKAGE_NAME }}-${{ github.ref_name }}/dist/${{ env.PACKAGE_NAME }}-${{ github.ref_name }}*
            ${{ env.PACKAGE_NAME }}-${{ github.ref_name }}/docs/${{ env.PACKAGE_NAME }}-${{ github.ref_name }}*
          generate_release_notes: true
          prerelease: ${{ needs.init.outputs.beta_release }}

  publish:
    if: ${{ needs.init.outputs.beta_release != 'true' }}

    name: Publish
    needs: 
      - init
      - build
      - release

    permissions: 
      id-token: write

    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with: 
          packages-dir: "${{ env.PACKAGE_NAME }}-${{ github.ref_name }}/dist"
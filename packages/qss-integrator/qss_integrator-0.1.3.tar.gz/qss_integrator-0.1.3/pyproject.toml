[build-system]
requires = ["setuptools>=45", "wheel", "pybind11>=2.6"]
build-backend = "setuptools.build_meta"

[project]
name = "qss-integrator"
version = "0.1.3"
description = "Quasi-Steady State method for stiff ODE systems with focus on combustion chemistry"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Eloghosa", email = "eloghosaefficiency@gmail.com"},
]
maintainers = [
    {name = "Eloghosa", email = "eloghosaefficiency@gmail.com"},
]
keywords = ["ode", "stiff", "quasi-steady-state", "combustion", "chemical-kinetics", "numerical-methods"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: C++",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.16.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "flake8",
    "mypy",
]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
    "myst-parser",
]
examples = [
    "cantera>=3.0",
    "matplotlib>=3.0",
    "scipy>=1.0",
]

[project.urls]
Homepage = "https://github.com/elotech47/pyQSS"
Documentation = "https://github.com/elotech47/pyQSS/blob/main/README.md"
Repository = "https://github.com/elotech47/pyQSS.git"
Issues = "https://github.com/elotech47/pyQSS/issues"

[tool.setuptools]
packages = ["qss_integrator"]
include-package-data = true

[tool.cibuildwheel]
# Build for multiple Python versions
build = ["cp38-*", "cp39-*", "cp310-*", "cp311-*", "cp312-*"]

# Skip certain platforms
skip = ["*-win32", "*-musllinux*"]

# Environment variables
# environment = { PYTHONPATH = "{project}" }  # Removed to prevent source directory conflicts

# Before build steps
before-build = "pip install pybind11"

# Test command
test-command = "python -c \"import qss_integrator; from qss_integrator import QssIntegrator, PyQssOde; print('SUCCESS')\""

# macOS specific settings
[tool.cibuildwheel.macos]
# Use the default architecture (universal2 for modern macOS)
archs = ["x86_64", "arm64"]

# Windows specific settings  
[tool.cibuildwheel.windows]
# Use the default architecture
archs = ["AMD64"]

# Linux specific settings
[tool.cibuildwheel.linux]
# Use the default architecture
archs = ["x86_64"]
# Repair wheels for Linux (auditwheel is Linux-only)
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel}"

[tool.setuptools.package-data]
# Include all compiled extensions and source files
qss_integrator = ["*.so", "*.pyd", "*.dll", "src/*.h", "src/*.cpp"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["qss_integrator"]
omit = ["tests/*", "examples/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
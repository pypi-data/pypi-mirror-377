# Docker Compose configuration for QuickScale projects
services:
  # Django web application service
  web:
    build: 
      context: .
      args:
        DOCKER_UID: ${DOCKER_UID:-1000}
        DOCKER_GID: ${DOCKER_GID:-1000}
    command: python manage.py runserver 0.0.0.0:8000
    hostname: quickscale
    volumes:
      - ./:/app
    ports:
      - "${WEB_PORT:-8000}:8000"
    deploy:
      resources:
        limits:
          memory: ${WEB_MEMORY_LIMIT:-2G}
        reservations:
          memory: ${WEB_MEMORY_RESERVE:-1G}
    environment:
      - DEBUG=${DEBUG:-True}
      - SECRET_KEY=${SECRET_KEY:-dev-only-dummy-key-replace-in-production}
      - DATABASE_URL=postgresql://${DB_USER:-admin}:${DB_PASSWORD:-adminpasswd}@${DB_HOST:-db}:${DB_PORT:-5432}/${DB_NAME:-quickscale}
      # Use only DB_* variables for Django, not duplicated POSTGRES_* variables
      - DB_NAME=${DB_NAME:-quickscale}
      - DB_USER=${DB_USER:-admin}
      - DB_PASSWORD=${DB_PASSWORD:-adminpasswd}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-5432}
      - IN_DOCKER=True
      - DOCKER_UID=${DOCKER_UID:-1000}
      - DOCKER_GID=${DOCKER_GID:-1000}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      # Try an inexpensive TCP check on port 8000 to avoid coupling to app URL paths
      test: ["CMD-SHELL", "nc -z localhost 8000"]
      interval: 30s
      timeout: 5s
      retries: 10
      start_period: 20s

  # PostgreSQL database service
  db:
    image: postgres:15
    hostname: quickscale-db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      # Map Django DB_* variables to Postgres POSTGRES_* variables
      - POSTGRES_DB=${DB_NAME:-quickscale}
      - POSTGRES_USER=${DB_USER:-admin}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-adminpasswd}
      - POSTGRES_SHARED_BUFFERS=${DB_SHARED_BUFFERS:-128MB}
      - POSTGRES_WORK_MEM=${DB_WORK_MEM:-16MB}
      - DOCKER_UID=${DOCKER_UID:-1000}
      - DOCKER_GID=${DOCKER_GID:-1000}
      - POSTGRES_HOST_AUTH_METHOD=md5
    ports:
      - "${DB_PORT_EXTERNAL:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-admin} -d ${DB_NAME:-quickscale} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: ${DB_MEMORY_LIMIT:-1G}
        reservations:
          memory: ${DB_MEMORY_RESERVE:-512M}

# Named volumes for persistent data
volumes:
  postgres_data:

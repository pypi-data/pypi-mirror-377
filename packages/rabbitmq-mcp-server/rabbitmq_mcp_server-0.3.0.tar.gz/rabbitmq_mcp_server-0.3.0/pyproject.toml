[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rabbitmq-mcp-server"
version = "0.3.0"
description = "MCP server for RabbitMQ management with complete queue, message, and monitoring tools"
authors = [
    {name = "RabbitMQ MCP Team", email = "team@rabbitmq-mcp.dev"}
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.11"
keywords = ["rabbitmq", "mcp", "message-queue", "amqp", "model-context-protocol"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Networking",
    "Topic :: Communications",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Testing",
    "Operating System :: OS Independent",
]
dependencies = [
    "pika>=1.3.0",
    "pydantic>=2.0.0",
    "structlog>=23.0.0",
    "rich>=13.0.0",
    "click>=8.0.0",
    "mcp>=1.0.0",
    "uvloop>=0.17.0; sys_platform != 'win32'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/gl0022/rabbitmq-mcp-server"
Documentation = "https://github.com/gl0022/rabbitmq-mcp-server#readme"
Repository = "https://github.com/gl0022/rabbitmq-mcp-server"
Issues = "https://github.com/gl0022/rabbitmq-mcp-server/issues"
Changelog = "https://github.com/gl0022/rabbitmq-mcp-server/blob/main/CHANGELOG.md"

[project.scripts]
rabbitmq-mcp = "console.client:main"
rabbitmq-mcp-server = "mcp.mcp_server:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src", "tests"]
known_third_party = ["pika", "pydantic", "structlog", "rich", "click"]

# Ruff configuration (replaces flake8, isort, black)
[tool.ruff]
target-version = "0.3.0"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.ruff.isort]
known-first-party = ["src", "tests"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "0.3.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "contract: marks tests as contract tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# MyPy configuration
[tool.mypy]
python_version = "0.3.0"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pika.*",
    "structlog.*",
    "rich.*",
    "click.*",
]
ignore_missing_imports = true

[dependency-groups]
dev = [
    "build>=1.3.0",
    "twine>=6.2.0",
]

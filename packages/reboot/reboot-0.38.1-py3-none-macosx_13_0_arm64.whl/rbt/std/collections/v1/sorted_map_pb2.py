# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rbt/std/collections/v1/sorted_map.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from rbt.v1alpha1 import options_pb2 as rbt_dot_v1alpha1_dot_options__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\'rbt/std/collections/v1/sorted_map.proto\x12\x16rbt.std.collections.v1\x1a\x1arbt/v1alpha1/options.proto\"\x11\n\tSortedMap:\x04\x82\xb5\x18\x00\"\x84\x01\n\rInsertRequest\x12\x43\n\x07\x65ntries\x18\x01 \x03(\x0b\x32\x32.rbt.std.collections.v1.InsertRequest.EntriesEntry\x1a.\n\x0c\x45ntriesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c:\x02\x38\x01\"\x10\n\x0eInsertResponse\"\x1d\n\rRemoveRequest\x12\x0c\n\x04keys\x18\x01 \x03(\t\"\x10\n\x0eRemoveResponse\"\x19\n\nGetRequest\x12\x0b\n\x03key\x18\x01 \x01(\t\"+\n\x0bGetResponse\x12\x12\n\x05value\x18\x01 \x01(\x0cH\x00\x88\x01\x01\x42\x08\n\x06_value\"e\n\x0cRangeRequest\x12\x16\n\tstart_key\x18\x01 \x01(\tH\x00\x88\x01\x01\x12\x14\n\x07\x65nd_key\x18\x02 \x01(\tH\x01\x88\x01\x01\x12\r\n\x05limit\x18\x03 \x01(\rB\x0c\n\n_start_keyB\n\n\x08_end_key\"?\n\rRangeResponse\x12.\n\x07\x65ntries\x18\x01 \x03(\x0b\x32\x1d.rbt.std.collections.v1.Entry\"l\n\x13ReverseRangeRequest\x12\x16\n\tstart_key\x18\x01 \x01(\tH\x00\x88\x01\x01\x12\x14\n\x07\x65nd_key\x18\x02 \x01(\tH\x01\x88\x01\x01\x12\r\n\x05limit\x18\x03 \x01(\rB\x0c\n\n_start_keyB\n\n\x08_end_key\"F\n\x14ReverseRangeResponse\x12.\n\x07\x65ntries\x18\x01 \x03(\x0b\x32\x1d.rbt.std.collections.v1.Entry\"#\n\x05\x45ntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c\"$\n\x11InvalidRangeError\x12\x0f\n\x07message\x18\x01 \x01(\t2\xa4\x04\n\x10SortedMapMethods\x12_\n\x06Insert\x12%.rbt.std.collections.v1.InsertRequest\x1a&.rbt.std.collections.v1.InsertResponse\"\x06\x82\xb5\x18\x02\x12\x00\x12_\n\x06Remove\x12%.rbt.std.collections.v1.RemoveRequest\x1a&.rbt.std.collections.v1.RemoveResponse\"\x06\x82\xb5\x18\x02\x12\x00\x12V\n\x03Get\x12\".rbt.std.collections.v1.GetRequest\x1a#.rbt.std.collections.v1.GetResponse\"\x06\x82\xb5\x18\x02\n\x00\x12o\n\x05Range\x12$.rbt.std.collections.v1.RangeRequest\x1a%.rbt.std.collections.v1.RangeResponse\"\x19\x82\xb5\x18\x15\n\x00:\x11InvalidRangeError\x12\x84\x01\n\x0cReverseRange\x12+.rbt.std.collections.v1.ReverseRangeRequest\x1a,.rbt.std.collections.v1.ReverseRangeResponse\"\x19\x82\xb5\x18\x15\n\x00:\x11InvalidRangeErrorb\x06proto3')



_SORTEDMAP = DESCRIPTOR.message_types_by_name['SortedMap']
_INSERTREQUEST = DESCRIPTOR.message_types_by_name['InsertRequest']
_INSERTREQUEST_ENTRIESENTRY = _INSERTREQUEST.nested_types_by_name['EntriesEntry']
_INSERTRESPONSE = DESCRIPTOR.message_types_by_name['InsertResponse']
_REMOVEREQUEST = DESCRIPTOR.message_types_by_name['RemoveRequest']
_REMOVERESPONSE = DESCRIPTOR.message_types_by_name['RemoveResponse']
_GETREQUEST = DESCRIPTOR.message_types_by_name['GetRequest']
_GETRESPONSE = DESCRIPTOR.message_types_by_name['GetResponse']
_RANGEREQUEST = DESCRIPTOR.message_types_by_name['RangeRequest']
_RANGERESPONSE = DESCRIPTOR.message_types_by_name['RangeResponse']
_REVERSERANGEREQUEST = DESCRIPTOR.message_types_by_name['ReverseRangeRequest']
_REVERSERANGERESPONSE = DESCRIPTOR.message_types_by_name['ReverseRangeResponse']
_ENTRY = DESCRIPTOR.message_types_by_name['Entry']
_INVALIDRANGEERROR = DESCRIPTOR.message_types_by_name['InvalidRangeError']
SortedMap = _reflection.GeneratedProtocolMessageType('SortedMap', (_message.Message,), {
  'DESCRIPTOR' : _SORTEDMAP,
  '__module__' : 'rbt.std.collections.v1.sorted_map_pb2'
  # @@protoc_insertion_point(class_scope:rbt.std.collections.v1.SortedMap)
  })
_sym_db.RegisterMessage(SortedMap)

InsertRequest = _reflection.GeneratedProtocolMessageType('InsertRequest', (_message.Message,), {

  'EntriesEntry' : _reflection.GeneratedProtocolMessageType('EntriesEntry', (_message.Message,), {
    'DESCRIPTOR' : _INSERTREQUEST_ENTRIESENTRY,
    '__module__' : 'rbt.std.collections.v1.sorted_map_pb2'
    # @@protoc_insertion_point(class_scope:rbt.std.collections.v1.InsertRequest.EntriesEntry)
    })
  ,
  'DESCRIPTOR' : _INSERTREQUEST,
  '__module__' : 'rbt.std.collections.v1.sorted_map_pb2'
  # @@protoc_insertion_point(class_scope:rbt.std.collections.v1.InsertRequest)
  })
_sym_db.RegisterMessage(InsertRequest)
_sym_db.RegisterMessage(InsertRequest.EntriesEntry)

InsertResponse = _reflection.GeneratedProtocolMessageType('InsertResponse', (_message.Message,), {
  'DESCRIPTOR' : _INSERTRESPONSE,
  '__module__' : 'rbt.std.collections.v1.sorted_map_pb2'
  # @@protoc_insertion_point(class_scope:rbt.std.collections.v1.InsertResponse)
  })
_sym_db.RegisterMessage(InsertResponse)

RemoveRequest = _reflection.GeneratedProtocolMessageType('RemoveRequest', (_message.Message,), {
  'DESCRIPTOR' : _REMOVEREQUEST,
  '__module__' : 'rbt.std.collections.v1.sorted_map_pb2'
  # @@protoc_insertion_point(class_scope:rbt.std.collections.v1.RemoveRequest)
  })
_sym_db.RegisterMessage(RemoveRequest)

RemoveResponse = _reflection.GeneratedProtocolMessageType('RemoveResponse', (_message.Message,), {
  'DESCRIPTOR' : _REMOVERESPONSE,
  '__module__' : 'rbt.std.collections.v1.sorted_map_pb2'
  # @@protoc_insertion_point(class_scope:rbt.std.collections.v1.RemoveResponse)
  })
_sym_db.RegisterMessage(RemoveResponse)

GetRequest = _reflection.GeneratedProtocolMessageType('GetRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETREQUEST,
  '__module__' : 'rbt.std.collections.v1.sorted_map_pb2'
  # @@protoc_insertion_point(class_scope:rbt.std.collections.v1.GetRequest)
  })
_sym_db.RegisterMessage(GetRequest)

GetResponse = _reflection.GeneratedProtocolMessageType('GetResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETRESPONSE,
  '__module__' : 'rbt.std.collections.v1.sorted_map_pb2'
  # @@protoc_insertion_point(class_scope:rbt.std.collections.v1.GetResponse)
  })
_sym_db.RegisterMessage(GetResponse)

RangeRequest = _reflection.GeneratedProtocolMessageType('RangeRequest', (_message.Message,), {
  'DESCRIPTOR' : _RANGEREQUEST,
  '__module__' : 'rbt.std.collections.v1.sorted_map_pb2'
  # @@protoc_insertion_point(class_scope:rbt.std.collections.v1.RangeRequest)
  })
_sym_db.RegisterMessage(RangeRequest)

RangeResponse = _reflection.GeneratedProtocolMessageType('RangeResponse', (_message.Message,), {
  'DESCRIPTOR' : _RANGERESPONSE,
  '__module__' : 'rbt.std.collections.v1.sorted_map_pb2'
  # @@protoc_insertion_point(class_scope:rbt.std.collections.v1.RangeResponse)
  })
_sym_db.RegisterMessage(RangeResponse)

ReverseRangeRequest = _reflection.GeneratedProtocolMessageType('ReverseRangeRequest', (_message.Message,), {
  'DESCRIPTOR' : _REVERSERANGEREQUEST,
  '__module__' : 'rbt.std.collections.v1.sorted_map_pb2'
  # @@protoc_insertion_point(class_scope:rbt.std.collections.v1.ReverseRangeRequest)
  })
_sym_db.RegisterMessage(ReverseRangeRequest)

ReverseRangeResponse = _reflection.GeneratedProtocolMessageType('ReverseRangeResponse', (_message.Message,), {
  'DESCRIPTOR' : _REVERSERANGERESPONSE,
  '__module__' : 'rbt.std.collections.v1.sorted_map_pb2'
  # @@protoc_insertion_point(class_scope:rbt.std.collections.v1.ReverseRangeResponse)
  })
_sym_db.RegisterMessage(ReverseRangeResponse)

Entry = _reflection.GeneratedProtocolMessageType('Entry', (_message.Message,), {
  'DESCRIPTOR' : _ENTRY,
  '__module__' : 'rbt.std.collections.v1.sorted_map_pb2'
  # @@protoc_insertion_point(class_scope:rbt.std.collections.v1.Entry)
  })
_sym_db.RegisterMessage(Entry)

InvalidRangeError = _reflection.GeneratedProtocolMessageType('InvalidRangeError', (_message.Message,), {
  'DESCRIPTOR' : _INVALIDRANGEERROR,
  '__module__' : 'rbt.std.collections.v1.sorted_map_pb2'
  # @@protoc_insertion_point(class_scope:rbt.std.collections.v1.InvalidRangeError)
  })
_sym_db.RegisterMessage(InvalidRangeError)

_SORTEDMAPMETHODS = DESCRIPTOR.services_by_name['SortedMapMethods']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _SORTEDMAP._options = None
  _SORTEDMAP._serialized_options = b'\202\265\030\000'
  _INSERTREQUEST_ENTRIESENTRY._options = None
  _INSERTREQUEST_ENTRIESENTRY._serialized_options = b'8\001'
  _SORTEDMAPMETHODS.methods_by_name['Insert']._options = None
  _SORTEDMAPMETHODS.methods_by_name['Insert']._serialized_options = b'\202\265\030\002\022\000'
  _SORTEDMAPMETHODS.methods_by_name['Remove']._options = None
  _SORTEDMAPMETHODS.methods_by_name['Remove']._serialized_options = b'\202\265\030\002\022\000'
  _SORTEDMAPMETHODS.methods_by_name['Get']._options = None
  _SORTEDMAPMETHODS.methods_by_name['Get']._serialized_options = b'\202\265\030\002\n\000'
  _SORTEDMAPMETHODS.methods_by_name['Range']._options = None
  _SORTEDMAPMETHODS.methods_by_name['Range']._serialized_options = b'\202\265\030\025\n\000:\021InvalidRangeError'
  _SORTEDMAPMETHODS.methods_by_name['ReverseRange']._options = None
  _SORTEDMAPMETHODS.methods_by_name['ReverseRange']._serialized_options = b'\202\265\030\025\n\000:\021InvalidRangeError'
  _SORTEDMAP._serialized_start=95
  _SORTEDMAP._serialized_end=112
  _INSERTREQUEST._serialized_start=115
  _INSERTREQUEST._serialized_end=247
  _INSERTREQUEST_ENTRIESENTRY._serialized_start=201
  _INSERTREQUEST_ENTRIESENTRY._serialized_end=247
  _INSERTRESPONSE._serialized_start=249
  _INSERTRESPONSE._serialized_end=265
  _REMOVEREQUEST._serialized_start=267
  _REMOVEREQUEST._serialized_end=296
  _REMOVERESPONSE._serialized_start=298
  _REMOVERESPONSE._serialized_end=314
  _GETREQUEST._serialized_start=316
  _GETREQUEST._serialized_end=341
  _GETRESPONSE._serialized_start=343
  _GETRESPONSE._serialized_end=386
  _RANGEREQUEST._serialized_start=388
  _RANGEREQUEST._serialized_end=489
  _RANGERESPONSE._serialized_start=491
  _RANGERESPONSE._serialized_end=554
  _REVERSERANGEREQUEST._serialized_start=556
  _REVERSERANGEREQUEST._serialized_end=664
  _REVERSERANGERESPONSE._serialized_start=666
  _REVERSERANGERESPONSE._serialized_end=736
  _ENTRY._serialized_start=738
  _ENTRY._serialized_end=773
  _INVALIDRANGEERROR._serialized_start=775
  _INVALIDRANGEERROR._serialized_end=811
  _SORTEDMAPMETHODS._serialized_start=814
  _SORTEDMAPMETHODS._serialized_end=1362
# @@protoc_insertion_point(module_scope)

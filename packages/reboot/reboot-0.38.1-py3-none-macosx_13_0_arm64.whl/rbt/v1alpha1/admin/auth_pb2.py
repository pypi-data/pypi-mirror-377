# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rbt/v1alpha1/admin/auth.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1drbt/v1alpha1/admin/auth.proto\x12\x12rbt.v1alpha1.admin\"&\n\x0eIsAdminRequest\x12\x14\n\x0c\x62\x65\x61rer_token\x18\x01 \x01(\t\"4\n\x0fIsAdminResponse\x12\x10\n\x08is_admin\x18\x01 \x01(\x08\x12\x0f\n\x07user_id\x18\x02 \x01(\t2Z\n\x04\x41uth\x12R\n\x07IsAdmin\x12\".rbt.v1alpha1.admin.IsAdminRequest\x1a#.rbt.v1alpha1.admin.IsAdminResponseb\x06proto3')



_ISADMINREQUEST = DESCRIPTOR.message_types_by_name['IsAdminRequest']
_ISADMINRESPONSE = DESCRIPTOR.message_types_by_name['IsAdminResponse']
IsAdminRequest = _reflection.GeneratedProtocolMessageType('IsAdminRequest', (_message.Message,), {
  'DESCRIPTOR' : _ISADMINREQUEST,
  '__module__' : 'rbt.v1alpha1.admin.auth_pb2'
  # @@protoc_insertion_point(class_scope:rbt.v1alpha1.admin.IsAdminRequest)
  })
_sym_db.RegisterMessage(IsAdminRequest)

IsAdminResponse = _reflection.GeneratedProtocolMessageType('IsAdminResponse', (_message.Message,), {
  'DESCRIPTOR' : _ISADMINRESPONSE,
  '__module__' : 'rbt.v1alpha1.admin.auth_pb2'
  # @@protoc_insertion_point(class_scope:rbt.v1alpha1.admin.IsAdminResponse)
  })
_sym_db.RegisterMessage(IsAdminResponse)

_AUTH = DESCRIPTOR.services_by_name['Auth']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _ISADMINREQUEST._serialized_start=53
  _ISADMINREQUEST._serialized_end=91
  _ISADMINRESPONSE._serialized_start=93
  _ISADMINRESPONSE._serialized_end=145
  _AUTH._serialized_start=147
  _AUTH._serialized_end=237
# @@protoc_insertion_point(module_scope)

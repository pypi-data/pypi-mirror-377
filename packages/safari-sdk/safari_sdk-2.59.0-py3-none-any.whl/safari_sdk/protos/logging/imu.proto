// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.

syntax = "proto2";

package safari_sdk.protos.logging;

// InertialMeasurement abstract reading from most IMU units.
message Imu {
  // Reading from accelerometer, len(accelerometer_xyz) == 3, in m/s^2.
  repeated double accelerometer_xyz = 1 [packed = true];

  // Covariance matrix of the accelerometer.
  repeated double accelerometer_covariance = 10 [packed = true];

  // Reading from gyro, len(gyro_xyz) == 3, in rad/s.
  repeated double gyro_xyz = 2 [packed = true];

  // Covariance matrix of the gyro.
  repeated double gyro_covariance = 11 [packed = true];

  // Reading from magnetometer, len(magnetometer_xyz) == 3, in uT. This is
  // calibrated readings.
  repeated double magnetometer_xyz = 3;

  // Reading from uncalibrated magnetometer, len(raw_magnetometer_xyz) == 3, in
  // uT.
  repeated double raw_magnetometer_xyz = 4;

  // Reading from barometer in kPa.
  optional double barometer = 5;

  // Reading from uncalibrated barometer.
  optional double raw_barometer = 6;

  // The orientation as a quaternion len(quaternion_xyzw) == 4, w is always >=0.
  repeated double quaternion_xyzw = 7 [packed = true];

  // Covariance matrix of the pose quaternion.
  repeated double quaternion_covariance = 12 [packed = true];

  // Temperature of device (for temperature drift correction).
  optional double temperature = 9;

  reserved 8;
}

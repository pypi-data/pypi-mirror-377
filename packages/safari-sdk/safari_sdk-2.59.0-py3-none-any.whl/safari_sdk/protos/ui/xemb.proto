// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.

syntax = "proto3";

// Xembodiment API for RoboticsUI.
// Pronounced "zemb" or "zemp".

package safari_sdk.ui;

import "safari_sdk/protos/ui/robot_command.proto";
import "safari_sdk/protos/ui/robot_state.proto";
import "safari_sdk/protos/ui/robot_types.proto";

message XembMessage {
  reserved 1;

  oneof message {
    safari_sdk.ui.RobotCommand robot_command = 5;
    safari_sdk.ui.RobotState robot_state = 2;
  }

  // robot_or_client_id is either a string (robot_id) or an XEI ClientID.
  // This is used to determine which robot this message is associated with.
  // For projects that do not use the XEI, a string robot_id is preferable
  // because it can be symbolic like "Leader" - "Follower" for example in
  // Bi-Arm puppeteering.
  //
  // For robot_state, if robot_or_client_id is not present, the client_id from
  // robot_state.header.client_id is used.
  //
  // For robot_command, if robot_or_client_id is not present, the client_id from
  // robot_command.header.client_id is used.
  oneof robot_or_client_id {
    string robot_id = 3;
    safari_sdk.ui.ClientID client_id = 4;
  }
}

# Python stubs generated by omniidl from /tmp/kernel/idl/SALOME_GenericObj.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "SALOME"
#
__name__ = "salome.kernel.SALOME"
_0_SALOME = omniORB.openModule("salome.kernel.SALOME", r"/tmp/kernel/idl/SALOME_GenericObj.idl")
_0_SALOME__POA = omniORB.openModule("salome.kernel.SALOME__POA", r"/tmp/kernel/idl/SALOME_GenericObj.idl")


# typedef ... StringSeq
class StringSeq:
    _NP_RepositoryId = "IDL:SALOME/StringSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_SALOME.StringSeq = StringSeq
_0_SALOME._d_StringSeq  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
_0_SALOME._ad_StringSeq = (omniORB.tcInternal.tv_alias, StringSeq._NP_RepositoryId, "StringSeq", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_SALOME._tc_StringSeq = omniORB.tcInternal.createTypeCode(_0_SALOME._ad_StringSeq)
omniORB.registerType(StringSeq._NP_RepositoryId, _0_SALOME._ad_StringSeq, _0_SALOME._tc_StringSeq)
del StringSeq

# interface GenericObj
_0_SALOME._d_GenericObj = (omniORB.tcInternal.tv_objref, "IDL:SALOME/GenericObj:1.0", "GenericObj")
omniORB.typeMapping["IDL:SALOME/GenericObj:1.0"] = _0_SALOME._d_GenericObj
_0_SALOME.GenericObj = omniORB.newEmptyClass()
class GenericObj :
    _NP_RepositoryId = _0_SALOME._d_GenericObj[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.GenericObj = GenericObj
_0_SALOME._tc_GenericObj = omniORB.tcInternal.createTypeCode(_0_SALOME._d_GenericObj)
omniORB.registerType(GenericObj._NP_RepositoryId, _0_SALOME._d_GenericObj, _0_SALOME._tc_GenericObj)

# GenericObj operations and attributes
GenericObj._d_Register = ((), (), None)
GenericObj._d_UnRegister = ((), (), None)
GenericObj._d_Destroy = ((), (), None)

# GenericObj object reference
class _objref_GenericObj (CORBA.Object):
    _NP_RepositoryId = GenericObj._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def Register(self, *args):
        return self._obj.invoke("Register", _0_SALOME.GenericObj._d_Register, args)

    def UnRegister(self, *args):
        return self._obj.invoke("UnRegister", _0_SALOME.GenericObj._d_UnRegister, args)

    def Destroy(self, *args):
        return self._obj.invoke("Destroy", _0_SALOME.GenericObj._d_Destroy, args)

omniORB.registerObjref(GenericObj._NP_RepositoryId, _objref_GenericObj)
_0_SALOME._objref_GenericObj = _objref_GenericObj
del GenericObj, _objref_GenericObj

# GenericObj skeleton
__name__ = "salome.kernel.SALOME__POA"
class GenericObj (PortableServer.Servant):
    _NP_RepositoryId = _0_SALOME.GenericObj._NP_RepositoryId


    _omni_op_d = {"Register": _0_SALOME.GenericObj._d_Register, "UnRegister": _0_SALOME.GenericObj._d_UnRegister, "Destroy": _0_SALOME.GenericObj._d_Destroy}

GenericObj._omni_skeleton = GenericObj
_0_SALOME__POA.GenericObj = GenericObj
omniORB.registerSkeleton(GenericObj._NP_RepositoryId, GenericObj)
del GenericObj
__name__ = "salome.kernel.SALOME"

# interface ExportableObject
_0_SALOME._d_ExportableObject = (omniORB.tcInternal.tv_objref, "IDL:SALOME/ExportableObject:1.0", "ExportableObject")
omniORB.typeMapping["IDL:SALOME/ExportableObject:1.0"] = _0_SALOME._d_ExportableObject
_0_SALOME.ExportableObject = omniORB.newEmptyClass()
class ExportableObject (_0_SALOME.GenericObj):
    _NP_RepositoryId = _0_SALOME._d_ExportableObject[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.ExportableObject = ExportableObject
_0_SALOME._tc_ExportableObject = omniORB.tcInternal.createTypeCode(_0_SALOME._d_ExportableObject)
omniORB.registerType(ExportableObject._NP_RepositoryId, _0_SALOME._d_ExportableObject, _0_SALOME._tc_ExportableObject)

# ExportableObject operations and attributes
ExportableObject._d_GetExportableFormats = ((), (omniORB.typeMapping["IDL:SALOME/StringSeq:1.0"], ), None)
ExportableObject._d_ExportDataAs = (((omniORB.tcInternal.tv_string,0), ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:SALOME/GenericObj:1.0"]), None)

# ExportableObject object reference
class _objref_ExportableObject (_0_SALOME._objref_GenericObj):
    _NP_RepositoryId = ExportableObject._NP_RepositoryId

    def __init__(self, obj):
        _0_SALOME._objref_GenericObj.__init__(self, obj)

    def GetExportableFormats(self, *args):
        return self._obj.invoke("GetExportableFormats", _0_SALOME.ExportableObject._d_GetExportableFormats, args)

    def ExportDataAs(self, *args):
        return self._obj.invoke("ExportDataAs", _0_SALOME.ExportableObject._d_ExportDataAs, args)

omniORB.registerObjref(ExportableObject._NP_RepositoryId, _objref_ExportableObject)
_0_SALOME._objref_ExportableObject = _objref_ExportableObject
del ExportableObject, _objref_ExportableObject

# ExportableObject skeleton
__name__ = "salome.kernel.SALOME__POA"
class ExportableObject (_0_SALOME__POA.GenericObj):
    _NP_RepositoryId = _0_SALOME.ExportableObject._NP_RepositoryId


    _omni_op_d = {"GetExportableFormats": _0_SALOME.ExportableObject._d_GetExportableFormats, "ExportDataAs": _0_SALOME.ExportableObject._d_ExportDataAs}
    _omni_op_d.update(_0_SALOME__POA.GenericObj._omni_op_d)

ExportableObject._omni_skeleton = ExportableObject
_0_SALOME__POA.ExportableObject = ExportableObject
omniORB.registerSkeleton(ExportableObject._NP_RepositoryId, ExportableObject)
del ExportableObject
__name__ = "salome.kernel.SALOME"

#
# End of module "SALOME"
#
__name__ = "salome.kernel.SALOME_GenericObj_idl"

_exported_modules = ( "salome.kernel.SALOME", )

# The end.

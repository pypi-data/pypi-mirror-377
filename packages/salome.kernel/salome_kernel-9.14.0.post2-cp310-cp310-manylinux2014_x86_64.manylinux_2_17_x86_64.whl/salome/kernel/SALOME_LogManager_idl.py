# Python stubs generated by omniidl from /tmp/kernel/idl/SALOME_LogManager.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "SALOME_Exception.idl"
import salome.kernel.SALOME_Exception_idl
_0_SALOME = omniORB.openModule("salome.kernel.SALOME")
_0_SALOME__POA = omniORB.openModule("salome.kernel.SALOME__POA")

# #include "SALOME_GenericObj.idl"
import salome.kernel.SALOME_GenericObj_idl
_0_SALOME = omniORB.openModule("salome.kernel.SALOME")
_0_SALOME__POA = omniORB.openModule("salome.kernel.SALOME__POA")

# #include "SALOME_Comm.idl"
import salome.kernel.SALOME_Comm_idl
_0_SALOME = omniORB.openModule("salome.kernel.SALOME")
_0_SALOME__POA = omniORB.openModule("salome.kernel.SALOME__POA")

#
# Start of module "Engines"
#
__name__ = "salome.kernel.Engines"
_0_Engines = omniORB.openModule("salome.kernel.Engines", r"/tmp/kernel/idl/SALOME_LogManager.idl")
_0_Engines__POA = omniORB.openModule("salome.kernel.Engines__POA", r"/tmp/kernel/idl/SALOME_LogManager.idl")


# interface ContainerScriptExecPerfLog
_0_Engines._d_ContainerScriptExecPerfLog = (omniORB.tcInternal.tv_objref, "IDL:Engines/ContainerScriptExecPerfLog:1.0", "ContainerScriptExecPerfLog")
omniORB.typeMapping["IDL:Engines/ContainerScriptExecPerfLog:1.0"] = _0_Engines._d_ContainerScriptExecPerfLog
_0_Engines.ContainerScriptExecPerfLog = omniORB.newEmptyClass()
class ContainerScriptExecPerfLog :
    _NP_RepositoryId = _0_Engines._d_ContainerScriptExecPerfLog[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Engines.ContainerScriptExecPerfLog = ContainerScriptExecPerfLog
_0_Engines._tc_ContainerScriptExecPerfLog = omniORB.tcInternal.createTypeCode(_0_Engines._d_ContainerScriptExecPerfLog)
omniORB.registerType(ContainerScriptExecPerfLog._NP_RepositoryId, _0_Engines._d_ContainerScriptExecPerfLog, _0_Engines._tc_ContainerScriptExecPerfLog)

# ContainerScriptExecPerfLog operations and attributes
ContainerScriptExecPerfLog._d_assign = ((omniORB.typeMapping["IDL:SALOME/vectorOfByte:1.0"], ), (), None)
ContainerScriptExecPerfLog._d_assignAndAppendFreestyle = ((omniORB.typeMapping["IDL:SALOME/vectorOfByte:1.0"], ), (), None)
ContainerScriptExecPerfLog._d_getObj = ((), (omniORB.typeMapping["IDL:SALOME/vectorOfByte:1.0"], ), None)

# ContainerScriptExecPerfLog object reference
class _objref_ContainerScriptExecPerfLog (CORBA.Object):
    _NP_RepositoryId = ContainerScriptExecPerfLog._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def assign(self, *args):
        return self._obj.invoke("assign", _0_Engines.ContainerScriptExecPerfLog._d_assign, args)

    def assignAndAppendFreestyle(self, *args):
        return self._obj.invoke("assignAndAppendFreestyle", _0_Engines.ContainerScriptExecPerfLog._d_assignAndAppendFreestyle, args)

    def getObj(self, *args):
        return self._obj.invoke("getObj", _0_Engines.ContainerScriptExecPerfLog._d_getObj, args)

omniORB.registerObjref(ContainerScriptExecPerfLog._NP_RepositoryId, _objref_ContainerScriptExecPerfLog)
_0_Engines._objref_ContainerScriptExecPerfLog = _objref_ContainerScriptExecPerfLog
del ContainerScriptExecPerfLog, _objref_ContainerScriptExecPerfLog

# ContainerScriptExecPerfLog skeleton
__name__ = "salome.kernel.Engines__POA"
class ContainerScriptExecPerfLog (PortableServer.Servant):
    _NP_RepositoryId = _0_Engines.ContainerScriptExecPerfLog._NP_RepositoryId


    _omni_op_d = {"assign": _0_Engines.ContainerScriptExecPerfLog._d_assign, "assignAndAppendFreestyle": _0_Engines.ContainerScriptExecPerfLog._d_assignAndAppendFreestyle, "getObj": _0_Engines.ContainerScriptExecPerfLog._d_getObj}

ContainerScriptExecPerfLog._omni_skeleton = ContainerScriptExecPerfLog
_0_Engines__POA.ContainerScriptExecPerfLog = ContainerScriptExecPerfLog
omniORB.registerSkeleton(ContainerScriptExecPerfLog._NP_RepositoryId, ContainerScriptExecPerfLog)
del ContainerScriptExecPerfLog
__name__ = "salome.kernel.Engines"

# typedef ... ListOfContainerScriptExecPerfLog
class ListOfContainerScriptExecPerfLog:
    _NP_RepositoryId = "IDL:Engines/ListOfContainerScriptExecPerfLog:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Engines.ListOfContainerScriptExecPerfLog = ListOfContainerScriptExecPerfLog
_0_Engines._d_ListOfContainerScriptExecPerfLog  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:Engines/ContainerScriptExecPerfLog:1.0"], 0)
_0_Engines._ad_ListOfContainerScriptExecPerfLog = (omniORB.tcInternal.tv_alias, ListOfContainerScriptExecPerfLog._NP_RepositoryId, "ListOfContainerScriptExecPerfLog", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:Engines/ContainerScriptExecPerfLog:1.0"], 0))
_0_Engines._tc_ListOfContainerScriptExecPerfLog = omniORB.tcInternal.createTypeCode(_0_Engines._ad_ListOfContainerScriptExecPerfLog)
omniORB.registerType(ListOfContainerScriptExecPerfLog._NP_RepositoryId, _0_Engines._ad_ListOfContainerScriptExecPerfLog, _0_Engines._tc_ListOfContainerScriptExecPerfLog)
del ListOfContainerScriptExecPerfLog

# interface ContainerScriptPerfLog
_0_Engines._d_ContainerScriptPerfLog = (omniORB.tcInternal.tv_objref, "IDL:Engines/ContainerScriptPerfLog:1.0", "ContainerScriptPerfLog")
omniORB.typeMapping["IDL:Engines/ContainerScriptPerfLog:1.0"] = _0_Engines._d_ContainerScriptPerfLog
_0_Engines.ContainerScriptPerfLog = omniORB.newEmptyClass()
class ContainerScriptPerfLog :
    _NP_RepositoryId = _0_Engines._d_ContainerScriptPerfLog[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Engines.ContainerScriptPerfLog = ContainerScriptPerfLog
_0_Engines._tc_ContainerScriptPerfLog = omniORB.tcInternal.createTypeCode(_0_Engines._d_ContainerScriptPerfLog)
omniORB.registerType(ContainerScriptPerfLog._NP_RepositoryId, _0_Engines._d_ContainerScriptPerfLog, _0_Engines._tc_ContainerScriptPerfLog)

# ContainerScriptPerfLog operations and attributes
ContainerScriptPerfLog._d_getCode = ((), ((omniORB.tcInternal.tv_string,0), ), None)
ContainerScriptPerfLog._d_getName = ((), ((omniORB.tcInternal.tv_string,0), ), None)
ContainerScriptPerfLog._d_addExecutionSession = ((), (omniORB.typeMapping["IDL:Engines/ContainerScriptExecPerfLog:1.0"], ), None)
ContainerScriptPerfLog._d_listOfExecs = ((), (omniORB.typeMapping["IDL:Engines/ListOfContainerScriptExecPerfLog:1.0"], ), None)

# ContainerScriptPerfLog object reference
class _objref_ContainerScriptPerfLog (CORBA.Object):
    _NP_RepositoryId = ContainerScriptPerfLog._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def getCode(self, *args):
        return self._obj.invoke("getCode", _0_Engines.ContainerScriptPerfLog._d_getCode, args)

    def getName(self, *args):
        return self._obj.invoke("getName", _0_Engines.ContainerScriptPerfLog._d_getName, args)

    def addExecutionSession(self, *args):
        return self._obj.invoke("addExecutionSession", _0_Engines.ContainerScriptPerfLog._d_addExecutionSession, args)

    def listOfExecs(self, *args):
        return self._obj.invoke("listOfExecs", _0_Engines.ContainerScriptPerfLog._d_listOfExecs, args)

omniORB.registerObjref(ContainerScriptPerfLog._NP_RepositoryId, _objref_ContainerScriptPerfLog)
_0_Engines._objref_ContainerScriptPerfLog = _objref_ContainerScriptPerfLog
del ContainerScriptPerfLog, _objref_ContainerScriptPerfLog

# ContainerScriptPerfLog skeleton
__name__ = "salome.kernel.Engines__POA"
class ContainerScriptPerfLog (PortableServer.Servant):
    _NP_RepositoryId = _0_Engines.ContainerScriptPerfLog._NP_RepositoryId


    _omni_op_d = {"getCode": _0_Engines.ContainerScriptPerfLog._d_getCode, "getName": _0_Engines.ContainerScriptPerfLog._d_getName, "addExecutionSession": _0_Engines.ContainerScriptPerfLog._d_addExecutionSession, "listOfExecs": _0_Engines.ContainerScriptPerfLog._d_listOfExecs}

ContainerScriptPerfLog._omni_skeleton = ContainerScriptPerfLog
_0_Engines__POA.ContainerScriptPerfLog = ContainerScriptPerfLog
omniORB.registerSkeleton(ContainerScriptPerfLog._NP_RepositoryId, ContainerScriptPerfLog)
del ContainerScriptPerfLog
__name__ = "salome.kernel.Engines"

# typedef ... ListOfContainerScriptPerfLog
class ListOfContainerScriptPerfLog:
    _NP_RepositoryId = "IDL:Engines/ListOfContainerScriptPerfLog:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Engines.ListOfContainerScriptPerfLog = ListOfContainerScriptPerfLog
_0_Engines._d_ListOfContainerScriptPerfLog  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:Engines/ContainerScriptPerfLog:1.0"], 0)
_0_Engines._ad_ListOfContainerScriptPerfLog = (omniORB.tcInternal.tv_alias, ListOfContainerScriptPerfLog._NP_RepositoryId, "ListOfContainerScriptPerfLog", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:Engines/ContainerScriptPerfLog:1.0"], 0))
_0_Engines._tc_ListOfContainerScriptPerfLog = omniORB.tcInternal.createTypeCode(_0_Engines._ad_ListOfContainerScriptPerfLog)
omniORB.registerType(ListOfContainerScriptPerfLog._NP_RepositoryId, _0_Engines._ad_ListOfContainerScriptPerfLog, _0_Engines._tc_ListOfContainerScriptPerfLog)
del ListOfContainerScriptPerfLog

# interface ContainerPerfLog
_0_Engines._d_ContainerPerfLog = (omniORB.tcInternal.tv_objref, "IDL:Engines/ContainerPerfLog:1.0", "ContainerPerfLog")
omniORB.typeMapping["IDL:Engines/ContainerPerfLog:1.0"] = _0_Engines._d_ContainerPerfLog
_0_Engines.ContainerPerfLog = omniORB.newEmptyClass()
class ContainerPerfLog :
    _NP_RepositoryId = _0_Engines._d_ContainerPerfLog[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Engines.ContainerPerfLog = ContainerPerfLog
_0_Engines._tc_ContainerPerfLog = omniORB.tcInternal.createTypeCode(_0_Engines._d_ContainerPerfLog)
omniORB.registerType(ContainerPerfLog._NP_RepositoryId, _0_Engines._d_ContainerPerfLog, _0_Engines._tc_ContainerPerfLog)

# ContainerPerfLog operations and attributes
ContainerPerfLog._d_getLogFile = ((), ((omniORB.tcInternal.tv_string,0), ), None)
ContainerPerfLog._d_getContainerEntryInNS = ((), ((omniORB.tcInternal.tv_string,0), ), None)
ContainerPerfLog._d_addScript = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.typeMapping["IDL:Engines/ContainerScriptPerfLog:1.0"], ), None)
ContainerPerfLog._d_listOfScripts = ((), (omniORB.typeMapping["IDL:Engines/ListOfContainerScriptPerfLog:1.0"], ), None)
ContainerPerfLog._d_destroy = ((), (), None)

# ContainerPerfLog object reference
class _objref_ContainerPerfLog (CORBA.Object):
    _NP_RepositoryId = ContainerPerfLog._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def getLogFile(self, *args):
        return self._obj.invoke("getLogFile", _0_Engines.ContainerPerfLog._d_getLogFile, args)

    def getContainerEntryInNS(self, *args):
        return self._obj.invoke("getContainerEntryInNS", _0_Engines.ContainerPerfLog._d_getContainerEntryInNS, args)

    def addScript(self, *args):
        return self._obj.invoke("addScript", _0_Engines.ContainerPerfLog._d_addScript, args)

    def listOfScripts(self, *args):
        return self._obj.invoke("listOfScripts", _0_Engines.ContainerPerfLog._d_listOfScripts, args)

    def destroy(self, *args):
        return self._obj.invoke("destroy", _0_Engines.ContainerPerfLog._d_destroy, args)

omniORB.registerObjref(ContainerPerfLog._NP_RepositoryId, _objref_ContainerPerfLog)
_0_Engines._objref_ContainerPerfLog = _objref_ContainerPerfLog
del ContainerPerfLog, _objref_ContainerPerfLog

# ContainerPerfLog skeleton
__name__ = "salome.kernel.Engines__POA"
class ContainerPerfLog (PortableServer.Servant):
    _NP_RepositoryId = _0_Engines.ContainerPerfLog._NP_RepositoryId


    _omni_op_d = {"getLogFile": _0_Engines.ContainerPerfLog._d_getLogFile, "getContainerEntryInNS": _0_Engines.ContainerPerfLog._d_getContainerEntryInNS, "addScript": _0_Engines.ContainerPerfLog._d_addScript, "listOfScripts": _0_Engines.ContainerPerfLog._d_listOfScripts, "destroy": _0_Engines.ContainerPerfLog._d_destroy}

ContainerPerfLog._omni_skeleton = ContainerPerfLog
_0_Engines__POA.ContainerPerfLog = ContainerPerfLog
omniORB.registerSkeleton(ContainerPerfLog._NP_RepositoryId, ContainerPerfLog)
del ContainerPerfLog
__name__ = "salome.kernel.Engines"

# typedef ... ListOfContainerPerfLog
class ListOfContainerPerfLog:
    _NP_RepositoryId = "IDL:Engines/ListOfContainerPerfLog:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Engines.ListOfContainerPerfLog = ListOfContainerPerfLog
_0_Engines._d_ListOfContainerPerfLog  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:Engines/ContainerPerfLog:1.0"], 0)
_0_Engines._ad_ListOfContainerPerfLog = (omniORB.tcInternal.tv_alias, ListOfContainerPerfLog._NP_RepositoryId, "ListOfContainerPerfLog", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:Engines/ContainerPerfLog:1.0"], 0))
_0_Engines._tc_ListOfContainerPerfLog = omniORB.tcInternal.createTypeCode(_0_Engines._ad_ListOfContainerPerfLog)
omniORB.registerType(ListOfContainerPerfLog._NP_RepositoryId, _0_Engines._ad_ListOfContainerPerfLog, _0_Engines._tc_ListOfContainerPerfLog)
del ListOfContainerPerfLog

# interface LogManager
_0_Engines._d_LogManager = (omniORB.tcInternal.tv_objref, "IDL:Engines/LogManager:1.0", "LogManager")
omniORB.typeMapping["IDL:Engines/LogManager:1.0"] = _0_Engines._d_LogManager
_0_Engines.LogManager = omniORB.newEmptyClass()
class LogManager :
    _NP_RepositoryId = _0_Engines._d_LogManager[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Engines.LogManager = LogManager
_0_Engines._tc_LogManager = omniORB.tcInternal.createTypeCode(_0_Engines._d_LogManager)
omniORB.registerType(LogManager._NP_RepositoryId, _0_Engines._d_LogManager, _0_Engines._tc_LogManager)

# LogManager operations and attributes
LogManager._d_declareContainer = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.typeMapping["IDL:Engines/ContainerPerfLog:1.0"], ), None)
LogManager._d_clear = ((), (), None)
LogManager._d_listOfContainerLogs = ((), (omniORB.typeMapping["IDL:Engines/ListOfContainerPerfLog:1.0"], ), None)
LogManager._d_getAllStruct = ((omniORB.tcInternal.tv_boolean, ), (omniORB.typeMapping["IDL:SALOME/vectorOfByte:1.0"], ), None)
LogManager._d_putStructInFileAtomic = ((omniORB.tcInternal.tv_boolean, (omniORB.tcInternal.tv_string,0)), (), None)
LogManager._d_setFileNamePairOfLogger = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (), None)
LogManager._d_getFileNamePairOfLogger = ((), ((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), None)
LogManager._d_versionA_IsTheLatestValidVersion = ((), (), None)
LogManager._d_versionB_IsTheLatestValidVersion = ((), (), None)
LogManager._d_getLastVersionOfFileNameLogger = ((), ((omniORB.tcInternal.tv_string,0), ), None)

# LogManager object reference
class _objref_LogManager (CORBA.Object):
    _NP_RepositoryId = LogManager._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def declareContainer(self, *args):
        return self._obj.invoke("declareContainer", _0_Engines.LogManager._d_declareContainer, args)

    def clear(self, *args):
        return self._obj.invoke("clear", _0_Engines.LogManager._d_clear, args)

    def listOfContainerLogs(self, *args):
        return self._obj.invoke("listOfContainerLogs", _0_Engines.LogManager._d_listOfContainerLogs, args)

    def getAllStruct(self, *args):
        return self._obj.invoke("getAllStruct", _0_Engines.LogManager._d_getAllStruct, args)

    def putStructInFileAtomic(self, *args):
        return self._obj.invoke("putStructInFileAtomic", _0_Engines.LogManager._d_putStructInFileAtomic, args)

    def setFileNamePairOfLogger(self, *args):
        return self._obj.invoke("setFileNamePairOfLogger", _0_Engines.LogManager._d_setFileNamePairOfLogger, args)

    def getFileNamePairOfLogger(self, *args):
        return self._obj.invoke("getFileNamePairOfLogger", _0_Engines.LogManager._d_getFileNamePairOfLogger, args)

    def versionA_IsTheLatestValidVersion(self, *args):
        return self._obj.invoke("versionA_IsTheLatestValidVersion", _0_Engines.LogManager._d_versionA_IsTheLatestValidVersion, args)

    def versionB_IsTheLatestValidVersion(self, *args):
        return self._obj.invoke("versionB_IsTheLatestValidVersion", _0_Engines.LogManager._d_versionB_IsTheLatestValidVersion, args)

    def getLastVersionOfFileNameLogger(self, *args):
        return self._obj.invoke("getLastVersionOfFileNameLogger", _0_Engines.LogManager._d_getLastVersionOfFileNameLogger, args)

omniORB.registerObjref(LogManager._NP_RepositoryId, _objref_LogManager)
_0_Engines._objref_LogManager = _objref_LogManager
del LogManager, _objref_LogManager

# LogManager skeleton
__name__ = "salome.kernel.Engines__POA"
class LogManager (PortableServer.Servant):
    _NP_RepositoryId = _0_Engines.LogManager._NP_RepositoryId


    _omni_op_d = {"declareContainer": _0_Engines.LogManager._d_declareContainer, "clear": _0_Engines.LogManager._d_clear, "listOfContainerLogs": _0_Engines.LogManager._d_listOfContainerLogs, "getAllStruct": _0_Engines.LogManager._d_getAllStruct, "putStructInFileAtomic": _0_Engines.LogManager._d_putStructInFileAtomic, "setFileNamePairOfLogger": _0_Engines.LogManager._d_setFileNamePairOfLogger, "getFileNamePairOfLogger": _0_Engines.LogManager._d_getFileNamePairOfLogger, "versionA_IsTheLatestValidVersion": _0_Engines.LogManager._d_versionA_IsTheLatestValidVersion, "versionB_IsTheLatestValidVersion": _0_Engines.LogManager._d_versionB_IsTheLatestValidVersion, "getLastVersionOfFileNameLogger": _0_Engines.LogManager._d_getLastVersionOfFileNameLogger}

LogManager._omni_skeleton = LogManager
_0_Engines__POA.LogManager = LogManager
omniORB.registerSkeleton(LogManager._NP_RepositoryId, LogManager)
del LogManager
__name__ = "salome.kernel.Engines"

#
# End of module "Engines"
#
__name__ = "salome.kernel.SALOME_LogManager_idl"

_exported_modules = ( "salome.kernel.Engines", )

# The end.

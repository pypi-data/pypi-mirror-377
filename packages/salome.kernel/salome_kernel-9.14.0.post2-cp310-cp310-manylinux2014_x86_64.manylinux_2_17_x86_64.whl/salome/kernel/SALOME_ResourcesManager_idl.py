# Python stubs generated by omniidl from /tmp/kernel/idl/SALOME_ResourcesManager.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "SALOME_Exception.idl"
import salome.kernel.SALOME_Exception_idl
_0_SALOME = omniORB.openModule("salome.kernel.SALOME")
_0_SALOME__POA = omniORB.openModule("salome.kernel.SALOME__POA")

#
# Start of module "Engines"
#
__name__ = "salome.kernel.Engines"
_0_Engines = omniORB.openModule("salome.kernel.Engines", r"/tmp/kernel/idl/SALOME_ResourcesManager.idl")
_0_Engines__POA = omniORB.openModule("salome.kernel.Engines__POA", r"/tmp/kernel/idl/SALOME_ResourcesManager.idl")


# typedef ... ResourceList
class ResourceList:
    _NP_RepositoryId = "IDL:Engines/ResourceList:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Engines.ResourceList = ResourceList
_0_Engines._d_ResourceList  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
_0_Engines._ad_ResourceList = (omniORB.tcInternal.tv_alias, ResourceList._NP_RepositoryId, "ResourceList", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_Engines._tc_ResourceList = omniORB.tcInternal.createTypeCode(_0_Engines._ad_ResourceList)
omniORB.registerType(ResourceList._NP_RepositoryId, _0_Engines._ad_ResourceList, _0_Engines._tc_ResourceList)
del ResourceList

# typedef ... CompoList
class CompoList:
    _NP_RepositoryId = "IDL:Engines/CompoList:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Engines.CompoList = CompoList
_0_Engines._d_CompoList  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
_0_Engines._ad_CompoList = (omniORB.tcInternal.tv_alias, CompoList._NP_RepositoryId, "CompoList", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_Engines._tc_CompoList = omniORB.tcInternal.createTypeCode(_0_Engines._ad_CompoList)
omniORB.registerType(CompoList._NP_RepositoryId, _0_Engines._ad_CompoList, _0_Engines._tc_CompoList)
del CompoList

# typedef ... IntegerList
class IntegerList:
    _NP_RepositoryId = "IDL:Engines/IntegerList:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Engines.IntegerList = IntegerList
_0_Engines._d_IntegerList  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_long, 0)
_0_Engines._ad_IntegerList = (omniORB.tcInternal.tv_alias, IntegerList._NP_RepositoryId, "IntegerList", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_long, 0))
_0_Engines._tc_IntegerList = omniORB.tcInternal.createTypeCode(_0_Engines._ad_IntegerList)
omniORB.registerType(IntegerList._NP_RepositoryId, _0_Engines._ad_IntegerList, _0_Engines._tc_IntegerList)
del IntegerList

# struct ResourceParameters
_0_Engines.ResourceParameters = omniORB.newEmptyClass()
class ResourceParameters (omniORB.StructBase):
    _NP_RepositoryId = "IDL:Engines/ResourceParameters:1.0"

    def __init__(self, name, hostname, can_launch_batch_jobs, can_run_containers, OS, componentList, nb_proc, mem_mb, cpu_clock, nb_node, nb_proc_per_node, policy, resList):
        self.name = name
        self.hostname = hostname
        self.can_launch_batch_jobs = can_launch_batch_jobs
        self.can_run_containers = can_run_containers
        self.OS = OS
        self.componentList = componentList
        self.nb_proc = nb_proc
        self.mem_mb = mem_mb
        self.cpu_clock = cpu_clock
        self.nb_node = nb_node
        self.nb_proc_per_node = nb_proc_per_node
        self.policy = policy
        self.resList = resList

_0_Engines.ResourceParameters = ResourceParameters
_0_Engines._d_ResourceParameters  = (omniORB.tcInternal.tv_struct, ResourceParameters, ResourceParameters._NP_RepositoryId, "ResourceParameters", "name", (omniORB.tcInternal.tv_string,0), "hostname", (omniORB.tcInternal.tv_string,0), "can_launch_batch_jobs", omniORB.tcInternal.tv_boolean, "can_run_containers", omniORB.tcInternal.tv_boolean, "OS", (omniORB.tcInternal.tv_string,0), "componentList", omniORB.typeMapping["IDL:Engines/CompoList:1.0"], "nb_proc", omniORB.tcInternal.tv_long, "mem_mb", omniORB.tcInternal.tv_long, "cpu_clock", omniORB.tcInternal.tv_long, "nb_node", omniORB.tcInternal.tv_long, "nb_proc_per_node", omniORB.tcInternal.tv_long, "policy", (omniORB.tcInternal.tv_string,0), "resList", omniORB.typeMapping["IDL:Engines/ResourceList:1.0"])
_0_Engines._tc_ResourceParameters = omniORB.tcInternal.createTypeCode(_0_Engines._d_ResourceParameters)
omniORB.registerType(ResourceParameters._NP_RepositoryId, _0_Engines._d_ResourceParameters, _0_Engines._tc_ResourceParameters)
del ResourceParameters

# struct ResourceDefinition
_0_Engines.ResourceDefinition = omniORB.newEmptyClass()
class ResourceDefinition (omniORB.StructBase):
    _NP_RepositoryId = "IDL:Engines/ResourceDefinition:1.0"

    def __init__(self, name, hostname, type, protocol, username, applipath, componentList, OS, mem_mb, cpu_clock, nb_node, nb_proc_per_node, batch, mpiImpl, iprotocol, can_launch_batch_jobs, can_run_containers, working_directory):
        self.name = name
        self.hostname = hostname
        self.type = type
        self.protocol = protocol
        self.username = username
        self.applipath = applipath
        self.componentList = componentList
        self.OS = OS
        self.mem_mb = mem_mb
        self.cpu_clock = cpu_clock
        self.nb_node = nb_node
        self.nb_proc_per_node = nb_proc_per_node
        self.batch = batch
        self.mpiImpl = mpiImpl
        self.iprotocol = iprotocol
        self.can_launch_batch_jobs = can_launch_batch_jobs
        self.can_run_containers = can_run_containers
        self.working_directory = working_directory

_0_Engines.ResourceDefinition = ResourceDefinition
_0_Engines._d_ResourceDefinition  = (omniORB.tcInternal.tv_struct, ResourceDefinition, ResourceDefinition._NP_RepositoryId, "ResourceDefinition", "name", (omniORB.tcInternal.tv_string,0), "hostname", (omniORB.tcInternal.tv_string,0), "type", (omniORB.tcInternal.tv_string,0), "protocol", (omniORB.tcInternal.tv_string,0), "username", (omniORB.tcInternal.tv_string,0), "applipath", (omniORB.tcInternal.tv_string,0), "componentList", omniORB.typeMapping["IDL:Engines/CompoList:1.0"], "OS", (omniORB.tcInternal.tv_string,0), "mem_mb", omniORB.tcInternal.tv_long, "cpu_clock", omniORB.tcInternal.tv_long, "nb_node", omniORB.tcInternal.tv_long, "nb_proc_per_node", omniORB.tcInternal.tv_long, "batch", (omniORB.tcInternal.tv_string,0), "mpiImpl", (omniORB.tcInternal.tv_string,0), "iprotocol", (omniORB.tcInternal.tv_string,0), "can_launch_batch_jobs", omniORB.tcInternal.tv_boolean, "can_run_containers", omniORB.tcInternal.tv_boolean, "working_directory", (omniORB.tcInternal.tv_string,0))
_0_Engines._tc_ResourceDefinition = omniORB.tcInternal.createTypeCode(_0_Engines._d_ResourceDefinition)
omniORB.registerType(ResourceDefinition._NP_RepositoryId, _0_Engines._d_ResourceDefinition, _0_Engines._tc_ResourceDefinition)
del ResourceDefinition

# interface ResourcesManager
_0_Engines._d_ResourcesManager = (omniORB.tcInternal.tv_objref, "IDL:Engines/ResourcesManager:1.0", "ResourcesManager")
omniORB.typeMapping["IDL:Engines/ResourcesManager:1.0"] = _0_Engines._d_ResourcesManager
_0_Engines.ResourcesManager = omniORB.newEmptyClass()
class ResourcesManager :
    _NP_RepositoryId = _0_Engines._d_ResourcesManager[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Engines.ResourcesManager = ResourcesManager
_0_Engines._tc_ResourcesManager = omniORB.tcInternal.createTypeCode(_0_Engines._d_ResourcesManager)
omniORB.registerType(ResourcesManager._NP_RepositoryId, _0_Engines._d_ResourcesManager, _0_Engines._tc_ResourcesManager)

# ResourcesManager operations and attributes
ResourcesManager._d_FindFirst = ((omniORB.typeMapping["IDL:Engines/ResourceList:1.0"], ), ((omniORB.tcInternal.tv_string,0), ), None)
ResourcesManager._d_Find = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:Engines/ResourceList:1.0"]), ((omniORB.tcInternal.tv_string,0), ), None)
ResourcesManager._d_GetFittingResources = ((omniORB.typeMapping["IDL:Engines/ResourceParameters:1.0"], ), (omniORB.typeMapping["IDL:Engines/ResourceList:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
ResourcesManager._d_GetResourceDefinition = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:Engines/ResourceDefinition:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
ResourcesManager._d_AddResource = ((omniORB.typeMapping["IDL:Engines/ResourceDefinition:1.0"], omniORB.tcInternal.tv_boolean, (omniORB.tcInternal.tv_string,0)), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
ResourcesManager._d_RemoveResource = (((omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_boolean, (omniORB.tcInternal.tv_string,0)), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
ResourcesManager._d_getMachineFile = (((omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_long, (omniORB.tcInternal.tv_string,0)), ((omniORB.tcInternal.tv_string,0), ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
ResourcesManager._d_ListAllAvailableResources = ((), (omniORB.typeMapping["IDL:Engines/ResourceList:1.0"], omniORB.typeMapping["IDL:Engines/IntegerList:1.0"]), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
ResourcesManager._d_ListAllResourcesInCatalog = ((), (omniORB.typeMapping["IDL:Engines/ResourceList:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
ResourcesManager._d_ListAllResourceEntriesInCatalog = ((), (omniORB.typeMapping["IDL:Engines/ResourceList:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})

# ResourcesManager object reference
class _objref_ResourcesManager (CORBA.Object):
    _NP_RepositoryId = ResourcesManager._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def FindFirst(self, *args):
        return self._obj.invoke("FindFirst", _0_Engines.ResourcesManager._d_FindFirst, args)

    def Find(self, *args):
        return self._obj.invoke("Find", _0_Engines.ResourcesManager._d_Find, args)

    def GetFittingResources(self, *args):
        return self._obj.invoke("GetFittingResources", _0_Engines.ResourcesManager._d_GetFittingResources, args)

    def GetResourceDefinition(self, *args):
        return self._obj.invoke("GetResourceDefinition", _0_Engines.ResourcesManager._d_GetResourceDefinition, args)

    def AddResource(self, *args):
        return self._obj.invoke("AddResource", _0_Engines.ResourcesManager._d_AddResource, args)

    def RemoveResource(self, *args):
        return self._obj.invoke("RemoveResource", _0_Engines.ResourcesManager._d_RemoveResource, args)

    def getMachineFile(self, *args):
        return self._obj.invoke("getMachineFile", _0_Engines.ResourcesManager._d_getMachineFile, args)

    def ListAllAvailableResources(self, *args):
        return self._obj.invoke("ListAllAvailableResources", _0_Engines.ResourcesManager._d_ListAllAvailableResources, args)

    def ListAllResourcesInCatalog(self, *args):
        return self._obj.invoke("ListAllResourcesInCatalog", _0_Engines.ResourcesManager._d_ListAllResourcesInCatalog, args)

    def ListAllResourceEntriesInCatalog(self, *args):
        return self._obj.invoke("ListAllResourceEntriesInCatalog", _0_Engines.ResourcesManager._d_ListAllResourceEntriesInCatalog, args)

omniORB.registerObjref(ResourcesManager._NP_RepositoryId, _objref_ResourcesManager)
_0_Engines._objref_ResourcesManager = _objref_ResourcesManager
del ResourcesManager, _objref_ResourcesManager

# ResourcesManager skeleton
__name__ = "salome.kernel.Engines__POA"
class ResourcesManager (PortableServer.Servant):
    _NP_RepositoryId = _0_Engines.ResourcesManager._NP_RepositoryId


    _omni_op_d = {"FindFirst": _0_Engines.ResourcesManager._d_FindFirst, "Find": _0_Engines.ResourcesManager._d_Find, "GetFittingResources": _0_Engines.ResourcesManager._d_GetFittingResources, "GetResourceDefinition": _0_Engines.ResourcesManager._d_GetResourceDefinition, "AddResource": _0_Engines.ResourcesManager._d_AddResource, "RemoveResource": _0_Engines.ResourcesManager._d_RemoveResource, "getMachineFile": _0_Engines.ResourcesManager._d_getMachineFile, "ListAllAvailableResources": _0_Engines.ResourcesManager._d_ListAllAvailableResources, "ListAllResourcesInCatalog": _0_Engines.ResourcesManager._d_ListAllResourcesInCatalog, "ListAllResourceEntriesInCatalog": _0_Engines.ResourcesManager._d_ListAllResourceEntriesInCatalog}

ResourcesManager._omni_skeleton = ResourcesManager
_0_Engines__POA.ResourcesManager = ResourcesManager
omniORB.registerSkeleton(ResourcesManager._NP_RepositoryId, ResourcesManager)
del ResourcesManager
__name__ = "salome.kernel.Engines"

#
# End of module "Engines"
#
__name__ = "salome.kernel.SALOME_ResourcesManager_idl"

_exported_modules = ( "salome.kernel.Engines", )

# The end.

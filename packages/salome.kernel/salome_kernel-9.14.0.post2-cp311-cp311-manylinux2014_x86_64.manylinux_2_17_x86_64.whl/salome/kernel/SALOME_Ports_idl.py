# Python stubs generated by omniidl from /tmp/kernel/idl/SALOME_Ports.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "Ports"
#
__name__ = "salome.kernel.Ports"
_0_Ports = omniORB.openModule("salome.kernel.Ports", r"/tmp/kernel/idl/SALOME_Ports.idl")
_0_Ports__POA = omniORB.openModule("salome.kernel.Ports__POA", r"/tmp/kernel/idl/SALOME_Ports.idl")


# interface Port
_0_Ports._d_Port = (omniORB.tcInternal.tv_objref, "IDL:Ports/Port:1.0", "Port")
omniORB.typeMapping["IDL:Ports/Port:1.0"] = _0_Ports._d_Port
_0_Ports.Port = omniORB.newEmptyClass()
class Port :
    _NP_RepositoryId = _0_Ports._d_Port[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Ports.Port = Port
_0_Ports._tc_Port = omniORB.tcInternal.createTypeCode(_0_Ports._d_Port)
omniORB.registerType(Port._NP_RepositoryId, _0_Ports._d_Port, _0_Ports._tc_Port)

# Port object reference
class _objref_Port (CORBA.Object):
    _NP_RepositoryId = Port._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

omniORB.registerObjref(Port._NP_RepositoryId, _objref_Port)
_0_Ports._objref_Port = _objref_Port
del Port, _objref_Port

# Port skeleton
__name__ = "salome.kernel.Ports__POA"
class Port (PortableServer.Servant):
    _NP_RepositoryId = _0_Ports.Port._NP_RepositoryId


    _omni_op_d = {}

Port._omni_skeleton = Port
_0_Ports__POA.Port = Port
omniORB.registerSkeleton(Port._NP_RepositoryId, Port)
del Port
__name__ = "salome.kernel.Ports"

# interface Control_Port
_0_Ports._d_Control_Port = (omniORB.tcInternal.tv_objref, "IDL:Ports/Control_Port:1.0", "Control_Port")
omniORB.typeMapping["IDL:Ports/Control_Port:1.0"] = _0_Ports._d_Control_Port
_0_Ports.Control_Port = omniORB.newEmptyClass()
class Control_Port (_0_Ports.Port):
    _NP_RepositoryId = _0_Ports._d_Control_Port[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Ports.Control_Port = Control_Port
_0_Ports._tc_Control_Port = omniORB.tcInternal.createTypeCode(_0_Ports._d_Control_Port)
omniORB.registerType(Control_Port._NP_RepositoryId, _0_Ports._d_Control_Port, _0_Ports._tc_Control_Port)

# Control_Port object reference
class _objref_Control_Port (_0_Ports._objref_Port):
    _NP_RepositoryId = Control_Port._NP_RepositoryId

    def __init__(self, obj):
        _0_Ports._objref_Port.__init__(self, obj)

omniORB.registerObjref(Control_Port._NP_RepositoryId, _objref_Control_Port)
_0_Ports._objref_Control_Port = _objref_Control_Port
del Control_Port, _objref_Control_Port

# Control_Port skeleton
__name__ = "salome.kernel.Ports__POA"
class Control_Port (_0_Ports__POA.Port):
    _NP_RepositoryId = _0_Ports.Control_Port._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_Ports__POA.Port._omni_op_d)

Control_Port._omni_skeleton = Control_Port
_0_Ports__POA.Control_Port = Control_Port
omniORB.registerSkeleton(Control_Port._NP_RepositoryId, Control_Port)
del Control_Port
__name__ = "salome.kernel.Ports"

# interface Data_Port
_0_Ports._d_Data_Port = (omniORB.tcInternal.tv_objref, "IDL:Ports/Data_Port:1.0", "Data_Port")
omniORB.typeMapping["IDL:Ports/Data_Port:1.0"] = _0_Ports._d_Data_Port
_0_Ports.Data_Port = omniORB.newEmptyClass()
class Data_Port (_0_Ports.Port):
    _NP_RepositoryId = _0_Ports._d_Data_Port[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Ports.Data_Port = Data_Port
_0_Ports._tc_Data_Port = omniORB.tcInternal.createTypeCode(_0_Ports._d_Data_Port)
omniORB.registerType(Data_Port._NP_RepositoryId, _0_Ports._d_Data_Port, _0_Ports._tc_Data_Port)

# Data_Port object reference
class _objref_Data_Port (_0_Ports._objref_Port):
    _NP_RepositoryId = Data_Port._NP_RepositoryId

    def __init__(self, obj):
        _0_Ports._objref_Port.__init__(self, obj)

omniORB.registerObjref(Data_Port._NP_RepositoryId, _objref_Data_Port)
_0_Ports._objref_Data_Port = _objref_Data_Port
del Data_Port, _objref_Data_Port

# Data_Port skeleton
__name__ = "salome.kernel.Ports__POA"
class Data_Port (_0_Ports__POA.Port):
    _NP_RepositoryId = _0_Ports.Data_Port._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_Ports__POA.Port._omni_op_d)

Data_Port._omni_skeleton = Data_Port
_0_Ports__POA.Data_Port = Data_Port
omniORB.registerSkeleton(Data_Port._NP_RepositoryId, Data_Port)
del Data_Port
__name__ = "salome.kernel.Ports"

# interface Data_And_Control_Port
_0_Ports._d_Data_And_Control_Port = (omniORB.tcInternal.tv_objref, "IDL:Ports/Data_And_Control_Port:1.0", "Data_And_Control_Port")
omniORB.typeMapping["IDL:Ports/Data_And_Control_Port:1.0"] = _0_Ports._d_Data_And_Control_Port
_0_Ports.Data_And_Control_Port = omniORB.newEmptyClass()
class Data_And_Control_Port (_0_Ports.Port):
    _NP_RepositoryId = _0_Ports._d_Data_And_Control_Port[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Ports.Data_And_Control_Port = Data_And_Control_Port
_0_Ports._tc_Data_And_Control_Port = omniORB.tcInternal.createTypeCode(_0_Ports._d_Data_And_Control_Port)
omniORB.registerType(Data_And_Control_Port._NP_RepositoryId, _0_Ports._d_Data_And_Control_Port, _0_Ports._tc_Data_And_Control_Port)

# Data_And_Control_Port object reference
class _objref_Data_And_Control_Port (_0_Ports._objref_Port):
    _NP_RepositoryId = Data_And_Control_Port._NP_RepositoryId

    def __init__(self, obj):
        _0_Ports._objref_Port.__init__(self, obj)

omniORB.registerObjref(Data_And_Control_Port._NP_RepositoryId, _objref_Data_And_Control_Port)
_0_Ports._objref_Data_And_Control_Port = _objref_Data_And_Control_Port
del Data_And_Control_Port, _objref_Data_And_Control_Port

# Data_And_Control_Port skeleton
__name__ = "salome.kernel.Ports__POA"
class Data_And_Control_Port (_0_Ports__POA.Port):
    _NP_RepositoryId = _0_Ports.Data_And_Control_Port._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_Ports__POA.Port._omni_op_d)

Data_And_Control_Port._omni_skeleton = Data_And_Control_Port
_0_Ports__POA.Data_And_Control_Port = Data_And_Control_Port
omniORB.registerSkeleton(Data_And_Control_Port._NP_RepositoryId, Data_And_Control_Port)
del Data_And_Control_Port
__name__ = "salome.kernel.Ports"

# exception NotDefined
_0_Ports.NotDefined = omniORB.newEmptyClass()
class NotDefined (CORBA.UserException):
    _NP_RepositoryId = "IDL:Ports/NotDefined:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_Ports.NotDefined = NotDefined
_0_Ports._d_NotDefined  = (omniORB.tcInternal.tv_except, NotDefined, NotDefined._NP_RepositoryId, "NotDefined")
_0_Ports._tc_NotDefined = omniORB.tcInternal.createTypeCode(_0_Ports._d_NotDefined)
omniORB.registerType(NotDefined._NP_RepositoryId, _0_Ports._d_NotDefined, _0_Ports._tc_NotDefined)
del NotDefined

# exception BadType
_0_Ports.BadType = omniORB.newEmptyClass()
class BadType (CORBA.UserException):
    _NP_RepositoryId = "IDL:Ports/BadType:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_Ports.BadType = BadType
_0_Ports._d_BadType  = (omniORB.tcInternal.tv_except, BadType, BadType._NP_RepositoryId, "BadType")
_0_Ports._tc_BadType = omniORB.tcInternal.createTypeCode(_0_Ports._d_BadType)
omniORB.registerType(BadType._NP_RepositoryId, _0_Ports._d_BadType, _0_Ports._tc_BadType)
del BadType

# exception BadValue
_0_Ports.BadValue = omniORB.newEmptyClass()
class BadValue (CORBA.UserException):
    _NP_RepositoryId = "IDL:Ports/BadValue:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_Ports.BadValue = BadValue
_0_Ports._d_BadValue  = (omniORB.tcInternal.tv_except, BadValue, BadValue._NP_RepositoryId, "BadValue")
_0_Ports._tc_BadValue = omniORB.tcInternal.createTypeCode(_0_Ports._d_BadValue)
omniORB.registerType(BadValue._NP_RepositoryId, _0_Ports._d_BadValue, _0_Ports._tc_BadValue)
del BadValue

# interface PortProperties
_0_Ports._d_PortProperties = (omniORB.tcInternal.tv_objref, "IDL:Ports/PortProperties:1.0", "PortProperties")
omniORB.typeMapping["IDL:Ports/PortProperties:1.0"] = _0_Ports._d_PortProperties
_0_Ports.PortProperties = omniORB.newEmptyClass()
class PortProperties :
    _NP_RepositoryId = _0_Ports._d_PortProperties[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Ports.PortProperties = PortProperties
_0_Ports._tc_PortProperties = omniORB.tcInternal.createTypeCode(_0_Ports._d_PortProperties)
omniORB.registerType(PortProperties._NP_RepositoryId, _0_Ports._d_PortProperties, _0_Ports._tc_PortProperties)

# PortProperties operations and attributes
PortProperties._d_set_property = (((omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_any), (), {_0_Ports.BadType._NP_RepositoryId: _0_Ports._d_BadType, _0_Ports.BadValue._NP_RepositoryId: _0_Ports._d_BadValue, _0_Ports.NotDefined._NP_RepositoryId: _0_Ports._d_NotDefined})
PortProperties._d_get_property = (((omniORB.tcInternal.tv_string,0), ), (omniORB.tcInternal.tv_any, ), {_0_Ports.NotDefined._NP_RepositoryId: _0_Ports._d_NotDefined})

# PortProperties object reference
class _objref_PortProperties (CORBA.Object):
    _NP_RepositoryId = PortProperties._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def set_property(self, *args):
        return self._obj.invoke("set_property", _0_Ports.PortProperties._d_set_property, args)

    def get_property(self, *args):
        return self._obj.invoke("get_property", _0_Ports.PortProperties._d_get_property, args)

omniORB.registerObjref(PortProperties._NP_RepositoryId, _objref_PortProperties)
_0_Ports._objref_PortProperties = _objref_PortProperties
del PortProperties, _objref_PortProperties

# PortProperties skeleton
__name__ = "salome.kernel.Ports__POA"
class PortProperties (PortableServer.Servant):
    _NP_RepositoryId = _0_Ports.PortProperties._NP_RepositoryId


    _omni_op_d = {"set_property": _0_Ports.PortProperties._d_set_property, "get_property": _0_Ports.PortProperties._d_get_property}

PortProperties._omni_skeleton = PortProperties
_0_Ports__POA.PortProperties = PortProperties
omniORB.registerSkeleton(PortProperties._NP_RepositoryId, PortProperties)
del PortProperties
__name__ = "salome.kernel.Ports"

# interface Data_Short_Port
_0_Ports._d_Data_Short_Port = (omniORB.tcInternal.tv_objref, "IDL:Ports/Data_Short_Port:1.0", "Data_Short_Port")
omniORB.typeMapping["IDL:Ports/Data_Short_Port:1.0"] = _0_Ports._d_Data_Short_Port
_0_Ports.Data_Short_Port = omniORB.newEmptyClass()
class Data_Short_Port (_0_Ports.Data_Port):
    _NP_RepositoryId = _0_Ports._d_Data_Short_Port[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Ports.Data_Short_Port = Data_Short_Port
_0_Ports._tc_Data_Short_Port = omniORB.tcInternal.createTypeCode(_0_Ports._d_Data_Short_Port)
omniORB.registerType(Data_Short_Port._NP_RepositoryId, _0_Ports._d_Data_Short_Port, _0_Ports._tc_Data_Short_Port)

# Data_Short_Port operations and attributes
Data_Short_Port._d_put = ((omniORB.tcInternal.tv_short, ), (), None)

# Data_Short_Port object reference
class _objref_Data_Short_Port (_0_Ports._objref_Data_Port):
    _NP_RepositoryId = Data_Short_Port._NP_RepositoryId

    def __init__(self, obj):
        _0_Ports._objref_Data_Port.__init__(self, obj)

    def put(self, *args):
        return self._obj.invoke("put", _0_Ports.Data_Short_Port._d_put, args)

omniORB.registerObjref(Data_Short_Port._NP_RepositoryId, _objref_Data_Short_Port)
_0_Ports._objref_Data_Short_Port = _objref_Data_Short_Port
del Data_Short_Port, _objref_Data_Short_Port

# Data_Short_Port skeleton
__name__ = "salome.kernel.Ports__POA"
class Data_Short_Port (_0_Ports__POA.Data_Port):
    _NP_RepositoryId = _0_Ports.Data_Short_Port._NP_RepositoryId


    _omni_op_d = {"put": _0_Ports.Data_Short_Port._d_put}
    _omni_op_d.update(_0_Ports__POA.Data_Port._omni_op_d)

Data_Short_Port._omni_skeleton = Data_Short_Port
_0_Ports__POA.Data_Short_Port = Data_Short_Port
omniORB.registerSkeleton(Data_Short_Port._NP_RepositoryId, Data_Short_Port)
del Data_Short_Port
__name__ = "salome.kernel.Ports"

#
# End of module "Ports"
#
__name__ = "salome.kernel.SALOME_Ports_idl"

_exported_modules = ( "salome.kernel.Ports", )

# The end.

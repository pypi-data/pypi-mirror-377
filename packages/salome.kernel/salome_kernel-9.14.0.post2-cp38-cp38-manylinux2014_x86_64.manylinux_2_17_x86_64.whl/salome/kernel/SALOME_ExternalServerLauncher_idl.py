# Python stubs generated by omniidl from /tmp/kernel/idl/SALOME_ExternalServerLauncher.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "SALOME_Exception.idl"
import salome.kernel.SALOME_Exception_idl
_0_SALOME = omniORB.openModule("salome.kernel.SALOME")
_0_SALOME__POA = omniORB.openModule("salome.kernel.SALOME__POA")

# #include "SALOME_CommonTypes.idl"
import salome.kernel.SALOME_CommonTypes_idl
_0_SALOME = omniORB.openModule("salome.kernel.SALOME")
_0_SALOME__POA = omniORB.openModule("salome.kernel.SALOME__POA")

#
# Start of module "SALOME"
#
__name__ = "salome.kernel.SALOME"
_0_SALOME = omniORB.openModule("salome.kernel.SALOME", r"/tmp/kernel/idl/SALOME_ExternalServerLauncher.idl")
_0_SALOME__POA = omniORB.openModule("salome.kernel.SALOME__POA", r"/tmp/kernel/idl/SALOME_ExternalServerLauncher.idl")


# typedef ... CmdList
class CmdList:
    _NP_RepositoryId = "IDL:SALOME/CmdList:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_SALOME.CmdList = CmdList
_0_SALOME._d_CmdList  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
_0_SALOME._ad_CmdList = (omniORB.tcInternal.tv_alias, CmdList._NP_RepositoryId, "CmdList", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_SALOME._tc_CmdList = omniORB.tcInternal.createTypeCode(_0_SALOME._ad_CmdList)
omniORB.registerType(CmdList._NP_RepositoryId, _0_SALOME._ad_CmdList, _0_SALOME._tc_CmdList)
del CmdList

# interface ExternalServerHandler
_0_SALOME._d_ExternalServerHandler = (omniORB.tcInternal.tv_objref, "IDL:SALOME/ExternalServerHandler:1.0", "ExternalServerHandler")
omniORB.typeMapping["IDL:SALOME/ExternalServerHandler:1.0"] = _0_SALOME._d_ExternalServerHandler
_0_SALOME.ExternalServerHandler = omniORB.newEmptyClass()
class ExternalServerHandler :
    _NP_RepositoryId = _0_SALOME._d_ExternalServerHandler[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.ExternalServerHandler = ExternalServerHandler
_0_SALOME._tc_ExternalServerHandler = omniORB.tcInternal.createTypeCode(_0_SALOME._d_ExternalServerHandler)
omniORB.registerType(ExternalServerHandler._NP_RepositoryId, _0_SALOME._d_ExternalServerHandler, _0_SALOME._tc_ExternalServerHandler)

# ExternalServerHandler operations and attributes
ExternalServerHandler._d_getPID = ((), (omniORB.tcInternal.tv_long, ), None)
ExternalServerHandler._d_getName = ((), ((omniORB.tcInternal.tv_string,0), ), None)
ExternalServerHandler._d_killMe = ((), (), None)
ExternalServerHandler._d_ping = ((), (), None)
ExternalServerHandler._d_shutdown = ((), (), None)
ExternalServerHandler._d_listOfChildrenPID = ((), (omniORB.typeMapping["IDL:SALOME/LongVec:1.0"], ), None)

# ExternalServerHandler object reference
class _objref_ExternalServerHandler (CORBA.Object):
    _NP_RepositoryId = ExternalServerHandler._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def getPID(self, *args):
        return self._obj.invoke("getPID", _0_SALOME.ExternalServerHandler._d_getPID, args)

    def getName(self, *args):
        return self._obj.invoke("getName", _0_SALOME.ExternalServerHandler._d_getName, args)

    def killMe(self, *args):
        return self._obj.invoke("killMe", _0_SALOME.ExternalServerHandler._d_killMe, args)

    def ping(self, *args):
        return self._obj.invoke("ping", _0_SALOME.ExternalServerHandler._d_ping, args)

    def shutdown(self, *args):
        return self._obj.invoke("shutdown", _0_SALOME.ExternalServerHandler._d_shutdown, args)

    def listOfChildrenPID(self, *args):
        return self._obj.invoke("listOfChildrenPID", _0_SALOME.ExternalServerHandler._d_listOfChildrenPID, args)

omniORB.registerObjref(ExternalServerHandler._NP_RepositoryId, _objref_ExternalServerHandler)
_0_SALOME._objref_ExternalServerHandler = _objref_ExternalServerHandler
del ExternalServerHandler, _objref_ExternalServerHandler

# ExternalServerHandler skeleton
__name__ = "salome.kernel.SALOME__POA"
class ExternalServerHandler (PortableServer.Servant):
    _NP_RepositoryId = _0_SALOME.ExternalServerHandler._NP_RepositoryId


    _omni_op_d = {"getPID": _0_SALOME.ExternalServerHandler._d_getPID, "getName": _0_SALOME.ExternalServerHandler._d_getName, "killMe": _0_SALOME.ExternalServerHandler._d_killMe, "ping": _0_SALOME.ExternalServerHandler._d_ping, "shutdown": _0_SALOME.ExternalServerHandler._d_shutdown, "listOfChildrenPID": _0_SALOME.ExternalServerHandler._d_listOfChildrenPID}

ExternalServerHandler._omni_skeleton = ExternalServerHandler
_0_SALOME__POA.ExternalServerHandler = ExternalServerHandler
omniORB.registerSkeleton(ExternalServerHandler._NP_RepositoryId, ExternalServerHandler)
del ExternalServerHandler
__name__ = "salome.kernel.SALOME"

# interface ExternalServerLauncher
_0_SALOME._d_ExternalServerLauncher = (omniORB.tcInternal.tv_objref, "IDL:SALOME/ExternalServerLauncher:1.0", "ExternalServerLauncher")
omniORB.typeMapping["IDL:SALOME/ExternalServerLauncher:1.0"] = _0_SALOME._d_ExternalServerLauncher
_0_SALOME.ExternalServerLauncher = omniORB.newEmptyClass()
class ExternalServerLauncher :
    _NP_RepositoryId = _0_SALOME._d_ExternalServerLauncher[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.ExternalServerLauncher = ExternalServerLauncher
_0_SALOME._tc_ExternalServerLauncher = omniORB.tcInternal.createTypeCode(_0_SALOME._d_ExternalServerLauncher)
omniORB.registerType(ExternalServerLauncher._NP_RepositoryId, _0_SALOME._d_ExternalServerLauncher, _0_SALOME._tc_ExternalServerLauncher)

# ExternalServerLauncher operations and attributes
ExternalServerLauncher._d_launchServer = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:SALOME/CmdList:1.0"]), (omniORB.typeMapping["IDL:SALOME/ExternalServerHandler:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
ExternalServerLauncher._d_cleanServersInNS = ((), (), None)
ExternalServerLauncher._d_listServersInNS = ((), (omniORB.typeMapping["IDL:SALOME/StringVec:1.0"], ), None)
ExternalServerLauncher._d_retrieveServerRefGivenNSEntry = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:SALOME/ExternalServerHandler:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
ExternalServerLauncher._d_registerToKill = (((omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_long), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
ExternalServerLauncher._d_shutdownServers = ((), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
ExternalServerLauncher._d_gethostname = ((), ((omniORB.tcInternal.tv_string,0), ), None)
ExternalServerLauncher._d_fetchContentOfFileAndRm = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})

# ExternalServerLauncher object reference
class _objref_ExternalServerLauncher (CORBA.Object):
    _NP_RepositoryId = ExternalServerLauncher._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def launchServer(self, *args):
        return self._obj.invoke("launchServer", _0_SALOME.ExternalServerLauncher._d_launchServer, args)

    def cleanServersInNS(self, *args):
        return self._obj.invoke("cleanServersInNS", _0_SALOME.ExternalServerLauncher._d_cleanServersInNS, args)

    def listServersInNS(self, *args):
        return self._obj.invoke("listServersInNS", _0_SALOME.ExternalServerLauncher._d_listServersInNS, args)

    def retrieveServerRefGivenNSEntry(self, *args):
        return self._obj.invoke("retrieveServerRefGivenNSEntry", _0_SALOME.ExternalServerLauncher._d_retrieveServerRefGivenNSEntry, args)

    def registerToKill(self, *args):
        return self._obj.invoke("registerToKill", _0_SALOME.ExternalServerLauncher._d_registerToKill, args)

    def shutdownServers(self, *args):
        return self._obj.invoke("shutdownServers", _0_SALOME.ExternalServerLauncher._d_shutdownServers, args)

    def gethostname(self, *args):
        return self._obj.invoke("gethostname", _0_SALOME.ExternalServerLauncher._d_gethostname, args)

    def fetchContentOfFileAndRm(self, *args):
        return self._obj.invoke("fetchContentOfFileAndRm", _0_SALOME.ExternalServerLauncher._d_fetchContentOfFileAndRm, args)

omniORB.registerObjref(ExternalServerLauncher._NP_RepositoryId, _objref_ExternalServerLauncher)
_0_SALOME._objref_ExternalServerLauncher = _objref_ExternalServerLauncher
del ExternalServerLauncher, _objref_ExternalServerLauncher

# ExternalServerLauncher skeleton
__name__ = "salome.kernel.SALOME__POA"
class ExternalServerLauncher (PortableServer.Servant):
    _NP_RepositoryId = _0_SALOME.ExternalServerLauncher._NP_RepositoryId


    _omni_op_d = {"launchServer": _0_SALOME.ExternalServerLauncher._d_launchServer, "cleanServersInNS": _0_SALOME.ExternalServerLauncher._d_cleanServersInNS, "listServersInNS": _0_SALOME.ExternalServerLauncher._d_listServersInNS, "retrieveServerRefGivenNSEntry": _0_SALOME.ExternalServerLauncher._d_retrieveServerRefGivenNSEntry, "registerToKill": _0_SALOME.ExternalServerLauncher._d_registerToKill, "shutdownServers": _0_SALOME.ExternalServerLauncher._d_shutdownServers, "gethostname": _0_SALOME.ExternalServerLauncher._d_gethostname, "fetchContentOfFileAndRm": _0_SALOME.ExternalServerLauncher._d_fetchContentOfFileAndRm}

ExternalServerLauncher._omni_skeleton = ExternalServerLauncher
_0_SALOME__POA.ExternalServerLauncher = ExternalServerLauncher
omniORB.registerSkeleton(ExternalServerLauncher._NP_RepositoryId, ExternalServerLauncher)
del ExternalServerLauncher
__name__ = "salome.kernel.SALOME"

#
# End of module "SALOME"
#
__name__ = "salome.kernel.SALOME_ExternalServerLauncher_idl"

_exported_modules = ( "salome.kernel.SALOME", )

# The end.

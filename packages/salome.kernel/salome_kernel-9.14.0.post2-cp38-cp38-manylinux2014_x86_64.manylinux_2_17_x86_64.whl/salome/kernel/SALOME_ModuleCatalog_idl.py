# Python stubs generated by omniidl from /tmp/kernel/idl/SALOME_ModuleCatalog.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "SALOME_ModuleCatalog"
#
__name__ = "salome.kernel.SALOME_ModuleCatalog"
_0_SALOME_ModuleCatalog = omniORB.openModule("salome.kernel.SALOME_ModuleCatalog", r"/tmp/kernel/idl/SALOME_ModuleCatalog.idl")
_0_SALOME_ModuleCatalog__POA = omniORB.openModule("salome.kernel.SALOME_ModuleCatalog__POA", r"/tmp/kernel/idl/SALOME_ModuleCatalog.idl")


# enum ComponentType
_0_SALOME_ModuleCatalog.GEOM = omniORB.EnumItem("GEOM", 0)
_0_SALOME_ModuleCatalog.MESH = omniORB.EnumItem("MESH", 1)
_0_SALOME_ModuleCatalog.Med = omniORB.EnumItem("Med", 2)
_0_SALOME_ModuleCatalog.SOLVER = omniORB.EnumItem("SOLVER", 3)
_0_SALOME_ModuleCatalog.DATA = omniORB.EnumItem("DATA", 4)
_0_SALOME_ModuleCatalog.VISU = omniORB.EnumItem("VISU", 5)
_0_SALOME_ModuleCatalog.SUPERV = omniORB.EnumItem("SUPERV", 6)
_0_SALOME_ModuleCatalog.OTHER = omniORB.EnumItem("OTHER", 7)
_0_SALOME_ModuleCatalog.ComponentType = omniORB.Enum("IDL:SALOME_ModuleCatalog/ComponentType:1.0", (_0_SALOME_ModuleCatalog.GEOM, _0_SALOME_ModuleCatalog.MESH, _0_SALOME_ModuleCatalog.Med, _0_SALOME_ModuleCatalog.SOLVER, _0_SALOME_ModuleCatalog.DATA, _0_SALOME_ModuleCatalog.VISU, _0_SALOME_ModuleCatalog.SUPERV, _0_SALOME_ModuleCatalog.OTHER,))

_0_SALOME_ModuleCatalog._d_ComponentType  = (omniORB.tcInternal.tv_enum, _0_SALOME_ModuleCatalog.ComponentType._NP_RepositoryId, "ComponentType", _0_SALOME_ModuleCatalog.ComponentType._items)
_0_SALOME_ModuleCatalog._tc_ComponentType = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._d_ComponentType)
omniORB.registerType(_0_SALOME_ModuleCatalog.ComponentType._NP_RepositoryId, _0_SALOME_ModuleCatalog._d_ComponentType, _0_SALOME_ModuleCatalog._tc_ComponentType)

# struct ServicesParameter
_0_SALOME_ModuleCatalog.ServicesParameter = omniORB.newEmptyClass()
class ServicesParameter (omniORB.StructBase):
    _NP_RepositoryId = "IDL:SALOME_ModuleCatalog/ServicesParameter:1.0"

    def __init__(self, Parametertype, Parametername):
        self.Parametertype = Parametertype
        self.Parametername = Parametername

_0_SALOME_ModuleCatalog.ServicesParameter = ServicesParameter
_0_SALOME_ModuleCatalog._d_ServicesParameter  = (omniORB.tcInternal.tv_struct, ServicesParameter, ServicesParameter._NP_RepositoryId, "ServicesParameter", "Parametertype", (omniORB.tcInternal.tv_string,0), "Parametername", (omniORB.tcInternal.tv_string,0))
_0_SALOME_ModuleCatalog._tc_ServicesParameter = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._d_ServicesParameter)
omniORB.registerType(ServicesParameter._NP_RepositoryId, _0_SALOME_ModuleCatalog._d_ServicesParameter, _0_SALOME_ModuleCatalog._tc_ServicesParameter)
del ServicesParameter

# enum DataStreamDependency
_0_SALOME_ModuleCatalog.DATASTREAM_UNDEFINED = omniORB.EnumItem("DATASTREAM_UNDEFINED", 0)
_0_SALOME_ModuleCatalog.DATASTREAM_TEMPORAL = omniORB.EnumItem("DATASTREAM_TEMPORAL", 1)
_0_SALOME_ModuleCatalog.DATASTREAM_ITERATIVE = omniORB.EnumItem("DATASTREAM_ITERATIVE", 2)
_0_SALOME_ModuleCatalog.DataStreamDependency = omniORB.Enum("IDL:SALOME_ModuleCatalog/DataStreamDependency:1.0", (_0_SALOME_ModuleCatalog.DATASTREAM_UNDEFINED, _0_SALOME_ModuleCatalog.DATASTREAM_TEMPORAL, _0_SALOME_ModuleCatalog.DATASTREAM_ITERATIVE,))

_0_SALOME_ModuleCatalog._d_DataStreamDependency  = (omniORB.tcInternal.tv_enum, _0_SALOME_ModuleCatalog.DataStreamDependency._NP_RepositoryId, "DataStreamDependency", _0_SALOME_ModuleCatalog.DataStreamDependency._items)
_0_SALOME_ModuleCatalog._tc_DataStreamDependency = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._d_DataStreamDependency)
omniORB.registerType(_0_SALOME_ModuleCatalog.DataStreamDependency._NP_RepositoryId, _0_SALOME_ModuleCatalog._d_DataStreamDependency, _0_SALOME_ModuleCatalog._tc_DataStreamDependency)

# struct ServicesDataStreamParameter
_0_SALOME_ModuleCatalog.ServicesDataStreamParameter = omniORB.newEmptyClass()
class ServicesDataStreamParameter (omniORB.StructBase):
    _NP_RepositoryId = "IDL:SALOME_ModuleCatalog/ServicesDataStreamParameter:1.0"

    def __init__(self, Parametertype, Parametername, Parameterdependency):
        self.Parametertype = Parametertype
        self.Parametername = Parametername
        self.Parameterdependency = Parameterdependency

_0_SALOME_ModuleCatalog.ServicesDataStreamParameter = ServicesDataStreamParameter
_0_SALOME_ModuleCatalog._d_ServicesDataStreamParameter  = (omniORB.tcInternal.tv_struct, ServicesDataStreamParameter, ServicesDataStreamParameter._NP_RepositoryId, "ServicesDataStreamParameter", "Parametertype", (omniORB.tcInternal.tv_string,0), "Parametername", (omniORB.tcInternal.tv_string,0), "Parameterdependency", omniORB.typeMapping["IDL:SALOME_ModuleCatalog/DataStreamDependency:1.0"])
_0_SALOME_ModuleCatalog._tc_ServicesDataStreamParameter = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._d_ServicesDataStreamParameter)
omniORB.registerType(ServicesDataStreamParameter._NP_RepositoryId, _0_SALOME_ModuleCatalog._d_ServicesDataStreamParameter, _0_SALOME_ModuleCatalog._tc_ServicesDataStreamParameter)
del ServicesDataStreamParameter

# typedef ... ListOfServicesParameter
class ListOfServicesParameter:
    _NP_RepositoryId = "IDL:SALOME_ModuleCatalog/ListOfServicesParameter:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_SALOME_ModuleCatalog.ListOfServicesParameter = ListOfServicesParameter
_0_SALOME_ModuleCatalog._d_ListOfServicesParameter  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ServicesParameter:1.0"], 0)
_0_SALOME_ModuleCatalog._ad_ListOfServicesParameter = (omniORB.tcInternal.tv_alias, ListOfServicesParameter._NP_RepositoryId, "ListOfServicesParameter", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ServicesParameter:1.0"], 0))
_0_SALOME_ModuleCatalog._tc_ListOfServicesParameter = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._ad_ListOfServicesParameter)
omniORB.registerType(ListOfServicesParameter._NP_RepositoryId, _0_SALOME_ModuleCatalog._ad_ListOfServicesParameter, _0_SALOME_ModuleCatalog._tc_ListOfServicesParameter)
del ListOfServicesParameter

# typedef ... ListOfServicesDataStreamParameter
class ListOfServicesDataStreamParameter:
    _NP_RepositoryId = "IDL:SALOME_ModuleCatalog/ListOfServicesDataStreamParameter:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_SALOME_ModuleCatalog.ListOfServicesDataStreamParameter = ListOfServicesDataStreamParameter
_0_SALOME_ModuleCatalog._d_ListOfServicesDataStreamParameter  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ServicesDataStreamParameter:1.0"], 0)
_0_SALOME_ModuleCatalog._ad_ListOfServicesDataStreamParameter = (omniORB.tcInternal.tv_alias, ListOfServicesDataStreamParameter._NP_RepositoryId, "ListOfServicesDataStreamParameter", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ServicesDataStreamParameter:1.0"], 0))
_0_SALOME_ModuleCatalog._tc_ListOfServicesDataStreamParameter = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._ad_ListOfServicesDataStreamParameter)
omniORB.registerType(ListOfServicesDataStreamParameter._NP_RepositoryId, _0_SALOME_ModuleCatalog._ad_ListOfServicesDataStreamParameter, _0_SALOME_ModuleCatalog._tc_ListOfServicesDataStreamParameter)
del ListOfServicesDataStreamParameter

# typedef ... ListOfString
class ListOfString:
    _NP_RepositoryId = "IDL:SALOME_ModuleCatalog/ListOfString:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_SALOME_ModuleCatalog.ListOfString = ListOfString
_0_SALOME_ModuleCatalog._d_ListOfString  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
_0_SALOME_ModuleCatalog._ad_ListOfString = (omniORB.tcInternal.tv_alias, ListOfString._NP_RepositoryId, "ListOfString", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_SALOME_ModuleCatalog._tc_ListOfString = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._ad_ListOfString)
omniORB.registerType(ListOfString._NP_RepositoryId, _0_SALOME_ModuleCatalog._ad_ListOfString, _0_SALOME_ModuleCatalog._tc_ListOfString)
del ListOfString

# enum TypeKind
_0_SALOME_ModuleCatalog.NONE = omniORB.EnumItem("NONE", 0)
_0_SALOME_ModuleCatalog.Dble = omniORB.EnumItem("Dble", 1)
_0_SALOME_ModuleCatalog.Int = omniORB.EnumItem("Int", 2)
_0_SALOME_ModuleCatalog.Str = omniORB.EnumItem("Str", 3)
_0_SALOME_ModuleCatalog.Bool = omniORB.EnumItem("Bool", 4)
_0_SALOME_ModuleCatalog.Objref = omniORB.EnumItem("Objref", 5)
_0_SALOME_ModuleCatalog.Seq = omniORB.EnumItem("Seq", 6)
_0_SALOME_ModuleCatalog.Array = omniORB.EnumItem("Array", 7)
_0_SALOME_ModuleCatalog.Struc = omniORB.EnumItem("Struc", 8)
_0_SALOME_ModuleCatalog.TypeKind = omniORB.Enum("IDL:SALOME_ModuleCatalog/TypeKind:1.0", (_0_SALOME_ModuleCatalog.NONE, _0_SALOME_ModuleCatalog.Dble, _0_SALOME_ModuleCatalog.Int, _0_SALOME_ModuleCatalog.Str, _0_SALOME_ModuleCatalog.Bool, _0_SALOME_ModuleCatalog.Objref, _0_SALOME_ModuleCatalog.Seq, _0_SALOME_ModuleCatalog.Array, _0_SALOME_ModuleCatalog.Struc,))

_0_SALOME_ModuleCatalog._d_TypeKind  = (omniORB.tcInternal.tv_enum, _0_SALOME_ModuleCatalog.TypeKind._NP_RepositoryId, "TypeKind", _0_SALOME_ModuleCatalog.TypeKind._items)
_0_SALOME_ModuleCatalog._tc_TypeKind = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._d_TypeKind)
omniORB.registerType(_0_SALOME_ModuleCatalog.TypeKind._NP_RepositoryId, _0_SALOME_ModuleCatalog._d_TypeKind, _0_SALOME_ModuleCatalog._tc_TypeKind)

# struct MemberDefinition
_0_SALOME_ModuleCatalog.MemberDefinition = omniORB.newEmptyClass()
class MemberDefinition (omniORB.StructBase):
    _NP_RepositoryId = "IDL:SALOME_ModuleCatalog/MemberDefinition:1.0"

    def __init__(self, name, type):
        self.name = name
        self.type = type

_0_SALOME_ModuleCatalog.MemberDefinition = MemberDefinition
_0_SALOME_ModuleCatalog._d_MemberDefinition  = (omniORB.tcInternal.tv_struct, MemberDefinition, MemberDefinition._NP_RepositoryId, "MemberDefinition", "name", (omniORB.tcInternal.tv_string,0), "type", (omniORB.tcInternal.tv_string,0))
_0_SALOME_ModuleCatalog._tc_MemberDefinition = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._d_MemberDefinition)
omniORB.registerType(MemberDefinition._NP_RepositoryId, _0_SALOME_ModuleCatalog._d_MemberDefinition, _0_SALOME_ModuleCatalog._tc_MemberDefinition)
del MemberDefinition

# typedef ... ListOfMemberDefinition
class ListOfMemberDefinition:
    _NP_RepositoryId = "IDL:SALOME_ModuleCatalog/ListOfMemberDefinition:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_SALOME_ModuleCatalog.ListOfMemberDefinition = ListOfMemberDefinition
_0_SALOME_ModuleCatalog._d_ListOfMemberDefinition  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:SALOME_ModuleCatalog/MemberDefinition:1.0"], 0)
_0_SALOME_ModuleCatalog._ad_ListOfMemberDefinition = (omniORB.tcInternal.tv_alias, ListOfMemberDefinition._NP_RepositoryId, "ListOfMemberDefinition", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:SALOME_ModuleCatalog/MemberDefinition:1.0"], 0))
_0_SALOME_ModuleCatalog._tc_ListOfMemberDefinition = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._ad_ListOfMemberDefinition)
omniORB.registerType(ListOfMemberDefinition._NP_RepositoryId, _0_SALOME_ModuleCatalog._ad_ListOfMemberDefinition, _0_SALOME_ModuleCatalog._tc_ListOfMemberDefinition)
del ListOfMemberDefinition

# struct TypeDefinition
_0_SALOME_ModuleCatalog.TypeDefinition = omniORB.newEmptyClass()
class TypeDefinition (omniORB.StructBase):
    _NP_RepositoryId = "IDL:SALOME_ModuleCatalog/TypeDefinition:1.0"

    def __init__(self, name, kind, id, content, bases, members):
        self.name = name
        self.kind = kind
        self.id = id
        self.content = content
        self.bases = bases
        self.members = members

_0_SALOME_ModuleCatalog.TypeDefinition = TypeDefinition
_0_SALOME_ModuleCatalog._d_TypeDefinition  = (omniORB.tcInternal.tv_struct, TypeDefinition, TypeDefinition._NP_RepositoryId, "TypeDefinition", "name", (omniORB.tcInternal.tv_string,0), "kind", omniORB.typeMapping["IDL:SALOME_ModuleCatalog/TypeKind:1.0"], "id", (omniORB.tcInternal.tv_string,0), "content", (omniORB.tcInternal.tv_string,0), "bases", omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ListOfString:1.0"], "members", omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ListOfMemberDefinition:1.0"])
_0_SALOME_ModuleCatalog._tc_TypeDefinition = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._d_TypeDefinition)
omniORB.registerType(TypeDefinition._NP_RepositoryId, _0_SALOME_ModuleCatalog._d_TypeDefinition, _0_SALOME_ModuleCatalog._tc_TypeDefinition)
del TypeDefinition

# typedef ... ListOfTypeDefinition
class ListOfTypeDefinition:
    _NP_RepositoryId = "IDL:SALOME_ModuleCatalog/ListOfTypeDefinition:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_SALOME_ModuleCatalog.ListOfTypeDefinition = ListOfTypeDefinition
_0_SALOME_ModuleCatalog._d_ListOfTypeDefinition  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:SALOME_ModuleCatalog/TypeDefinition:1.0"], 0)
_0_SALOME_ModuleCatalog._ad_ListOfTypeDefinition = (omniORB.tcInternal.tv_alias, ListOfTypeDefinition._NP_RepositoryId, "ListOfTypeDefinition", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:SALOME_ModuleCatalog/TypeDefinition:1.0"], 0))
_0_SALOME_ModuleCatalog._tc_ListOfTypeDefinition = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._ad_ListOfTypeDefinition)
omniORB.registerType(ListOfTypeDefinition._NP_RepositoryId, _0_SALOME_ModuleCatalog._ad_ListOfTypeDefinition, _0_SALOME_ModuleCatalog._tc_ListOfTypeDefinition)
del ListOfTypeDefinition

# struct Service
_0_SALOME_ModuleCatalog.Service = omniORB.newEmptyClass()
class Service (omniORB.StructBase):
    _NP_RepositoryId = "IDL:SALOME_ModuleCatalog/Service:1.0"

    def __init__(self, ServiceName, ServiceinParameter, ServiceoutParameter, ServiceinDataStreamParameter, ServiceoutDataStreamParameter, Servicebydefault, TypeOfNode):
        self.ServiceName = ServiceName
        self.ServiceinParameter = ServiceinParameter
        self.ServiceoutParameter = ServiceoutParameter
        self.ServiceinDataStreamParameter = ServiceinDataStreamParameter
        self.ServiceoutDataStreamParameter = ServiceoutDataStreamParameter
        self.Servicebydefault = Servicebydefault
        self.TypeOfNode = TypeOfNode

_0_SALOME_ModuleCatalog.Service = Service
_0_SALOME_ModuleCatalog._d_Service  = (omniORB.tcInternal.tv_struct, Service, Service._NP_RepositoryId, "Service", "ServiceName", (omniORB.tcInternal.tv_string,0), "ServiceinParameter", omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ListOfServicesParameter:1.0"], "ServiceoutParameter", omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ListOfServicesParameter:1.0"], "ServiceinDataStreamParameter", omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ListOfServicesDataStreamParameter:1.0"], "ServiceoutDataStreamParameter", omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ListOfServicesDataStreamParameter:1.0"], "Servicebydefault", omniORB.tcInternal.tv_boolean, "TypeOfNode", omniORB.tcInternal.tv_boolean)
_0_SALOME_ModuleCatalog._tc_Service = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._d_Service)
omniORB.registerType(Service._NP_RepositoryId, _0_SALOME_ModuleCatalog._d_Service, _0_SALOME_ModuleCatalog._tc_Service)
del Service

# typedef ... ListOfInterfaceService
class ListOfInterfaceService:
    _NP_RepositoryId = "IDL:SALOME_ModuleCatalog/ListOfInterfaceService:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_SALOME_ModuleCatalog.ListOfInterfaceService = ListOfInterfaceService
_0_SALOME_ModuleCatalog._d_ListOfInterfaceService  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:SALOME_ModuleCatalog/Service:1.0"], 0)
_0_SALOME_ModuleCatalog._ad_ListOfInterfaceService = (omniORB.tcInternal.tv_alias, ListOfInterfaceService._NP_RepositoryId, "ListOfInterfaceService", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:SALOME_ModuleCatalog/Service:1.0"], 0))
_0_SALOME_ModuleCatalog._tc_ListOfInterfaceService = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._ad_ListOfInterfaceService)
omniORB.registerType(ListOfInterfaceService._NP_RepositoryId, _0_SALOME_ModuleCatalog._ad_ListOfInterfaceService, _0_SALOME_ModuleCatalog._tc_ListOfInterfaceService)
del ListOfInterfaceService

# typedef ... ListOfServices
class ListOfServices:
    _NP_RepositoryId = "IDL:SALOME_ModuleCatalog/ListOfServices:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_SALOME_ModuleCatalog.ListOfServices = ListOfServices
_0_SALOME_ModuleCatalog._d_ListOfServices  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
_0_SALOME_ModuleCatalog._ad_ListOfServices = (omniORB.tcInternal.tv_alias, ListOfServices._NP_RepositoryId, "ListOfServices", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_SALOME_ModuleCatalog._tc_ListOfServices = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._ad_ListOfServices)
omniORB.registerType(ListOfServices._NP_RepositoryId, _0_SALOME_ModuleCatalog._ad_ListOfServices, _0_SALOME_ModuleCatalog._tc_ListOfServices)
del ListOfServices

# struct DefinitionInterface
_0_SALOME_ModuleCatalog.DefinitionInterface = omniORB.newEmptyClass()
class DefinitionInterface (omniORB.StructBase):
    _NP_RepositoryId = "IDL:SALOME_ModuleCatalog/DefinitionInterface:1.0"

    def __init__(self, interfacename, interfaceservicelist):
        self.interfacename = interfacename
        self.interfaceservicelist = interfaceservicelist

_0_SALOME_ModuleCatalog.DefinitionInterface = DefinitionInterface
_0_SALOME_ModuleCatalog._d_DefinitionInterface  = (omniORB.tcInternal.tv_struct, DefinitionInterface, DefinitionInterface._NP_RepositoryId, "DefinitionInterface", "interfacename", (omniORB.tcInternal.tv_string,0), "interfaceservicelist", omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ListOfInterfaceService:1.0"])
_0_SALOME_ModuleCatalog._tc_DefinitionInterface = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._d_DefinitionInterface)
omniORB.registerType(DefinitionInterface._NP_RepositoryId, _0_SALOME_ModuleCatalog._d_DefinitionInterface, _0_SALOME_ModuleCatalog._tc_DefinitionInterface)
del DefinitionInterface

# typedef ... ListOfDefInterface
class ListOfDefInterface:
    _NP_RepositoryId = "IDL:SALOME_ModuleCatalog/ListOfDefInterface:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_SALOME_ModuleCatalog.ListOfDefInterface = ListOfDefInterface
_0_SALOME_ModuleCatalog._d_ListOfDefInterface  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:SALOME_ModuleCatalog/DefinitionInterface:1.0"], 0)
_0_SALOME_ModuleCatalog._ad_ListOfDefInterface = (omniORB.tcInternal.tv_alias, ListOfDefInterface._NP_RepositoryId, "ListOfDefInterface", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:SALOME_ModuleCatalog/DefinitionInterface:1.0"], 0))
_0_SALOME_ModuleCatalog._tc_ListOfDefInterface = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._ad_ListOfDefInterface)
omniORB.registerType(ListOfDefInterface._NP_RepositoryId, _0_SALOME_ModuleCatalog._ad_ListOfDefInterface, _0_SALOME_ModuleCatalog._tc_ListOfDefInterface)
del ListOfDefInterface

# typedef ... ListOfInterfaces
class ListOfInterfaces:
    _NP_RepositoryId = "IDL:SALOME_ModuleCatalog/ListOfInterfaces:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_SALOME_ModuleCatalog.ListOfInterfaces = ListOfInterfaces
_0_SALOME_ModuleCatalog._d_ListOfInterfaces  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
_0_SALOME_ModuleCatalog._ad_ListOfInterfaces = (omniORB.tcInternal.tv_alias, ListOfInterfaces._NP_RepositoryId, "ListOfInterfaces", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_SALOME_ModuleCatalog._tc_ListOfInterfaces = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._ad_ListOfInterfaces)
omniORB.registerType(ListOfInterfaces._NP_RepositoryId, _0_SALOME_ModuleCatalog._ad_ListOfInterfaces, _0_SALOME_ModuleCatalog._tc_ListOfInterfaces)
del ListOfInterfaces

# struct PathPrefix
_0_SALOME_ModuleCatalog.PathPrefix = omniORB.newEmptyClass()
class PathPrefix (omniORB.StructBase):
    _NP_RepositoryId = "IDL:SALOME_ModuleCatalog/PathPrefix:1.0"

    def __init__(self, machine, path):
        self.machine = machine
        self.path = path

_0_SALOME_ModuleCatalog.PathPrefix = PathPrefix
_0_SALOME_ModuleCatalog._d_PathPrefix  = (omniORB.tcInternal.tv_struct, PathPrefix, PathPrefix._NP_RepositoryId, "PathPrefix", "machine", (omniORB.tcInternal.tv_string,0), "path", (omniORB.tcInternal.tv_string,0))
_0_SALOME_ModuleCatalog._tc_PathPrefix = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._d_PathPrefix)
omniORB.registerType(PathPrefix._NP_RepositoryId, _0_SALOME_ModuleCatalog._d_PathPrefix, _0_SALOME_ModuleCatalog._tc_PathPrefix)
del PathPrefix

# typedef ... PathPrefixes
class PathPrefixes:
    _NP_RepositoryId = "IDL:SALOME_ModuleCatalog/PathPrefixes:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_SALOME_ModuleCatalog.PathPrefixes = PathPrefixes
_0_SALOME_ModuleCatalog._d_PathPrefixes  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:SALOME_ModuleCatalog/PathPrefix:1.0"], 0)
_0_SALOME_ModuleCatalog._ad_PathPrefixes = (omniORB.tcInternal.tv_alias, PathPrefixes._NP_RepositoryId, "PathPrefixes", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:SALOME_ModuleCatalog/PathPrefix:1.0"], 0))
_0_SALOME_ModuleCatalog._tc_PathPrefixes = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._ad_PathPrefixes)
omniORB.registerType(PathPrefixes._NP_RepositoryId, _0_SALOME_ModuleCatalog._ad_PathPrefixes, _0_SALOME_ModuleCatalog._tc_PathPrefixes)
del PathPrefixes

# enum ImplType
_0_SALOME_ModuleCatalog.SO = omniORB.EnumItem("SO", 0)
_0_SALOME_ModuleCatalog.PY = omniORB.EnumItem("PY", 1)
_0_SALOME_ModuleCatalog.EXE = omniORB.EnumItem("EXE", 2)
_0_SALOME_ModuleCatalog.CEXE = omniORB.EnumItem("CEXE", 3)
_0_SALOME_ModuleCatalog.ImplType = omniORB.Enum("IDL:SALOME_ModuleCatalog/ImplType:1.0", (_0_SALOME_ModuleCatalog.SO, _0_SALOME_ModuleCatalog.PY, _0_SALOME_ModuleCatalog.EXE, _0_SALOME_ModuleCatalog.CEXE,))

_0_SALOME_ModuleCatalog._d_ImplType  = (omniORB.tcInternal.tv_enum, _0_SALOME_ModuleCatalog.ImplType._NP_RepositoryId, "ImplType", _0_SALOME_ModuleCatalog.ImplType._items)
_0_SALOME_ModuleCatalog._tc_ImplType = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._d_ImplType)
omniORB.registerType(_0_SALOME_ModuleCatalog.ImplType._NP_RepositoryId, _0_SALOME_ModuleCatalog._d_ImplType, _0_SALOME_ModuleCatalog._tc_ImplType)

# struct ComponentDef
_0_SALOME_ModuleCatalog.ComponentDef = omniORB.newEmptyClass()
class ComponentDef (omniORB.StructBase):
    _NP_RepositoryId = "IDL:SALOME_ModuleCatalog/ComponentDef:1.0"

    def __init__(self, type, name, username, implementationType, implname, icon, constraint, interfaces, paths):
        self.type = type
        self.name = name
        self.username = username
        self.implementationType = implementationType
        self.implname = implname
        self.icon = icon
        self.constraint = constraint
        self.interfaces = interfaces
        self.paths = paths

_0_SALOME_ModuleCatalog.ComponentDef = ComponentDef
_0_SALOME_ModuleCatalog._d_ComponentDef  = (omniORB.tcInternal.tv_struct, ComponentDef, ComponentDef._NP_RepositoryId, "ComponentDef", "type", omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ComponentType:1.0"], "name", (omniORB.tcInternal.tv_string,0), "username", (omniORB.tcInternal.tv_string,0), "implementationType", omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ImplType:1.0"], "implname", (omniORB.tcInternal.tv_string,0), "icon", (omniORB.tcInternal.tv_string,0), "constraint", (omniORB.tcInternal.tv_string,0), "interfaces", omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ListOfDefInterface:1.0"], "paths", omniORB.typeMapping["IDL:SALOME_ModuleCatalog/PathPrefixes:1.0"])
_0_SALOME_ModuleCatalog._tc_ComponentDef = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._d_ComponentDef)
omniORB.registerType(ComponentDef._NP_RepositoryId, _0_SALOME_ModuleCatalog._d_ComponentDef, _0_SALOME_ModuleCatalog._tc_ComponentDef)
del ComponentDef

# typedef ... ListOfComponents
class ListOfComponents:
    _NP_RepositoryId = "IDL:SALOME_ModuleCatalog/ListOfComponents:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_SALOME_ModuleCatalog.ListOfComponents = ListOfComponents
_0_SALOME_ModuleCatalog._d_ListOfComponents  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
_0_SALOME_ModuleCatalog._ad_ListOfComponents = (omniORB.tcInternal.tv_alias, ListOfComponents._NP_RepositoryId, "ListOfComponents", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_SALOME_ModuleCatalog._tc_ListOfComponents = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._ad_ListOfComponents)
omniORB.registerType(ListOfComponents._NP_RepositoryId, _0_SALOME_ModuleCatalog._ad_ListOfComponents, _0_SALOME_ModuleCatalog._tc_ListOfComponents)
del ListOfComponents

# typedef ... ListOfComputers
class ListOfComputers:
    _NP_RepositoryId = "IDL:SALOME_ModuleCatalog/ListOfComputers:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_SALOME_ModuleCatalog.ListOfComputers = ListOfComputers
_0_SALOME_ModuleCatalog._d_ListOfComputers  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
_0_SALOME_ModuleCatalog._ad_ListOfComputers = (omniORB.tcInternal.tv_alias, ListOfComputers._NP_RepositoryId, "ListOfComputers", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_SALOME_ModuleCatalog._tc_ListOfComputers = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._ad_ListOfComputers)
omniORB.registerType(ListOfComputers._NP_RepositoryId, _0_SALOME_ModuleCatalog._ad_ListOfComputers, _0_SALOME_ModuleCatalog._tc_ListOfComputers)
del ListOfComputers

# struct IAPP_Affich
_0_SALOME_ModuleCatalog.IAPP_Affich = omniORB.newEmptyClass()
class IAPP_Affich (omniORB.StructBase):
    _NP_RepositoryId = "IDL:SALOME_ModuleCatalog/IAPP_Affich:1.0"

    def __init__(self, modulename, moduleusername, moduleicone, moduleversion, modulecomment):
        self.modulename = modulename
        self.moduleusername = moduleusername
        self.moduleicone = moduleicone
        self.moduleversion = moduleversion
        self.modulecomment = modulecomment

_0_SALOME_ModuleCatalog.IAPP_Affich = IAPP_Affich
_0_SALOME_ModuleCatalog._d_IAPP_Affich  = (omniORB.tcInternal.tv_struct, IAPP_Affich, IAPP_Affich._NP_RepositoryId, "IAPP_Affich", "modulename", (omniORB.tcInternal.tv_string,0), "moduleusername", (omniORB.tcInternal.tv_string,0), "moduleicone", (omniORB.tcInternal.tv_string,0), "moduleversion", (omniORB.tcInternal.tv_string,0), "modulecomment", (omniORB.tcInternal.tv_string,0))
_0_SALOME_ModuleCatalog._tc_IAPP_Affich = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._d_IAPP_Affich)
omniORB.registerType(IAPP_Affich._NP_RepositoryId, _0_SALOME_ModuleCatalog._d_IAPP_Affich, _0_SALOME_ModuleCatalog._tc_IAPP_Affich)
del IAPP_Affich

# typedef ... ListOfIAPP_Affich
class ListOfIAPP_Affich:
    _NP_RepositoryId = "IDL:SALOME_ModuleCatalog/ListOfIAPP_Affich:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_SALOME_ModuleCatalog.ListOfIAPP_Affich = ListOfIAPP_Affich
_0_SALOME_ModuleCatalog._d_ListOfIAPP_Affich  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:SALOME_ModuleCatalog/IAPP_Affich:1.0"], 0)
_0_SALOME_ModuleCatalog._ad_ListOfIAPP_Affich = (omniORB.tcInternal.tv_alias, ListOfIAPP_Affich._NP_RepositoryId, "ListOfIAPP_Affich", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:SALOME_ModuleCatalog/IAPP_Affich:1.0"], 0))
_0_SALOME_ModuleCatalog._tc_ListOfIAPP_Affich = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._ad_ListOfIAPP_Affich)
omniORB.registerType(ListOfIAPP_Affich._NP_RepositoryId, _0_SALOME_ModuleCatalog._ad_ListOfIAPP_Affich, _0_SALOME_ModuleCatalog._tc_ListOfIAPP_Affich)
del ListOfIAPP_Affich

# exception NotFound
_0_SALOME_ModuleCatalog.NotFound = omniORB.newEmptyClass()
class NotFound (CORBA.UserException):
    _NP_RepositoryId = "IDL:SALOME_ModuleCatalog/NotFound:1.0"

    def __init__(self, what):
        CORBA.UserException.__init__(self, what)
        self.what = what

_0_SALOME_ModuleCatalog.NotFound = NotFound
_0_SALOME_ModuleCatalog._d_NotFound  = (omniORB.tcInternal.tv_except, NotFound, NotFound._NP_RepositoryId, "NotFound", "what", (omniORB.tcInternal.tv_string,0))
_0_SALOME_ModuleCatalog._tc_NotFound = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._d_NotFound)
omniORB.registerType(NotFound._NP_RepositoryId, _0_SALOME_ModuleCatalog._d_NotFound, _0_SALOME_ModuleCatalog._tc_NotFound)
del NotFound

# interface Acomponent
_0_SALOME_ModuleCatalog._d_Acomponent = (omniORB.tcInternal.tv_objref, "IDL:SALOME_ModuleCatalog/Acomponent:1.0", "Acomponent")
omniORB.typeMapping["IDL:SALOME_ModuleCatalog/Acomponent:1.0"] = _0_SALOME_ModuleCatalog._d_Acomponent
_0_SALOME_ModuleCatalog.Acomponent = omniORB.newEmptyClass()
class Acomponent :
    _NP_RepositoryId = _0_SALOME_ModuleCatalog._d_Acomponent[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME_ModuleCatalog.Acomponent = Acomponent
_0_SALOME_ModuleCatalog._tc_Acomponent = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._d_Acomponent)
omniORB.registerType(Acomponent._NP_RepositoryId, _0_SALOME_ModuleCatalog._d_Acomponent, _0_SALOME_ModuleCatalog._tc_Acomponent)

# Acomponent operations and attributes
Acomponent._d_GetInterfaceList = ((), (omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ListOfInterfaces:1.0"], ), None)
Acomponent._d_GetInterface = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:SALOME_ModuleCatalog/DefinitionInterface:1.0"], ), {_0_SALOME_ModuleCatalog.NotFound._NP_RepositoryId: _0_SALOME_ModuleCatalog._d_NotFound})
Acomponent._d_GetServiceList = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ListOfServices:1.0"], ), {_0_SALOME_ModuleCatalog.NotFound._NP_RepositoryId: _0_SALOME_ModuleCatalog._d_NotFound})
Acomponent._d_GetService = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.typeMapping["IDL:SALOME_ModuleCatalog/Service:1.0"], ), {_0_SALOME_ModuleCatalog.NotFound._NP_RepositoryId: _0_SALOME_ModuleCatalog._d_NotFound})
Acomponent._d_GetDefaultService = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:SALOME_ModuleCatalog/Service:1.0"], ), {_0_SALOME_ModuleCatalog.NotFound._NP_RepositoryId: _0_SALOME_ModuleCatalog._d_NotFound})
Acomponent._d_GetPathPrefix = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), ), {_0_SALOME_ModuleCatalog.NotFound._NP_RepositoryId: _0_SALOME_ModuleCatalog._d_NotFound})
Acomponent._d__get_constraint = ((),((omniORB.tcInternal.tv_string,0),),None)
Acomponent._d__get_componentname = ((),((omniORB.tcInternal.tv_string,0),),None)
Acomponent._d__get_componentusername = ((),((omniORB.tcInternal.tv_string,0),),None)
Acomponent._d__get_component_type = ((),(omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ComponentType:1.0"],),None)
Acomponent._d__get_component_icone = ((),((omniORB.tcInternal.tv_string,0),),None)
Acomponent._d__get_implementation_type = ((),(omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ImplType:1.0"],),None)
Acomponent._d__get_implementation_name = ((),((omniORB.tcInternal.tv_string,0),),None)

# Acomponent object reference
class _objref_Acomponent (CORBA.Object):
    _NP_RepositoryId = Acomponent._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def GetInterfaceList(self, *args):
        return self._obj.invoke("GetInterfaceList", _0_SALOME_ModuleCatalog.Acomponent._d_GetInterfaceList, args)

    def GetInterface(self, *args):
        return self._obj.invoke("GetInterface", _0_SALOME_ModuleCatalog.Acomponent._d_GetInterface, args)

    def GetServiceList(self, *args):
        return self._obj.invoke("GetServiceList", _0_SALOME_ModuleCatalog.Acomponent._d_GetServiceList, args)

    def GetService(self, *args):
        return self._obj.invoke("GetService", _0_SALOME_ModuleCatalog.Acomponent._d_GetService, args)

    def GetDefaultService(self, *args):
        return self._obj.invoke("GetDefaultService", _0_SALOME_ModuleCatalog.Acomponent._d_GetDefaultService, args)

    def GetPathPrefix(self, *args):
        return self._obj.invoke("GetPathPrefix", _0_SALOME_ModuleCatalog.Acomponent._d_GetPathPrefix, args)

    def _get_constraint(self, *args):
        return self._obj.invoke("_get_constraint", _0_SALOME_ModuleCatalog.Acomponent._d__get_constraint, args)

    constraint = property(_get_constraint)


    def _get_componentname(self, *args):
        return self._obj.invoke("_get_componentname", _0_SALOME_ModuleCatalog.Acomponent._d__get_componentname, args)

    componentname = property(_get_componentname)


    def _get_componentusername(self, *args):
        return self._obj.invoke("_get_componentusername", _0_SALOME_ModuleCatalog.Acomponent._d__get_componentusername, args)

    componentusername = property(_get_componentusername)


    def _get_component_type(self, *args):
        return self._obj.invoke("_get_component_type", _0_SALOME_ModuleCatalog.Acomponent._d__get_component_type, args)

    component_type = property(_get_component_type)


    def _get_component_icone(self, *args):
        return self._obj.invoke("_get_component_icone", _0_SALOME_ModuleCatalog.Acomponent._d__get_component_icone, args)

    component_icone = property(_get_component_icone)


    def _get_implementation_type(self, *args):
        return self._obj.invoke("_get_implementation_type", _0_SALOME_ModuleCatalog.Acomponent._d__get_implementation_type, args)

    implementation_type = property(_get_implementation_type)


    def _get_implementation_name(self, *args):
        return self._obj.invoke("_get_implementation_name", _0_SALOME_ModuleCatalog.Acomponent._d__get_implementation_name, args)

    implementation_name = property(_get_implementation_name)


omniORB.registerObjref(Acomponent._NP_RepositoryId, _objref_Acomponent)
_0_SALOME_ModuleCatalog._objref_Acomponent = _objref_Acomponent
del Acomponent, _objref_Acomponent

# Acomponent skeleton
__name__ = "salome.kernel.SALOME_ModuleCatalog__POA"
class Acomponent (PortableServer.Servant):
    _NP_RepositoryId = _0_SALOME_ModuleCatalog.Acomponent._NP_RepositoryId


    _omni_op_d = {"GetInterfaceList": _0_SALOME_ModuleCatalog.Acomponent._d_GetInterfaceList, "GetInterface": _0_SALOME_ModuleCatalog.Acomponent._d_GetInterface, "GetServiceList": _0_SALOME_ModuleCatalog.Acomponent._d_GetServiceList, "GetService": _0_SALOME_ModuleCatalog.Acomponent._d_GetService, "GetDefaultService": _0_SALOME_ModuleCatalog.Acomponent._d_GetDefaultService, "GetPathPrefix": _0_SALOME_ModuleCatalog.Acomponent._d_GetPathPrefix, "_get_constraint": _0_SALOME_ModuleCatalog.Acomponent._d__get_constraint, "_get_componentname": _0_SALOME_ModuleCatalog.Acomponent._d__get_componentname, "_get_componentusername": _0_SALOME_ModuleCatalog.Acomponent._d__get_componentusername, "_get_component_type": _0_SALOME_ModuleCatalog.Acomponent._d__get_component_type, "_get_component_icone": _0_SALOME_ModuleCatalog.Acomponent._d__get_component_icone, "_get_implementation_type": _0_SALOME_ModuleCatalog.Acomponent._d__get_implementation_type, "_get_implementation_name": _0_SALOME_ModuleCatalog.Acomponent._d__get_implementation_name}

Acomponent._omni_skeleton = Acomponent
_0_SALOME_ModuleCatalog__POA.Acomponent = Acomponent
omniORB.registerSkeleton(Acomponent._NP_RepositoryId, Acomponent)
del Acomponent
__name__ = "salome.kernel.SALOME_ModuleCatalog"

# interface ModuleCatalog
_0_SALOME_ModuleCatalog._d_ModuleCatalog = (omniORB.tcInternal.tv_objref, "IDL:SALOME_ModuleCatalog/ModuleCatalog:1.0", "ModuleCatalog")
omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ModuleCatalog:1.0"] = _0_SALOME_ModuleCatalog._d_ModuleCatalog
_0_SALOME_ModuleCatalog.ModuleCatalog = omniORB.newEmptyClass()
class ModuleCatalog :
    _NP_RepositoryId = _0_SALOME_ModuleCatalog._d_ModuleCatalog[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME_ModuleCatalog.ModuleCatalog = ModuleCatalog
_0_SALOME_ModuleCatalog._tc_ModuleCatalog = omniORB.tcInternal.createTypeCode(_0_SALOME_ModuleCatalog._d_ModuleCatalog)
omniORB.registerType(ModuleCatalog._NP_RepositoryId, _0_SALOME_ModuleCatalog._d_ModuleCatalog, _0_SALOME_ModuleCatalog._tc_ModuleCatalog)

# ModuleCatalog operations and attributes
ModuleCatalog._d_ping = ((), (), None)
ModuleCatalog._d_getPID = ((), (omniORB.tcInternal.tv_long, ), None)
ModuleCatalog._d_ShutdownWithExit = ((), None, None)
ModuleCatalog._d_GetTypes = ((), (omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ListOfTypeDefinition:1.0"], ), None)
ModuleCatalog._d_GetComputerList = ((), (omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ListOfComputers:1.0"], ), None)
ModuleCatalog._d_GetPathPrefix = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), ), {_0_SALOME_ModuleCatalog.NotFound._NP_RepositoryId: _0_SALOME_ModuleCatalog._d_NotFound})
ModuleCatalog._d_GetComponentList = ((), (omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ListOfComponents:1.0"], ), None)
ModuleCatalog._d_GetComponentIconeList = ((), (omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ListOfIAPP_Affich:1.0"], ), None)
ModuleCatalog._d_GetTypedComponentList = ((omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ComponentType:1.0"], ), (omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ListOfComponents:1.0"], ), None)
ModuleCatalog._d_GetComponent = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:SALOME_ModuleCatalog/Acomponent:1.0"], ), {_0_SALOME_ModuleCatalog.NotFound._NP_RepositoryId: _0_SALOME_ModuleCatalog._d_NotFound})
ModuleCatalog._d_GetComponentInfo = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:SALOME_ModuleCatalog/ComponentDef:1.0"], ), {_0_SALOME_ModuleCatalog.NotFound._NP_RepositoryId: _0_SALOME_ModuleCatalog._d_NotFound})
ModuleCatalog._d_ImportXmlCatalogFile = (((omniORB.tcInternal.tv_string,0), ), (), {_0_SALOME_ModuleCatalog.NotFound._NP_RepositoryId: _0_SALOME_ModuleCatalog._d_NotFound})
ModuleCatalog._d_shutdown = ((), (), None)

# ModuleCatalog object reference
class _objref_ModuleCatalog (CORBA.Object):
    _NP_RepositoryId = ModuleCatalog._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def ping(self, *args):
        return self._obj.invoke("ping", _0_SALOME_ModuleCatalog.ModuleCatalog._d_ping, args)

    def getPID(self, *args):
        return self._obj.invoke("getPID", _0_SALOME_ModuleCatalog.ModuleCatalog._d_getPID, args)

    def ShutdownWithExit(self, *args):
        return self._obj.invoke("ShutdownWithExit", _0_SALOME_ModuleCatalog.ModuleCatalog._d_ShutdownWithExit, args)

    def GetTypes(self, *args):
        return self._obj.invoke("GetTypes", _0_SALOME_ModuleCatalog.ModuleCatalog._d_GetTypes, args)

    def GetComputerList(self, *args):
        return self._obj.invoke("GetComputerList", _0_SALOME_ModuleCatalog.ModuleCatalog._d_GetComputerList, args)

    def GetPathPrefix(self, *args):
        return self._obj.invoke("GetPathPrefix", _0_SALOME_ModuleCatalog.ModuleCatalog._d_GetPathPrefix, args)

    def GetComponentList(self, *args):
        return self._obj.invoke("GetComponentList", _0_SALOME_ModuleCatalog.ModuleCatalog._d_GetComponentList, args)

    def GetComponentIconeList(self, *args):
        return self._obj.invoke("GetComponentIconeList", _0_SALOME_ModuleCatalog.ModuleCatalog._d_GetComponentIconeList, args)

    def GetTypedComponentList(self, *args):
        return self._obj.invoke("GetTypedComponentList", _0_SALOME_ModuleCatalog.ModuleCatalog._d_GetTypedComponentList, args)

    def GetComponent(self, *args):
        return self._obj.invoke("GetComponent", _0_SALOME_ModuleCatalog.ModuleCatalog._d_GetComponent, args)

    def GetComponentInfo(self, *args):
        return self._obj.invoke("GetComponentInfo", _0_SALOME_ModuleCatalog.ModuleCatalog._d_GetComponentInfo, args)

    def ImportXmlCatalogFile(self, *args):
        return self._obj.invoke("ImportXmlCatalogFile", _0_SALOME_ModuleCatalog.ModuleCatalog._d_ImportXmlCatalogFile, args)

    def shutdown(self, *args):
        return self._obj.invoke("shutdown", _0_SALOME_ModuleCatalog.ModuleCatalog._d_shutdown, args)

omniORB.registerObjref(ModuleCatalog._NP_RepositoryId, _objref_ModuleCatalog)
_0_SALOME_ModuleCatalog._objref_ModuleCatalog = _objref_ModuleCatalog
del ModuleCatalog, _objref_ModuleCatalog

# ModuleCatalog skeleton
__name__ = "salome.kernel.SALOME_ModuleCatalog__POA"
class ModuleCatalog (PortableServer.Servant):
    _NP_RepositoryId = _0_SALOME_ModuleCatalog.ModuleCatalog._NP_RepositoryId


    _omni_op_d = {"ping": _0_SALOME_ModuleCatalog.ModuleCatalog._d_ping, "getPID": _0_SALOME_ModuleCatalog.ModuleCatalog._d_getPID, "ShutdownWithExit": _0_SALOME_ModuleCatalog.ModuleCatalog._d_ShutdownWithExit, "GetTypes": _0_SALOME_ModuleCatalog.ModuleCatalog._d_GetTypes, "GetComputerList": _0_SALOME_ModuleCatalog.ModuleCatalog._d_GetComputerList, "GetPathPrefix": _0_SALOME_ModuleCatalog.ModuleCatalog._d_GetPathPrefix, "GetComponentList": _0_SALOME_ModuleCatalog.ModuleCatalog._d_GetComponentList, "GetComponentIconeList": _0_SALOME_ModuleCatalog.ModuleCatalog._d_GetComponentIconeList, "GetTypedComponentList": _0_SALOME_ModuleCatalog.ModuleCatalog._d_GetTypedComponentList, "GetComponent": _0_SALOME_ModuleCatalog.ModuleCatalog._d_GetComponent, "GetComponentInfo": _0_SALOME_ModuleCatalog.ModuleCatalog._d_GetComponentInfo, "ImportXmlCatalogFile": _0_SALOME_ModuleCatalog.ModuleCatalog._d_ImportXmlCatalogFile, "shutdown": _0_SALOME_ModuleCatalog.ModuleCatalog._d_shutdown}

ModuleCatalog._omni_skeleton = ModuleCatalog
_0_SALOME_ModuleCatalog__POA.ModuleCatalog = ModuleCatalog
omniORB.registerSkeleton(ModuleCatalog._NP_RepositoryId, ModuleCatalog)
del ModuleCatalog
__name__ = "salome.kernel.SALOME_ModuleCatalog"

#
# End of module "SALOME_ModuleCatalog"
#
__name__ = "salome.kernel.SALOME_ModuleCatalog_idl"

_exported_modules = ( "salome.kernel.SALOME_ModuleCatalog", )

# The end.

# Python stubs generated by omniidl from /tmp/kernel/idl/SALOME_TestComponent.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "SALOME_GenericObj.idl"
import salome.kernel.SALOME_GenericObj_idl
_0_SALOME = omniORB.openModule("salome.kernel.SALOME")
_0_SALOME__POA = omniORB.openModule("salome.kernel.SALOME__POA")

# #include "SALOME_Exception.idl"
import salome.kernel.SALOME_Exception_idl
_0_SALOME = omniORB.openModule("salome.kernel.SALOME")
_0_SALOME__POA = omniORB.openModule("salome.kernel.SALOME__POA")

# #include "SALOMEDS.idl"
import salome.kernel.SALOMEDS_idl
_0_SALOMEDS = omniORB.openModule("salome.kernel.SALOMEDS")
_0_SALOMEDS__POA = omniORB.openModule("salome.kernel.SALOMEDS__POA")

# #include "SALOME_Comm.idl"
import salome.kernel.SALOME_Comm_idl
_0_SALOME = omniORB.openModule("salome.kernel.SALOME")
_0_SALOME__POA = omniORB.openModule("salome.kernel.SALOME__POA")

# #include "SALOME_PyNode.idl"
import salome.kernel.SALOME_PyNode_idl
_0_Engines = omniORB.openModule("salome.kernel.Engines")
_0_Engines__POA = omniORB.openModule("salome.kernel.Engines__POA")

# #include "SALOME_Embedded_NamingService.idl"
import salome.kernel.SALOME_Embedded_NamingService_idl
_0_Engines = omniORB.openModule("salome.kernel.Engines")
_0_Engines__POA = omniORB.openModule("salome.kernel.Engines__POA")

# #include "SALOME_Component.idl"
import salome.kernel.SALOME_Component_idl
_0_Engines = omniORB.openModule("salome.kernel.Engines")
_0_Engines__POA = omniORB.openModule("salome.kernel.Engines__POA")

#
# Start of module "Engines"
#
__name__ = "salome.kernel.Engines"
_0_Engines = omniORB.openModule("salome.kernel.Engines", r"/tmp/kernel/idl/SALOME_TestComponent.idl")
_0_Engines__POA = omniORB.openModule("salome.kernel.Engines__POA", r"/tmp/kernel/idl/SALOME_TestComponent.idl")


# interface TestComponent
_0_Engines._d_TestComponent = (omniORB.tcInternal.tv_objref, "IDL:Engines/TestComponent:1.0", "TestComponent")
omniORB.typeMapping["IDL:Engines/TestComponent:1.0"] = _0_Engines._d_TestComponent
_0_Engines.TestComponent = omniORB.newEmptyClass()
class TestComponent (_0_Engines.EngineComponent):
    _NP_RepositoryId = _0_Engines._d_TestComponent[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Engines.TestComponent = TestComponent
_0_Engines._tc_TestComponent = omniORB.tcInternal.createTypeCode(_0_Engines._d_TestComponent)
omniORB.registerType(TestComponent._NP_RepositoryId, _0_Engines._d_TestComponent, _0_Engines._tc_TestComponent)

# TestComponent operations and attributes
TestComponent._d_Coucou = ((omniORB.tcInternal.tv_long, ), ((omniORB.tcInternal.tv_string,0), ), None)
TestComponent._d_Setenv = ((), (), None)

# TestComponent object reference
class _objref_TestComponent (_0_Engines._objref_EngineComponent):
    _NP_RepositoryId = TestComponent._NP_RepositoryId

    def __init__(self, obj):
        _0_Engines._objref_EngineComponent.__init__(self, obj)

    def Coucou(self, *args):
        return self._obj.invoke("Coucou", _0_Engines.TestComponent._d_Coucou, args)

    def Setenv(self, *args):
        return self._obj.invoke("Setenv", _0_Engines.TestComponent._d_Setenv, args)

omniORB.registerObjref(TestComponent._NP_RepositoryId, _objref_TestComponent)
_0_Engines._objref_TestComponent = _objref_TestComponent
del TestComponent, _objref_TestComponent

# TestComponent skeleton
__name__ = "salome.kernel.Engines__POA"
class TestComponent (_0_Engines__POA.EngineComponent):
    _NP_RepositoryId = _0_Engines.TestComponent._NP_RepositoryId


    _omni_op_d = {"Coucou": _0_Engines.TestComponent._d_Coucou, "Setenv": _0_Engines.TestComponent._d_Setenv}
    _omni_op_d.update(_0_Engines__POA.EngineComponent._omni_op_d)

TestComponent._omni_skeleton = TestComponent
_0_Engines__POA.TestComponent = TestComponent
omniORB.registerSkeleton(TestComponent._NP_RepositoryId, TestComponent)
del TestComponent
__name__ = "salome.kernel.Engines"

#
# End of module "Engines"
#
__name__ = "salome.kernel.SALOME_TestComponent_idl"

_exported_modules = ( "salome.kernel.Engines", )

# The end.

# Python stubs generated by omniidl from /tmp/kernel/idl/nstest.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "NSTEST"
#
__name__ = "salome.kernel.NSTEST"
_0_NSTEST = omniORB.openModule("salome.kernel.NSTEST", r"/tmp/kernel/idl/nstest.idl")
_0_NSTEST__POA = omniORB.openModule("salome.kernel.NSTEST__POA", r"/tmp/kernel/idl/nstest.idl")


# interface echo
_0_NSTEST._d_echo = (omniORB.tcInternal.tv_objref, "IDL:NSTEST/echo:1.0", "echo")
omniORB.typeMapping["IDL:NSTEST/echo:1.0"] = _0_NSTEST._d_echo
_0_NSTEST.echo = omniORB.newEmptyClass()
class echo :
    _NP_RepositoryId = _0_NSTEST._d_echo[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_NSTEST.echo = echo
_0_NSTEST._tc_echo = omniORB.tcInternal.createTypeCode(_0_NSTEST._d_echo)
omniORB.registerType(echo._NP_RepositoryId, _0_NSTEST._d_echo, _0_NSTEST._tc_echo)

# echo operations and attributes
echo._d_getId = ((), (omniORB.tcInternal.tv_long, ), None)

# echo object reference
class _objref_echo (CORBA.Object):
    _NP_RepositoryId = echo._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def getId(self, *args):
        return self._obj.invoke("getId", _0_NSTEST.echo._d_getId, args)

omniORB.registerObjref(echo._NP_RepositoryId, _objref_echo)
_0_NSTEST._objref_echo = _objref_echo
del echo, _objref_echo

# echo skeleton
__name__ = "salome.kernel.NSTEST__POA"
class echo (PortableServer.Servant):
    _NP_RepositoryId = _0_NSTEST.echo._NP_RepositoryId


    _omni_op_d = {"getId": _0_NSTEST.echo._d_getId}

echo._omni_skeleton = echo
_0_NSTEST__POA.echo = echo
omniORB.registerSkeleton(echo._NP_RepositoryId, echo)
del echo
__name__ = "salome.kernel.NSTEST"

# interface aFactory
_0_NSTEST._d_aFactory = (omniORB.tcInternal.tv_objref, "IDL:NSTEST/aFactory:1.0", "aFactory")
omniORB.typeMapping["IDL:NSTEST/aFactory:1.0"] = _0_NSTEST._d_aFactory
_0_NSTEST.aFactory = omniORB.newEmptyClass()
class aFactory :
    _NP_RepositoryId = _0_NSTEST._d_aFactory[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_NSTEST.aFactory = aFactory
_0_NSTEST._tc_aFactory = omniORB.tcInternal.createTypeCode(_0_NSTEST._d_aFactory)
omniORB.registerType(aFactory._NP_RepositoryId, _0_NSTEST._d_aFactory, _0_NSTEST._tc_aFactory)

# aFactory operations and attributes
aFactory._d_createInstance = ((), (omniORB.typeMapping["IDL:NSTEST/echo:1.0"], ), None)

# aFactory object reference
class _objref_aFactory (CORBA.Object):
    _NP_RepositoryId = aFactory._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def createInstance(self, *args):
        return self._obj.invoke("createInstance", _0_NSTEST.aFactory._d_createInstance, args)

omniORB.registerObjref(aFactory._NP_RepositoryId, _objref_aFactory)
_0_NSTEST._objref_aFactory = _objref_aFactory
del aFactory, _objref_aFactory

# aFactory skeleton
__name__ = "salome.kernel.NSTEST__POA"
class aFactory (PortableServer.Servant):
    _NP_RepositoryId = _0_NSTEST.aFactory._NP_RepositoryId


    _omni_op_d = {"createInstance": _0_NSTEST.aFactory._d_createInstance}

aFactory._omni_skeleton = aFactory
_0_NSTEST__POA.aFactory = aFactory
omniORB.registerSkeleton(aFactory._NP_RepositoryId, aFactory)
del aFactory
__name__ = "salome.kernel.NSTEST"

#
# End of module "NSTEST"
#
__name__ = "salome.kernel.nstest_idl"

_exported_modules = ( "salome.kernel.NSTEST", )

# The end.

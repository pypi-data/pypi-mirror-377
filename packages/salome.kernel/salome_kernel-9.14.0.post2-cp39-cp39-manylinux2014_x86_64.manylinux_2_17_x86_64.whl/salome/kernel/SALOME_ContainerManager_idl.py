# Python stubs generated by omniidl from /tmp/kernel/idl/SALOME_ContainerManager.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "SALOME_Exception.idl"
import salome.kernel.SALOME_Exception_idl
_0_SALOME = omniORB.openModule("salome.kernel.SALOME")
_0_SALOME__POA = omniORB.openModule("salome.kernel.SALOME__POA")

# #include "SALOME_GenericObj.idl"
import salome.kernel.SALOME_GenericObj_idl
_0_SALOME = omniORB.openModule("salome.kernel.SALOME")
_0_SALOME__POA = omniORB.openModule("salome.kernel.SALOME__POA")

# #include "SALOMEDS.idl"
import salome.kernel.SALOMEDS_idl
_0_SALOMEDS = omniORB.openModule("salome.kernel.SALOMEDS")
_0_SALOMEDS__POA = omniORB.openModule("salome.kernel.SALOMEDS__POA")

# #include "SALOME_Comm.idl"
import salome.kernel.SALOME_Comm_idl
_0_SALOME = omniORB.openModule("salome.kernel.SALOME")
_0_SALOME__POA = omniORB.openModule("salome.kernel.SALOME__POA")

# #include "SALOME_PyNode.idl"
import salome.kernel.SALOME_PyNode_idl
_0_Engines = omniORB.openModule("salome.kernel.Engines")
_0_Engines__POA = omniORB.openModule("salome.kernel.Engines__POA")

# #include "SALOME_Embedded_NamingService.idl"
import salome.kernel.SALOME_Embedded_NamingService_idl
_0_Engines = omniORB.openModule("salome.kernel.Engines")
_0_Engines__POA = omniORB.openModule("salome.kernel.Engines__POA")

# #include "SALOME_Component.idl"
import salome.kernel.SALOME_Component_idl
_0_Engines = omniORB.openModule("salome.kernel.Engines")
_0_Engines__POA = omniORB.openModule("salome.kernel.Engines__POA")

# #include "SALOME_ResourcesManager.idl"
import salome.kernel.SALOME_ResourcesManager_idl
_0_Engines = omniORB.openModule("salome.kernel.Engines")
_0_Engines__POA = omniORB.openModule("salome.kernel.Engines__POA")

#
# Start of module "Engines"
#
__name__ = "salome.kernel.Engines"
_0_Engines = omniORB.openModule("salome.kernel.Engines", r"/tmp/kernel/idl/SALOME_ContainerManager.idl")
_0_Engines__POA = omniORB.openModule("salome.kernel.Engines__POA", r"/tmp/kernel/idl/SALOME_ContainerManager.idl")


# struct ContainerParameters
_0_Engines.ContainerParameters = omniORB.newEmptyClass()
class ContainerParameters (omniORB.StructBase):
    _NP_RepositoryId = "IDL:Engines/ContainerParameters:1.0"

    def __init__(self, container_name, mode, workingdir, nb_proc, isMPI, parallelLib, resource_params):
        self.container_name = container_name
        self.mode = mode
        self.workingdir = workingdir
        self.nb_proc = nb_proc
        self.isMPI = isMPI
        self.parallelLib = parallelLib
        self.resource_params = resource_params

_0_Engines.ContainerParameters = ContainerParameters
_0_Engines._d_ContainerParameters  = (omniORB.tcInternal.tv_struct, ContainerParameters, ContainerParameters._NP_RepositoryId, "ContainerParameters", "container_name", (omniORB.tcInternal.tv_string,0), "mode", (omniORB.tcInternal.tv_string,0), "workingdir", (omniORB.tcInternal.tv_string,0), "nb_proc", omniORB.tcInternal.tv_long, "isMPI", omniORB.tcInternal.tv_boolean, "parallelLib", (omniORB.tcInternal.tv_string,0), "resource_params", omniORB.typeMapping["IDL:Engines/ResourceParameters:1.0"])
_0_Engines._tc_ContainerParameters = omniORB.tcInternal.createTypeCode(_0_Engines._d_ContainerParameters)
omniORB.registerType(ContainerParameters._NP_RepositoryId, _0_Engines._d_ContainerParameters, _0_Engines._tc_ContainerParameters)
del ContainerParameters

# struct KeyValPairString
_0_Engines.KeyValPairString = omniORB.newEmptyClass()
class KeyValPairString (omniORB.StructBase):
    _NP_RepositoryId = "IDL:Engines/KeyValPairString:1.0"

    def __init__(self, key, val):
        self.key = key
        self.val = val

_0_Engines.KeyValPairString = KeyValPairString
_0_Engines._d_KeyValPairString  = (omniORB.tcInternal.tv_struct, KeyValPairString, KeyValPairString._NP_RepositoryId, "KeyValPairString", "key", (omniORB.tcInternal.tv_string,0), "val", (omniORB.tcInternal.tv_string,0))
_0_Engines._tc_KeyValPairString = omniORB.tcInternal.createTypeCode(_0_Engines._d_KeyValPairString)
omniORB.registerType(KeyValPairString._NP_RepositoryId, _0_Engines._d_KeyValPairString, _0_Engines._tc_KeyValPairString)
del KeyValPairString

# typedef ... KeyValDict
class KeyValDict:
    _NP_RepositoryId = "IDL:Engines/KeyValDict:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Engines.KeyValDict = KeyValDict
_0_Engines._d_KeyValDict  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:Engines/KeyValPairString:1.0"], 0)
_0_Engines._ad_KeyValDict = (omniORB.tcInternal.tv_alias, KeyValDict._NP_RepositoryId, "KeyValDict", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:Engines/KeyValPairString:1.0"], 0))
_0_Engines._tc_KeyValDict = omniORB.tcInternal.createTypeCode(_0_Engines._ad_KeyValDict)
omniORB.registerType(KeyValDict._NP_RepositoryId, _0_Engines._ad_KeyValDict, _0_Engines._tc_KeyValDict)
del KeyValDict

# interface ContainerManager
_0_Engines._d_ContainerManager = (omniORB.tcInternal.tv_objref, "IDL:Engines/ContainerManager:1.0", "ContainerManager")
omniORB.typeMapping["IDL:Engines/ContainerManager:1.0"] = _0_Engines._d_ContainerManager
_0_Engines.ContainerManager = omniORB.newEmptyClass()
class ContainerManager :
    _NP_RepositoryId = _0_Engines._d_ContainerManager[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Engines.ContainerManager = ContainerManager
_0_Engines._tc_ContainerManager = omniORB.tcInternal.createTypeCode(_0_Engines._d_ContainerManager)
omniORB.registerType(ContainerManager._NP_RepositoryId, _0_Engines._d_ContainerManager, _0_Engines._tc_ContainerManager)

# ContainerManager operations and attributes
ContainerManager._d_GiveContainer = ((omniORB.typeMapping["IDL:Engines/ContainerParameters:1.0"], ), (omniORB.typeMapping["IDL:Engines/Container:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
ContainerManager._d_ShutdownContainers = ((), (), None)
ContainerManager._d_ShutdownContainersNow = ((), (), None)
ContainerManager._d_GetTimeOutToLaunchServerInSecond = ((), (omniORB.tcInternal.tv_long, ), None)
ContainerManager._d_SetTimeOutToLaunchServerInSecond = ((omniORB.tcInternal.tv_long, ), (), None)
ContainerManager._d_GetDeltaTimeBetweenNSLookupAtLaunchTimeInMilliSecond = ((), (omniORB.tcInternal.tv_long, ), None)
ContainerManager._d_SetDeltaTimeBetweenNSLookupAtLaunchTimeInMilliSecond = ((omniORB.tcInternal.tv_long, ), (), None)
ContainerManager._d_GetDeltaTimeBetweenCPUMemMeasureInMilliSecond = ((), (omniORB.tcInternal.tv_long, ), None)
ContainerManager._d_SetDeltaTimeBetweenCPUMemMeasureInMilliSecond = ((omniORB.tcInternal.tv_long, ), (), None)
ContainerManager._d_SetOverrideEnvForContainers = ((omniORB.typeMapping["IDL:Engines/KeyValDict:1.0"], ), (), None)
ContainerManager._d_GetOverrideEnvForContainers = ((), (omniORB.typeMapping["IDL:Engines/KeyValDict:1.0"], ), None)
ContainerManager._d_SetBigObjOnDiskThreshold = ((omniORB.tcInternal.tv_long, ), (), None)
ContainerManager._d_SetBigObjOnDiskDirectory = (((omniORB.tcInternal.tv_string,0), ), (), None)
ContainerManager._d_SetDirectoryForReplayFiles = (((omniORB.tcInternal.tv_string,0), ), (), None)
ContainerManager._d_SetNumberOfRetry = ((omniORB.tcInternal.tv_long, ), (), None)
ContainerManager._d_GetNumberOfRetry = ((), (omniORB.tcInternal.tv_long, ), None)
ContainerManager._d_SetCodeOnContainerStartUp = (((omniORB.tcInternal.tv_string,0), ), (), None)
ContainerManager._d_GetCodeOnContainerStartUp = ((), ((omniORB.tcInternal.tv_string,0), ), None)

# ContainerManager object reference
class _objref_ContainerManager (CORBA.Object):
    _NP_RepositoryId = ContainerManager._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def GiveContainer(self, *args):
        return self._obj.invoke("GiveContainer", _0_Engines.ContainerManager._d_GiveContainer, args)

    def ShutdownContainers(self, *args):
        return self._obj.invoke("ShutdownContainers", _0_Engines.ContainerManager._d_ShutdownContainers, args)

    def ShutdownContainersNow(self, *args):
        return self._obj.invoke("ShutdownContainersNow", _0_Engines.ContainerManager._d_ShutdownContainersNow, args)

    def GetTimeOutToLaunchServerInSecond(self, *args):
        return self._obj.invoke("GetTimeOutToLaunchServerInSecond", _0_Engines.ContainerManager._d_GetTimeOutToLaunchServerInSecond, args)

    def SetTimeOutToLaunchServerInSecond(self, *args):
        return self._obj.invoke("SetTimeOutToLaunchServerInSecond", _0_Engines.ContainerManager._d_SetTimeOutToLaunchServerInSecond, args)

    def GetDeltaTimeBetweenNSLookupAtLaunchTimeInMilliSecond(self, *args):
        return self._obj.invoke("GetDeltaTimeBetweenNSLookupAtLaunchTimeInMilliSecond", _0_Engines.ContainerManager._d_GetDeltaTimeBetweenNSLookupAtLaunchTimeInMilliSecond, args)

    def SetDeltaTimeBetweenNSLookupAtLaunchTimeInMilliSecond(self, *args):
        return self._obj.invoke("SetDeltaTimeBetweenNSLookupAtLaunchTimeInMilliSecond", _0_Engines.ContainerManager._d_SetDeltaTimeBetweenNSLookupAtLaunchTimeInMilliSecond, args)

    def GetDeltaTimeBetweenCPUMemMeasureInMilliSecond(self, *args):
        return self._obj.invoke("GetDeltaTimeBetweenCPUMemMeasureInMilliSecond", _0_Engines.ContainerManager._d_GetDeltaTimeBetweenCPUMemMeasureInMilliSecond, args)

    def SetDeltaTimeBetweenCPUMemMeasureInMilliSecond(self, *args):
        return self._obj.invoke("SetDeltaTimeBetweenCPUMemMeasureInMilliSecond", _0_Engines.ContainerManager._d_SetDeltaTimeBetweenCPUMemMeasureInMilliSecond, args)

    def SetOverrideEnvForContainers(self, *args):
        return self._obj.invoke("SetOverrideEnvForContainers", _0_Engines.ContainerManager._d_SetOverrideEnvForContainers, args)

    def GetOverrideEnvForContainers(self, *args):
        return self._obj.invoke("GetOverrideEnvForContainers", _0_Engines.ContainerManager._d_GetOverrideEnvForContainers, args)

    def SetBigObjOnDiskThreshold(self, *args):
        return self._obj.invoke("SetBigObjOnDiskThreshold", _0_Engines.ContainerManager._d_SetBigObjOnDiskThreshold, args)

    def SetBigObjOnDiskDirectory(self, *args):
        return self._obj.invoke("SetBigObjOnDiskDirectory", _0_Engines.ContainerManager._d_SetBigObjOnDiskDirectory, args)

    def SetDirectoryForReplayFiles(self, *args):
        return self._obj.invoke("SetDirectoryForReplayFiles", _0_Engines.ContainerManager._d_SetDirectoryForReplayFiles, args)

    def SetNumberOfRetry(self, *args):
        return self._obj.invoke("SetNumberOfRetry", _0_Engines.ContainerManager._d_SetNumberOfRetry, args)

    def GetNumberOfRetry(self, *args):
        return self._obj.invoke("GetNumberOfRetry", _0_Engines.ContainerManager._d_GetNumberOfRetry, args)

    def SetCodeOnContainerStartUp(self, *args):
        return self._obj.invoke("SetCodeOnContainerStartUp", _0_Engines.ContainerManager._d_SetCodeOnContainerStartUp, args)

    def GetCodeOnContainerStartUp(self, *args):
        return self._obj.invoke("GetCodeOnContainerStartUp", _0_Engines.ContainerManager._d_GetCodeOnContainerStartUp, args)

omniORB.registerObjref(ContainerManager._NP_RepositoryId, _objref_ContainerManager)
_0_Engines._objref_ContainerManager = _objref_ContainerManager
del ContainerManager, _objref_ContainerManager

# ContainerManager skeleton
__name__ = "salome.kernel.Engines__POA"
class ContainerManager (PortableServer.Servant):
    _NP_RepositoryId = _0_Engines.ContainerManager._NP_RepositoryId


    _omni_op_d = {"GiveContainer": _0_Engines.ContainerManager._d_GiveContainer, "ShutdownContainers": _0_Engines.ContainerManager._d_ShutdownContainers, "ShutdownContainersNow": _0_Engines.ContainerManager._d_ShutdownContainersNow, "GetTimeOutToLaunchServerInSecond": _0_Engines.ContainerManager._d_GetTimeOutToLaunchServerInSecond, "SetTimeOutToLaunchServerInSecond": _0_Engines.ContainerManager._d_SetTimeOutToLaunchServerInSecond, "GetDeltaTimeBetweenNSLookupAtLaunchTimeInMilliSecond": _0_Engines.ContainerManager._d_GetDeltaTimeBetweenNSLookupAtLaunchTimeInMilliSecond, "SetDeltaTimeBetweenNSLookupAtLaunchTimeInMilliSecond": _0_Engines.ContainerManager._d_SetDeltaTimeBetweenNSLookupAtLaunchTimeInMilliSecond, "GetDeltaTimeBetweenCPUMemMeasureInMilliSecond": _0_Engines.ContainerManager._d_GetDeltaTimeBetweenCPUMemMeasureInMilliSecond, "SetDeltaTimeBetweenCPUMemMeasureInMilliSecond": _0_Engines.ContainerManager._d_SetDeltaTimeBetweenCPUMemMeasureInMilliSecond, "SetOverrideEnvForContainers": _0_Engines.ContainerManager._d_SetOverrideEnvForContainers, "GetOverrideEnvForContainers": _0_Engines.ContainerManager._d_GetOverrideEnvForContainers, "SetBigObjOnDiskThreshold": _0_Engines.ContainerManager._d_SetBigObjOnDiskThreshold, "SetBigObjOnDiskDirectory": _0_Engines.ContainerManager._d_SetBigObjOnDiskDirectory, "SetDirectoryForReplayFiles": _0_Engines.ContainerManager._d_SetDirectoryForReplayFiles, "SetNumberOfRetry": _0_Engines.ContainerManager._d_SetNumberOfRetry, "GetNumberOfRetry": _0_Engines.ContainerManager._d_GetNumberOfRetry, "SetCodeOnContainerStartUp": _0_Engines.ContainerManager._d_SetCodeOnContainerStartUp, "GetCodeOnContainerStartUp": _0_Engines.ContainerManager._d_GetCodeOnContainerStartUp}

ContainerManager._omni_skeleton = ContainerManager
_0_Engines__POA.ContainerManager = ContainerManager
omniORB.registerSkeleton(ContainerManager._NP_RepositoryId, ContainerManager)
del ContainerManager
__name__ = "salome.kernel.Engines"

#
# End of module "Engines"
#
__name__ = "salome.kernel.SALOME_ContainerManager_idl"

_exported_modules = ( "salome.kernel.Engines", )

# The end.

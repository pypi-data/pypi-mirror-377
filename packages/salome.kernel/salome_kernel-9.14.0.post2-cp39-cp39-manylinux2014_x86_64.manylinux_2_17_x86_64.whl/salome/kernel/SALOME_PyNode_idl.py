# Python stubs generated by omniidl from /tmp/kernel/idl/SALOME_PyNode.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "SALOME_GenericObj.idl"
import salome.kernel.SALOME_GenericObj_idl
_0_SALOME = omniORB.openModule("salome.kernel.SALOME")
_0_SALOME__POA = omniORB.openModule("salome.kernel.SALOME__POA")

# #include "SALOME_Exception.idl"
import salome.kernel.SALOME_Exception_idl
_0_SALOME = omniORB.openModule("salome.kernel.SALOME")
_0_SALOME__POA = omniORB.openModule("salome.kernel.SALOME__POA")

# #include "SALOME_Comm.idl"
import salome.kernel.SALOME_Comm_idl
_0_SALOME = omniORB.openModule("salome.kernel.SALOME")
_0_SALOME__POA = omniORB.openModule("salome.kernel.SALOME__POA")

#
# Start of module "Engines"
#
__name__ = "salome.kernel.Engines"
_0_Engines = omniORB.openModule("salome.kernel.Engines", r"/tmp/kernel/idl/SALOME_PyNode.idl")
_0_Engines__POA = omniORB.openModule("salome.kernel.Engines__POA", r"/tmp/kernel/idl/SALOME_PyNode.idl")


# typedef ... pickledArgs
class pickledArgs:
    _NP_RepositoryId = "IDL:Engines/pickledArgs:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Engines.pickledArgs = pickledArgs
_0_Engines._d_pickledArgs  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_octet, 0)
_0_Engines._ad_pickledArgs = (omniORB.tcInternal.tv_alias, pickledArgs._NP_RepositoryId, "pickledArgs", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_octet, 0))
_0_Engines._tc_pickledArgs = omniORB.tcInternal.createTypeCode(_0_Engines._ad_pickledArgs)
omniORB.registerType(pickledArgs._NP_RepositoryId, _0_Engines._ad_pickledArgs, _0_Engines._tc_pickledArgs)
del pickledArgs

# typedef ... listofstring
class listofstring:
    _NP_RepositoryId = "IDL:Engines/listofstring:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Engines.listofstring = listofstring
_0_Engines._d_listofstring  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
_0_Engines._ad_listofstring = (omniORB.tcInternal.tv_alias, listofstring._NP_RepositoryId, "listofstring", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_Engines._tc_listofstring = omniORB.tcInternal.createTypeCode(_0_Engines._ad_listofstring)
omniORB.registerType(listofstring._NP_RepositoryId, _0_Engines._ad_listofstring, _0_Engines._tc_listofstring)
del listofstring

# forward interface Container;
_0_Engines._d_Container = (omniORB.tcInternal.tv_objref, "IDL:Engines/Container:1.0", "Container")
omniORB.typeMapping["IDL:Engines/Container:1.0"] = _0_Engines._d_Container

# interface PyNodeBase
_0_Engines._d_PyNodeBase = (omniORB.tcInternal.tv_objref, "IDL:Engines/PyNodeBase:1.0", "PyNodeBase")
omniORB.typeMapping["IDL:Engines/PyNodeBase:1.0"] = _0_Engines._d_PyNodeBase
_0_Engines.PyNodeBase = omniORB.newEmptyClass()
class PyNodeBase (_0_SALOME.GenericObj):
    _NP_RepositoryId = _0_Engines._d_PyNodeBase[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Engines.PyNodeBase = PyNodeBase
_0_Engines._tc_PyNodeBase = omniORB.tcInternal.createTypeCode(_0_Engines._d_PyNodeBase)
omniORB.registerType(PyNodeBase._NP_RepositoryId, _0_Engines._d_PyNodeBase, _0_Engines._tc_PyNodeBase)

# PyNodeBase operations and attributes
PyNodeBase._d_getContainer = ((), (omniORB.typeMapping["IDL:Engines/Container:1.0"], ), None)
PyNodeBase._d_getCode = ((), ((omniORB.tcInternal.tv_string,0), ), None)
PyNodeBase._d_getName = ((), ((omniORB.tcInternal.tv_string,0), ), None)
PyNodeBase._d_defineNewCustomVar = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:Engines/pickledArgs:1.0"]), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
PyNodeBase._d_executeAnotherPieceOfCode = (((omniORB.tcInternal.tv_string,0), ), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})

# PyNodeBase object reference
class _objref_PyNodeBase (_0_SALOME._objref_GenericObj):
    _NP_RepositoryId = PyNodeBase._NP_RepositoryId

    def __init__(self, obj):
        _0_SALOME._objref_GenericObj.__init__(self, obj)

    def getContainer(self, *args):
        return self._obj.invoke("getContainer", _0_Engines.PyNodeBase._d_getContainer, args)

    def getCode(self, *args):
        return self._obj.invoke("getCode", _0_Engines.PyNodeBase._d_getCode, args)

    def getName(self, *args):
        return self._obj.invoke("getName", _0_Engines.PyNodeBase._d_getName, args)

    def defineNewCustomVar(self, *args):
        return self._obj.invoke("defineNewCustomVar", _0_Engines.PyNodeBase._d_defineNewCustomVar, args)

    def executeAnotherPieceOfCode(self, *args):
        return self._obj.invoke("executeAnotherPieceOfCode", _0_Engines.PyNodeBase._d_executeAnotherPieceOfCode, args)

omniORB.registerObjref(PyNodeBase._NP_RepositoryId, _objref_PyNodeBase)
_0_Engines._objref_PyNodeBase = _objref_PyNodeBase
del PyNodeBase, _objref_PyNodeBase

# PyNodeBase skeleton
__name__ = "salome.kernel.Engines__POA"
class PyNodeBase (_0_SALOME__POA.GenericObj):
    _NP_RepositoryId = _0_Engines.PyNodeBase._NP_RepositoryId


    _omni_op_d = {"getContainer": _0_Engines.PyNodeBase._d_getContainer, "getCode": _0_Engines.PyNodeBase._d_getCode, "getName": _0_Engines.PyNodeBase._d_getName, "defineNewCustomVar": _0_Engines.PyNodeBase._d_defineNewCustomVar, "executeAnotherPieceOfCode": _0_Engines.PyNodeBase._d_executeAnotherPieceOfCode}
    _omni_op_d.update(_0_SALOME__POA.GenericObj._omni_op_d)

PyNodeBase._omni_skeleton = PyNodeBase
_0_Engines__POA.PyNodeBase = PyNodeBase
omniORB.registerSkeleton(PyNodeBase._NP_RepositoryId, PyNodeBase)
del PyNodeBase
__name__ = "salome.kernel.Engines"

# interface PyNode
_0_Engines._d_PyNode = (omniORB.tcInternal.tv_objref, "IDL:Engines/PyNode:1.0", "PyNode")
omniORB.typeMapping["IDL:Engines/PyNode:1.0"] = _0_Engines._d_PyNode
_0_Engines.PyNode = omniORB.newEmptyClass()
class PyNode (_0_Engines.PyNodeBase):
    _NP_RepositoryId = _0_Engines._d_PyNode[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Engines.PyNode = PyNode
_0_Engines._tc_PyNode = omniORB.tcInternal.createTypeCode(_0_Engines._d_PyNode)
omniORB.registerType(PyNode._NP_RepositoryId, _0_Engines._d_PyNode, _0_Engines._tc_PyNode)

# PyNode operations and attributes
PyNode._d_execute = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:Engines/pickledArgs:1.0"]), (omniORB.typeMapping["IDL:Engines/pickledArgs:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})

# PyNode object reference
class _objref_PyNode (_0_Engines._objref_PyNodeBase):
    _NP_RepositoryId = PyNode._NP_RepositoryId

    def __init__(self, obj):
        _0_Engines._objref_PyNodeBase.__init__(self, obj)

    def execute(self, *args):
        return self._obj.invoke("execute", _0_Engines.PyNode._d_execute, args)

omniORB.registerObjref(PyNode._NP_RepositoryId, _objref_PyNode)
_0_Engines._objref_PyNode = _objref_PyNode
del PyNode, _objref_PyNode

# PyNode skeleton
__name__ = "salome.kernel.Engines__POA"
class PyNode (_0_Engines__POA.PyNodeBase):
    _NP_RepositoryId = _0_Engines.PyNode._NP_RepositoryId


    _omni_op_d = {"execute": _0_Engines.PyNode._d_execute}
    _omni_op_d.update(_0_Engines__POA.PyNodeBase._omni_op_d)

PyNode._omni_skeleton = PyNode
_0_Engines__POA.PyNode = PyNode
omniORB.registerSkeleton(PyNode._NP_RepositoryId, PyNode)
del PyNode
__name__ = "salome.kernel.Engines"

# interface PyScriptNode
_0_Engines._d_PyScriptNode = (omniORB.tcInternal.tv_objref, "IDL:Engines/PyScriptNode:1.0", "PyScriptNode")
omniORB.typeMapping["IDL:Engines/PyScriptNode:1.0"] = _0_Engines._d_PyScriptNode
_0_Engines.PyScriptNode = omniORB.newEmptyClass()
class PyScriptNode (_0_Engines.PyNodeBase):
    _NP_RepositoryId = _0_Engines._d_PyScriptNode[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Engines.PyScriptNode = PyScriptNode
_0_Engines._tc_PyScriptNode = omniORB.tcInternal.createTypeCode(_0_Engines._d_PyScriptNode)
omniORB.registerType(PyScriptNode._NP_RepositoryId, _0_Engines._d_PyScriptNode, _0_Engines._tc_PyScriptNode)

# PyScriptNode operations and attributes
PyScriptNode._d_assignNewCompiledCode = (((omniORB.tcInternal.tv_string,0), ), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
PyScriptNode._d_execute = ((omniORB.typeMapping["IDL:Engines/listofstring:1.0"], omniORB.typeMapping["IDL:Engines/pickledArgs:1.0"]), (omniORB.typeMapping["IDL:Engines/pickledArgs:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
PyScriptNode._d_executeSimple = ((omniORB.typeMapping["IDL:Engines/listofstring:1.0"], omniORB.typeMapping["IDL:Engines/listofstring:1.0"]), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
PyScriptNode._d_executeFirst = ((omniORB.typeMapping["IDL:SALOME/SenderByte:1.0"], ), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
PyScriptNode._d_executeSecond = ((omniORB.typeMapping["IDL:Engines/listofstring:1.0"], ), (omniORB.typeMapping["IDL:SALOME/SenderByteSeq:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
PyScriptNode._d_getValueOfVarInContext = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:Engines/pickledArgs:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
PyScriptNode._d_assignVarInContext = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:Engines/pickledArgs:1.0"]), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
PyScriptNode._d_callMethodOnVarInContext = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:Engines/pickledArgs:1.0"]), (omniORB.typeMapping["IDL:Engines/pickledArgs:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
PyScriptNode._d_listAllVarsInContext = ((), (omniORB.typeMapping["IDL:Engines/listofstring:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
PyScriptNode._d_removeAllVarsInContext = ((), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})

# PyScriptNode object reference
class _objref_PyScriptNode (_0_Engines._objref_PyNodeBase):
    _NP_RepositoryId = PyScriptNode._NP_RepositoryId

    def __init__(self, obj):
        _0_Engines._objref_PyNodeBase.__init__(self, obj)

    def assignNewCompiledCode(self, *args):
        return self._obj.invoke("assignNewCompiledCode", _0_Engines.PyScriptNode._d_assignNewCompiledCode, args)

    def execute(self, *args):
        return self._obj.invoke("execute", _0_Engines.PyScriptNode._d_execute, args)

    def executeSimple(self, *args):
        return self._obj.invoke("executeSimple", _0_Engines.PyScriptNode._d_executeSimple, args)

    def executeFirst(self, *args):
        return self._obj.invoke("executeFirst", _0_Engines.PyScriptNode._d_executeFirst, args)

    def executeSecond(self, *args):
        return self._obj.invoke("executeSecond", _0_Engines.PyScriptNode._d_executeSecond, args)

    def getValueOfVarInContext(self, *args):
        return self._obj.invoke("getValueOfVarInContext", _0_Engines.PyScriptNode._d_getValueOfVarInContext, args)

    def assignVarInContext(self, *args):
        return self._obj.invoke("assignVarInContext", _0_Engines.PyScriptNode._d_assignVarInContext, args)

    def callMethodOnVarInContext(self, *args):
        return self._obj.invoke("callMethodOnVarInContext", _0_Engines.PyScriptNode._d_callMethodOnVarInContext, args)

    def listAllVarsInContext(self, *args):
        return self._obj.invoke("listAllVarsInContext", _0_Engines.PyScriptNode._d_listAllVarsInContext, args)

    def removeAllVarsInContext(self, *args):
        return self._obj.invoke("removeAllVarsInContext", _0_Engines.PyScriptNode._d_removeAllVarsInContext, args)

omniORB.registerObjref(PyScriptNode._NP_RepositoryId, _objref_PyScriptNode)
_0_Engines._objref_PyScriptNode = _objref_PyScriptNode
del PyScriptNode, _objref_PyScriptNode

# PyScriptNode skeleton
__name__ = "salome.kernel.Engines__POA"
class PyScriptNode (_0_Engines__POA.PyNodeBase):
    _NP_RepositoryId = _0_Engines.PyScriptNode._NP_RepositoryId


    _omni_op_d = {"assignNewCompiledCode": _0_Engines.PyScriptNode._d_assignNewCompiledCode, "execute": _0_Engines.PyScriptNode._d_execute, "executeSimple": _0_Engines.PyScriptNode._d_executeSimple, "executeFirst": _0_Engines.PyScriptNode._d_executeFirst, "executeSecond": _0_Engines.PyScriptNode._d_executeSecond, "getValueOfVarInContext": _0_Engines.PyScriptNode._d_getValueOfVarInContext, "assignVarInContext": _0_Engines.PyScriptNode._d_assignVarInContext, "callMethodOnVarInContext": _0_Engines.PyScriptNode._d_callMethodOnVarInContext, "listAllVarsInContext": _0_Engines.PyScriptNode._d_listAllVarsInContext, "removeAllVarsInContext": _0_Engines.PyScriptNode._d_removeAllVarsInContext}
    _omni_op_d.update(_0_Engines__POA.PyNodeBase._omni_op_d)

PyScriptNode._omni_skeleton = PyScriptNode
_0_Engines__POA.PyScriptNode = PyScriptNode
omniORB.registerSkeleton(PyScriptNode._NP_RepositoryId, PyScriptNode)
del PyScriptNode
__name__ = "salome.kernel.Engines"

# interface ContextExchanger
_0_Engines._d_ContextExchanger = (omniORB.tcInternal.tv_objref, "IDL:Engines/ContextExchanger:1.0", "ContextExchanger")
omniORB.typeMapping["IDL:Engines/ContextExchanger:1.0"] = _0_Engines._d_ContextExchanger
_0_Engines.ContextExchanger = omniORB.newEmptyClass()
class ContextExchanger :
    _NP_RepositoryId = _0_Engines._d_ContextExchanger[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Engines.ContextExchanger = ContextExchanger
_0_Engines._tc_ContextExchanger = omniORB.tcInternal.createTypeCode(_0_Engines._d_ContextExchanger)
omniORB.registerType(ContextExchanger._NP_RepositoryId, _0_Engines._d_ContextExchanger, _0_Engines._tc_ContextExchanger)

# ContextExchanger operations and attributes
ContextExchanger._d_getInputContext = ((), (omniORB.typeMapping["IDL:SALOME/SenderByte:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
ContextExchanger._d_pushOutputContext = ((omniORB.typeMapping["IDL:Engines/pickledArgs:1.0"], ), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
ContextExchanger._d_finishPushContext = ((), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})

# ContextExchanger object reference
class _objref_ContextExchanger (CORBA.Object):
    _NP_RepositoryId = ContextExchanger._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def getInputContext(self, *args):
        return self._obj.invoke("getInputContext", _0_Engines.ContextExchanger._d_getInputContext, args)

    def pushOutputContext(self, *args):
        return self._obj.invoke("pushOutputContext", _0_Engines.ContextExchanger._d_pushOutputContext, args)

    def finishPushContext(self, *args):
        return self._obj.invoke("finishPushContext", _0_Engines.ContextExchanger._d_finishPushContext, args)

omniORB.registerObjref(ContextExchanger._NP_RepositoryId, _objref_ContextExchanger)
_0_Engines._objref_ContextExchanger = _objref_ContextExchanger
del ContextExchanger, _objref_ContextExchanger

# ContextExchanger skeleton
__name__ = "salome.kernel.Engines__POA"
class ContextExchanger (PortableServer.Servant):
    _NP_RepositoryId = _0_Engines.ContextExchanger._NP_RepositoryId


    _omni_op_d = {"getInputContext": _0_Engines.ContextExchanger._d_getInputContext, "pushOutputContext": _0_Engines.ContextExchanger._d_pushOutputContext, "finishPushContext": _0_Engines.ContextExchanger._d_finishPushContext}

ContextExchanger._omni_skeleton = ContextExchanger
_0_Engines__POA.ContextExchanger = ContextExchanger
omniORB.registerSkeleton(ContextExchanger._NP_RepositoryId, ContextExchanger)
del ContextExchanger
__name__ = "salome.kernel.Engines"

# interface GlobalsHolder
_0_Engines._d_GlobalsHolder = (omniORB.tcInternal.tv_objref, "IDL:Engines/GlobalsHolder:1.0", "GlobalsHolder")
omniORB.typeMapping["IDL:Engines/GlobalsHolder:1.0"] = _0_Engines._d_GlobalsHolder
_0_Engines.GlobalsHolder = omniORB.newEmptyClass()
class GlobalsHolder :
    _NP_RepositoryId = _0_Engines._d_GlobalsHolder[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Engines.GlobalsHolder = GlobalsHolder
_0_Engines._tc_GlobalsHolder = omniORB.tcInternal.createTypeCode(_0_Engines._d_GlobalsHolder)
omniORB.registerType(GlobalsHolder._NP_RepositoryId, _0_Engines._d_GlobalsHolder, _0_Engines._tc_GlobalsHolder)

# GlobalsHolder operations and attributes
GlobalsHolder._d_setAttr = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:Engines/pickledArgs:1.0"]), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
GlobalsHolder._d_getAttr = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:Engines/pickledArgs:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
GlobalsHolder._d_execute = ((omniORB.typeMapping["IDL:Engines/listofstring:1.0"], ), (omniORB.tcInternal.tv_long, omniORB.typeMapping["IDL:Engines/pickledArgs:1.0"], omniORB.typeMapping["IDL:Engines/pickledArgs:1.0"]), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})

# GlobalsHolder object reference
class _objref_GlobalsHolder (CORBA.Object):
    _NP_RepositoryId = GlobalsHolder._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def setAttr(self, *args):
        return self._obj.invoke("setAttr", _0_Engines.GlobalsHolder._d_setAttr, args)

    def getAttr(self, *args):
        return self._obj.invoke("getAttr", _0_Engines.GlobalsHolder._d_getAttr, args)

    def execute(self, *args):
        return self._obj.invoke("execute", _0_Engines.GlobalsHolder._d_execute, args)

omniORB.registerObjref(GlobalsHolder._NP_RepositoryId, _objref_GlobalsHolder)
_0_Engines._objref_GlobalsHolder = _objref_GlobalsHolder
del GlobalsHolder, _objref_GlobalsHolder

# GlobalsHolder skeleton
__name__ = "salome.kernel.Engines__POA"
class GlobalsHolder (PortableServer.Servant):
    _NP_RepositoryId = _0_Engines.GlobalsHolder._NP_RepositoryId


    _omni_op_d = {"setAttr": _0_Engines.GlobalsHolder._d_setAttr, "getAttr": _0_Engines.GlobalsHolder._d_getAttr, "execute": _0_Engines.GlobalsHolder._d_execute}

GlobalsHolder._omni_skeleton = GlobalsHolder
_0_Engines__POA.GlobalsHolder = GlobalsHolder
omniORB.registerSkeleton(GlobalsHolder._NP_RepositoryId, GlobalsHolder)
del GlobalsHolder
__name__ = "salome.kernel.Engines"

#
# End of module "Engines"
#
__name__ = "salome.kernel.SALOME_PyNode_idl"

_exported_modules = ( "salome.kernel.Engines", )

# The end.

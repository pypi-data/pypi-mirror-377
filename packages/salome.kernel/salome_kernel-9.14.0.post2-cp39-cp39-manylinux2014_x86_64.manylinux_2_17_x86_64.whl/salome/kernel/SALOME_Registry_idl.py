# Python stubs generated by omniidl from /tmp/kernel/idl/SALOME_Registry.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "Registry"
#
__name__ = "salome.kernel.Registry"
_0_Registry = omniORB.openModule("salome.kernel.Registry", r"/tmp/kernel/idl/SALOME_Registry.idl")
_0_Registry__POA = omniORB.openModule("salome.kernel.Registry__POA", r"/tmp/kernel/idl/SALOME_Registry.idl")


# struct Infos
_0_Registry.Infos = omniORB.newEmptyClass()
class Infos (omniORB.StructBase):
    _NP_RepositoryId = "IDL:Registry/Infos:1.0"

    def __init__(self, name, pid, machine, adip, uid, pwname, tc_start, tc_hello, tc_end, difftime, cdir, status, ior):
        self.name = name
        self.pid = pid
        self.machine = machine
        self.adip = adip
        self.uid = uid
        self.pwname = pwname
        self.tc_start = tc_start
        self.tc_hello = tc_hello
        self.tc_end = tc_end
        self.difftime = difftime
        self.cdir = cdir
        self.status = status
        self.ior = ior

_0_Registry.Infos = Infos
_0_Registry._d_Infos  = (omniORB.tcInternal.tv_struct, Infos, Infos._NP_RepositoryId, "Infos", "name", (omniORB.tcInternal.tv_string,0), "pid", omniORB.tcInternal.tv_long, "machine", (omniORB.tcInternal.tv_string,0), "adip", (omniORB.tcInternal.tv_string,0), "uid", omniORB.tcInternal.tv_long, "pwname", (omniORB.tcInternal.tv_string,0), "tc_start", omniORB.tcInternal.tv_long, "tc_hello", omniORB.tcInternal.tv_long, "tc_end", omniORB.tcInternal.tv_long, "difftime", omniORB.tcInternal.tv_long, "cdir", (omniORB.tcInternal.tv_string,0), "status", omniORB.tcInternal.tv_long, "ior", (omniORB.tcInternal.tv_string,0))
_0_Registry._tc_Infos = omniORB.tcInternal.createTypeCode(_0_Registry._d_Infos)
omniORB.registerType(Infos._NP_RepositoryId, _0_Registry._d_Infos, _0_Registry._tc_Infos)
del Infos

# typedef ... AllInfos
class AllInfos:
    _NP_RepositoryId = "IDL:Registry/AllInfos:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Registry.AllInfos = AllInfos
_0_Registry._d_AllInfos  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:Registry/Infos:1.0"], 0)
_0_Registry._ad_AllInfos = (omniORB.tcInternal.tv_alias, AllInfos._NP_RepositoryId, "AllInfos", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:Registry/Infos:1.0"], 0))
_0_Registry._tc_AllInfos = omniORB.tcInternal.createTypeCode(_0_Registry._ad_AllInfos)
omniORB.registerType(AllInfos._NP_RepositoryId, _0_Registry._ad_AllInfos, _0_Registry._tc_AllInfos)
del AllInfos

# interface Components
_0_Registry._d_Components = (omniORB.tcInternal.tv_objref, "IDL:Registry/Components:1.0", "Components")
omniORB.typeMapping["IDL:Registry/Components:1.0"] = _0_Registry._d_Components
_0_Registry.Components = omniORB.newEmptyClass()
class Components :
    _NP_RepositoryId = _0_Registry._d_Components[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Registry.Components = Components
_0_Registry._tc_Components = omniORB.tcInternal.createTypeCode(_0_Registry._d_Components)
omniORB.registerType(Components._NP_RepositoryId, _0_Registry._d_Components, _0_Registry._tc_Components)

# Components operations and attributes
Components._d_ping = ((), (), None)
Components._d_getPID = ((), (omniORB.tcInternal.tv_long, ), None)
Components._d_add = ((omniORB.typeMapping["IDL:Registry/Infos:1.0"], ), (omniORB.tcInternal.tv_ulong, ), None)
Components._d_remove = ((omniORB.tcInternal.tv_ulong, ), (), None)
Components._d_size = ((), (omniORB.tcInternal.tv_ulong, ), None)
Components._d_getall = ((), (omniORB.typeMapping["IDL:Registry/AllInfos:1.0"], ), None)
Components._d_history = ((), (omniORB.typeMapping["IDL:Registry/AllInfos:1.0"], ), None)
Components._d_end = ((), None, None)
Components._d_hello = ((omniORB.tcInternal.tv_ulong, ), None, None)
Components._d_Shutdown = ((), (), None)

# Components object reference
class _objref_Components (CORBA.Object):
    _NP_RepositoryId = Components._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def ping(self, *args):
        return self._obj.invoke("ping", _0_Registry.Components._d_ping, args)

    def getPID(self, *args):
        return self._obj.invoke("getPID", _0_Registry.Components._d_getPID, args)

    def add(self, *args):
        return self._obj.invoke("add", _0_Registry.Components._d_add, args)

    def remove(self, *args):
        return self._obj.invoke("remove", _0_Registry.Components._d_remove, args)

    def size(self, *args):
        return self._obj.invoke("size", _0_Registry.Components._d_size, args)

    def getall(self, *args):
        return self._obj.invoke("getall", _0_Registry.Components._d_getall, args)

    def history(self, *args):
        return self._obj.invoke("history", _0_Registry.Components._d_history, args)

    def end(self, *args):
        return self._obj.invoke("end", _0_Registry.Components._d_end, args)

    def hello(self, *args):
        return self._obj.invoke("hello", _0_Registry.Components._d_hello, args)

    def Shutdown(self, *args):
        return self._obj.invoke("Shutdown", _0_Registry.Components._d_Shutdown, args)

omniORB.registerObjref(Components._NP_RepositoryId, _objref_Components)
_0_Registry._objref_Components = _objref_Components
del Components, _objref_Components

# Components skeleton
__name__ = "salome.kernel.Registry__POA"
class Components (PortableServer.Servant):
    _NP_RepositoryId = _0_Registry.Components._NP_RepositoryId


    _omni_op_d = {"ping": _0_Registry.Components._d_ping, "getPID": _0_Registry.Components._d_getPID, "add": _0_Registry.Components._d_add, "remove": _0_Registry.Components._d_remove, "size": _0_Registry.Components._d_size, "getall": _0_Registry.Components._d_getall, "history": _0_Registry.Components._d_history, "end": _0_Registry.Components._d_end, "hello": _0_Registry.Components._d_hello, "Shutdown": _0_Registry.Components._d_Shutdown}

Components._omni_skeleton = Components
_0_Registry__POA.Components = Components
omniORB.registerSkeleton(Components._NP_RepositoryId, Components)
del Components
__name__ = "salome.kernel.Registry"

#
# End of module "Registry"
#
__name__ = "salome.kernel.SALOME_Registry_idl"

_exported_modules = ( "salome.kernel.Registry", )

# The end.

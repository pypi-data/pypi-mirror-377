# Python stubs generated by omniidl from /tmp/kernel/idl/SALOME_SDS.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "SALOME_GenericObj.idl"
import salome.kernel.SALOME_GenericObj_idl
_0_SALOME = omniORB.openModule("salome.kernel.SALOME")
_0_SALOME__POA = omniORB.openModule("salome.kernel.SALOME__POA")

# #include "SALOME_Exception.idl"
import salome.kernel.SALOME_Exception_idl
_0_SALOME = omniORB.openModule("salome.kernel.SALOME")
_0_SALOME__POA = omniORB.openModule("salome.kernel.SALOME__POA")

# #include "SALOME_CommonTypes.idl"
import salome.kernel.SALOME_CommonTypes_idl
_0_SALOME = omniORB.openModule("salome.kernel.SALOME")
_0_SALOME__POA = omniORB.openModule("salome.kernel.SALOME__POA")

#
# Start of module "SALOME"
#
__name__ = "salome.kernel.SALOME"
_0_SALOME = omniORB.openModule("salome.kernel.SALOME", r"/tmp/kernel/idl/SALOME_SDS.idl")
_0_SALOME__POA = omniORB.openModule("salome.kernel.SALOME__POA", r"/tmp/kernel/idl/SALOME_SDS.idl")


# typedef ... SeqOfByteVec
class SeqOfByteVec:
    _NP_RepositoryId = "IDL:SALOME/SeqOfByteVec:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_SALOME.SeqOfByteVec = SeqOfByteVec
_0_SALOME._d_SeqOfByteVec  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"], 0)
_0_SALOME._ad_SeqOfByteVec = (omniORB.tcInternal.tv_alias, SeqOfByteVec._NP_RepositoryId, "SeqOfByteVec", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"], 0))
_0_SALOME._tc_SeqOfByteVec = omniORB.tcInternal.createTypeCode(_0_SALOME._ad_SeqOfByteVec)
omniORB.registerType(SeqOfByteVec._NP_RepositoryId, _0_SALOME._ad_SeqOfByteVec, _0_SALOME._tc_SeqOfByteVec)
del SeqOfByteVec

# forward interface DataScopeServer;
_0_SALOME._d_DataScopeServer = (omniORB.tcInternal.tv_objref, "IDL:SALOME/DataScopeServer:1.0", "DataScopeServer")
omniORB.typeMapping["IDL:SALOME/DataScopeServer:1.0"] = _0_SALOME._d_DataScopeServer

# interface BasicDataServer
_0_SALOME._d_BasicDataServer = (omniORB.tcInternal.tv_objref, "IDL:SALOME/BasicDataServer:1.0", "BasicDataServer")
omniORB.typeMapping["IDL:SALOME/BasicDataServer:1.0"] = _0_SALOME._d_BasicDataServer
_0_SALOME.BasicDataServer = omniORB.newEmptyClass()
class BasicDataServer (_0_SALOME.GenericObj):
    _NP_RepositoryId = _0_SALOME._d_BasicDataServer[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.BasicDataServer = BasicDataServer
_0_SALOME._tc_BasicDataServer = omniORB.tcInternal.createTypeCode(_0_SALOME._d_BasicDataServer)
omniORB.registerType(BasicDataServer._NP_RepositoryId, _0_SALOME._d_BasicDataServer, _0_SALOME._tc_BasicDataServer)

# BasicDataServer operations and attributes
BasicDataServer._d_getMyDataScopeServer = ((), (omniORB.typeMapping["IDL:SALOME/DataScopeServer:1.0"], ), None)
BasicDataServer._d_getVarName = ((), ((omniORB.tcInternal.tv_string,0), ), None)
BasicDataServer._d_getScopeName = ((), ((omniORB.tcInternal.tv_string,0), ), None)
BasicDataServer._d_getRCValue = ((), (omniORB.tcInternal.tv_long, ), None)

# BasicDataServer object reference
class _objref_BasicDataServer (_0_SALOME._objref_GenericObj):
    _NP_RepositoryId = BasicDataServer._NP_RepositoryId

    def __init__(self, obj):
        _0_SALOME._objref_GenericObj.__init__(self, obj)

    def getMyDataScopeServer(self, *args):
        return self._obj.invoke("getMyDataScopeServer", _0_SALOME.BasicDataServer._d_getMyDataScopeServer, args)

    def getVarName(self, *args):
        return self._obj.invoke("getVarName", _0_SALOME.BasicDataServer._d_getVarName, args)

    def getScopeName(self, *args):
        return self._obj.invoke("getScopeName", _0_SALOME.BasicDataServer._d_getScopeName, args)

    def getRCValue(self, *args):
        return self._obj.invoke("getRCValue", _0_SALOME.BasicDataServer._d_getRCValue, args)

omniORB.registerObjref(BasicDataServer._NP_RepositoryId, _objref_BasicDataServer)
_0_SALOME._objref_BasicDataServer = _objref_BasicDataServer
del BasicDataServer, _objref_BasicDataServer

# BasicDataServer skeleton
__name__ = "salome.kernel.SALOME__POA"
class BasicDataServer (_0_SALOME__POA.GenericObj):
    _NP_RepositoryId = _0_SALOME.BasicDataServer._NP_RepositoryId


    _omni_op_d = {"getMyDataScopeServer": _0_SALOME.BasicDataServer._d_getMyDataScopeServer, "getVarName": _0_SALOME.BasicDataServer._d_getVarName, "getScopeName": _0_SALOME.BasicDataServer._d_getScopeName, "getRCValue": _0_SALOME.BasicDataServer._d_getRCValue}
    _omni_op_d.update(_0_SALOME__POA.GenericObj._omni_op_d)

BasicDataServer._omni_skeleton = BasicDataServer
_0_SALOME__POA.BasicDataServer = BasicDataServer
omniORB.registerSkeleton(BasicDataServer._NP_RepositoryId, BasicDataServer)
del BasicDataServer
__name__ = "salome.kernel.SALOME"

# interface PickelizedPyObjServer
_0_SALOME._d_PickelizedPyObjServer = (omniORB.tcInternal.tv_objref, "IDL:SALOME/PickelizedPyObjServer:1.0", "PickelizedPyObjServer")
omniORB.typeMapping["IDL:SALOME/PickelizedPyObjServer:1.0"] = _0_SALOME._d_PickelizedPyObjServer
_0_SALOME.PickelizedPyObjServer = omniORB.newEmptyClass()
class PickelizedPyObjServer (_0_SALOME.BasicDataServer):
    _NP_RepositoryId = _0_SALOME._d_PickelizedPyObjServer[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.PickelizedPyObjServer = PickelizedPyObjServer
_0_SALOME._tc_PickelizedPyObjServer = omniORB.tcInternal.createTypeCode(_0_SALOME._d_PickelizedPyObjServer)
omniORB.registerType(PickelizedPyObjServer._NP_RepositoryId, _0_SALOME._d_PickelizedPyObjServer, _0_SALOME._tc_PickelizedPyObjServer)

# PickelizedPyObjServer operations and attributes
PickelizedPyObjServer._d_fetchSerializedContent = ((), (omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})

# PickelizedPyObjServer object reference
class _objref_PickelizedPyObjServer (_0_SALOME._objref_BasicDataServer):
    _NP_RepositoryId = PickelizedPyObjServer._NP_RepositoryId

    def __init__(self, obj):
        _0_SALOME._objref_BasicDataServer.__init__(self, obj)

    def fetchSerializedContent(self, *args):
        return self._obj.invoke("fetchSerializedContent", _0_SALOME.PickelizedPyObjServer._d_fetchSerializedContent, args)

omniORB.registerObjref(PickelizedPyObjServer._NP_RepositoryId, _objref_PickelizedPyObjServer)
_0_SALOME._objref_PickelizedPyObjServer = _objref_PickelizedPyObjServer
del PickelizedPyObjServer, _objref_PickelizedPyObjServer

# PickelizedPyObjServer skeleton
__name__ = "salome.kernel.SALOME__POA"
class PickelizedPyObjServer (_0_SALOME__POA.BasicDataServer):
    _NP_RepositoryId = _0_SALOME.PickelizedPyObjServer._NP_RepositoryId


    _omni_op_d = {"fetchSerializedContent": _0_SALOME.PickelizedPyObjServer._d_fetchSerializedContent}
    _omni_op_d.update(_0_SALOME__POA.BasicDataServer._omni_op_d)

PickelizedPyObjServer._omni_skeleton = PickelizedPyObjServer
_0_SALOME__POA.PickelizedPyObjServer = PickelizedPyObjServer
omniORB.registerSkeleton(PickelizedPyObjServer._NP_RepositoryId, PickelizedPyObjServer)
del PickelizedPyObjServer
__name__ = "salome.kernel.SALOME"

# interface PickelizedPyObjRdOnlyServer
_0_SALOME._d_PickelizedPyObjRdOnlyServer = (omniORB.tcInternal.tv_objref, "IDL:SALOME/PickelizedPyObjRdOnlyServer:1.0", "PickelizedPyObjRdOnlyServer")
omniORB.typeMapping["IDL:SALOME/PickelizedPyObjRdOnlyServer:1.0"] = _0_SALOME._d_PickelizedPyObjRdOnlyServer
_0_SALOME.PickelizedPyObjRdOnlyServer = omniORB.newEmptyClass()
class PickelizedPyObjRdOnlyServer (_0_SALOME.PickelizedPyObjServer):
    _NP_RepositoryId = _0_SALOME._d_PickelizedPyObjRdOnlyServer[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.PickelizedPyObjRdOnlyServer = PickelizedPyObjRdOnlyServer
_0_SALOME._tc_PickelizedPyObjRdOnlyServer = omniORB.tcInternal.createTypeCode(_0_SALOME._d_PickelizedPyObjRdOnlyServer)
omniORB.registerType(PickelizedPyObjRdOnlyServer._NP_RepositoryId, _0_SALOME._d_PickelizedPyObjRdOnlyServer, _0_SALOME._tc_PickelizedPyObjRdOnlyServer)

# PickelizedPyObjRdOnlyServer object reference
class _objref_PickelizedPyObjRdOnlyServer (_0_SALOME._objref_PickelizedPyObjServer):
    _NP_RepositoryId = PickelizedPyObjRdOnlyServer._NP_RepositoryId

    def __init__(self, obj):
        _0_SALOME._objref_PickelizedPyObjServer.__init__(self, obj)

omniORB.registerObjref(PickelizedPyObjRdOnlyServer._NP_RepositoryId, _objref_PickelizedPyObjRdOnlyServer)
_0_SALOME._objref_PickelizedPyObjRdOnlyServer = _objref_PickelizedPyObjRdOnlyServer
del PickelizedPyObjRdOnlyServer, _objref_PickelizedPyObjRdOnlyServer

# PickelizedPyObjRdOnlyServer skeleton
__name__ = "salome.kernel.SALOME__POA"
class PickelizedPyObjRdOnlyServer (_0_SALOME__POA.PickelizedPyObjServer):
    _NP_RepositoryId = _0_SALOME.PickelizedPyObjRdOnlyServer._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_SALOME__POA.PickelizedPyObjServer._omni_op_d)

PickelizedPyObjRdOnlyServer._omni_skeleton = PickelizedPyObjRdOnlyServer
_0_SALOME__POA.PickelizedPyObjRdOnlyServer = PickelizedPyObjRdOnlyServer
omniORB.registerSkeleton(PickelizedPyObjRdOnlyServer._NP_RepositoryId, PickelizedPyObjRdOnlyServer)
del PickelizedPyObjRdOnlyServer
__name__ = "salome.kernel.SALOME"

# interface PickelizedPyObjRdExtBaseServer
_0_SALOME._d_PickelizedPyObjRdExtBaseServer = (omniORB.tcInternal.tv_objref, "IDL:SALOME/PickelizedPyObjRdExtBaseServer:1.0", "PickelizedPyObjRdExtBaseServer")
omniORB.typeMapping["IDL:SALOME/PickelizedPyObjRdExtBaseServer:1.0"] = _0_SALOME._d_PickelizedPyObjRdExtBaseServer
_0_SALOME.PickelizedPyObjRdExtBaseServer = omniORB.newEmptyClass()
class PickelizedPyObjRdExtBaseServer (_0_SALOME.PickelizedPyObjServer):
    _NP_RepositoryId = _0_SALOME._d_PickelizedPyObjRdExtBaseServer[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.PickelizedPyObjRdExtBaseServer = PickelizedPyObjRdExtBaseServer
_0_SALOME._tc_PickelizedPyObjRdExtBaseServer = omniORB.tcInternal.createTypeCode(_0_SALOME._d_PickelizedPyObjRdExtBaseServer)
omniORB.registerType(PickelizedPyObjRdExtBaseServer._NP_RepositoryId, _0_SALOME._d_PickelizedPyObjRdExtBaseServer, _0_SALOME._tc_PickelizedPyObjRdExtBaseServer)

# PickelizedPyObjRdExtBaseServer object reference
class _objref_PickelizedPyObjRdExtBaseServer (_0_SALOME._objref_PickelizedPyObjServer):
    _NP_RepositoryId = PickelizedPyObjRdExtBaseServer._NP_RepositoryId

    def __init__(self, obj):
        _0_SALOME._objref_PickelizedPyObjServer.__init__(self, obj)

omniORB.registerObjref(PickelizedPyObjRdExtBaseServer._NP_RepositoryId, _objref_PickelizedPyObjRdExtBaseServer)
_0_SALOME._objref_PickelizedPyObjRdExtBaseServer = _objref_PickelizedPyObjRdExtBaseServer
del PickelizedPyObjRdExtBaseServer, _objref_PickelizedPyObjRdExtBaseServer

# PickelizedPyObjRdExtBaseServer skeleton
__name__ = "salome.kernel.SALOME__POA"
class PickelizedPyObjRdExtBaseServer (_0_SALOME__POA.PickelizedPyObjServer):
    _NP_RepositoryId = _0_SALOME.PickelizedPyObjRdExtBaseServer._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_SALOME__POA.PickelizedPyObjServer._omni_op_d)

PickelizedPyObjRdExtBaseServer._omni_skeleton = PickelizedPyObjRdExtBaseServer
_0_SALOME__POA.PickelizedPyObjRdExtBaseServer = PickelizedPyObjRdExtBaseServer
omniORB.registerSkeleton(PickelizedPyObjRdExtBaseServer._NP_RepositoryId, PickelizedPyObjRdExtBaseServer)
del PickelizedPyObjRdExtBaseServer
__name__ = "salome.kernel.SALOME"

# interface PickelizedPyObjRdExtServer
_0_SALOME._d_PickelizedPyObjRdExtServer = (omniORB.tcInternal.tv_objref, "IDL:SALOME/PickelizedPyObjRdExtServer:1.0", "PickelizedPyObjRdExtServer")
omniORB.typeMapping["IDL:SALOME/PickelizedPyObjRdExtServer:1.0"] = _0_SALOME._d_PickelizedPyObjRdExtServer
_0_SALOME.PickelizedPyObjRdExtServer = omniORB.newEmptyClass()
class PickelizedPyObjRdExtServer (_0_SALOME.PickelizedPyObjRdExtBaseServer):
    _NP_RepositoryId = _0_SALOME._d_PickelizedPyObjRdExtServer[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.PickelizedPyObjRdExtServer = PickelizedPyObjRdExtServer
_0_SALOME._tc_PickelizedPyObjRdExtServer = omniORB.tcInternal.createTypeCode(_0_SALOME._d_PickelizedPyObjRdExtServer)
omniORB.registerType(PickelizedPyObjRdExtServer._NP_RepositoryId, _0_SALOME._d_PickelizedPyObjRdExtServer, _0_SALOME._tc_PickelizedPyObjRdExtServer)

# PickelizedPyObjRdExtServer operations and attributes
PickelizedPyObjRdExtServer._d_invokePythonMethodOn = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"]), (omniORB.typeMapping["IDL:SALOME/PickelizedPyObjRdExtServer:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})

# PickelizedPyObjRdExtServer object reference
class _objref_PickelizedPyObjRdExtServer (_0_SALOME._objref_PickelizedPyObjRdExtBaseServer):
    _NP_RepositoryId = PickelizedPyObjRdExtServer._NP_RepositoryId

    def __init__(self, obj):
        _0_SALOME._objref_PickelizedPyObjRdExtBaseServer.__init__(self, obj)

    def invokePythonMethodOn(self, *args):
        return self._obj.invoke("invokePythonMethodOn", _0_SALOME.PickelizedPyObjRdExtServer._d_invokePythonMethodOn, args)

omniORB.registerObjref(PickelizedPyObjRdExtServer._NP_RepositoryId, _objref_PickelizedPyObjRdExtServer)
_0_SALOME._objref_PickelizedPyObjRdExtServer = _objref_PickelizedPyObjRdExtServer
del PickelizedPyObjRdExtServer, _objref_PickelizedPyObjRdExtServer

# PickelizedPyObjRdExtServer skeleton
__name__ = "salome.kernel.SALOME__POA"
class PickelizedPyObjRdExtServer (_0_SALOME__POA.PickelizedPyObjRdExtBaseServer):
    _NP_RepositoryId = _0_SALOME.PickelizedPyObjRdExtServer._NP_RepositoryId


    _omni_op_d = {"invokePythonMethodOn": _0_SALOME.PickelizedPyObjRdExtServer._d_invokePythonMethodOn}
    _omni_op_d.update(_0_SALOME__POA.PickelizedPyObjRdExtBaseServer._omni_op_d)

PickelizedPyObjRdExtServer._omni_skeleton = PickelizedPyObjRdExtServer
_0_SALOME__POA.PickelizedPyObjRdExtServer = PickelizedPyObjRdExtServer
omniORB.registerSkeleton(PickelizedPyObjRdExtServer._NP_RepositoryId, PickelizedPyObjRdExtServer)
del PickelizedPyObjRdExtServer
__name__ = "salome.kernel.SALOME"

# interface PickelizedPyObjRdExtInitServer
_0_SALOME._d_PickelizedPyObjRdExtInitServer = (omniORB.tcInternal.tv_objref, "IDL:SALOME/PickelizedPyObjRdExtInitServer:1.0", "PickelizedPyObjRdExtInitServer")
omniORB.typeMapping["IDL:SALOME/PickelizedPyObjRdExtInitServer:1.0"] = _0_SALOME._d_PickelizedPyObjRdExtInitServer
_0_SALOME.PickelizedPyObjRdExtInitServer = omniORB.newEmptyClass()
class PickelizedPyObjRdExtInitServer (_0_SALOME.PickelizedPyObjRdExtBaseServer):
    _NP_RepositoryId = _0_SALOME._d_PickelizedPyObjRdExtInitServer[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.PickelizedPyObjRdExtInitServer = PickelizedPyObjRdExtInitServer
_0_SALOME._tc_PickelizedPyObjRdExtInitServer = omniORB.tcInternal.createTypeCode(_0_SALOME._d_PickelizedPyObjRdExtInitServer)
omniORB.registerType(PickelizedPyObjRdExtInitServer._NP_RepositoryId, _0_SALOME._d_PickelizedPyObjRdExtInitServer, _0_SALOME._tc_PickelizedPyObjRdExtInitServer)

# PickelizedPyObjRdExtInitServer object reference
class _objref_PickelizedPyObjRdExtInitServer (_0_SALOME._objref_PickelizedPyObjRdExtBaseServer):
    _NP_RepositoryId = PickelizedPyObjRdExtInitServer._NP_RepositoryId

    def __init__(self, obj):
        _0_SALOME._objref_PickelizedPyObjRdExtBaseServer.__init__(self, obj)

omniORB.registerObjref(PickelizedPyObjRdExtInitServer._NP_RepositoryId, _objref_PickelizedPyObjRdExtInitServer)
_0_SALOME._objref_PickelizedPyObjRdExtInitServer = _objref_PickelizedPyObjRdExtInitServer
del PickelizedPyObjRdExtInitServer, _objref_PickelizedPyObjRdExtInitServer

# PickelizedPyObjRdExtInitServer skeleton
__name__ = "salome.kernel.SALOME__POA"
class PickelizedPyObjRdExtInitServer (_0_SALOME__POA.PickelizedPyObjRdExtBaseServer):
    _NP_RepositoryId = _0_SALOME.PickelizedPyObjRdExtInitServer._NP_RepositoryId


    _omni_op_d = {}
    _omni_op_d.update(_0_SALOME__POA.PickelizedPyObjRdExtBaseServer._omni_op_d)

PickelizedPyObjRdExtInitServer._omni_skeleton = PickelizedPyObjRdExtInitServer
_0_SALOME__POA.PickelizedPyObjRdExtInitServer = PickelizedPyObjRdExtInitServer
omniORB.registerSkeleton(PickelizedPyObjRdExtInitServer._NP_RepositoryId, PickelizedPyObjRdExtInitServer)
del PickelizedPyObjRdExtInitServer
__name__ = "salome.kernel.SALOME"

# interface PickelizedPyObjRdWrServer
_0_SALOME._d_PickelizedPyObjRdWrServer = (omniORB.tcInternal.tv_objref, "IDL:SALOME/PickelizedPyObjRdWrServer:1.0", "PickelizedPyObjRdWrServer")
omniORB.typeMapping["IDL:SALOME/PickelizedPyObjRdWrServer:1.0"] = _0_SALOME._d_PickelizedPyObjRdWrServer
_0_SALOME.PickelizedPyObjRdWrServer = omniORB.newEmptyClass()
class PickelizedPyObjRdWrServer (_0_SALOME.PickelizedPyObjServer):
    _NP_RepositoryId = _0_SALOME._d_PickelizedPyObjRdWrServer[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.PickelizedPyObjRdWrServer = PickelizedPyObjRdWrServer
_0_SALOME._tc_PickelizedPyObjRdWrServer = omniORB.tcInternal.createTypeCode(_0_SALOME._d_PickelizedPyObjRdWrServer)
omniORB.registerType(PickelizedPyObjRdWrServer._NP_RepositoryId, _0_SALOME._d_PickelizedPyObjRdWrServer, _0_SALOME._tc_PickelizedPyObjRdWrServer)

# PickelizedPyObjRdWrServer operations and attributes
PickelizedPyObjRdWrServer._d_setSerializedContent = ((omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"], ), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
PickelizedPyObjRdWrServer._d_invokePythonMethodOn = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"]), (omniORB.typeMapping["IDL:SALOME/PickelizedPyObjRdWrServer:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})

# PickelizedPyObjRdWrServer object reference
class _objref_PickelizedPyObjRdWrServer (_0_SALOME._objref_PickelizedPyObjServer):
    _NP_RepositoryId = PickelizedPyObjRdWrServer._NP_RepositoryId

    def __init__(self, obj):
        _0_SALOME._objref_PickelizedPyObjServer.__init__(self, obj)

    def setSerializedContent(self, *args):
        return self._obj.invoke("setSerializedContent", _0_SALOME.PickelizedPyObjRdWrServer._d_setSerializedContent, args)

    def invokePythonMethodOn(self, *args):
        return self._obj.invoke("invokePythonMethodOn", _0_SALOME.PickelizedPyObjRdWrServer._d_invokePythonMethodOn, args)

omniORB.registerObjref(PickelizedPyObjRdWrServer._NP_RepositoryId, _objref_PickelizedPyObjRdWrServer)
_0_SALOME._objref_PickelizedPyObjRdWrServer = _objref_PickelizedPyObjRdWrServer
del PickelizedPyObjRdWrServer, _objref_PickelizedPyObjRdWrServer

# PickelizedPyObjRdWrServer skeleton
__name__ = "salome.kernel.SALOME__POA"
class PickelizedPyObjRdWrServer (_0_SALOME__POA.PickelizedPyObjServer):
    _NP_RepositoryId = _0_SALOME.PickelizedPyObjRdWrServer._NP_RepositoryId


    _omni_op_d = {"setSerializedContent": _0_SALOME.PickelizedPyObjRdWrServer._d_setSerializedContent, "invokePythonMethodOn": _0_SALOME.PickelizedPyObjRdWrServer._d_invokePythonMethodOn}
    _omni_op_d.update(_0_SALOME__POA.PickelizedPyObjServer._omni_op_d)

PickelizedPyObjRdWrServer._omni_skeleton = PickelizedPyObjRdWrServer
_0_SALOME__POA.PickelizedPyObjRdWrServer = PickelizedPyObjRdWrServer
omniORB.registerSkeleton(PickelizedPyObjRdWrServer._NP_RepositoryId, PickelizedPyObjRdWrServer)
del PickelizedPyObjRdWrServer
__name__ = "salome.kernel.SALOME"

# forward interface DataServerManager;
_0_SALOME._d_DataServerManager = (omniORB.tcInternal.tv_objref, "IDL:SALOME/DataServerManager:1.0", "DataServerManager")
omniORB.typeMapping["IDL:SALOME/DataServerManager:1.0"] = _0_SALOME._d_DataServerManager

# interface DataScopeKiller
_0_SALOME._d_DataScopeKiller = (omniORB.tcInternal.tv_objref, "IDL:SALOME/DataScopeKiller:1.0", "DataScopeKiller")
omniORB.typeMapping["IDL:SALOME/DataScopeKiller:1.0"] = _0_SALOME._d_DataScopeKiller
_0_SALOME.DataScopeKiller = omniORB.newEmptyClass()
class DataScopeKiller :
    _NP_RepositoryId = _0_SALOME._d_DataScopeKiller[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.DataScopeKiller = DataScopeKiller
_0_SALOME._tc_DataScopeKiller = omniORB.tcInternal.createTypeCode(_0_SALOME._d_DataScopeKiller)
omniORB.registerType(DataScopeKiller._NP_RepositoryId, _0_SALOME._d_DataScopeKiller, _0_SALOME._tc_DataScopeKiller)

# DataScopeKiller operations and attributes
DataScopeKiller._d_shutdown = ((), (), None)

# DataScopeKiller object reference
class _objref_DataScopeKiller (CORBA.Object):
    _NP_RepositoryId = DataScopeKiller._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def shutdown(self, *args):
        return self._obj.invoke("shutdown", _0_SALOME.DataScopeKiller._d_shutdown, args)

omniORB.registerObjref(DataScopeKiller._NP_RepositoryId, _objref_DataScopeKiller)
_0_SALOME._objref_DataScopeKiller = _objref_DataScopeKiller
del DataScopeKiller, _objref_DataScopeKiller

# DataScopeKiller skeleton
__name__ = "salome.kernel.SALOME__POA"
class DataScopeKiller (PortableServer.Servant):
    _NP_RepositoryId = _0_SALOME.DataScopeKiller._NP_RepositoryId


    _omni_op_d = {"shutdown": _0_SALOME.DataScopeKiller._d_shutdown}

DataScopeKiller._omni_skeleton = DataScopeKiller
_0_SALOME__POA.DataScopeKiller = DataScopeKiller
omniORB.registerSkeleton(DataScopeKiller._NP_RepositoryId, DataScopeKiller)
del DataScopeKiller
__name__ = "salome.kernel.SALOME"

# interface RequestSwitcherBase
_0_SALOME._d_RequestSwitcherBase = (omniORB.tcInternal.tv_objref, "IDL:SALOME/RequestSwitcherBase:1.0", "RequestSwitcherBase")
omniORB.typeMapping["IDL:SALOME/RequestSwitcherBase:1.0"] = _0_SALOME._d_RequestSwitcherBase
_0_SALOME.RequestSwitcherBase = omniORB.newEmptyClass()
class RequestSwitcherBase :
    _NP_RepositoryId = _0_SALOME._d_RequestSwitcherBase[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.RequestSwitcherBase = RequestSwitcherBase
_0_SALOME._tc_RequestSwitcherBase = omniORB.tcInternal.createTypeCode(_0_SALOME._d_RequestSwitcherBase)
omniORB.registerType(RequestSwitcherBase._NP_RepositoryId, _0_SALOME._d_RequestSwitcherBase, _0_SALOME._tc_RequestSwitcherBase)

# RequestSwitcherBase operations and attributes
RequestSwitcherBase._d_holdRequests = ((), (), None)
RequestSwitcherBase._d_activeRequests = ((), (), None)

# RequestSwitcherBase object reference
class _objref_RequestSwitcherBase (CORBA.Object):
    _NP_RepositoryId = RequestSwitcherBase._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def holdRequests(self, *args):
        return self._obj.invoke("holdRequests", _0_SALOME.RequestSwitcherBase._d_holdRequests, args)

    def activeRequests(self, *args):
        return self._obj.invoke("activeRequests", _0_SALOME.RequestSwitcherBase._d_activeRequests, args)

omniORB.registerObjref(RequestSwitcherBase._NP_RepositoryId, _objref_RequestSwitcherBase)
_0_SALOME._objref_RequestSwitcherBase = _objref_RequestSwitcherBase
del RequestSwitcherBase, _objref_RequestSwitcherBase

# RequestSwitcherBase skeleton
__name__ = "salome.kernel.SALOME__POA"
class RequestSwitcherBase (PortableServer.Servant):
    _NP_RepositoryId = _0_SALOME.RequestSwitcherBase._NP_RepositoryId


    _omni_op_d = {"holdRequests": _0_SALOME.RequestSwitcherBase._d_holdRequests, "activeRequests": _0_SALOME.RequestSwitcherBase._d_activeRequests}

RequestSwitcherBase._omni_skeleton = RequestSwitcherBase
_0_SALOME__POA.RequestSwitcherBase = RequestSwitcherBase
omniORB.registerSkeleton(RequestSwitcherBase._NP_RepositoryId, RequestSwitcherBase)
del RequestSwitcherBase
__name__ = "salome.kernel.SALOME"

# interface RequestSwitcher
_0_SALOME._d_RequestSwitcher = (omniORB.tcInternal.tv_objref, "IDL:SALOME/RequestSwitcher:1.0", "RequestSwitcher")
omniORB.typeMapping["IDL:SALOME/RequestSwitcher:1.0"] = _0_SALOME._d_RequestSwitcher
_0_SALOME.RequestSwitcher = omniORB.newEmptyClass()
class RequestSwitcher (_0_SALOME.RequestSwitcherBase):
    _NP_RepositoryId = _0_SALOME._d_RequestSwitcher[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.RequestSwitcher = RequestSwitcher
_0_SALOME._tc_RequestSwitcher = omniORB.tcInternal.createTypeCode(_0_SALOME._d_RequestSwitcher)
omniORB.registerType(RequestSwitcher._NP_RepositoryId, _0_SALOME._d_RequestSwitcher, _0_SALOME._tc_RequestSwitcher)

# RequestSwitcher operations and attributes
RequestSwitcher._d_listVars = ((), (omniORB.typeMapping["IDL:SALOME/StringVec:1.0"], ), None)
RequestSwitcher._d_fetchSerializedContent = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
RequestSwitcher._d_fetchAndGetAccessOfVar = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"]), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})

# RequestSwitcher object reference
class _objref_RequestSwitcher (_0_SALOME._objref_RequestSwitcherBase):
    _NP_RepositoryId = RequestSwitcher._NP_RepositoryId

    def __init__(self, obj):
        _0_SALOME._objref_RequestSwitcherBase.__init__(self, obj)

    def listVars(self, *args):
        return self._obj.invoke("listVars", _0_SALOME.RequestSwitcher._d_listVars, args)

    def fetchSerializedContent(self, *args):
        return self._obj.invoke("fetchSerializedContent", _0_SALOME.RequestSwitcher._d_fetchSerializedContent, args)

    def fetchAndGetAccessOfVar(self, *args):
        return self._obj.invoke("fetchAndGetAccessOfVar", _0_SALOME.RequestSwitcher._d_fetchAndGetAccessOfVar, args)

omniORB.registerObjref(RequestSwitcher._NP_RepositoryId, _objref_RequestSwitcher)
_0_SALOME._objref_RequestSwitcher = _objref_RequestSwitcher
del RequestSwitcher, _objref_RequestSwitcher

# RequestSwitcher skeleton
__name__ = "salome.kernel.SALOME__POA"
class RequestSwitcher (_0_SALOME__POA.RequestSwitcherBase):
    _NP_RepositoryId = _0_SALOME.RequestSwitcher._NP_RepositoryId


    _omni_op_d = {"listVars": _0_SALOME.RequestSwitcher._d_listVars, "fetchSerializedContent": _0_SALOME.RequestSwitcher._d_fetchSerializedContent, "fetchAndGetAccessOfVar": _0_SALOME.RequestSwitcher._d_fetchAndGetAccessOfVar}
    _omni_op_d.update(_0_SALOME__POA.RequestSwitcherBase._omni_op_d)

RequestSwitcher._omni_skeleton = RequestSwitcher
_0_SALOME__POA.RequestSwitcher = RequestSwitcher
omniORB.registerSkeleton(RequestSwitcher._NP_RepositoryId, RequestSwitcher)
del RequestSwitcher
__name__ = "salome.kernel.SALOME"

# forward interface DataScopeServerTransaction;
_0_SALOME._d_DataScopeServerTransaction = (omniORB.tcInternal.tv_objref, "IDL:SALOME/DataScopeServerTransaction:1.0", "DataScopeServerTransaction")
omniORB.typeMapping["IDL:SALOME/DataScopeServerTransaction:1.0"] = _0_SALOME._d_DataScopeServerTransaction

# interface RequestSwitcherDSM
_0_SALOME._d_RequestSwitcherDSM = (omniORB.tcInternal.tv_objref, "IDL:SALOME/RequestSwitcherDSM:1.0", "RequestSwitcherDSM")
omniORB.typeMapping["IDL:SALOME/RequestSwitcherDSM:1.0"] = _0_SALOME._d_RequestSwitcherDSM
_0_SALOME.RequestSwitcherDSM = omniORB.newEmptyClass()
class RequestSwitcherDSM (_0_SALOME.RequestSwitcherBase):
    _NP_RepositoryId = _0_SALOME._d_RequestSwitcherDSM[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.RequestSwitcherDSM = RequestSwitcherDSM
_0_SALOME._tc_RequestSwitcherDSM = omniORB.tcInternal.createTypeCode(_0_SALOME._d_RequestSwitcherDSM)
omniORB.registerType(RequestSwitcherDSM._NP_RepositoryId, _0_SALOME._d_RequestSwitcherDSM, _0_SALOME._tc_RequestSwitcherDSM)

# RequestSwitcherDSM operations and attributes
RequestSwitcherDSM._d_listScopes = ((), (omniORB.typeMapping["IDL:SALOME/StringVec:1.0"], ), None)
RequestSwitcherDSM._d_giveADataScopeTransactionCalled = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:SALOME/DataScopeServerTransaction:1.0"], omniORB.tcInternal.tv_boolean), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})

# RequestSwitcherDSM object reference
class _objref_RequestSwitcherDSM (_0_SALOME._objref_RequestSwitcherBase):
    _NP_RepositoryId = RequestSwitcherDSM._NP_RepositoryId

    def __init__(self, obj):
        _0_SALOME._objref_RequestSwitcherBase.__init__(self, obj)

    def listScopes(self, *args):
        return self._obj.invoke("listScopes", _0_SALOME.RequestSwitcherDSM._d_listScopes, args)

    def giveADataScopeTransactionCalled(self, *args):
        return self._obj.invoke("giveADataScopeTransactionCalled", _0_SALOME.RequestSwitcherDSM._d_giveADataScopeTransactionCalled, args)

omniORB.registerObjref(RequestSwitcherDSM._NP_RepositoryId, _objref_RequestSwitcherDSM)
_0_SALOME._objref_RequestSwitcherDSM = _objref_RequestSwitcherDSM
del RequestSwitcherDSM, _objref_RequestSwitcherDSM

# RequestSwitcherDSM skeleton
__name__ = "salome.kernel.SALOME__POA"
class RequestSwitcherDSM (_0_SALOME__POA.RequestSwitcherBase):
    _NP_RepositoryId = _0_SALOME.RequestSwitcherDSM._NP_RepositoryId


    _omni_op_d = {"listScopes": _0_SALOME.RequestSwitcherDSM._d_listScopes, "giveADataScopeTransactionCalled": _0_SALOME.RequestSwitcherDSM._d_giveADataScopeTransactionCalled}
    _omni_op_d.update(_0_SALOME__POA.RequestSwitcherBase._omni_op_d)

RequestSwitcherDSM._omni_skeleton = RequestSwitcherDSM
_0_SALOME__POA.RequestSwitcherDSM = RequestSwitcherDSM
omniORB.registerSkeleton(RequestSwitcherDSM._NP_RepositoryId, RequestSwitcherDSM)
del RequestSwitcherDSM
__name__ = "salome.kernel.SALOME"

# interface DataScopeServerBase
_0_SALOME._d_DataScopeServerBase = (omniORB.tcInternal.tv_objref, "IDL:SALOME/DataScopeServerBase:1.0", "DataScopeServerBase")
omniORB.typeMapping["IDL:SALOME/DataScopeServerBase:1.0"] = _0_SALOME._d_DataScopeServerBase
_0_SALOME.DataScopeServerBase = omniORB.newEmptyClass()
class DataScopeServerBase :
    _NP_RepositoryId = _0_SALOME._d_DataScopeServerBase[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.DataScopeServerBase = DataScopeServerBase
_0_SALOME._tc_DataScopeServerBase = omniORB.tcInternal.createTypeCode(_0_SALOME._d_DataScopeServerBase)
omniORB.registerType(DataScopeServerBase._NP_RepositoryId, _0_SALOME._d_DataScopeServerBase, _0_SALOME._tc_DataScopeServerBase)

# DataScopeServerBase operations and attributes
DataScopeServerBase._d_ping = ((), (), None)
DataScopeServerBase._d_getScopeName = ((), ((omniORB.tcInternal.tv_string,0), ), None)
DataScopeServerBase._d_listVars = ((), (omniORB.typeMapping["IDL:SALOME/StringVec:1.0"], ), None)
DataScopeServerBase._d_existVar = (((omniORB.tcInternal.tv_string,0), ), (omniORB.tcInternal.tv_boolean, ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerBase._d_deleteVar = (((omniORB.tcInternal.tv_string,0), ), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerBase._d_shutdownIfNotHostedByDSM = ((), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:SALOME/DataScopeKiller:1.0"]), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerBase._d_fetchSerializedContent = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerBase._d_getAllKeysOfVarWithTypeDict = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:SALOME/SeqOfByteVec:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerBase._d_getValueOfVarWithTypeDict = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"]), (omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerBase._d_takeANap = ((omniORB.tcInternal.tv_double, ), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})

# DataScopeServerBase object reference
class _objref_DataScopeServerBase (CORBA.Object):
    _NP_RepositoryId = DataScopeServerBase._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def ping(self, *args):
        return self._obj.invoke("ping", _0_SALOME.DataScopeServerBase._d_ping, args)

    def getScopeName(self, *args):
        return self._obj.invoke("getScopeName", _0_SALOME.DataScopeServerBase._d_getScopeName, args)

    def listVars(self, *args):
        return self._obj.invoke("listVars", _0_SALOME.DataScopeServerBase._d_listVars, args)

    def existVar(self, *args):
        return self._obj.invoke("existVar", _0_SALOME.DataScopeServerBase._d_existVar, args)

    def deleteVar(self, *args):
        return self._obj.invoke("deleteVar", _0_SALOME.DataScopeServerBase._d_deleteVar, args)

    def shutdownIfNotHostedByDSM(self, *args):
        return self._obj.invoke("shutdownIfNotHostedByDSM", _0_SALOME.DataScopeServerBase._d_shutdownIfNotHostedByDSM, args)

    def fetchSerializedContent(self, *args):
        return self._obj.invoke("fetchSerializedContent", _0_SALOME.DataScopeServerBase._d_fetchSerializedContent, args)

    def getAllKeysOfVarWithTypeDict(self, *args):
        return self._obj.invoke("getAllKeysOfVarWithTypeDict", _0_SALOME.DataScopeServerBase._d_getAllKeysOfVarWithTypeDict, args)

    def getValueOfVarWithTypeDict(self, *args):
        return self._obj.invoke("getValueOfVarWithTypeDict", _0_SALOME.DataScopeServerBase._d_getValueOfVarWithTypeDict, args)

    def takeANap(self, *args):
        return self._obj.invoke("takeANap", _0_SALOME.DataScopeServerBase._d_takeANap, args)

omniORB.registerObjref(DataScopeServerBase._NP_RepositoryId, _objref_DataScopeServerBase)
_0_SALOME._objref_DataScopeServerBase = _objref_DataScopeServerBase
del DataScopeServerBase, _objref_DataScopeServerBase

# DataScopeServerBase skeleton
__name__ = "salome.kernel.SALOME__POA"
class DataScopeServerBase (PortableServer.Servant):
    _NP_RepositoryId = _0_SALOME.DataScopeServerBase._NP_RepositoryId


    _omni_op_d = {"ping": _0_SALOME.DataScopeServerBase._d_ping, "getScopeName": _0_SALOME.DataScopeServerBase._d_getScopeName, "listVars": _0_SALOME.DataScopeServerBase._d_listVars, "existVar": _0_SALOME.DataScopeServerBase._d_existVar, "deleteVar": _0_SALOME.DataScopeServerBase._d_deleteVar, "shutdownIfNotHostedByDSM": _0_SALOME.DataScopeServerBase._d_shutdownIfNotHostedByDSM, "fetchSerializedContent": _0_SALOME.DataScopeServerBase._d_fetchSerializedContent, "getAllKeysOfVarWithTypeDict": _0_SALOME.DataScopeServerBase._d_getAllKeysOfVarWithTypeDict, "getValueOfVarWithTypeDict": _0_SALOME.DataScopeServerBase._d_getValueOfVarWithTypeDict, "takeANap": _0_SALOME.DataScopeServerBase._d_takeANap}

DataScopeServerBase._omni_skeleton = DataScopeServerBase
_0_SALOME__POA.DataScopeServerBase = DataScopeServerBase
omniORB.registerSkeleton(DataScopeServerBase._NP_RepositoryId, DataScopeServerBase)
del DataScopeServerBase
__name__ = "salome.kernel.SALOME"

# interface DataScopeServer
_0_SALOME._d_DataScopeServer = (omniORB.tcInternal.tv_objref, "IDL:SALOME/DataScopeServer:1.0", "DataScopeServer")
omniORB.typeMapping["IDL:SALOME/DataScopeServer:1.0"] = _0_SALOME._d_DataScopeServer
_0_SALOME.DataScopeServer = omniORB.newEmptyClass()
class DataScopeServer (_0_SALOME.DataScopeServerBase):
    _NP_RepositoryId = _0_SALOME._d_DataScopeServer[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.DataScopeServer = DataScopeServer
_0_SALOME._tc_DataScopeServer = omniORB.tcInternal.createTypeCode(_0_SALOME._d_DataScopeServer)
omniORB.registerType(DataScopeServer._NP_RepositoryId, _0_SALOME._d_DataScopeServer, _0_SALOME._tc_DataScopeServer)

# DataScopeServer operations and attributes
DataScopeServer._d_retrieveVar = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:SALOME/BasicDataServer:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServer._d_createRdOnlyVar = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"]), (omniORB.typeMapping["IDL:SALOME/PickelizedPyObjRdOnlyServer:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServer._d_createRdExtVar = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"]), (omniORB.typeMapping["IDL:SALOME/PickelizedPyObjRdExtServer:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})

# DataScopeServer object reference
class _objref_DataScopeServer (_0_SALOME._objref_DataScopeServerBase):
    _NP_RepositoryId = DataScopeServer._NP_RepositoryId

    def __init__(self, obj):
        _0_SALOME._objref_DataScopeServerBase.__init__(self, obj)

    def retrieveVar(self, *args):
        return self._obj.invoke("retrieveVar", _0_SALOME.DataScopeServer._d_retrieveVar, args)

    def createRdOnlyVar(self, *args):
        return self._obj.invoke("createRdOnlyVar", _0_SALOME.DataScopeServer._d_createRdOnlyVar, args)

    def createRdExtVar(self, *args):
        return self._obj.invoke("createRdExtVar", _0_SALOME.DataScopeServer._d_createRdExtVar, args)

omniORB.registerObjref(DataScopeServer._NP_RepositoryId, _objref_DataScopeServer)
_0_SALOME._objref_DataScopeServer = _objref_DataScopeServer
del DataScopeServer, _objref_DataScopeServer

# DataScopeServer skeleton
__name__ = "salome.kernel.SALOME__POA"
class DataScopeServer (_0_SALOME__POA.DataScopeServerBase):
    _NP_RepositoryId = _0_SALOME.DataScopeServer._NP_RepositoryId


    _omni_op_d = {"retrieveVar": _0_SALOME.DataScopeServer._d_retrieveVar, "createRdOnlyVar": _0_SALOME.DataScopeServer._d_createRdOnlyVar, "createRdExtVar": _0_SALOME.DataScopeServer._d_createRdExtVar}
    _omni_op_d.update(_0_SALOME__POA.DataScopeServerBase._omni_op_d)

DataScopeServer._omni_skeleton = DataScopeServer
_0_SALOME__POA.DataScopeServer = DataScopeServer
omniORB.registerSkeleton(DataScopeServer._NP_RepositoryId, DataScopeServer)
del DataScopeServer
__name__ = "salome.kernel.SALOME"

# interface Transaction
_0_SALOME._d_Transaction = (omniORB.tcInternal.tv_objref, "IDL:SALOME/Transaction:1.0", "Transaction")
omniORB.typeMapping["IDL:SALOME/Transaction:1.0"] = _0_SALOME._d_Transaction
_0_SALOME.Transaction = omniORB.newEmptyClass()
class Transaction :
    _NP_RepositoryId = _0_SALOME._d_Transaction[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.Transaction = Transaction
_0_SALOME._tc_Transaction = omniORB.tcInternal.createTypeCode(_0_SALOME._d_Transaction)
omniORB.registerType(Transaction._NP_RepositoryId, _0_SALOME._d_Transaction, _0_SALOME._tc_Transaction)

# Transaction object reference
class _objref_Transaction (CORBA.Object):
    _NP_RepositoryId = Transaction._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

omniORB.registerObjref(Transaction._NP_RepositoryId, _objref_Transaction)
_0_SALOME._objref_Transaction = _objref_Transaction
del Transaction, _objref_Transaction

# Transaction skeleton
__name__ = "salome.kernel.SALOME__POA"
class Transaction (PortableServer.Servant):
    _NP_RepositoryId = _0_SALOME.Transaction._NP_RepositoryId


    _omni_op_d = {}

Transaction._omni_skeleton = Transaction
_0_SALOME__POA.Transaction = Transaction
omniORB.registerSkeleton(Transaction._NP_RepositoryId, Transaction)
del Transaction
__name__ = "salome.kernel.SALOME"

# interface TransactionRdWrAccess
_0_SALOME._d_TransactionRdWrAccess = (omniORB.tcInternal.tv_objref, "IDL:SALOME/TransactionRdWrAccess:1.0", "TransactionRdWrAccess")
omniORB.typeMapping["IDL:SALOME/TransactionRdWrAccess:1.0"] = _0_SALOME._d_TransactionRdWrAccess
_0_SALOME.TransactionRdWrAccess = omniORB.newEmptyClass()
class TransactionRdWrAccess (_0_SALOME.Transaction):
    _NP_RepositoryId = _0_SALOME._d_TransactionRdWrAccess[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.TransactionRdWrAccess = TransactionRdWrAccess
_0_SALOME._tc_TransactionRdWrAccess = omniORB.tcInternal.createTypeCode(_0_SALOME._d_TransactionRdWrAccess)
omniORB.registerType(TransactionRdWrAccess._NP_RepositoryId, _0_SALOME._d_TransactionRdWrAccess, _0_SALOME._tc_TransactionRdWrAccess)

# TransactionRdWrAccess operations and attributes
TransactionRdWrAccess._d_getVar = ((), (omniORB.typeMapping["IDL:SALOME/PickelizedPyObjRdWrServer:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})

# TransactionRdWrAccess object reference
class _objref_TransactionRdWrAccess (_0_SALOME._objref_Transaction):
    _NP_RepositoryId = TransactionRdWrAccess._NP_RepositoryId

    def __init__(self, obj):
        _0_SALOME._objref_Transaction.__init__(self, obj)

    def getVar(self, *args):
        return self._obj.invoke("getVar", _0_SALOME.TransactionRdWrAccess._d_getVar, args)

omniORB.registerObjref(TransactionRdWrAccess._NP_RepositoryId, _objref_TransactionRdWrAccess)
_0_SALOME._objref_TransactionRdWrAccess = _objref_TransactionRdWrAccess
del TransactionRdWrAccess, _objref_TransactionRdWrAccess

# TransactionRdWrAccess skeleton
__name__ = "salome.kernel.SALOME__POA"
class TransactionRdWrAccess (_0_SALOME__POA.Transaction):
    _NP_RepositoryId = _0_SALOME.TransactionRdWrAccess._NP_RepositoryId


    _omni_op_d = {"getVar": _0_SALOME.TransactionRdWrAccess._d_getVar}
    _omni_op_d.update(_0_SALOME__POA.Transaction._omni_op_d)

TransactionRdWrAccess._omni_skeleton = TransactionRdWrAccess
_0_SALOME__POA.TransactionRdWrAccess = TransactionRdWrAccess
omniORB.registerSkeleton(TransactionRdWrAccess._NP_RepositoryId, TransactionRdWrAccess)
del TransactionRdWrAccess
__name__ = "salome.kernel.SALOME"

# interface TransactionMultiKeyAddSession
_0_SALOME._d_TransactionMultiKeyAddSession = (omniORB.tcInternal.tv_objref, "IDL:SALOME/TransactionMultiKeyAddSession:1.0", "TransactionMultiKeyAddSession")
omniORB.typeMapping["IDL:SALOME/TransactionMultiKeyAddSession:1.0"] = _0_SALOME._d_TransactionMultiKeyAddSession
_0_SALOME.TransactionMultiKeyAddSession = omniORB.newEmptyClass()
class TransactionMultiKeyAddSession (_0_SALOME.Transaction):
    _NP_RepositoryId = _0_SALOME._d_TransactionMultiKeyAddSession[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.TransactionMultiKeyAddSession = TransactionMultiKeyAddSession
_0_SALOME._tc_TransactionMultiKeyAddSession = omniORB.tcInternal.createTypeCode(_0_SALOME._d_TransactionMultiKeyAddSession)
omniORB.registerType(TransactionMultiKeyAddSession._NP_RepositoryId, _0_SALOME._d_TransactionMultiKeyAddSession, _0_SALOME._tc_TransactionMultiKeyAddSession)

# TransactionMultiKeyAddSession operations and attributes
TransactionMultiKeyAddSession._d_addKeyValueInVarErrorIfAlreadyExistingNow = ((omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"], omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"]), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})

# TransactionMultiKeyAddSession object reference
class _objref_TransactionMultiKeyAddSession (_0_SALOME._objref_Transaction):
    _NP_RepositoryId = TransactionMultiKeyAddSession._NP_RepositoryId

    def __init__(self, obj):
        _0_SALOME._objref_Transaction.__init__(self, obj)

    def addKeyValueInVarErrorIfAlreadyExistingNow(self, *args):
        return self._obj.invoke("addKeyValueInVarErrorIfAlreadyExistingNow", _0_SALOME.TransactionMultiKeyAddSession._d_addKeyValueInVarErrorIfAlreadyExistingNow, args)

omniORB.registerObjref(TransactionMultiKeyAddSession._NP_RepositoryId, _objref_TransactionMultiKeyAddSession)
_0_SALOME._objref_TransactionMultiKeyAddSession = _objref_TransactionMultiKeyAddSession
del TransactionMultiKeyAddSession, _objref_TransactionMultiKeyAddSession

# TransactionMultiKeyAddSession skeleton
__name__ = "salome.kernel.SALOME__POA"
class TransactionMultiKeyAddSession (_0_SALOME__POA.Transaction):
    _NP_RepositoryId = _0_SALOME.TransactionMultiKeyAddSession._NP_RepositoryId


    _omni_op_d = {"addKeyValueInVarErrorIfAlreadyExistingNow": _0_SALOME.TransactionMultiKeyAddSession._d_addKeyValueInVarErrorIfAlreadyExistingNow}
    _omni_op_d.update(_0_SALOME__POA.Transaction._omni_op_d)

TransactionMultiKeyAddSession._omni_skeleton = TransactionMultiKeyAddSession
_0_SALOME__POA.TransactionMultiKeyAddSession = TransactionMultiKeyAddSession
omniORB.registerSkeleton(TransactionMultiKeyAddSession._NP_RepositoryId, TransactionMultiKeyAddSession)
del TransactionMultiKeyAddSession
__name__ = "salome.kernel.SALOME"

# typedef ... ListOfTransaction
class ListOfTransaction:
    _NP_RepositoryId = "IDL:SALOME/ListOfTransaction:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_SALOME.ListOfTransaction = ListOfTransaction
_0_SALOME._d_ListOfTransaction  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:SALOME/Transaction:1.0"], 0)
_0_SALOME._ad_ListOfTransaction = (omniORB.tcInternal.tv_alias, ListOfTransaction._NP_RepositoryId, "ListOfTransaction", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:SALOME/Transaction:1.0"], 0))
_0_SALOME._tc_ListOfTransaction = omniORB.tcInternal.createTypeCode(_0_SALOME._ad_ListOfTransaction)
omniORB.registerType(ListOfTransaction._NP_RepositoryId, _0_SALOME._ad_ListOfTransaction, _0_SALOME._tc_ListOfTransaction)
del ListOfTransaction

# interface KeyWaiter
_0_SALOME._d_KeyWaiter = (omniORB.tcInternal.tv_objref, "IDL:SALOME/KeyWaiter:1.0", "KeyWaiter")
omniORB.typeMapping["IDL:SALOME/KeyWaiter:1.0"] = _0_SALOME._d_KeyWaiter
_0_SALOME.KeyWaiter = omniORB.newEmptyClass()
class KeyWaiter :
    _NP_RepositoryId = _0_SALOME._d_KeyWaiter[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.KeyWaiter = KeyWaiter
_0_SALOME._tc_KeyWaiter = omniORB.tcInternal.createTypeCode(_0_SALOME._d_KeyWaiter)
omniORB.registerType(KeyWaiter._NP_RepositoryId, _0_SALOME._d_KeyWaiter, _0_SALOME._tc_KeyWaiter)

# KeyWaiter operations and attributes
KeyWaiter._d_waitFor = ((), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})

# KeyWaiter object reference
class _objref_KeyWaiter (CORBA.Object):
    _NP_RepositoryId = KeyWaiter._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def waitFor(self, *args):
        return self._obj.invoke("waitFor", _0_SALOME.KeyWaiter._d_waitFor, args)

omniORB.registerObjref(KeyWaiter._NP_RepositoryId, _objref_KeyWaiter)
_0_SALOME._objref_KeyWaiter = _objref_KeyWaiter
del KeyWaiter, _objref_KeyWaiter

# KeyWaiter skeleton
__name__ = "salome.kernel.SALOME__POA"
class KeyWaiter (PortableServer.Servant):
    _NP_RepositoryId = _0_SALOME.KeyWaiter._NP_RepositoryId


    _omni_op_d = {"waitFor": _0_SALOME.KeyWaiter._d_waitFor}

KeyWaiter._omni_skeleton = KeyWaiter
_0_SALOME__POA.KeyWaiter = KeyWaiter
omniORB.registerSkeleton(KeyWaiter._NP_RepositoryId, KeyWaiter)
del KeyWaiter
__name__ = "salome.kernel.SALOME"

# interface DataScopeServerTransaction
_0_SALOME._d_DataScopeServerTransaction = (omniORB.tcInternal.tv_objref, "IDL:SALOME/DataScopeServerTransaction:1.0", "DataScopeServerTransaction")
omniORB.typeMapping["IDL:SALOME/DataScopeServerTransaction:1.0"] = _0_SALOME._d_DataScopeServerTransaction
_0_SALOME.DataScopeServerTransaction = omniORB.newEmptyClass()
class DataScopeServerTransaction (_0_SALOME.DataScopeServerBase):
    _NP_RepositoryId = _0_SALOME._d_DataScopeServerTransaction[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.DataScopeServerTransaction = DataScopeServerTransaction
_0_SALOME._tc_DataScopeServerTransaction = omniORB.tcInternal.createTypeCode(_0_SALOME._d_DataScopeServerTransaction)
omniORB.registerType(DataScopeServerTransaction._NP_RepositoryId, _0_SALOME._d_DataScopeServerTransaction, _0_SALOME._tc_DataScopeServerTransaction)

# DataScopeServerTransaction operations and attributes
DataScopeServerTransaction._d_getAccessOfVar = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerTransaction._d_fetchAndGetAccessOfVar = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"]), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerTransaction._d_createRdOnlyVarTransac = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"]), (omniORB.typeMapping["IDL:SALOME/Transaction:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerTransaction._d_createRdExtVarTransac = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"]), (omniORB.typeMapping["IDL:SALOME/Transaction:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerTransaction._d_createRdExtVarFreeStyleTransac = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"], (omniORB.tcInternal.tv_string,0)), (omniORB.typeMapping["IDL:SALOME/Transaction:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerTransaction._d_createRdExtInitVarTransac = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"]), (omniORB.typeMapping["IDL:SALOME/Transaction:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerTransaction._d_createRdWrVarTransac = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"]), (omniORB.typeMapping["IDL:SALOME/Transaction:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerTransaction._d_addKeyValueInVarHard = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"], omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"]), (omniORB.typeMapping["IDL:SALOME/Transaction:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerTransaction._d_addKeyValueInVarErrorIfAlreadyExisting = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"], omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"]), (omniORB.typeMapping["IDL:SALOME/Transaction:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerTransaction._d_addMultiKeyValueSession = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:SALOME/TransactionMultiKeyAddSession:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerTransaction._d_removeKeyInVarErrorIfNotAlreadyExisting = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"]), (omniORB.typeMapping["IDL:SALOME/Transaction:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerTransaction._d_createWorkingVarTransac = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"]), (omniORB.typeMapping["IDL:SALOME/TransactionRdWrAccess:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerTransaction._d_killVarTransac = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:SALOME/Transaction:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerTransaction._d_waitForKeyInVar = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"]), (omniORB.typeMapping["IDL:SALOME/KeyWaiter:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerTransaction._d_waitForKeyInVarAndKillIt = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"]), (omniORB.typeMapping["IDL:SALOME/KeyWaiter:1.0"], omniORB.typeMapping["IDL:SALOME/Transaction:1.0"]), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerTransaction._d_atomicApply = ((omniORB.typeMapping["IDL:SALOME/ListOfTransaction:1.0"], ), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerTransaction._d_waitForMonoThrRev = ((omniORB.typeMapping["IDL:SALOME/KeyWaiter:1.0"], ), (omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerTransaction._d_waitForAndKill = ((omniORB.typeMapping["IDL:SALOME/KeyWaiter:1.0"], ), (omniORB.typeMapping["IDL:SALOME/ByteVec:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataScopeServerTransaction._d_getRequestSwitcher = ((), (omniORB.typeMapping["IDL:SALOME/RequestSwitcher:1.0"], ), None)

# DataScopeServerTransaction object reference
class _objref_DataScopeServerTransaction (_0_SALOME._objref_DataScopeServerBase):
    _NP_RepositoryId = DataScopeServerTransaction._NP_RepositoryId

    def __init__(self, obj):
        _0_SALOME._objref_DataScopeServerBase.__init__(self, obj)

    def getAccessOfVar(self, *args):
        return self._obj.invoke("getAccessOfVar", _0_SALOME.DataScopeServerTransaction._d_getAccessOfVar, args)

    def fetchAndGetAccessOfVar(self, *args):
        return self._obj.invoke("fetchAndGetAccessOfVar", _0_SALOME.DataScopeServerTransaction._d_fetchAndGetAccessOfVar, args)

    def createRdOnlyVarTransac(self, *args):
        return self._obj.invoke("createRdOnlyVarTransac", _0_SALOME.DataScopeServerTransaction._d_createRdOnlyVarTransac, args)

    def createRdExtVarTransac(self, *args):
        return self._obj.invoke("createRdExtVarTransac", _0_SALOME.DataScopeServerTransaction._d_createRdExtVarTransac, args)

    def createRdExtVarFreeStyleTransac(self, *args):
        return self._obj.invoke("createRdExtVarFreeStyleTransac", _0_SALOME.DataScopeServerTransaction._d_createRdExtVarFreeStyleTransac, args)

    def createRdExtInitVarTransac(self, *args):
        return self._obj.invoke("createRdExtInitVarTransac", _0_SALOME.DataScopeServerTransaction._d_createRdExtInitVarTransac, args)

    def createRdWrVarTransac(self, *args):
        return self._obj.invoke("createRdWrVarTransac", _0_SALOME.DataScopeServerTransaction._d_createRdWrVarTransac, args)

    def addKeyValueInVarHard(self, *args):
        return self._obj.invoke("addKeyValueInVarHard", _0_SALOME.DataScopeServerTransaction._d_addKeyValueInVarHard, args)

    def addKeyValueInVarErrorIfAlreadyExisting(self, *args):
        return self._obj.invoke("addKeyValueInVarErrorIfAlreadyExisting", _0_SALOME.DataScopeServerTransaction._d_addKeyValueInVarErrorIfAlreadyExisting, args)

    def addMultiKeyValueSession(self, *args):
        return self._obj.invoke("addMultiKeyValueSession", _0_SALOME.DataScopeServerTransaction._d_addMultiKeyValueSession, args)

    def removeKeyInVarErrorIfNotAlreadyExisting(self, *args):
        return self._obj.invoke("removeKeyInVarErrorIfNotAlreadyExisting", _0_SALOME.DataScopeServerTransaction._d_removeKeyInVarErrorIfNotAlreadyExisting, args)

    def createWorkingVarTransac(self, *args):
        return self._obj.invoke("createWorkingVarTransac", _0_SALOME.DataScopeServerTransaction._d_createWorkingVarTransac, args)

    def killVarTransac(self, *args):
        return self._obj.invoke("killVarTransac", _0_SALOME.DataScopeServerTransaction._d_killVarTransac, args)

    def waitForKeyInVar(self, *args):
        return self._obj.invoke("waitForKeyInVar", _0_SALOME.DataScopeServerTransaction._d_waitForKeyInVar, args)

    def waitForKeyInVarAndKillIt(self, *args):
        return self._obj.invoke("waitForKeyInVarAndKillIt", _0_SALOME.DataScopeServerTransaction._d_waitForKeyInVarAndKillIt, args)

    def atomicApply(self, *args):
        return self._obj.invoke("atomicApply", _0_SALOME.DataScopeServerTransaction._d_atomicApply, args)

    def waitForMonoThrRev(self, *args):
        return self._obj.invoke("waitForMonoThrRev", _0_SALOME.DataScopeServerTransaction._d_waitForMonoThrRev, args)

    def waitForAndKill(self, *args):
        return self._obj.invoke("waitForAndKill", _0_SALOME.DataScopeServerTransaction._d_waitForAndKill, args)

    def getRequestSwitcher(self, *args):
        return self._obj.invoke("getRequestSwitcher", _0_SALOME.DataScopeServerTransaction._d_getRequestSwitcher, args)

omniORB.registerObjref(DataScopeServerTransaction._NP_RepositoryId, _objref_DataScopeServerTransaction)
_0_SALOME._objref_DataScopeServerTransaction = _objref_DataScopeServerTransaction
del DataScopeServerTransaction, _objref_DataScopeServerTransaction

# DataScopeServerTransaction skeleton
__name__ = "salome.kernel.SALOME__POA"
class DataScopeServerTransaction (_0_SALOME__POA.DataScopeServerBase):
    _NP_RepositoryId = _0_SALOME.DataScopeServerTransaction._NP_RepositoryId


    _omni_op_d = {"getAccessOfVar": _0_SALOME.DataScopeServerTransaction._d_getAccessOfVar, "fetchAndGetAccessOfVar": _0_SALOME.DataScopeServerTransaction._d_fetchAndGetAccessOfVar, "createRdOnlyVarTransac": _0_SALOME.DataScopeServerTransaction._d_createRdOnlyVarTransac, "createRdExtVarTransac": _0_SALOME.DataScopeServerTransaction._d_createRdExtVarTransac, "createRdExtVarFreeStyleTransac": _0_SALOME.DataScopeServerTransaction._d_createRdExtVarFreeStyleTransac, "createRdExtInitVarTransac": _0_SALOME.DataScopeServerTransaction._d_createRdExtInitVarTransac, "createRdWrVarTransac": _0_SALOME.DataScopeServerTransaction._d_createRdWrVarTransac, "addKeyValueInVarHard": _0_SALOME.DataScopeServerTransaction._d_addKeyValueInVarHard, "addKeyValueInVarErrorIfAlreadyExisting": _0_SALOME.DataScopeServerTransaction._d_addKeyValueInVarErrorIfAlreadyExisting, "addMultiKeyValueSession": _0_SALOME.DataScopeServerTransaction._d_addMultiKeyValueSession, "removeKeyInVarErrorIfNotAlreadyExisting": _0_SALOME.DataScopeServerTransaction._d_removeKeyInVarErrorIfNotAlreadyExisting, "createWorkingVarTransac": _0_SALOME.DataScopeServerTransaction._d_createWorkingVarTransac, "killVarTransac": _0_SALOME.DataScopeServerTransaction._d_killVarTransac, "waitForKeyInVar": _0_SALOME.DataScopeServerTransaction._d_waitForKeyInVar, "waitForKeyInVarAndKillIt": _0_SALOME.DataScopeServerTransaction._d_waitForKeyInVarAndKillIt, "atomicApply": _0_SALOME.DataScopeServerTransaction._d_atomicApply, "waitForMonoThrRev": _0_SALOME.DataScopeServerTransaction._d_waitForMonoThrRev, "waitForAndKill": _0_SALOME.DataScopeServerTransaction._d_waitForAndKill, "getRequestSwitcher": _0_SALOME.DataScopeServerTransaction._d_getRequestSwitcher}
    _omni_op_d.update(_0_SALOME__POA.DataScopeServerBase._omni_op_d)

DataScopeServerTransaction._omni_skeleton = DataScopeServerTransaction
_0_SALOME__POA.DataScopeServerTransaction = DataScopeServerTransaction
omniORB.registerSkeleton(DataScopeServerTransaction._NP_RepositoryId, DataScopeServerTransaction)
del DataScopeServerTransaction
__name__ = "salome.kernel.SALOME"

# interface DataServerManager
_0_SALOME._d_DataServerManager = (omniORB.tcInternal.tv_objref, "IDL:SALOME/DataServerManager:1.0", "DataServerManager")
omniORB.typeMapping["IDL:SALOME/DataServerManager:1.0"] = _0_SALOME._d_DataServerManager
_0_SALOME.DataServerManager = omniORB.newEmptyClass()
class DataServerManager :
    _NP_RepositoryId = _0_SALOME._d_DataServerManager[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_SALOME.DataServerManager = DataServerManager
_0_SALOME._tc_DataServerManager = omniORB.tcInternal.createTypeCode(_0_SALOME._d_DataServerManager)
omniORB.registerType(DataServerManager._NP_RepositoryId, _0_SALOME._d_DataServerManager, _0_SALOME._tc_DataServerManager)

# DataServerManager operations and attributes
DataServerManager._d_listScopes = ((), (omniORB.typeMapping["IDL:SALOME/StringVec:1.0"], ), None)
DataServerManager._d_listAliveAndKickingScopes = ((), (omniORB.typeMapping["IDL:SALOME/StringVec:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataServerManager._d_getDefaultScope = ((), (omniORB.typeMapping["IDL:SALOME/DataScopeServer:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataServerManager._d_isAliveAndKicking = (((omniORB.tcInternal.tv_string,0), ), (omniORB.tcInternal.tv_boolean, ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataServerManager._d_createDataScope = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:SALOME/DataScopeServer:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataServerManager._d_giveADataScopeCalled = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:SALOME/DataScopeServer:1.0"], omniORB.tcInternal.tv_boolean), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataServerManager._d_createDataScopeTransaction = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:SALOME/DataScopeServerTransaction:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataServerManager._d_giveADataScopeTransactionCalled = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:SALOME/DataScopeServerTransaction:1.0"], omniORB.tcInternal.tv_boolean), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataServerManager._d_retriveDataScope = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:SALOME/DataScopeServerBase:1.0"], ), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataServerManager._d_removeDataScope = (((omniORB.tcInternal.tv_string,0), ), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataServerManager._d_cleanScopesInNS = ((), (), None)
DataServerManager._d_shutdownScopes = ((), (), {_0_SALOME.SALOME_Exception._NP_RepositoryId: _0_SALOME._d_SALOME_Exception})
DataServerManager._d_getRequestSwitcher = ((), (omniORB.typeMapping["IDL:SALOME/RequestSwitcherDSM:1.0"], ), None)

# DataServerManager object reference
class _objref_DataServerManager (CORBA.Object):
    _NP_RepositoryId = DataServerManager._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def listScopes(self, *args):
        return self._obj.invoke("listScopes", _0_SALOME.DataServerManager._d_listScopes, args)

    def listAliveAndKickingScopes(self, *args):
        return self._obj.invoke("listAliveAndKickingScopes", _0_SALOME.DataServerManager._d_listAliveAndKickingScopes, args)

    def getDefaultScope(self, *args):
        return self._obj.invoke("getDefaultScope", _0_SALOME.DataServerManager._d_getDefaultScope, args)

    def isAliveAndKicking(self, *args):
        return self._obj.invoke("isAliveAndKicking", _0_SALOME.DataServerManager._d_isAliveAndKicking, args)

    def createDataScope(self, *args):
        return self._obj.invoke("createDataScope", _0_SALOME.DataServerManager._d_createDataScope, args)

    def giveADataScopeCalled(self, *args):
        return self._obj.invoke("giveADataScopeCalled", _0_SALOME.DataServerManager._d_giveADataScopeCalled, args)

    def createDataScopeTransaction(self, *args):
        return self._obj.invoke("createDataScopeTransaction", _0_SALOME.DataServerManager._d_createDataScopeTransaction, args)

    def giveADataScopeTransactionCalled(self, *args):
        return self._obj.invoke("giveADataScopeTransactionCalled", _0_SALOME.DataServerManager._d_giveADataScopeTransactionCalled, args)

    def retriveDataScope(self, *args):
        return self._obj.invoke("retriveDataScope", _0_SALOME.DataServerManager._d_retriveDataScope, args)

    def removeDataScope(self, *args):
        return self._obj.invoke("removeDataScope", _0_SALOME.DataServerManager._d_removeDataScope, args)

    def cleanScopesInNS(self, *args):
        return self._obj.invoke("cleanScopesInNS", _0_SALOME.DataServerManager._d_cleanScopesInNS, args)

    def shutdownScopes(self, *args):
        return self._obj.invoke("shutdownScopes", _0_SALOME.DataServerManager._d_shutdownScopes, args)

    def getRequestSwitcher(self, *args):
        return self._obj.invoke("getRequestSwitcher", _0_SALOME.DataServerManager._d_getRequestSwitcher, args)

omniORB.registerObjref(DataServerManager._NP_RepositoryId, _objref_DataServerManager)
_0_SALOME._objref_DataServerManager = _objref_DataServerManager
del DataServerManager, _objref_DataServerManager

# DataServerManager skeleton
__name__ = "salome.kernel.SALOME__POA"
class DataServerManager (PortableServer.Servant):
    _NP_RepositoryId = _0_SALOME.DataServerManager._NP_RepositoryId


    _omni_op_d = {"listScopes": _0_SALOME.DataServerManager._d_listScopes, "listAliveAndKickingScopes": _0_SALOME.DataServerManager._d_listAliveAndKickingScopes, "getDefaultScope": _0_SALOME.DataServerManager._d_getDefaultScope, "isAliveAndKicking": _0_SALOME.DataServerManager._d_isAliveAndKicking, "createDataScope": _0_SALOME.DataServerManager._d_createDataScope, "giveADataScopeCalled": _0_SALOME.DataServerManager._d_giveADataScopeCalled, "createDataScopeTransaction": _0_SALOME.DataServerManager._d_createDataScopeTransaction, "giveADataScopeTransactionCalled": _0_SALOME.DataServerManager._d_giveADataScopeTransactionCalled, "retriveDataScope": _0_SALOME.DataServerManager._d_retriveDataScope, "removeDataScope": _0_SALOME.DataServerManager._d_removeDataScope, "cleanScopesInNS": _0_SALOME.DataServerManager._d_cleanScopesInNS, "shutdownScopes": _0_SALOME.DataServerManager._d_shutdownScopes, "getRequestSwitcher": _0_SALOME.DataServerManager._d_getRequestSwitcher}

DataServerManager._omni_skeleton = DataServerManager
_0_SALOME__POA.DataServerManager = DataServerManager
omniORB.registerSkeleton(DataServerManager._NP_RepositoryId, DataServerManager)
del DataServerManager
__name__ = "salome.kernel.SALOME"

#
# End of module "SALOME"
#
__name__ = "salome.kernel.SALOME_SDS_idl"

_exported_modules = ( "salome.kernel.SALOME", )

# The end.

<!--
  Copyright (C) 2006-2019  CEA/DEN, EDF R&D

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA

  See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com

-->
<proc>
    <!--types -->
    <container name="A"> </container>
    <!--nodes -->
 <forloop name="b1" nsteps="5">
   <bloc name="b1" >
    <sinline name="node1" >
      <function name="f">
        <code>import salome</code>
        <code>salome.salome_init()</code>
        <code>import PYHELLO_ORB</code>
        <code>def f(p1):</code>
        <code>  print(__container__from__YACS__)</code>
        <code>  machine,container=__container__from__YACS__.split('/')</code>
        <code>  param={}</code>
        <code>  param['hostname']=machine</code>
        <code>  param['container_name']=container</code>
        <code>  compo=salome.lcc.LoadComponent(param, "PYHELLO")</code>
        <code>  print(compo.makeBanner(p1))</code>
        <code>  print(p1)</code>
      </function>
      <load container="A"/>
      <inport name="p1" type="string"/>
    </sinline>

    <sinline name="node2" >
      <function name="f">
        <code>import salome</code>
        <code>salome.salome_init()</code>
        <code>import HELLO_ORB</code>
        <code>def f(p1):</code>
        <code>  print(__container__from__YACS__)</code>
        <code>  machine,container=__container__from__YACS__.split('/')</code>
        <code>  param={}</code>
        <code>  param['hostname']=machine</code>
        <code>  param['container_name']=container</code>
        <code>  compo=salome.lcc.LoadComponent(param, "HELLO")</code>
        <code>  print(compo.hello(p1))</code>
        <code>  print(p1)</code>
      </function>
      <load container="A"/>
      <inport name="p1" type="string"/>
    </sinline>
    <sinline name="node3" >
      <function name="f">
        <code>import salome</code>
        <code>salome.salome_init()</code>
        <code>import PYHELLO_ORB</code>
        <code>def f(p1):</code>
        <code>  print(__container__from__YACS__)</code>
        <code>  machine,container=__container__from__YACS__.split('/')</code>
        <code>  param={}</code>
        <code>  param['hostname']=machine</code>
        <code>  param['container_name']=container</code>
        <code>  compo=salome.lcc.LoadComponent(param, "PYHELLO")</code>
        <code>  print(compo.makeBanner(p1))</code>
        <code>  print(p1)</code>
      </function>
      <inport name="p1" type="string"/>
    </sinline>

    <sinline name="node4" >
      <function name="f">
        <code>import salome</code>
        <code>salome.salome_init()</code>
        <code>import HELLO_ORB</code>
        <code>def f(p1):</code>
        <code>  print(__container__from__YACS__)</code>
        <code>  machine,container=__container__from__YACS__.split('/')</code>
        <code>  param={}</code>
        <code>  param['hostname']=machine</code>
        <code>  param['container_name']=container</code>
        <code>  compo=salome.lcc.LoadComponent(param, "HELLO")</code>
        <code>  print(compo.hello(p1))</code>
        <code>  print(p1)</code>
      </function>
      <inport name="p1" type="string"/>
    </sinline>
  </bloc>
 </forloop>


    <!--parameters -->
    <parameter>
        <tonode>b1.b1.node1</tonode> <toport>p1</toport>
        <value><string>chris</string> </value>
    </parameter>
    <parameter>
        <tonode>b1.b1.node2</tonode> <toport>p1</toport>
        <value><string>chris</string> </value>
    </parameter>
    <parameter>
        <tonode>b1.b1.node3</tonode> <toport>p1</toport>
        <value><string>chris</string> </value>
    </parameter>
    <parameter>
        <tonode>b1.b1.node4</tonode> <toport>p1</toport>
        <value><string>chris</string> </value>
    </parameter>

</proc>

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "secure-token"
version = "1.0.1"
description = "Secure Token System for Python"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "AmirHossein Babaee", email = "amirhoosenbabai82@gmail.com"}
]
maintainers = [
    {name = "AmirHossein Babaee", email = "amirhoosenbabai82@gmail.com"}
]
keywords = ["security", "token", "authentication", "encryption", "jwt-alternative"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security :: Cryptography",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Session",
    "Typing :: Typed",
]
requires-python = ">=3.8"
dependencies = [
    "cryptography>=41.0.0",
    "pydantic-settings>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest==8.4.1",
    "pytest-cov==6.2.1",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit==4.3.0",
    "bandit>=1.7.5",
    "safety>=2.3.0",
]

test = [
    "pytest==8.4.1",
    "pytest-cov==6.2.1",
]

[project.urls]
Homepage = "https://github.com/amirhosein2004/secure-token"
Documentation = "https://secure-token.readthedocs.io"
Repository = "https://github.com/amirhosein2004/secure-token.git"
"Bug Tracker" = "https://github.com/amirhosein2004/secure-token/issues"
Changelog = "https://github.com/amirhosein2004/secure-token/blob/main/CHANGELOG.md"

[project.scripts]
secure-token = "secure_token.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
secure_token = ["py.typed"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["secure_token"]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

# Bandit configuration
[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]  # Skip assert_used test

# Coverage configuration
[tool.coverage.run]
source = ["src/secure_token"]
omit = [
    "tests/*",
    "src/secure_token/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstract",
]

# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fb

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class GeodeticCoordinates(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = GeodeticCoordinates()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsGeodeticCoordinates(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # GeodeticCoordinates
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # GeodeticCoordinates
    def CoordinateSystem(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GeodeticCoordinates
    def Longitude(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # GeodeticCoordinates
    def Latitude(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # GeodeticCoordinates
    def Altitude(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

def Start(builder): builder.StartObject(4)
def GeodeticCoordinatesStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddCoordinateSystem(builder, coordinateSystem): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(coordinateSystem), 0)
def GeodeticCoordinatesAddCoordinateSystem(builder, coordinateSystem):
    """This method is deprecated. Please switch to AddCoordinateSystem."""
    return AddCoordinateSystem(builder, coordinateSystem)
def AddLongitude(builder, longitude): builder.PrependFloat64Slot(1, longitude, 0.0)
def GeodeticCoordinatesAddLongitude(builder, longitude):
    """This method is deprecated. Please switch to AddLongitude."""
    return AddLongitude(builder, longitude)
def AddLatitude(builder, latitude): builder.PrependFloat64Slot(2, latitude, 0.0)
def GeodeticCoordinatesAddLatitude(builder, latitude):
    """This method is deprecated. Please switch to AddLatitude."""
    return AddLatitude(builder, latitude)
def AddAltitude(builder, altitude): builder.PrependFloat64Slot(3, altitude, 0.0)
def GeodeticCoordinatesAddAltitude(builder, altitude):
    """This method is deprecated. Please switch to AddAltitude."""
    return AddAltitude(builder, altitude)
def End(builder): return builder.EndObject()
def GeodeticCoordinatesEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)
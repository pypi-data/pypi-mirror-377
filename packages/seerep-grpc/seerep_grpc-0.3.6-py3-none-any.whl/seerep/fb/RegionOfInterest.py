# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fb

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class RegionOfInterest(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = RegionOfInterest()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsRegionOfInterest(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # RegionOfInterest
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # RegionOfInterest
    def XOffset(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # RegionOfInterest
    def YOffset(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # RegionOfInterest
    def Height(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # RegionOfInterest
    def Width(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # RegionOfInterest
    def DoRectify(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def Start(builder): builder.StartObject(5)
def RegionOfInterestStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddXOffset(builder, xOffset): builder.PrependUint32Slot(0, xOffset, 0)
def RegionOfInterestAddXOffset(builder, xOffset):
    """This method is deprecated. Please switch to AddXOffset."""
    return AddXOffset(builder, xOffset)
def AddYOffset(builder, yOffset): builder.PrependUint32Slot(1, yOffset, 0)
def RegionOfInterestAddYOffset(builder, yOffset):
    """This method is deprecated. Please switch to AddYOffset."""
    return AddYOffset(builder, yOffset)
def AddHeight(builder, height): builder.PrependUint32Slot(2, height, 0)
def RegionOfInterestAddHeight(builder, height):
    """This method is deprecated. Please switch to AddHeight."""
    return AddHeight(builder, height)
def AddWidth(builder, width): builder.PrependUint32Slot(3, width, 0)
def RegionOfInterestAddWidth(builder, width):
    """This method is deprecated. Please switch to AddWidth."""
    return AddWidth(builder, width)
def AddDoRectify(builder, doRectify): builder.PrependBoolSlot(4, doRectify, 0)
def RegionOfInterestAddDoRectify(builder, doRectify):
    """This method is deprecated. Please switch to AddDoRectify."""
    return AddDoRectify(builder, doRectify)
def End(builder): return builder.EndObject()
def RegionOfInterestEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)
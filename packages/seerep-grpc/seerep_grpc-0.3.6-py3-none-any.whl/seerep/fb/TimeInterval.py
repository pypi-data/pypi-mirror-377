# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fb

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TimeInterval(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TimeInterval()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTimeInterval(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # TimeInterval
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TimeInterval
    def Header(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from seerep.fb.Header import Header
            obj = Header()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TimeInterval
    def TimeMin(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from seerep.fb.Timestamp import Timestamp
            obj = Timestamp()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TimeInterval
    def TimeMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from seerep.fb.Timestamp import Timestamp
            obj = Timestamp()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def Start(builder): builder.StartObject(3)
def TimeIntervalStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddHeader(builder, header): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(header), 0)
def TimeIntervalAddHeader(builder, header):
    """This method is deprecated. Please switch to AddHeader."""
    return AddHeader(builder, header)
def AddTimeMin(builder, timeMin): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(timeMin), 0)
def TimeIntervalAddTimeMin(builder, timeMin):
    """This method is deprecated. Please switch to AddTimeMin."""
    return AddTimeMin(builder, timeMin)
def AddTimeMax(builder, timeMax): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(timeMax), 0)
def TimeIntervalAddTimeMax(builder, timeMax):
    """This method is deprecated. Please switch to AddTimeMax."""
    return AddTimeMax(builder, timeMax)
def End(builder): return builder.EndObject()
def TimeIntervalEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)
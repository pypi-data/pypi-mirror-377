# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fb

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UuidDatatypeWithCategory(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UuidDatatypeWithCategory()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUuidDatatypeWithCategory(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UuidDatatypeWithCategory
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UuidDatatypeWithCategory
    def Category(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UuidDatatypeWithCategory
    def UuidAndDatatype(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from seerep.fb.UuidDatatypePair import UuidDatatypePair
            obj = UuidDatatypePair()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def Start(builder): builder.StartObject(2)
def UuidDatatypeWithCategoryStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddCategory(builder, category): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(category), 0)
def UuidDatatypeWithCategoryAddCategory(builder, category):
    """This method is deprecated. Please switch to AddCategory."""
    return AddCategory(builder, category)
def AddUuidAndDatatype(builder, UuidAndDatatype): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(UuidAndDatatype), 0)
def UuidDatatypeWithCategoryAddUuidAndDatatype(builder, UuidAndDatatype):
    """This method is deprecated. Please switch to AddUuidAndDatatype."""
    return AddUuidAndDatatype(builder, UuidAndDatatype)
def End(builder): return builder.EndObject()
def UuidDatatypeWithCategoryEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!

import grpc

class InstanceServiceStub(object):
  """ Interface exported by the server. """  
  
  def __init__(self, channel):
    """ Constructor. 
    
    Args: 
    channel: A grpc.Channel. 
    """
    
    self.GetInstances = channel.unary_unary(
      "/seerep.fb.InstanceService/GetInstances"
      )
    

class InstanceServiceServicer(object):
  """ Interface exported by the server. """  
  
  def GetInstances(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')
  
  

def add_InstanceServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
    'GetInstances': grpc.unary_unary_rpc_method_handler(
      servicer.GetInstances
    ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
    'seerep.fb.InstanceService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


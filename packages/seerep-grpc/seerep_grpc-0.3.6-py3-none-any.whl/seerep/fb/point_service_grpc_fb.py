# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!

import grpc

class PointServiceStub(object):
  """ Interface exported by the server. """  
  
  def __init__(self, channel):
    """ Constructor. 
    
    Args: 
    channel: A grpc.Channel. 
    """
    
    self.GetPoint = channel.unary_stream(
      "/seerep.fb.PointService/GetPoint"
      )
    
    self.TransferPoint = channel.stream_unary(
      "/seerep.fb.PointService/TransferPoint"
      )
    
    self.AddAttribute = channel.stream_unary(
      "/seerep.fb.PointService/AddAttribute"
      )
    

class PointServiceServicer(object):
  """ Interface exported by the server. """  
  
  def GetPoint(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')
  
  
  def TransferPoint(self, request_iterator, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')
  
  
  def AddAttribute(self, request_iterator, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')
  
  

def add_PointServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
    'GetPoint': grpc.unary_stream_rpc_method_handler(
      servicer.GetPoint
    ),
    'TransferPoint': grpc.stream_unary_rpc_method_handler(
      servicer.TransferPoint
    ),
    'AddAttribute': grpc.stream_unary_rpc_method_handler(
      servicer.AddAttribute
    ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
    'seerep.fb.PointService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import SiLAFramework_pb2
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Get_FCPAffectedByMetadata_AccessToken_Parameters(google.protobuf.message.Message):
    """Parameters for Get_FCPAffectedByMetadata_AccessToken"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___Get_FCPAffectedByMetadata_AccessToken_Parameters = Get_FCPAffectedByMetadata_AccessToken_Parameters

@typing.final
class Get_FCPAffectedByMetadata_AccessToken_Responses(google.protobuf.message.Message):
    """Responses of Get_FCPAffectedByMetadata_AccessToken"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AFFECTEDCALLS_FIELD_NUMBER: builtins.int
    @property
    def AffectedCalls(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[SiLAFramework_pb2.String]:
        """Fully qualified identifiers of all features, commands and properties affected by AccessToken"""

    def __init__(
        self,
        *,
        AffectedCalls: collections.abc.Iterable[SiLAFramework_pb2.String] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["AffectedCalls", b"AffectedCalls"]) -> None: ...

global___Get_FCPAffectedByMetadata_AccessToken_Responses = Get_FCPAffectedByMetadata_AccessToken_Responses

@typing.final
class Metadata_AccessToken(google.protobuf.message.Message):
    """Token to be sent with every call in order to get access to the SiLA Server functionality."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACCESSTOKEN_FIELD_NUMBER: builtins.int
    @property
    def AccessToken(self) -> SiLAFramework_pb2.String:
        """Token to be sent with every call in order to get access to the SiLA Server functionality."""

    def __init__(
        self,
        *,
        AccessToken: SiLAFramework_pb2.String | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["AccessToken", b"AccessToken"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["AccessToken", b"AccessToken"]) -> None: ...

global___Metadata_AccessToken = Metadata_AccessToken

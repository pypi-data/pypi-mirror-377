# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import BinaryTransferTest_pb2 as BinaryTransferTest__pb2
import SiLAFramework_pb2 as SiLAFramework__pb2

GRPC_GENERATED_VERSION = '1.66.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in BinaryTransferTest_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class BinaryTransferTestStub(object):
    """Provides commands and properties to set or respectively get the SiLA Basic Data Type Binary via command parameters or property responses respectively. 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.EchoBinaryValue = channel.unary_unary(
                '/sila2.org.silastandard.test.binarytransfertest.v1.BinaryTransferTest/EchoBinaryValue',
                request_serializer=BinaryTransferTest__pb2.EchoBinaryValue_Parameters.SerializeToString,
                response_deserializer=BinaryTransferTest__pb2.EchoBinaryValue_Responses.FromString,
                _registered_method=True)
        self.EchoBinariesObservably = channel.unary_unary(
                '/sila2.org.silastandard.test.binarytransfertest.v1.BinaryTransferTest/EchoBinariesObservably',
                request_serializer=BinaryTransferTest__pb2.EchoBinariesObservably_Parameters.SerializeToString,
                response_deserializer=SiLAFramework__pb2.CommandConfirmation.FromString,
                _registered_method=True)
        self.EchoBinariesObservably_Info = channel.unary_stream(
                '/sila2.org.silastandard.test.binarytransfertest.v1.BinaryTransferTest/EchoBinariesObservably_Info',
                request_serializer=SiLAFramework__pb2.CommandExecutionUUID.SerializeToString,
                response_deserializer=SiLAFramework__pb2.ExecutionInfo.FromString,
                _registered_method=True)
        self.EchoBinariesObservably_Intermediate = channel.unary_stream(
                '/sila2.org.silastandard.test.binarytransfertest.v1.BinaryTransferTest/EchoBinariesObservably_Intermediate',
                request_serializer=SiLAFramework__pb2.CommandExecutionUUID.SerializeToString,
                response_deserializer=BinaryTransferTest__pb2.EchoBinariesObservably_IntermediateResponses.FromString,
                _registered_method=True)
        self.EchoBinariesObservably_Result = channel.unary_unary(
                '/sila2.org.silastandard.test.binarytransfertest.v1.BinaryTransferTest/EchoBinariesObservably_Result',
                request_serializer=SiLAFramework__pb2.CommandExecutionUUID.SerializeToString,
                response_deserializer=BinaryTransferTest__pb2.EchoBinariesObservably_Responses.FromString,
                _registered_method=True)
        self.EchoBinaryAndMetadataString = channel.unary_unary(
                '/sila2.org.silastandard.test.binarytransfertest.v1.BinaryTransferTest/EchoBinaryAndMetadataString',
                request_serializer=BinaryTransferTest__pb2.EchoBinaryAndMetadataString_Parameters.SerializeToString,
                response_deserializer=BinaryTransferTest__pb2.EchoBinaryAndMetadataString_Responses.FromString,
                _registered_method=True)
        self.Get_BinaryValueDirectly = channel.unary_unary(
                '/sila2.org.silastandard.test.binarytransfertest.v1.BinaryTransferTest/Get_BinaryValueDirectly',
                request_serializer=BinaryTransferTest__pb2.Get_BinaryValueDirectly_Parameters.SerializeToString,
                response_deserializer=BinaryTransferTest__pb2.Get_BinaryValueDirectly_Responses.FromString,
                _registered_method=True)
        self.Get_BinaryValueDownload = channel.unary_unary(
                '/sila2.org.silastandard.test.binarytransfertest.v1.BinaryTransferTest/Get_BinaryValueDownload',
                request_serializer=BinaryTransferTest__pb2.Get_BinaryValueDownload_Parameters.SerializeToString,
                response_deserializer=BinaryTransferTest__pb2.Get_BinaryValueDownload_Responses.FromString,
                _registered_method=True)
        self.Get_FCPAffectedByMetadata_String = channel.unary_unary(
                '/sila2.org.silastandard.test.binarytransfertest.v1.BinaryTransferTest/Get_FCPAffectedByMetadata_String',
                request_serializer=BinaryTransferTest__pb2.Get_FCPAffectedByMetadata_String_Parameters.SerializeToString,
                response_deserializer=BinaryTransferTest__pb2.Get_FCPAffectedByMetadata_String_Responses.FromString,
                _registered_method=True)


class BinaryTransferTestServicer(object):
    """Provides commands and properties to set or respectively get the SiLA Basic Data Type Binary via command parameters or property responses respectively. 
    """

    def EchoBinaryValue(self, request, context):
        """Receives a Binary value (transmitted either directly or via binary transfer) and returns the received value. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EchoBinariesObservably(self, request, context):
        """Receives a list of binaries, echoes them individually as intermediate responses with a delay of 1 second, and then returns them as a single joint binary 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EchoBinariesObservably_Info(self, request, context):
        """Monitor the state of EchoBinariesObservably 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EchoBinariesObservably_Intermediate(self, request, context):
        """Retrieve intermediate responses of EchoBinariesObservably 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EchoBinariesObservably_Result(self, request, context):
        """Retrieve result of EchoBinariesObservably 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EchoBinaryAndMetadataString(self, request, context):
        """Receives a Binary and requires String Metadata, returns both 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_BinaryValueDirectly(self, request, context):
        """Returns the UTF-8 encoded string 'SiLA2_Test_String_Value' directly transmitted as Binary value. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_BinaryValueDownload(self, request, context):
        """
        Returns the Binary Transfer UUID to be used to download the binary data which is the UTF-8 encoded string
        'A_slightly_longer_SiLA2_Test_String_Value_used_to_demonstrate_the_binary_download', repeated 100,000 times.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_FCPAffectedByMetadata_String(self, request, context):
        """Get fully qualified identifiers of all features, commands and properties affected by String 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BinaryTransferTestServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'EchoBinaryValue': grpc.unary_unary_rpc_method_handler(
                    servicer.EchoBinaryValue,
                    request_deserializer=BinaryTransferTest__pb2.EchoBinaryValue_Parameters.FromString,
                    response_serializer=BinaryTransferTest__pb2.EchoBinaryValue_Responses.SerializeToString,
            ),
            'EchoBinariesObservably': grpc.unary_unary_rpc_method_handler(
                    servicer.EchoBinariesObservably,
                    request_deserializer=BinaryTransferTest__pb2.EchoBinariesObservably_Parameters.FromString,
                    response_serializer=SiLAFramework__pb2.CommandConfirmation.SerializeToString,
            ),
            'EchoBinariesObservably_Info': grpc.unary_stream_rpc_method_handler(
                    servicer.EchoBinariesObservably_Info,
                    request_deserializer=SiLAFramework__pb2.CommandExecutionUUID.FromString,
                    response_serializer=SiLAFramework__pb2.ExecutionInfo.SerializeToString,
            ),
            'EchoBinariesObservably_Intermediate': grpc.unary_stream_rpc_method_handler(
                    servicer.EchoBinariesObservably_Intermediate,
                    request_deserializer=SiLAFramework__pb2.CommandExecutionUUID.FromString,
                    response_serializer=BinaryTransferTest__pb2.EchoBinariesObservably_IntermediateResponses.SerializeToString,
            ),
            'EchoBinariesObservably_Result': grpc.unary_unary_rpc_method_handler(
                    servicer.EchoBinariesObservably_Result,
                    request_deserializer=SiLAFramework__pb2.CommandExecutionUUID.FromString,
                    response_serializer=BinaryTransferTest__pb2.EchoBinariesObservably_Responses.SerializeToString,
            ),
            'EchoBinaryAndMetadataString': grpc.unary_unary_rpc_method_handler(
                    servicer.EchoBinaryAndMetadataString,
                    request_deserializer=BinaryTransferTest__pb2.EchoBinaryAndMetadataString_Parameters.FromString,
                    response_serializer=BinaryTransferTest__pb2.EchoBinaryAndMetadataString_Responses.SerializeToString,
            ),
            'Get_BinaryValueDirectly': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_BinaryValueDirectly,
                    request_deserializer=BinaryTransferTest__pb2.Get_BinaryValueDirectly_Parameters.FromString,
                    response_serializer=BinaryTransferTest__pb2.Get_BinaryValueDirectly_Responses.SerializeToString,
            ),
            'Get_BinaryValueDownload': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_BinaryValueDownload,
                    request_deserializer=BinaryTransferTest__pb2.Get_BinaryValueDownload_Parameters.FromString,
                    response_serializer=BinaryTransferTest__pb2.Get_BinaryValueDownload_Responses.SerializeToString,
            ),
            'Get_FCPAffectedByMetadata_String': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_FCPAffectedByMetadata_String,
                    request_deserializer=BinaryTransferTest__pb2.Get_FCPAffectedByMetadata_String_Parameters.FromString,
                    response_serializer=BinaryTransferTest__pb2.Get_FCPAffectedByMetadata_String_Responses.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sila2.org.silastandard.test.binarytransfertest.v1.BinaryTransferTest', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('sila2.org.silastandard.test.binarytransfertest.v1.BinaryTransferTest', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class BinaryTransferTest(object):
    """Provides commands and properties to set or respectively get the SiLA Basic Data Type Binary via command parameters or property responses respectively. 
    """

    @staticmethod
    def EchoBinaryValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sila2.org.silastandard.test.binarytransfertest.v1.BinaryTransferTest/EchoBinaryValue',
            BinaryTransferTest__pb2.EchoBinaryValue_Parameters.SerializeToString,
            BinaryTransferTest__pb2.EchoBinaryValue_Responses.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EchoBinariesObservably(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sila2.org.silastandard.test.binarytransfertest.v1.BinaryTransferTest/EchoBinariesObservably',
            BinaryTransferTest__pb2.EchoBinariesObservably_Parameters.SerializeToString,
            SiLAFramework__pb2.CommandConfirmation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EchoBinariesObservably_Info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/sila2.org.silastandard.test.binarytransfertest.v1.BinaryTransferTest/EchoBinariesObservably_Info',
            SiLAFramework__pb2.CommandExecutionUUID.SerializeToString,
            SiLAFramework__pb2.ExecutionInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EchoBinariesObservably_Intermediate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/sila2.org.silastandard.test.binarytransfertest.v1.BinaryTransferTest/EchoBinariesObservably_Intermediate',
            SiLAFramework__pb2.CommandExecutionUUID.SerializeToString,
            BinaryTransferTest__pb2.EchoBinariesObservably_IntermediateResponses.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EchoBinariesObservably_Result(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sila2.org.silastandard.test.binarytransfertest.v1.BinaryTransferTest/EchoBinariesObservably_Result',
            SiLAFramework__pb2.CommandExecutionUUID.SerializeToString,
            BinaryTransferTest__pb2.EchoBinariesObservably_Responses.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EchoBinaryAndMetadataString(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sila2.org.silastandard.test.binarytransfertest.v1.BinaryTransferTest/EchoBinaryAndMetadataString',
            BinaryTransferTest__pb2.EchoBinaryAndMetadataString_Parameters.SerializeToString,
            BinaryTransferTest__pb2.EchoBinaryAndMetadataString_Responses.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Get_BinaryValueDirectly(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sila2.org.silastandard.test.binarytransfertest.v1.BinaryTransferTest/Get_BinaryValueDirectly',
            BinaryTransferTest__pb2.Get_BinaryValueDirectly_Parameters.SerializeToString,
            BinaryTransferTest__pb2.Get_BinaryValueDirectly_Responses.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Get_BinaryValueDownload(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sila2.org.silastandard.test.binarytransfertest.v1.BinaryTransferTest/Get_BinaryValueDownload',
            BinaryTransferTest__pb2.Get_BinaryValueDownload_Parameters.SerializeToString,
            BinaryTransferTest__pb2.Get_BinaryValueDownload_Responses.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Get_FCPAffectedByMetadata_String(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sila2.org.silastandard.test.binarytransfertest.v1.BinaryTransferTest/Get_FCPAffectedByMetadata_String',
            BinaryTransferTest__pb2.Get_FCPAffectedByMetadata_String_Parameters.SerializeToString,
            BinaryTransferTest__pb2.Get_FCPAffectedByMetadata_String_Responses.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

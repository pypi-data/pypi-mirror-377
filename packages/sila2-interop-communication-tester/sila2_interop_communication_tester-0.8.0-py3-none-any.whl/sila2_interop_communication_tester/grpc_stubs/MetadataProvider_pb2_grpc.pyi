"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import MetadataProvider_pb2
import abc
import collections.abc
import grpc
import grpc.aio
import typing

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class MetadataProviderStub:
    """This feature provides SiLA Client Metadata to the "Metadata Consumer Test" feature."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get_FCPAffectedByMetadata_StringMetadata: grpc.UnaryUnaryMultiCallable[
        MetadataProvider_pb2.Get_FCPAffectedByMetadata_StringMetadata_Parameters,
        MetadataProvider_pb2.Get_FCPAffectedByMetadata_StringMetadata_Responses,
    ]
    """Get fully qualified identifiers of all features, commands and properties affected by StringMetadata"""

    Get_FCPAffectedByMetadata_TwoIntegersMetadata: grpc.UnaryUnaryMultiCallable[
        MetadataProvider_pb2.Get_FCPAffectedByMetadata_TwoIntegersMetadata_Parameters,
        MetadataProvider_pb2.Get_FCPAffectedByMetadata_TwoIntegersMetadata_Responses,
    ]
    """Get fully qualified identifiers of all features, commands and properties affected by TwoIntegersMetadata"""

class MetadataProviderAsyncStub:
    """This feature provides SiLA Client Metadata to the "Metadata Consumer Test" feature."""

    Get_FCPAffectedByMetadata_StringMetadata: grpc.aio.UnaryUnaryMultiCallable[
        MetadataProvider_pb2.Get_FCPAffectedByMetadata_StringMetadata_Parameters,
        MetadataProvider_pb2.Get_FCPAffectedByMetadata_StringMetadata_Responses,
    ]
    """Get fully qualified identifiers of all features, commands and properties affected by StringMetadata"""

    Get_FCPAffectedByMetadata_TwoIntegersMetadata: grpc.aio.UnaryUnaryMultiCallable[
        MetadataProvider_pb2.Get_FCPAffectedByMetadata_TwoIntegersMetadata_Parameters,
        MetadataProvider_pb2.Get_FCPAffectedByMetadata_TwoIntegersMetadata_Responses,
    ]
    """Get fully qualified identifiers of all features, commands and properties affected by TwoIntegersMetadata"""

class MetadataProviderServicer(metaclass=abc.ABCMeta):
    """This feature provides SiLA Client Metadata to the "Metadata Consumer Test" feature."""

    @abc.abstractmethod
    def Get_FCPAffectedByMetadata_StringMetadata(
        self,
        request: MetadataProvider_pb2.Get_FCPAffectedByMetadata_StringMetadata_Parameters,
        context: _ServicerContext,
    ) -> typing.Union[MetadataProvider_pb2.Get_FCPAffectedByMetadata_StringMetadata_Responses, collections.abc.Awaitable[MetadataProvider_pb2.Get_FCPAffectedByMetadata_StringMetadata_Responses]]:
        """Get fully qualified identifiers of all features, commands and properties affected by StringMetadata"""

    @abc.abstractmethod
    def Get_FCPAffectedByMetadata_TwoIntegersMetadata(
        self,
        request: MetadataProvider_pb2.Get_FCPAffectedByMetadata_TwoIntegersMetadata_Parameters,
        context: _ServicerContext,
    ) -> typing.Union[MetadataProvider_pb2.Get_FCPAffectedByMetadata_TwoIntegersMetadata_Responses, collections.abc.Awaitable[MetadataProvider_pb2.Get_FCPAffectedByMetadata_TwoIntegersMetadata_Responses]]:
        """Get fully qualified identifiers of all features, commands and properties affected by TwoIntegersMetadata"""

def add_MetadataProviderServicer_to_server(servicer: MetadataProviderServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

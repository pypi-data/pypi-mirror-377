# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import SiLAService_pb2 as SiLAService__pb2

GRPC_GENERATED_VERSION = '1.66.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in SiLAService_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class SiLAServiceStub(object):
    """This Feature MUST be implemented by each SiLA Server. It specifies Commands and Properties to discover the Features a SiLA Server implements as well as details about the SiLA Server, like name, type, description, vendor and UUID. Any interaction described in this feature MUST not affect the behaviour of any other Feature. 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetFeatureDefinition = channel.unary_unary(
                '/sila2.org.silastandard.core.silaservice.v1.SiLAService/GetFeatureDefinition',
                request_serializer=SiLAService__pb2.GetFeatureDefinition_Parameters.SerializeToString,
                response_deserializer=SiLAService__pb2.GetFeatureDefinition_Responses.FromString,
                _registered_method=True)
        self.SetServerName = channel.unary_unary(
                '/sila2.org.silastandard.core.silaservice.v1.SiLAService/SetServerName',
                request_serializer=SiLAService__pb2.SetServerName_Parameters.SerializeToString,
                response_deserializer=SiLAService__pb2.SetServerName_Responses.FromString,
                _registered_method=True)
        self.Get_ServerName = channel.unary_unary(
                '/sila2.org.silastandard.core.silaservice.v1.SiLAService/Get_ServerName',
                request_serializer=SiLAService__pb2.Get_ServerName_Parameters.SerializeToString,
                response_deserializer=SiLAService__pb2.Get_ServerName_Responses.FromString,
                _registered_method=True)
        self.Get_ServerType = channel.unary_unary(
                '/sila2.org.silastandard.core.silaservice.v1.SiLAService/Get_ServerType',
                request_serializer=SiLAService__pb2.Get_ServerType_Parameters.SerializeToString,
                response_deserializer=SiLAService__pb2.Get_ServerType_Responses.FromString,
                _registered_method=True)
        self.Get_ServerUUID = channel.unary_unary(
                '/sila2.org.silastandard.core.silaservice.v1.SiLAService/Get_ServerUUID',
                request_serializer=SiLAService__pb2.Get_ServerUUID_Parameters.SerializeToString,
                response_deserializer=SiLAService__pb2.Get_ServerUUID_Responses.FromString,
                _registered_method=True)
        self.Get_ServerDescription = channel.unary_unary(
                '/sila2.org.silastandard.core.silaservice.v1.SiLAService/Get_ServerDescription',
                request_serializer=SiLAService__pb2.Get_ServerDescription_Parameters.SerializeToString,
                response_deserializer=SiLAService__pb2.Get_ServerDescription_Responses.FromString,
                _registered_method=True)
        self.Get_ServerVersion = channel.unary_unary(
                '/sila2.org.silastandard.core.silaservice.v1.SiLAService/Get_ServerVersion',
                request_serializer=SiLAService__pb2.Get_ServerVersion_Parameters.SerializeToString,
                response_deserializer=SiLAService__pb2.Get_ServerVersion_Responses.FromString,
                _registered_method=True)
        self.Get_ServerVendorURL = channel.unary_unary(
                '/sila2.org.silastandard.core.silaservice.v1.SiLAService/Get_ServerVendorURL',
                request_serializer=SiLAService__pb2.Get_ServerVendorURL_Parameters.SerializeToString,
                response_deserializer=SiLAService__pb2.Get_ServerVendorURL_Responses.FromString,
                _registered_method=True)
        self.Get_ImplementedFeatures = channel.unary_unary(
                '/sila2.org.silastandard.core.silaservice.v1.SiLAService/Get_ImplementedFeatures',
                request_serializer=SiLAService__pb2.Get_ImplementedFeatures_Parameters.SerializeToString,
                response_deserializer=SiLAService__pb2.Get_ImplementedFeatures_Responses.FromString,
                _registered_method=True)


class SiLAServiceServicer(object):
    """This Feature MUST be implemented by each SiLA Server. It specifies Commands and Properties to discover the Features a SiLA Server implements as well as details about the SiLA Server, like name, type, description, vendor and UUID. Any interaction described in this feature MUST not affect the behaviour of any other Feature. 
    """

    def GetFeatureDefinition(self, request, context):
        """Get the Feature Definition of an implemented Feature by its fully qualified Feature Identifier. This command has no preconditions and no further dependencies and can be called at any time. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetServerName(self, request, context):
        """Sets a human readable name to the Server Name Property.Command has no preconditions and no further dependencies and can be called at any time. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_ServerName(self, request, context):
        """
        Human readable name of the SiLA Server. The name can be set using the 'Set Server Name' command.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_ServerType(self, request, context):
        """
        The type of this server. It, could be, e.g., in the case of a SiLA Device the model name.
        It is specified by the implementer of the SiLA Server and MAY not be unique.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_ServerUUID(self, request, context):
        """
        Globally unique identifier that identifies a SiLA Server. The Server UUID MUST be generated once
        and remain the same for all times.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_ServerDescription(self, request, context):
        """
        Description of the SiLA Server. This should include the use and purpose of this SiLA Server.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_ServerVersion(self, request, context):
        """
        Returns the version of the SiLA Server. A "Major" and a "Minor" version number (e.g. 1.0) MUST be provided,
        a Patch version number MAY be provided. Optionally, an arbitrary text, separated by an underscore MAY be
        appended, e.g. “3.19.373_mighty_lab_devices”.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_ServerVendorURL(self, request, context):
        """
        Returns the URL to the website of the vendor or the website of the product of this SiLA Server.
        This URL SHOULD be accessible at all times.
        The URL is a Uniform Resource Locator as defined in RFC 1738.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get_ImplementedFeatures(self, request, context):
        """
        Returns a list of fully qualified Feature identifiers of all implemented Features of this SiLA Server.
        This list SHOULD remain the same throughout the lifetime of the SiLA Server.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SiLAServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetFeatureDefinition': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFeatureDefinition,
                    request_deserializer=SiLAService__pb2.GetFeatureDefinition_Parameters.FromString,
                    response_serializer=SiLAService__pb2.GetFeatureDefinition_Responses.SerializeToString,
            ),
            'SetServerName': grpc.unary_unary_rpc_method_handler(
                    servicer.SetServerName,
                    request_deserializer=SiLAService__pb2.SetServerName_Parameters.FromString,
                    response_serializer=SiLAService__pb2.SetServerName_Responses.SerializeToString,
            ),
            'Get_ServerName': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_ServerName,
                    request_deserializer=SiLAService__pb2.Get_ServerName_Parameters.FromString,
                    response_serializer=SiLAService__pb2.Get_ServerName_Responses.SerializeToString,
            ),
            'Get_ServerType': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_ServerType,
                    request_deserializer=SiLAService__pb2.Get_ServerType_Parameters.FromString,
                    response_serializer=SiLAService__pb2.Get_ServerType_Responses.SerializeToString,
            ),
            'Get_ServerUUID': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_ServerUUID,
                    request_deserializer=SiLAService__pb2.Get_ServerUUID_Parameters.FromString,
                    response_serializer=SiLAService__pb2.Get_ServerUUID_Responses.SerializeToString,
            ),
            'Get_ServerDescription': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_ServerDescription,
                    request_deserializer=SiLAService__pb2.Get_ServerDescription_Parameters.FromString,
                    response_serializer=SiLAService__pb2.Get_ServerDescription_Responses.SerializeToString,
            ),
            'Get_ServerVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_ServerVersion,
                    request_deserializer=SiLAService__pb2.Get_ServerVersion_Parameters.FromString,
                    response_serializer=SiLAService__pb2.Get_ServerVersion_Responses.SerializeToString,
            ),
            'Get_ServerVendorURL': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_ServerVendorURL,
                    request_deserializer=SiLAService__pb2.Get_ServerVendorURL_Parameters.FromString,
                    response_serializer=SiLAService__pb2.Get_ServerVendorURL_Responses.SerializeToString,
            ),
            'Get_ImplementedFeatures': grpc.unary_unary_rpc_method_handler(
                    servicer.Get_ImplementedFeatures,
                    request_deserializer=SiLAService__pb2.Get_ImplementedFeatures_Parameters.FromString,
                    response_serializer=SiLAService__pb2.Get_ImplementedFeatures_Responses.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sila2.org.silastandard.core.silaservice.v1.SiLAService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('sila2.org.silastandard.core.silaservice.v1.SiLAService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class SiLAService(object):
    """This Feature MUST be implemented by each SiLA Server. It specifies Commands and Properties to discover the Features a SiLA Server implements as well as details about the SiLA Server, like name, type, description, vendor and UUID. Any interaction described in this feature MUST not affect the behaviour of any other Feature. 
    """

    @staticmethod
    def GetFeatureDefinition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sila2.org.silastandard.core.silaservice.v1.SiLAService/GetFeatureDefinition',
            SiLAService__pb2.GetFeatureDefinition_Parameters.SerializeToString,
            SiLAService__pb2.GetFeatureDefinition_Responses.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetServerName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sila2.org.silastandard.core.silaservice.v1.SiLAService/SetServerName',
            SiLAService__pb2.SetServerName_Parameters.SerializeToString,
            SiLAService__pb2.SetServerName_Responses.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Get_ServerName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sila2.org.silastandard.core.silaservice.v1.SiLAService/Get_ServerName',
            SiLAService__pb2.Get_ServerName_Parameters.SerializeToString,
            SiLAService__pb2.Get_ServerName_Responses.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Get_ServerType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sila2.org.silastandard.core.silaservice.v1.SiLAService/Get_ServerType',
            SiLAService__pb2.Get_ServerType_Parameters.SerializeToString,
            SiLAService__pb2.Get_ServerType_Responses.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Get_ServerUUID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sila2.org.silastandard.core.silaservice.v1.SiLAService/Get_ServerUUID',
            SiLAService__pb2.Get_ServerUUID_Parameters.SerializeToString,
            SiLAService__pb2.Get_ServerUUID_Responses.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Get_ServerDescription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sila2.org.silastandard.core.silaservice.v1.SiLAService/Get_ServerDescription',
            SiLAService__pb2.Get_ServerDescription_Parameters.SerializeToString,
            SiLAService__pb2.Get_ServerDescription_Responses.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Get_ServerVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sila2.org.silastandard.core.silaservice.v1.SiLAService/Get_ServerVersion',
            SiLAService__pb2.Get_ServerVersion_Parameters.SerializeToString,
            SiLAService__pb2.Get_ServerVersion_Responses.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Get_ServerVendorURL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sila2.org.silastandard.core.silaservice.v1.SiLAService/Get_ServerVendorURL',
            SiLAService__pb2.Get_ServerVendorURL_Parameters.SerializeToString,
            SiLAService__pb2.Get_ServerVendorURL_Responses.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Get_ImplementedFeatures(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sila2.org.silastandard.core.silaservice.v1.SiLAService/Get_ImplementedFeatures',
            SiLAService__pb2.Get_ImplementedFeatures_Parameters.SerializeToString,
            SiLAService__pb2.Get_ImplementedFeatures_Responses.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

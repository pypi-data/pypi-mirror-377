"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import UnobservablePropertyTest_pb2
import abc
import collections.abc
import grpc
import grpc.aio
import typing

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class UnobservablePropertyTestStub:
    """This feature tests a static and a dynamic unobservable property."""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Get_AnswerToEverything: grpc.UnaryUnaryMultiCallable[
        UnobservablePropertyTest_pb2.Get_AnswerToEverything_Parameters,
        UnobservablePropertyTest_pb2.Get_AnswerToEverything_Responses,
    ]
    """Returns the answer to the ultimate question of life, the universe, and everything. 42."""

    Get_SecondsSince1970: grpc.UnaryUnaryMultiCallable[
        UnobservablePropertyTest_pb2.Get_SecondsSince1970_Parameters,
        UnobservablePropertyTest_pb2.Get_SecondsSince1970_Responses,
    ]
    """Returns the unix timestamp: The time in seconds since January 1st of 1970."""

class UnobservablePropertyTestAsyncStub:
    """This feature tests a static and a dynamic unobservable property."""

    Get_AnswerToEverything: grpc.aio.UnaryUnaryMultiCallable[
        UnobservablePropertyTest_pb2.Get_AnswerToEverything_Parameters,
        UnobservablePropertyTest_pb2.Get_AnswerToEverything_Responses,
    ]
    """Returns the answer to the ultimate question of life, the universe, and everything. 42."""

    Get_SecondsSince1970: grpc.aio.UnaryUnaryMultiCallable[
        UnobservablePropertyTest_pb2.Get_SecondsSince1970_Parameters,
        UnobservablePropertyTest_pb2.Get_SecondsSince1970_Responses,
    ]
    """Returns the unix timestamp: The time in seconds since January 1st of 1970."""

class UnobservablePropertyTestServicer(metaclass=abc.ABCMeta):
    """This feature tests a static and a dynamic unobservable property."""

    @abc.abstractmethod
    def Get_AnswerToEverything(
        self,
        request: UnobservablePropertyTest_pb2.Get_AnswerToEverything_Parameters,
        context: _ServicerContext,
    ) -> typing.Union[UnobservablePropertyTest_pb2.Get_AnswerToEverything_Responses, collections.abc.Awaitable[UnobservablePropertyTest_pb2.Get_AnswerToEverything_Responses]]:
        """Returns the answer to the ultimate question of life, the universe, and everything. 42."""

    @abc.abstractmethod
    def Get_SecondsSince1970(
        self,
        request: UnobservablePropertyTest_pb2.Get_SecondsSince1970_Parameters,
        context: _ServicerContext,
    ) -> typing.Union[UnobservablePropertyTest_pb2.Get_SecondsSince1970_Responses, collections.abc.Awaitable[UnobservablePropertyTest_pb2.Get_SecondsSince1970_Responses]]:
        """Returns the unix timestamp: The time in seconds since January 1st of 1970."""

def add_UnobservablePropertyTestServicer_to_server(servicer: UnobservablePropertyTestServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...

"""
@generated by mypy-protobuf.  Do not edit manually!
"""
import abc
import typing

import grpc

from .SiLABinaryTransfer_pb2 import *

class BinaryUploadStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    CreateBinary: grpc.UnaryUnaryMultiCallable[global___CreateBinaryRequest, global___CreateBinaryResponse] = ...

    UploadChunk: grpc.StreamStreamMultiCallable[global___UploadChunkRequest, global___UploadChunkResponse] = ...

    DeleteBinary: grpc.UnaryUnaryMultiCallable[global___DeleteBinaryRequest, global___DeleteBinaryResponse] = ...

class BinaryUploadServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def CreateBinary(
        self,
        request: global___CreateBinaryRequest,
        context: grpc.ServicerContext,
    ) -> global___CreateBinaryResponse: ...
    @abc.abstractmethod
    def UploadChunk(
        self,
        request: typing.Iterator[global___UploadChunkRequest],
        context: grpc.ServicerContext,
    ) -> typing.Iterator[global___UploadChunkResponse]: ...
    @abc.abstractmethod
    def DeleteBinary(
        self,
        request: global___DeleteBinaryRequest,
        context: grpc.ServicerContext,
    ) -> global___DeleteBinaryResponse: ...

def add_BinaryUploadServicer_to_server(servicer: BinaryUploadServicer, server: grpc.Server) -> None: ...

class BinaryDownloadStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    GetBinaryInfo: grpc.UnaryUnaryMultiCallable[global___GetBinaryInfoRequest, global___GetBinaryInfoResponse] = ...

    GetChunk: grpc.StreamStreamMultiCallable[global___GetChunkRequest, global___GetChunkResponse] = ...

    DeleteBinary: grpc.UnaryUnaryMultiCallable[global___DeleteBinaryRequest, global___DeleteBinaryResponse] = ...

class BinaryDownloadServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def GetBinaryInfo(
        self,
        request: global___GetBinaryInfoRequest,
        context: grpc.ServicerContext,
    ) -> global___GetBinaryInfoResponse: ...
    @abc.abstractmethod
    def GetChunk(
        self,
        request: typing.Iterator[global___GetChunkRequest],
        context: grpc.ServicerContext,
    ) -> typing.Iterator[global___GetChunkResponse]: ...
    @abc.abstractmethod
    def DeleteBinary(
        self,
        request: global___DeleteBinaryRequest,
        context: grpc.ServicerContext,
    ) -> global___DeleteBinaryResponse: ...

def add_BinaryDownloadServicer_to_server(servicer: BinaryDownloadServicer, server: grpc.Server) -> None: ...

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["splurge_lazyframe_compare*"]
exclude = ["tests*", "examples*", "plans*", "docs*"]

[project]
name = "splurge-lazyframe-compare"
version = "2025.3.0"
description = "A Python package for comparing splurge and lazyframe functionality"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Jim Schilling"}
]
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
keywords = ["splurge", "lazyframe", "compare", "polars", "dataframe", "comparison"]
urls = {Homepage = "https://github.com/jim-schilling/splurge-lazyframe-compare"}

dependencies = [
    "polars>=1.32.0",
    "tabulate>=0.9.0",
]

[project.scripts]
slc = "splurge_lazyframe_compare.cli:main"
splurge-lazyframe-compare = "splurge_lazyframe_compare.cli:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "ruff>=0.1.0",
    "pre-commit>=2.20.0",
    "mypy>=1.0.0",
]

[tool.ruff]
target-version = "py310"
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by line-length
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
addopts = "-x -v -n auto --cov=splurge_lazyframe_compare --cov-report=term-missing"
testpaths = ["tests/unit", "tests/integration"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
markers = [
    "perf: performance smoke tests (deselect with -m 'not perf')",
]

[tool.coverage.run]
source = ["splurge_lazyframe_compare"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

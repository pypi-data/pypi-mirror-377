# BSD 3-Clause License
#
# Copyright (c) 2025, Shahriar Rezghi <shahriar.rezghi.sh@gmail.com>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

@PACKAGE_INIT@
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}")
include(CMakeFindDependencyMacro)

if(DEFINED CACHE{BLASW_BACKEND_STATIC} AND NOT BLASW_BACKEND_STATIC STREQUAL "")
  if(BLASW_BACKEND_STATIC STREQUAL "ON" OR BLASW_BACKEND_STATIC)
    if(NOT DEFINED CACHE{BLA_STATIC})
      set(BLA_STATIC ON CACHE BOOL "Use static BLAS libraries")
    endif()
    if(NOT DEFINED CACHE{MKL_LINK})
      set(MKL_LINK static CACHE STRING "MKL linking type (static/dynamic)")
    endif()
  elseif(BLASW_BACKEND_STATIC STREQUAL "OFF")
    if(NOT DEFINED CACHE{BLA_STATIC})
      set(BLA_STATIC OFF CACHE BOOL "Use static BLAS libraries")
    endif()
    if(NOT DEFINED CACHE{MKL_LINK})
      set(MKL_LINK dynamic CACHE STRING "MKL linking type (static/dynamic)")
    endif()
  else()
    message(WARNING "BLASW_BACKEND_STATIC set to '${BLASW_BACKEND_STATIC}' (expected ON/OFF). Ignoring.")
  endif()
endif()

if(DEFINED CACHE{BLASW_BACKEND_ROOT} AND BLASW_BACKEND_ROOT)
  if(NOT DEFINED CACHE{BLAS_ROOT})
    set(BLAS_ROOT "${BLASW_BACKEND_ROOT}" CACHE PATH "BLAS root directory")
  endif()
  if(NOT DEFINED CACHE{MKL_ROOT})
    set(MKL_ROOT "${BLASW_BACKEND_ROOT}" CACHE PATH "MKL root directory")
  endif()
endif()

if(DEFINED CACHE{BLASW_BACKEND_PROVIDER} AND NOT BLASW_BACKEND_PROVIDER STREQUAL "")
  string(TOLOWER "${BLASW_BACKEND_PROVIDER}" _blasw_provider_lc)
  string(REGEX MATCH "^mkl-([^-]+)-([^-]+)-([^-]+)$" _is_mkl "${_blasw_provider_lc}")

  if(_is_mkl)
    if(NOT DEFINED CACHE{MKL_ARCH})
      set(MKL_ARCH "${CMAKE_MATCH_1}" CACHE STRING "MKL architecture")
    endif()
    if(NOT DEFINED CACHE{MKL_INTERFACE})
      set(MKL_INTERFACE "${CMAKE_MATCH_2}" CACHE STRING "MKL interface (lp64/ilp64)")
    endif()
    if(NOT DEFINED CACHE{MKL_THREADING})
      set(MKL_THREADING "${CMAKE_MATCH_3}" CACHE STRING "MKL threading (sequential/intel_thread/tbb_thread)")
    endif()
  else()
    if(NOT DEFINED CACHE{BLA_VENDOR})
      set(BLA_VENDOR "${BLASW_BACKEND_PROVIDER}" CACHE STRING "Preferred BLAS vendor")
    endif()
  endif()
endif()

find_dependency(CBLAS REQUIRED)
# LAPACKE is optional: only find it so the imported target exists if available
find_dependency(LAPACKE QUIET)

if(NOT TARGET BLASW::BLASW)
  include("${CMAKE_CURRENT_LIST_DIR}/BLASWTargets.cmake")
endif()

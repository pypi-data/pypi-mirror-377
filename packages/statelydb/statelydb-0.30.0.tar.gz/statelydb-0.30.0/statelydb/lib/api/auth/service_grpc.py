# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: auth/service.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

from . import get_auth_token_pb2
from . import service_pb2


class AuthServiceBase(abc.ABC):

    @abc.abstractmethod
    async def GetAuthToken(self, stream: 'grpclib.server.Stream[get_auth_token_pb2.GetAuthTokenRequest, get_auth_token_pb2.GetAuthTokenResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/stately.auth.AuthService/GetAuthToken': grpclib.const.Handler(
                self.GetAuthToken,
                grpclib.const.Cardinality.UNARY_UNARY,
                get_auth_token_pb2.GetAuthTokenRequest,
                get_auth_token_pb2.GetAuthTokenResponse,
            ),
        }


class AuthServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.GetAuthToken = grpclib.client.UnaryUnaryMethod(
            channel,
            '/stately.auth.AuthService/GetAuthToken',
            get_auth_token_pb2.GetAuthTokenRequest,
            get_auth_token_pb2.GetAuthTokenResponse,
        )

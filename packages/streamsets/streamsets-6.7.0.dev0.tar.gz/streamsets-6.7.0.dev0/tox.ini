[tox]
verbosity = 2
color = true
envlist = unit-37, unit-38, unit-39, integration-37, integration-38, integration-39, docs

[testenv]
deps = pytest
       pytest-cov
       pytest-mock
       coverage

[testenv:unit]
commands = pytest -v --disable-warnings --cov=streamsets/sdk tests/unit

[testenv:integration]
commands = python -m pytest -v --cov=streamsets/sdk --disable-warnings --sch-credential-id={env:SCH_CREDENTIAL_ID} --sch-token={env:SCH_TOKEN} --sdc-version={env:SDC_VERSION} --transformer-version={env:TRANSFORMER_VERSION} --aster-url={env:ASTER_URL} tests/integration

[testenv:unit-37]
basepython = python3.7
commands = pytest -v --cov=streamsets/sdk --cov-report xml:coverage_unit_37.xml --junitxml results_unit_37.xml --disable-warnings tests/unit

[testenv:unit-38]
basepython = py38
commands = pytest -v --cov=streamsets/sdk --cov-report xml:coverage_unit_38.xml --junitxml results_unit_38.xml --disable-warnings tests/unit

[testenv:unit-39]
basepython = py39
commands = pytest -v --cov=streamsets/sdk --cov-report xml:coverage_unit_39.xml --junitxml results_unit_39.xml --disable-warnings tests/unit

[testenv:integration-37]
basepython = python3.7
commands = python -m pytest -v --cov=streamsets/sdk --cov-report xml:coverage_integration_37.xml --junitxml results_integration_37.xml --disable-warnings --sch-credential-id={env:SCH_CREDENTIAL_ID} --sch-token={env:SCH_TOKEN} --sdc-version={env:SDC_VERSION} --transformer-version={env:TRANSFORMER_VERSION} --aster-url={env:ASTER_URL} --aws-key-id={env:AWS_ACCESS_KEY_ID} --aws-access-key={env:AWS_SECRET_ACCESS_KEY} --environment-region={env:REGION} --vpc-id={env:VPC_ID} --aws-subnet-ids={env:SUBNET_IDS} --aws-security-group-id={env:SECURITY_GROUP_ID}  --instance-profile={env:INSTANCE_PROFILE} tests/integration

[testenv:integration-38]
basepython = py38
commands = python -m pytest -v --cov=streamsets/sdk --junitxml results_integration_38.xml --disable-warnings --sch-credential-id={env:SCH_CREDENTIAL_ID} --sch-token={env:SCH_TOKEN} --sdc-version={env:SDC_VERSION} --transformer-version={env:TRANSFORMER_VERSION} --aster-url={env:ASTER_URL} --aws-key-id={env:AWS_ACCESS_KEY_ID} --aws-access-key={env:AWS_SECRET_ACCESS_KEY} --environment-region={env:REGION} --vpc-id={env:VPC_ID} --aws-subnet-ids={env:SUBNET_IDS} --aws-security-group-id={env:SECURITY_GROUP_ID}  --instance-profile={env:INSTANCE_PROFILE} tests/integration

[testenv:integration-39]
basepython = py39
commands = python -m pytest -v --cov=streamsets/sdk --junitxml results_integration_39.xml --disable-warnings --sch-credential-id={env:SCH_CREDENTIAL_ID} --sch-token={env:SCH_TOKEN} --sdc-version={env:SDC_VERSION} --transformer-version={env:TRANSFORMER_VERSION} --aster-url={env:ASTER_URL} --aws-key-id={env:AWS_ACCESS_KEY_ID} --aws-access-key={env:AWS_SECRET_ACCESS_KEY} --environment-region={env:REGION} --vpc-id={env:VPC_ID} --aws-subnet-ids={env:SUBNET_IDS} --aws-security-group-id={env:SECURITY_GROUP_ID}  --instance-profile={env:INSTANCE_PROFILE} tests/integration

[testenv:format]
deps = black
       isort
       flake8
commands = black --config=evergreen/pyproject.toml streamsets/sdk
           isort --settings-path=evergreen/pyproject.toml streamsets/sdk
           flake8 --config=evergreen/.flake8 streamsets/sdk

[testenv:docs]
deps = -rdocs/requirements.txt
commands = sphinx-build -b html -d .sphinx-build docs html

[project]
name = "synthetic-data-mcp"
version = "0.1.1"
description = "Domain-specific synthetic data generation MCP server for healthcare and finance compliance"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    {name = "Marc Shade", email = "marc@2acrestudios.com"}
]
license = {text = "MIT"}
keywords = ["synthetic-data", "mcp", "healthcare", "finance", "compliance", "privacy"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Financial and Insurance Industry",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Security :: Cryptography",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    "fastmcp>=0.1.0",
    "fastapi>=0.104.0",
    "dspy-ai>=2.4.0",
    "pydantic>=2.5.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scipy>=1.10.0",
    "scikit-learn>=1.3.0",
    "cryptography>=41.0.0",
    "python-dateutil>=2.8.0",
    "faker>=19.0.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "pyjwt>=2.8.0",
    "httpx>=0.25.0",
    "requests>=2.31.0",
    "loguru>=0.7.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "aiofiles>=23.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "black>=24.8.0",
    "isort>=5.13.0",
    "flake8>=7.1.0",
    "mypy>=1.13.0",
    "pre-commit>=4.0.0",
    "ruff>=0.7.0",
]

healthcare = [
    "python-hl7>=0.4.0",
    "fhir-py>=0.2.0",
    "pydicom>=2.4.0",
]

finance = [
    "yfinance>=0.2.0",
    "fredapi>=0.5.0",
    "quantlib>=1.31.0",
]

performance = [
    "numba>=0.58.0",
    "dask>=2023.9.0",
    "ray>=2.7.0",
]

[project.urls]
Homepage = "https://github.com/marc-shade/synthetic-data-mcp"
Documentation = "https://synthetic-data-mcp.readthedocs.io"
Repository = "https://github.com/marc-shade/synthetic-data-mcp"
Issues = "https://github.com/marc-shade/synthetic-data-mcp/issues"

[project.scripts]
synthetic-data-mcp = "synthetic_data_mcp.cli:app"

[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["synthetic_data_mcp"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=synthetic_data_mcp",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html:htmlcov",
    "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "compliance: marks tests as compliance validation tests",
    "privacy: marks tests as privacy protection tests",
]
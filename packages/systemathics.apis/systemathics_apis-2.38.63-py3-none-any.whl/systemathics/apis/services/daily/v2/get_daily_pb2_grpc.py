# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from systemathics.apis.services.daily.v2 import get_daily_pb2 as systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2


class DailyServiceStub(object):
    """Called to request daily prices data. 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DailyScalarStream = channel.unary_stream(
                '/systemathics.apis.services.daily.v2.DailyService/DailyScalarStream',
                request_serializer=systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyRequest.SerializeToString,
                response_deserializer=systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyScalarStreamResponse.FromString,
                )
        self.DailyVectorStream = channel.unary_stream(
                '/systemathics.apis.services.daily.v2.DailyService/DailyVectorStream',
                request_serializer=systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyRequest.SerializeToString,
                response_deserializer=systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyVectorStreamResponse.FromString,
                )
        self.DailyVectorKeyStream = channel.unary_stream(
                '/systemathics.apis.services.daily.v2.DailyService/DailyVectorKeyStream',
                request_serializer=systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyVectorKeyRequest.SerializeToString,
                response_deserializer=systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyVectorStreamResponse.FromString,
                )
        self.DailyFields = channel.unary_unary(
                '/systemathics.apis.services.daily.v2.DailyService/DailyFields',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyFieldsResponse.FromString,
                )
        self.DailyAssetProviders = channel.unary_unary(
                '/systemathics.apis.services.daily.v2.DailyService/DailyAssetProviders',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyAssetProvidersResponse.FromString,
                )


class DailyServiceServicer(object):
    """Called to request daily prices data. 
    """

    def DailyScalarStream(self, request, context):
        """Gets daily historical data timeseries by identifier using streaming
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DailyVectorStream(self, request, context):
        """Gets daily historical data timeseries by identifier using streaming
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DailyVectorKeyStream(self, request, context):
        """Gets daily historical data timeseries by identifier and key using streaming
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DailyFields(self, request, context):
        """Gets all available fields by asset and provider.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DailyAssetProviders(self, request, context):
        """Gets all available provider by asset
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DailyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DailyScalarStream': grpc.unary_stream_rpc_method_handler(
                    servicer.DailyScalarStream,
                    request_deserializer=systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyRequest.FromString,
                    response_serializer=systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyScalarStreamResponse.SerializeToString,
            ),
            'DailyVectorStream': grpc.unary_stream_rpc_method_handler(
                    servicer.DailyVectorStream,
                    request_deserializer=systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyRequest.FromString,
                    response_serializer=systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyVectorStreamResponse.SerializeToString,
            ),
            'DailyVectorKeyStream': grpc.unary_stream_rpc_method_handler(
                    servicer.DailyVectorKeyStream,
                    request_deserializer=systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyVectorKeyRequest.FromString,
                    response_serializer=systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyVectorStreamResponse.SerializeToString,
            ),
            'DailyFields': grpc.unary_unary_rpc_method_handler(
                    servicer.DailyFields,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyFieldsResponse.SerializeToString,
            ),
            'DailyAssetProviders': grpc.unary_unary_rpc_method_handler(
                    servicer.DailyAssetProviders,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyAssetProvidersResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'systemathics.apis.services.daily.v2.DailyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DailyService(object):
    """Called to request daily prices data. 
    """

    @staticmethod
    def DailyScalarStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/systemathics.apis.services.daily.v2.DailyService/DailyScalarStream',
            systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyRequest.SerializeToString,
            systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyScalarStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DailyVectorStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/systemathics.apis.services.daily.v2.DailyService/DailyVectorStream',
            systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyRequest.SerializeToString,
            systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyVectorStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DailyVectorKeyStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/systemathics.apis.services.daily.v2.DailyService/DailyVectorKeyStream',
            systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyVectorKeyRequest.SerializeToString,
            systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyVectorStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DailyFields(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/systemathics.apis.services.daily.v2.DailyService/DailyFields',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyFieldsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DailyAssetProviders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/systemathics.apis.services.daily.v2.DailyService/DailyAssetProviders',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            systemathics_dot_apis_dot_services_dot_daily_dot_v2_dot_get__daily__pb2.DailyAssetProvidersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

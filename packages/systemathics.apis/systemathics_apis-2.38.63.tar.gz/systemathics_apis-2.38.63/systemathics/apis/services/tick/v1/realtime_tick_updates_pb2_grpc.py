# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from systemathics.apis.services.tick.v1 import realtime_tick_updates_pb2 as systemathics_dot_apis_dot_services_dot_tick_dot_v1_dot_realtime__tick__updates__pb2


class RealtimeTickUpdatesServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RealtimeTickUpdates = channel.unary_stream(
                '/systemathics.apis.services.tick.v1.RealtimeTickUpdatesService/RealtimeTickUpdates',
                request_serializer=systemathics_dot_apis_dot_services_dot_tick_dot_v1_dot_realtime__tick__updates__pb2.RealtimeTickUpdatesServiceRequest.SerializeToString,
                response_deserializer=systemathics_dot_apis_dot_services_dot_tick_dot_v1_dot_realtime__tick__updates__pb2.RealtimeTickUpdatesServiceResponse.FromString,
                )


class RealtimeTickUpdatesServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RealtimeTickUpdates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RealtimeTickUpdatesServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RealtimeTickUpdates': grpc.unary_stream_rpc_method_handler(
                    servicer.RealtimeTickUpdates,
                    request_deserializer=systemathics_dot_apis_dot_services_dot_tick_dot_v1_dot_realtime__tick__updates__pb2.RealtimeTickUpdatesServiceRequest.FromString,
                    response_serializer=systemathics_dot_apis_dot_services_dot_tick_dot_v1_dot_realtime__tick__updates__pb2.RealtimeTickUpdatesServiceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'systemathics.apis.services.tick.v1.RealtimeTickUpdatesService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RealtimeTickUpdatesService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RealtimeTickUpdates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/systemathics.apis.services.tick.v1.RealtimeTickUpdatesService/RealtimeTickUpdates',
            systemathics_dot_apis_dot_services_dot_tick_dot_v1_dot_realtime__tick__updates__pb2.RealtimeTickUpdatesServiceRequest.SerializeToString,
            systemathics_dot_apis_dot_services_dot_tick_dot_v1_dot_realtime__tick__updates__pb2.RealtimeTickUpdatesServiceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

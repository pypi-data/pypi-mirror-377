# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from systemathics.apis.services.tick.v2 import get_tick_pb2 as systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2


class TickServiceStub(object):
    """Called to request tick prices data. 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TickScalarStream = channel.unary_stream(
                '/systemathics.apis.services.tick.v2.TickService/TickScalarStream',
                request_serializer=systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickRequest.SerializeToString,
                response_deserializer=systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickScalarStreamResponse.FromString,
                )
        self.TickVectorStream = channel.unary_stream(
                '/systemathics.apis.services.tick.v2.TickService/TickVectorStream',
                request_serializer=systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickRequest.SerializeToString,
                response_deserializer=systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickVectorStreamResponse.FromString,
                )
        self.TickVectorKeyStream = channel.unary_stream(
                '/systemathics.apis.services.tick.v2.TickService/TickVectorKeyStream',
                request_serializer=systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickVectorKeyRequest.SerializeToString,
                response_deserializer=systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickVectorStreamResponse.FromString,
                )
        self.TickFields = channel.unary_unary(
                '/systemathics.apis.services.tick.v2.TickService/TickFields',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickFieldsResponse.FromString,
                )
        self.TickAssetProviders = channel.unary_unary(
                '/systemathics.apis.services.tick.v2.TickService/TickAssetProviders',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickAssetProvidersResponse.FromString,
                )


class TickServiceServicer(object):
    """Called to request tick prices data. 
    """

    def TickScalarStream(self, request, context):
        """Gets tick historical data timeseries by identifier using streaming
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TickVectorStream(self, request, context):
        """Gets tick historical data timeseries by identifier using streaming
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TickVectorKeyStream(self, request, context):
        """Gets tick historical data timeseries by identifier and key using streaming
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TickFields(self, request, context):
        """Gets all available fields by asset and provider.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TickAssetProviders(self, request, context):
        """Gets all available provider by asset
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TickServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TickScalarStream': grpc.unary_stream_rpc_method_handler(
                    servicer.TickScalarStream,
                    request_deserializer=systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickRequest.FromString,
                    response_serializer=systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickScalarStreamResponse.SerializeToString,
            ),
            'TickVectorStream': grpc.unary_stream_rpc_method_handler(
                    servicer.TickVectorStream,
                    request_deserializer=systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickRequest.FromString,
                    response_serializer=systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickVectorStreamResponse.SerializeToString,
            ),
            'TickVectorKeyStream': grpc.unary_stream_rpc_method_handler(
                    servicer.TickVectorKeyStream,
                    request_deserializer=systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickVectorKeyRequest.FromString,
                    response_serializer=systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickVectorStreamResponse.SerializeToString,
            ),
            'TickFields': grpc.unary_unary_rpc_method_handler(
                    servicer.TickFields,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickFieldsResponse.SerializeToString,
            ),
            'TickAssetProviders': grpc.unary_unary_rpc_method_handler(
                    servicer.TickAssetProviders,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickAssetProvidersResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'systemathics.apis.services.tick.v2.TickService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TickService(object):
    """Called to request tick prices data. 
    """

    @staticmethod
    def TickScalarStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/systemathics.apis.services.tick.v2.TickService/TickScalarStream',
            systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickRequest.SerializeToString,
            systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickScalarStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TickVectorStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/systemathics.apis.services.tick.v2.TickService/TickVectorStream',
            systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickRequest.SerializeToString,
            systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickVectorStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TickVectorKeyStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/systemathics.apis.services.tick.v2.TickService/TickVectorKeyStream',
            systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickVectorKeyRequest.SerializeToString,
            systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickVectorStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TickFields(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/systemathics.apis.services.tick.v2.TickService/TickFields',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickFieldsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TickAssetProviders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/systemathics.apis.services.tick.v2.TickService/TickAssetProviders',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            systemathics_dot_apis_dot_services_dot_tick_dot_v2_dot_get__tick__pb2.TickAssetProvidersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

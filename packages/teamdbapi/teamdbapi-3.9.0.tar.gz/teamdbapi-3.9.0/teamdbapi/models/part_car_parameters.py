# coding: utf-8

"""
    Trackside Software TeamDB API v2.0

    This API enables you to access TeamDB data  # noqa: E501

    OpenAPI spec version: 2.0
    Contact: support@trackside.fr
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from teamdbapi.configuration import Configuration


class PartCarParameters(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'PartId': 'str',
        'PartNumber': 'str',
        'ParameterId': 'str',
        'ParameterPath': 'str',
        'TargetId': 'str',
        'TargetName': 'str',
        'ParameterBinding': 'str',
        'RedirectPartId': 'str',
        'RedirectPartNumber': 'str',
        'RedirectParameterId': 'str',
        'RedirectParameterPath': 'str',
        'RedirectTargetId': 'str',
        'RedirectTargetName': 'str',
        'RedirectCoeffA': 'float',
        'RedirectCoeffB': 'float',
        'RedirectCoeffC': 'float',
        'RedirectCoeffD': 'float'
    }

    attribute_map = {
        'PartId': 'PartId',
        'PartNumber': 'PartNumber',
        'ParameterId': 'ParameterId',
        'ParameterPath': 'ParameterPath',
        'TargetId': 'TargetId',
        'TargetName': 'TargetName',
        'ParameterBinding': 'ParameterBinding',
        'RedirectPartId': 'RedirectPartId',
        'RedirectPartNumber': 'RedirectPartNumber',
        'RedirectParameterId': 'RedirectParameterId',
        'RedirectParameterPath': 'RedirectParameterPath',
        'RedirectTargetId': 'RedirectTargetId',
        'RedirectTargetName': 'RedirectTargetName',
        'RedirectCoeffA': 'RedirectCoeffA',
        'RedirectCoeffB': 'RedirectCoeffB',
        'RedirectCoeffC': 'RedirectCoeffC',
        'RedirectCoeffD': 'RedirectCoeffD'
    }

    def __init__(self, PartId=None, PartNumber=None, ParameterId=None, ParameterPath=None, TargetId=None, TargetName=None, ParameterBinding=None, RedirectPartId=None, RedirectPartNumber=None, RedirectParameterId=None, RedirectParameterPath=None, RedirectTargetId=None, RedirectTargetName=None, RedirectCoeffA=None, RedirectCoeffB=None, RedirectCoeffC=None, RedirectCoeffD=None, _configuration=None):  # noqa: E501
        """PartCarParameters - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._PartId = None
        self._PartNumber = None
        self._ParameterId = None
        self._ParameterPath = None
        self._TargetId = None
        self._TargetName = None
        self._ParameterBinding = None
        self._RedirectPartId = None
        self._RedirectPartNumber = None
        self._RedirectParameterId = None
        self._RedirectParameterPath = None
        self._RedirectTargetId = None
        self._RedirectTargetName = None
        self._RedirectCoeffA = None
        self._RedirectCoeffB = None
        self._RedirectCoeffC = None
        self._RedirectCoeffD = None
        self.discriminator = None

        if PartId is not None:
            self.PartId = PartId
        if PartNumber is not None:
            self.PartNumber = PartNumber
        if ParameterId is not None:
            self.ParameterId = ParameterId
        if ParameterPath is not None:
            self.ParameterPath = ParameterPath
        if TargetId is not None:
            self.TargetId = TargetId
        if TargetName is not None:
            self.TargetName = TargetName
        if ParameterBinding is not None:
            self.ParameterBinding = ParameterBinding
        if RedirectPartId is not None:
            self.RedirectPartId = RedirectPartId
        if RedirectPartNumber is not None:
            self.RedirectPartNumber = RedirectPartNumber
        if RedirectParameterId is not None:
            self.RedirectParameterId = RedirectParameterId
        if RedirectParameterPath is not None:
            self.RedirectParameterPath = RedirectParameterPath
        if RedirectTargetId is not None:
            self.RedirectTargetId = RedirectTargetId
        if RedirectTargetName is not None:
            self.RedirectTargetName = RedirectTargetName
        if RedirectCoeffA is not None:
            self.RedirectCoeffA = RedirectCoeffA
        if RedirectCoeffB is not None:
            self.RedirectCoeffB = RedirectCoeffB
        if RedirectCoeffC is not None:
            self.RedirectCoeffC = RedirectCoeffC
        if RedirectCoeffD is not None:
            self.RedirectCoeffD = RedirectCoeffD

    @property
    def PartId(self):
        """Gets the PartId of this PartCarParameters.  # noqa: E501

        The unique part identifier  # noqa: E501

        :return: The PartId of this PartCarParameters.  # noqa: E501
        :rtype: str
        """
        return self._PartId

    @PartId.setter
    def PartId(self, PartId):
        """Sets the PartId of this PartCarParameters.

        The unique part identifier  # noqa: E501

        :param PartId: The PartId of this PartCarParameters.  # noqa: E501
        :type: str
        """

        self._PartId = PartId

    @property
    def PartNumber(self):
        """Gets the PartNumber of this PartCarParameters.  # noqa: E501

        The part number  # noqa: E501

        :return: The PartNumber of this PartCarParameters.  # noqa: E501
        :rtype: str
        """
        return self._PartNumber

    @PartNumber.setter
    def PartNumber(self, PartNumber):
        """Sets the PartNumber of this PartCarParameters.

        The part number  # noqa: E501

        :param PartNumber: The PartNumber of this PartCarParameters.  # noqa: E501
        :type: str
        """

        self._PartNumber = PartNumber

    @property
    def ParameterId(self):
        """Gets the ParameterId of this PartCarParameters.  # noqa: E501

        The unique car parameter identifier  # noqa: E501

        :return: The ParameterId of this PartCarParameters.  # noqa: E501
        :rtype: str
        """
        return self._ParameterId

    @ParameterId.setter
    def ParameterId(self, ParameterId):
        """Sets the ParameterId of this PartCarParameters.

        The unique car parameter identifier  # noqa: E501

        :param ParameterId: The ParameterId of this PartCarParameters.  # noqa: E501
        :type: str
        """

        self._ParameterId = ParameterId

    @property
    def ParameterPath(self):
        """Gets the ParameterPath of this PartCarParameters.  # noqa: E501

        The car parameters reference path  # noqa: E501

        :return: The ParameterPath of this PartCarParameters.  # noqa: E501
        :rtype: str
        """
        return self._ParameterPath

    @ParameterPath.setter
    def ParameterPath(self, ParameterPath):
        """Sets the ParameterPath of this PartCarParameters.

        The car parameters reference path  # noqa: E501

        :param ParameterPath: The ParameterPath of this PartCarParameters.  # noqa: E501
        :type: str
        """

        self._ParameterPath = ParameterPath

    @property
    def TargetId(self):
        """Gets the TargetId of this PartCarParameters.  # noqa: E501

        The unique car parameter target identifier  # noqa: E501

        :return: The TargetId of this PartCarParameters.  # noqa: E501
        :rtype: str
        """
        return self._TargetId

    @TargetId.setter
    def TargetId(self, TargetId):
        """Sets the TargetId of this PartCarParameters.

        The unique car parameter target identifier  # noqa: E501

        :param TargetId: The TargetId of this PartCarParameters.  # noqa: E501
        :type: str
        """

        self._TargetId = TargetId

    @property
    def TargetName(self):
        """Gets the TargetName of this PartCarParameters.  # noqa: E501

        The car parameters target name  # noqa: E501

        :return: The TargetName of this PartCarParameters.  # noqa: E501
        :rtype: str
        """
        return self._TargetName

    @TargetName.setter
    def TargetName(self, TargetName):
        """Sets the TargetName of this PartCarParameters.

        The car parameters target name  # noqa: E501

        :param TargetName: The TargetName of this PartCarParameters.  # noqa: E501
        :type: str
        """

        self._TargetName = TargetName

    @property
    def ParameterBinding(self):
        """Gets the ParameterBinding of this PartCarParameters.  # noqa: E501

        The parameter binfing used to identify the component to import from a mounting  to a car parameter assembly  # noqa: E501

        :return: The ParameterBinding of this PartCarParameters.  # noqa: E501
        :rtype: str
        """
        return self._ParameterBinding

    @ParameterBinding.setter
    def ParameterBinding(self, ParameterBinding):
        """Sets the ParameterBinding of this PartCarParameters.

        The parameter binfing used to identify the component to import from a mounting  to a car parameter assembly  # noqa: E501

        :param ParameterBinding: The ParameterBinding of this PartCarParameters.  # noqa: E501
        :type: str
        """

        self._ParameterBinding = ParameterBinding

    @property
    def RedirectPartId(self):
        """Gets the RedirectPartId of this PartCarParameters.  # noqa: E501

        The unique identifier of the redirected part.  Optional field. Only valid with a group part.  # noqa: E501

        :return: The RedirectPartId of this PartCarParameters.  # noqa: E501
        :rtype: str
        """
        return self._RedirectPartId

    @RedirectPartId.setter
    def RedirectPartId(self, RedirectPartId):
        """Sets the RedirectPartId of this PartCarParameters.

        The unique identifier of the redirected part.  Optional field. Only valid with a group part.  # noqa: E501

        :param RedirectPartId: The RedirectPartId of this PartCarParameters.  # noqa: E501
        :type: str
        """

        self._RedirectPartId = RedirectPartId

    @property
    def RedirectPartNumber(self):
        """Gets the RedirectPartNumber of this PartCarParameters.  # noqa: E501

        The redirect part name.  Optional field. Only valid with a group part.  # noqa: E501

        :return: The RedirectPartNumber of this PartCarParameters.  # noqa: E501
        :rtype: str
        """
        return self._RedirectPartNumber

    @RedirectPartNumber.setter
    def RedirectPartNumber(self, RedirectPartNumber):
        """Sets the RedirectPartNumber of this PartCarParameters.

        The redirect part name.  Optional field. Only valid with a group part.  # noqa: E501

        :param RedirectPartNumber: The RedirectPartNumber of this PartCarParameters.  # noqa: E501
        :type: str
        """

        self._RedirectPartNumber = RedirectPartNumber

    @property
    def RedirectParameterId(self):
        """Gets the RedirectParameterId of this PartCarParameters.  # noqa: E501

        The unique identifier of the redirected car parameter  Optional field. Only valid with a group part.  # noqa: E501

        :return: The RedirectParameterId of this PartCarParameters.  # noqa: E501
        :rtype: str
        """
        return self._RedirectParameterId

    @RedirectParameterId.setter
    def RedirectParameterId(self, RedirectParameterId):
        """Sets the RedirectParameterId of this PartCarParameters.

        The unique identifier of the redirected car parameter  Optional field. Only valid with a group part.  # noqa: E501

        :param RedirectParameterId: The RedirectParameterId of this PartCarParameters.  # noqa: E501
        :type: str
        """

        self._RedirectParameterId = RedirectParameterId

    @property
    def RedirectParameterPath(self):
        """Gets the RedirectParameterPath of this PartCarParameters.  # noqa: E501

        The redirected car parameters path  Optional field. Only valid with a group part.  # noqa: E501

        :return: The RedirectParameterPath of this PartCarParameters.  # noqa: E501
        :rtype: str
        """
        return self._RedirectParameterPath

    @RedirectParameterPath.setter
    def RedirectParameterPath(self, RedirectParameterPath):
        """Sets the RedirectParameterPath of this PartCarParameters.

        The redirected car parameters path  Optional field. Only valid with a group part.  # noqa: E501

        :param RedirectParameterPath: The RedirectParameterPath of this PartCarParameters.  # noqa: E501
        :type: str
        """

        self._RedirectParameterPath = RedirectParameterPath

    @property
    def RedirectTargetId(self):
        """Gets the RedirectTargetId of this PartCarParameters.  # noqa: E501

        The target unique identifier of the redirected car parameter  Optional field. Only valid with a group part.  # noqa: E501

        :return: The RedirectTargetId of this PartCarParameters.  # noqa: E501
        :rtype: str
        """
        return self._RedirectTargetId

    @RedirectTargetId.setter
    def RedirectTargetId(self, RedirectTargetId):
        """Sets the RedirectTargetId of this PartCarParameters.

        The target unique identifier of the redirected car parameter  Optional field. Only valid with a group part.  # noqa: E501

        :param RedirectTargetId: The RedirectTargetId of this PartCarParameters.  # noqa: E501
        :type: str
        """

        self._RedirectTargetId = RedirectTargetId

    @property
    def RedirectTargetName(self):
        """Gets the RedirectTargetName of this PartCarParameters.  # noqa: E501

        The target name of the redirected car parameter   Optional field. Only valid with a group part.  # noqa: E501

        :return: The RedirectTargetName of this PartCarParameters.  # noqa: E501
        :rtype: str
        """
        return self._RedirectTargetName

    @RedirectTargetName.setter
    def RedirectTargetName(self, RedirectTargetName):
        """Sets the RedirectTargetName of this PartCarParameters.

        The target name of the redirected car parameter   Optional field. Only valid with a group part.  # noqa: E501

        :param RedirectTargetName: The RedirectTargetName of this PartCarParameters.  # noqa: E501
        :type: str
        """

        self._RedirectTargetName = RedirectTargetName

    @property
    def RedirectCoeffA(self):
        """Gets the RedirectCoeffA of this PartCarParameters.  # noqa: E501

        Coeff A applied to convert a car parameters revision when  a redirection is specified.  Optional field. Only valid with a group part.  # noqa: E501

        :return: The RedirectCoeffA of this PartCarParameters.  # noqa: E501
        :rtype: float
        """
        return self._RedirectCoeffA

    @RedirectCoeffA.setter
    def RedirectCoeffA(self, RedirectCoeffA):
        """Sets the RedirectCoeffA of this PartCarParameters.

        Coeff A applied to convert a car parameters revision when  a redirection is specified.  Optional field. Only valid with a group part.  # noqa: E501

        :param RedirectCoeffA: The RedirectCoeffA of this PartCarParameters.  # noqa: E501
        :type: float
        """

        self._RedirectCoeffA = RedirectCoeffA

    @property
    def RedirectCoeffB(self):
        """Gets the RedirectCoeffB of this PartCarParameters.  # noqa: E501

        Coeff A applied to convert a car parameters revision when  a redirection is specified.  Optional field. Only valid with a group part.  # noqa: E501

        :return: The RedirectCoeffB of this PartCarParameters.  # noqa: E501
        :rtype: float
        """
        return self._RedirectCoeffB

    @RedirectCoeffB.setter
    def RedirectCoeffB(self, RedirectCoeffB):
        """Sets the RedirectCoeffB of this PartCarParameters.

        Coeff A applied to convert a car parameters revision when  a redirection is specified.  Optional field. Only valid with a group part.  # noqa: E501

        :param RedirectCoeffB: The RedirectCoeffB of this PartCarParameters.  # noqa: E501
        :type: float
        """

        self._RedirectCoeffB = RedirectCoeffB

    @property
    def RedirectCoeffC(self):
        """Gets the RedirectCoeffC of this PartCarParameters.  # noqa: E501

        Coeff A applied to convert a car parameters revision when  a redirection is specified.  Optional field. Only valid with a group part.  # noqa: E501

        :return: The RedirectCoeffC of this PartCarParameters.  # noqa: E501
        :rtype: float
        """
        return self._RedirectCoeffC

    @RedirectCoeffC.setter
    def RedirectCoeffC(self, RedirectCoeffC):
        """Sets the RedirectCoeffC of this PartCarParameters.

        Coeff A applied to convert a car parameters revision when  a redirection is specified.  Optional field. Only valid with a group part.  # noqa: E501

        :param RedirectCoeffC: The RedirectCoeffC of this PartCarParameters.  # noqa: E501
        :type: float
        """

        self._RedirectCoeffC = RedirectCoeffC

    @property
    def RedirectCoeffD(self):
        """Gets the RedirectCoeffD of this PartCarParameters.  # noqa: E501

        Coeff A applied to convert a car parameters revision when  a redirection is specified.  Optional field. Only valid with a group part.  # noqa: E501

        :return: The RedirectCoeffD of this PartCarParameters.  # noqa: E501
        :rtype: float
        """
        return self._RedirectCoeffD

    @RedirectCoeffD.setter
    def RedirectCoeffD(self, RedirectCoeffD):
        """Sets the RedirectCoeffD of this PartCarParameters.

        Coeff A applied to convert a car parameters revision when  a redirection is specified.  Optional field. Only valid with a group part.  # noqa: E501

        :param RedirectCoeffD: The RedirectCoeffD of this PartCarParameters.  # noqa: E501
        :type: float
        """

        self._RedirectCoeffD = RedirectCoeffD

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PartCarParameters, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PartCarParameters):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, PartCarParameters):
            return True

        return self.to_dict() != other.to_dict()

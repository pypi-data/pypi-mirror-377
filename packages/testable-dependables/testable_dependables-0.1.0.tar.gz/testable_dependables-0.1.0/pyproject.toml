[project]
name = "testable-dependables"
version = "0.1.0"
description = "Output testable Python versions based on pyproject.toml."
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
license-files = [
  "LICENSE"
]
keywords = [
    "python",
    "toml",
    "pyproject",
]
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: 3.15",
]

dependencies = [
    "packaging>=25.0",
    "typer>=0.17.4",
    "py-eol>=0.2.0"
]

[dependency-groups]
dev = [
    "mypy>=1.18.1",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
]

[project.scripts]
testable-dependables = "testable_dependables:app"

[project.urls]
Homepage = "https://github.com/adamghill/testable-dependables/"
Repository = "https://github.com/adamghill/testable-dependables.git"

[tool.ruff]
src = ["src"]
exclude = []
target-version = "py311"
line-length = 120
lint.select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
lint.ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
  # Ignore unused variables
  "F841",
   # Ignore exception strings
  "EM101", "EM102",
]
lint.unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["dj_toml_settings"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252", "ARG001"]

[tool.pytest.ini_options]
addopts = "--quiet --failed-first -p no:warnings -m \"not slow\""
testpaths = [
    "tests"
]
markers = [
    "slow: marks tests as slow",
]

[tool.coverage.run]
branch = true
parallel = true

[tool.coverage.report]
show_missing = true
skip_covered = true
skip_empty = true
sort = "cover"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[build-system]
requires = ["uv_build>=0.8.12,<0.9.0"]
build-backend = "uv_build"

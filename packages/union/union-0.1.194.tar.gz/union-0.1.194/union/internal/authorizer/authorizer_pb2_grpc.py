# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from union.internal.authorizer import payload_pb2 as authorizer_dot_payload__pb2


class AuthorizerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Authorize = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/Authorize',
                request_serializer=authorizer_dot_payload__pb2.AuthorizeRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.AuthorizeResponse.FromString,
                )
        self.CreateIdentity = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/CreateIdentity',
                request_serializer=authorizer_dot_payload__pb2.CreateIdentityRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.CreateIdentityResponse.FromString,
                )
        self.DeleteIdentity = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/DeleteIdentity',
                request_serializer=authorizer_dot_payload__pb2.DeleteIdentityRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.DeleteIdentityResponse.FromString,
                )
        self.AssignIdentity = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/AssignIdentity',
                request_serializer=authorizer_dot_payload__pb2.AssignIdentityRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.AssignIdentityResponse.FromString,
                )
        self.UnassignIdentity = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/UnassignIdentity',
                request_serializer=authorizer_dot_payload__pb2.UnassignIdentityRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.UnassignIdentityResponse.FromString,
                )
        self.GetIdentityAssignments = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/GetIdentityAssignments',
                request_serializer=authorizer_dot_payload__pb2.GetIdentityAssignmentRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.GetIdentityAssignmentResponse.FromString,
                )
        self.ListIdentityAssignments = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/ListIdentityAssignments',
                request_serializer=authorizer_dot_payload__pb2.ListIdentityAssignmentsRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.ListIdentityAssignmentsResponse.FromString,
                )
        self.GetPolicyAssignment = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/GetPolicyAssignment',
                request_serializer=authorizer_dot_payload__pb2.GetPolicyAssignmentRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.GetPolicyAssignmentResponse.FromString,
                )
        self.CreateResource = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/CreateResource',
                request_serializer=authorizer_dot_payload__pb2.CreateResourceRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.CreateResourceResponse.FromString,
                )
        self.DeleteResource = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/DeleteResource',
                request_serializer=authorizer_dot_payload__pb2.DeleteResourceRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.DeleteResourceResponse.FromString,
                )
        self.CreateOrganization = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/CreateOrganization',
                request_serializer=authorizer_dot_payload__pb2.CreateOrganizationRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.CreateOrganizationResponse.FromString,
                )
        self.GetOrganization = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/GetOrganization',
                request_serializer=authorizer_dot_payload__pb2.GetOrganizationRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.GetOrganizationResponse.FromString,
                )
        self.DeleteOrganization = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/DeleteOrganization',
                request_serializer=authorizer_dot_payload__pb2.DeleteOrganizationRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.DeleteOrganizationResponse.FromString,
                )
        self.CreatePolicy = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/CreatePolicy',
                request_serializer=authorizer_dot_payload__pb2.CreatePolicyRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.CreatePolicyResponse.FromString,
                )
        self.GetPolicy = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/GetPolicy',
                request_serializer=authorizer_dot_payload__pb2.GetPolicyRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.GetPolicyResponse.FromString,
                )
        self.DeletePolicy = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/DeletePolicy',
                request_serializer=authorizer_dot_payload__pb2.DeletePolicyRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.DeletePolicyResponse.FromString,
                )
        self.ListPolicies = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/ListPolicies',
                request_serializer=authorizer_dot_payload__pb2.ListPoliciesRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.ListPoliciesResponse.FromString,
                )
        self.CreatePolicyBinding = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/CreatePolicyBinding',
                request_serializer=authorizer_dot_payload__pb2.CreatePolicyBindingRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.CreatePolicyBindingResponse.FromString,
                )
        self.DeletePolicyBinding = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/DeletePolicyBinding',
                request_serializer=authorizer_dot_payload__pb2.DeletePolicyBindingRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.DeletePolicyBindingResponse.FromString,
                )
        self.CreateRole = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/CreateRole',
                request_serializer=authorizer_dot_payload__pb2.CreateRoleRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.CreateRoleResponse.FromString,
                )
        self.GetRole = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/GetRole',
                request_serializer=authorizer_dot_payload__pb2.GetRoleRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.GetRoleResponse.FromString,
                )
        self.DeleteRole = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/DeleteRole',
                request_serializer=authorizer_dot_payload__pb2.DeleteRoleRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.DeleteRoleResponse.FromString,
                )
        self.ListRoles = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/ListRoles',
                request_serializer=authorizer_dot_payload__pb2.ListRolesRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.ListRolesResponse.FromString,
                )
        self.CreateRoleAction = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/CreateRoleAction',
                request_serializer=authorizer_dot_payload__pb2.CreateRoleActionRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.CreateRoleActionResponse.FromString,
                )
        self.DeleteRoleAction = channel.unary_unary(
                '/cloudidl.authorizer.AuthorizerService/DeleteRoleAction',
                request_serializer=authorizer_dot_payload__pb2.DeleteRoleActionRequest.SerializeToString,
                response_deserializer=authorizer_dot_payload__pb2.DeleteRoleActionResponse.FromString,
                )


class AuthorizerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Authorize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateIdentity(self, request, context):
        """Creates an identity in the authorizer store
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteIdentity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssignIdentity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnassignIdentity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIdentityAssignments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListIdentityAssignments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPolicyAssignment(self, request, context):
        """Returns the identities assigned to a policy.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateResource(self, request, context):
        """Creates a resource if it does not already exist in the authorizer store. Returns no errors when a resource already exists.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteResource(self, request, context):
        """Deletes a resource if it already exists in the authorizer store. Returns no errors when a resource doesn't exists.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOrganization(self, request, context):
        """Creates an organization in the authorization store. Returns no errors when an organization already exists.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrganization(self, request, context):
        """Get an organization in the authorization store.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteOrganization(self, request, context):
        """Deletes an organization in the authorization store. Returns no errors when an organization already doesn't exist.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePolicy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPolicy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePolicy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPolicies(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePolicyBinding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePolicyBinding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRoles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRoleAction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRoleAction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthorizerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Authorize': grpc.unary_unary_rpc_method_handler(
                    servicer.Authorize,
                    request_deserializer=authorizer_dot_payload__pb2.AuthorizeRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.AuthorizeResponse.SerializeToString,
            ),
            'CreateIdentity': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateIdentity,
                    request_deserializer=authorizer_dot_payload__pb2.CreateIdentityRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.CreateIdentityResponse.SerializeToString,
            ),
            'DeleteIdentity': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteIdentity,
                    request_deserializer=authorizer_dot_payload__pb2.DeleteIdentityRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.DeleteIdentityResponse.SerializeToString,
            ),
            'AssignIdentity': grpc.unary_unary_rpc_method_handler(
                    servicer.AssignIdentity,
                    request_deserializer=authorizer_dot_payload__pb2.AssignIdentityRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.AssignIdentityResponse.SerializeToString,
            ),
            'UnassignIdentity': grpc.unary_unary_rpc_method_handler(
                    servicer.UnassignIdentity,
                    request_deserializer=authorizer_dot_payload__pb2.UnassignIdentityRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.UnassignIdentityResponse.SerializeToString,
            ),
            'GetIdentityAssignments': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIdentityAssignments,
                    request_deserializer=authorizer_dot_payload__pb2.GetIdentityAssignmentRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.GetIdentityAssignmentResponse.SerializeToString,
            ),
            'ListIdentityAssignments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListIdentityAssignments,
                    request_deserializer=authorizer_dot_payload__pb2.ListIdentityAssignmentsRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.ListIdentityAssignmentsResponse.SerializeToString,
            ),
            'GetPolicyAssignment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPolicyAssignment,
                    request_deserializer=authorizer_dot_payload__pb2.GetPolicyAssignmentRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.GetPolicyAssignmentResponse.SerializeToString,
            ),
            'CreateResource': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateResource,
                    request_deserializer=authorizer_dot_payload__pb2.CreateResourceRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.CreateResourceResponse.SerializeToString,
            ),
            'DeleteResource': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteResource,
                    request_deserializer=authorizer_dot_payload__pb2.DeleteResourceRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.DeleteResourceResponse.SerializeToString,
            ),
            'CreateOrganization': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrganization,
                    request_deserializer=authorizer_dot_payload__pb2.CreateOrganizationRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.CreateOrganizationResponse.SerializeToString,
            ),
            'GetOrganization': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrganization,
                    request_deserializer=authorizer_dot_payload__pb2.GetOrganizationRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.GetOrganizationResponse.SerializeToString,
            ),
            'DeleteOrganization': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteOrganization,
                    request_deserializer=authorizer_dot_payload__pb2.DeleteOrganizationRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.DeleteOrganizationResponse.SerializeToString,
            ),
            'CreatePolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePolicy,
                    request_deserializer=authorizer_dot_payload__pb2.CreatePolicyRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.CreatePolicyResponse.SerializeToString,
            ),
            'GetPolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPolicy,
                    request_deserializer=authorizer_dot_payload__pb2.GetPolicyRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.GetPolicyResponse.SerializeToString,
            ),
            'DeletePolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePolicy,
                    request_deserializer=authorizer_dot_payload__pb2.DeletePolicyRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.DeletePolicyResponse.SerializeToString,
            ),
            'ListPolicies': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPolicies,
                    request_deserializer=authorizer_dot_payload__pb2.ListPoliciesRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.ListPoliciesResponse.SerializeToString,
            ),
            'CreatePolicyBinding': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePolicyBinding,
                    request_deserializer=authorizer_dot_payload__pb2.CreatePolicyBindingRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.CreatePolicyBindingResponse.SerializeToString,
            ),
            'DeletePolicyBinding': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePolicyBinding,
                    request_deserializer=authorizer_dot_payload__pb2.DeletePolicyBindingRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.DeletePolicyBindingResponse.SerializeToString,
            ),
            'CreateRole': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRole,
                    request_deserializer=authorizer_dot_payload__pb2.CreateRoleRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.CreateRoleResponse.SerializeToString,
            ),
            'GetRole': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRole,
                    request_deserializer=authorizer_dot_payload__pb2.GetRoleRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.GetRoleResponse.SerializeToString,
            ),
            'DeleteRole': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRole,
                    request_deserializer=authorizer_dot_payload__pb2.DeleteRoleRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.DeleteRoleResponse.SerializeToString,
            ),
            'ListRoles': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRoles,
                    request_deserializer=authorizer_dot_payload__pb2.ListRolesRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.ListRolesResponse.SerializeToString,
            ),
            'CreateRoleAction': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRoleAction,
                    request_deserializer=authorizer_dot_payload__pb2.CreateRoleActionRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.CreateRoleActionResponse.SerializeToString,
            ),
            'DeleteRoleAction': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRoleAction,
                    request_deserializer=authorizer_dot_payload__pb2.DeleteRoleActionRequest.FromString,
                    response_serializer=authorizer_dot_payload__pb2.DeleteRoleActionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloudidl.authorizer.AuthorizerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AuthorizerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Authorize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/Authorize',
            authorizer_dot_payload__pb2.AuthorizeRequest.SerializeToString,
            authorizer_dot_payload__pb2.AuthorizeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateIdentity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/CreateIdentity',
            authorizer_dot_payload__pb2.CreateIdentityRequest.SerializeToString,
            authorizer_dot_payload__pb2.CreateIdentityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteIdentity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/DeleteIdentity',
            authorizer_dot_payload__pb2.DeleteIdentityRequest.SerializeToString,
            authorizer_dot_payload__pb2.DeleteIdentityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssignIdentity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/AssignIdentity',
            authorizer_dot_payload__pb2.AssignIdentityRequest.SerializeToString,
            authorizer_dot_payload__pb2.AssignIdentityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnassignIdentity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/UnassignIdentity',
            authorizer_dot_payload__pb2.UnassignIdentityRequest.SerializeToString,
            authorizer_dot_payload__pb2.UnassignIdentityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIdentityAssignments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/GetIdentityAssignments',
            authorizer_dot_payload__pb2.GetIdentityAssignmentRequest.SerializeToString,
            authorizer_dot_payload__pb2.GetIdentityAssignmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListIdentityAssignments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/ListIdentityAssignments',
            authorizer_dot_payload__pb2.ListIdentityAssignmentsRequest.SerializeToString,
            authorizer_dot_payload__pb2.ListIdentityAssignmentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPolicyAssignment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/GetPolicyAssignment',
            authorizer_dot_payload__pb2.GetPolicyAssignmentRequest.SerializeToString,
            authorizer_dot_payload__pb2.GetPolicyAssignmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/CreateResource',
            authorizer_dot_payload__pb2.CreateResourceRequest.SerializeToString,
            authorizer_dot_payload__pb2.CreateResourceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/DeleteResource',
            authorizer_dot_payload__pb2.DeleteResourceRequest.SerializeToString,
            authorizer_dot_payload__pb2.DeleteResourceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateOrganization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/CreateOrganization',
            authorizer_dot_payload__pb2.CreateOrganizationRequest.SerializeToString,
            authorizer_dot_payload__pb2.CreateOrganizationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrganization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/GetOrganization',
            authorizer_dot_payload__pb2.GetOrganizationRequest.SerializeToString,
            authorizer_dot_payload__pb2.GetOrganizationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteOrganization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/DeleteOrganization',
            authorizer_dot_payload__pb2.DeleteOrganizationRequest.SerializeToString,
            authorizer_dot_payload__pb2.DeleteOrganizationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreatePolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/CreatePolicy',
            authorizer_dot_payload__pb2.CreatePolicyRequest.SerializeToString,
            authorizer_dot_payload__pb2.CreatePolicyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/GetPolicy',
            authorizer_dot_payload__pb2.GetPolicyRequest.SerializeToString,
            authorizer_dot_payload__pb2.GetPolicyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/DeletePolicy',
            authorizer_dot_payload__pb2.DeletePolicyRequest.SerializeToString,
            authorizer_dot_payload__pb2.DeletePolicyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPolicies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/ListPolicies',
            authorizer_dot_payload__pb2.ListPoliciesRequest.SerializeToString,
            authorizer_dot_payload__pb2.ListPoliciesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreatePolicyBinding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/CreatePolicyBinding',
            authorizer_dot_payload__pb2.CreatePolicyBindingRequest.SerializeToString,
            authorizer_dot_payload__pb2.CreatePolicyBindingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePolicyBinding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/DeletePolicyBinding',
            authorizer_dot_payload__pb2.DeletePolicyBindingRequest.SerializeToString,
            authorizer_dot_payload__pb2.DeletePolicyBindingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/CreateRole',
            authorizer_dot_payload__pb2.CreateRoleRequest.SerializeToString,
            authorizer_dot_payload__pb2.CreateRoleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/GetRole',
            authorizer_dot_payload__pb2.GetRoleRequest.SerializeToString,
            authorizer_dot_payload__pb2.GetRoleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/DeleteRole',
            authorizer_dot_payload__pb2.DeleteRoleRequest.SerializeToString,
            authorizer_dot_payload__pb2.DeleteRoleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListRoles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/ListRoles',
            authorizer_dot_payload__pb2.ListRolesRequest.SerializeToString,
            authorizer_dot_payload__pb2.ListRolesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateRoleAction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/CreateRoleAction',
            authorizer_dot_payload__pb2.CreateRoleActionRequest.SerializeToString,
            authorizer_dot_payload__pb2.CreateRoleActionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteRoleAction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloudidl.authorizer.AuthorizerService/DeleteRoleAction',
            authorizer_dot_payload__pb2.DeleteRoleActionRequest.SerializeToString,
            authorizer_dot_payload__pb2.DeleteRoleActionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

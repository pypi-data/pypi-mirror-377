import types
from _typeshed import Incomplete

__all__ = ['SyntheticDataKit']

class SyntheticDataKit:
    model_name: Incomplete
    max_seq_length: Incomplete
    config: Incomplete
    tokenizer: Incomplete
    vllm_process: Incomplete
    def __init__(self, model_name: str = 'unsloth/Llama-3.1-8B-Instruct-unsloth-bnb-4bit', max_seq_length: int = 2048, gpu_memory_utilization: float = 0.98, float8_kv_cache: bool = False, conservativeness: float = 1.0, token=None, **kwargs) -> None: ...
    @staticmethod
    def from_pretrained(model_name: str = 'unsloth/Llama-3.1-8B-Instruct-unsloth-bnb-4bit', max_seq_length: int = 2048, gpu_memory_utilization: float = 0.9, float8_kv_cache: bool = False, conservativeness: float = 1.0, token=None, **kwargs): ...
    @staticmethod
    def check_vllm_status(): ...
    def cleanup(self) -> None: ...
    def __enter__(self): ...
    def __exit__(self, *exc) -> None: ...
    def __del__(self) -> None: ...
    def chunk_data(self, filename=None): ...
    max_generation_tokens: Incomplete
    overlap: Incomplete
    def prepare_qa_generation(self, output_folder: str = 'data', max_generation_tokens: int = 512, temperature: float = 0.7, top_p: float = 0.95, overlap: int = 64, default_num_pairs: int = 25, cleanup_threshold: float = 1.0, cleanup_batch_size: int = 4, cleanup_temperature: float = 0.3) -> None: ...

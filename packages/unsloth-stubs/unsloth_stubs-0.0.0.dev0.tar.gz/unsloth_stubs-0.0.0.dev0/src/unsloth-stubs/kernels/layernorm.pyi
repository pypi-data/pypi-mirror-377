import torch
import triton
import triton.language as tl
from .utils import calculate_settings as calculate_settings, torch_gpu_device as torch_gpu_device
from unsloth_zoo.patching_utils import patch_layernorm as patch_layernorm

@triton.jit
def layernorm_forward(Y, Y_row_stride, X, X_row_stride, W, b, r, mu, n_cols: tl.constexpr, eps: tl.constexpr, BLOCK_SIZE: tl.constexpr): ...
@triton.jit
def layernorm_backward(dY, dY_row_stride, X, X_row_stride, W, b, r, mu, n_cols: tl.constexpr, eps: tl.constexpr, BLOCK_SIZE: tl.constexpr): ...

class Fast_Layernorm(torch.autograd.Function):
    @staticmethod
    def forward(ctx, X, W, b, eps): ...
    @staticmethod
    def backward(ctx, dY): ...

def fast_layernorm(layernorm, X): ...
def test_layernorm(dim: int = 1024, eps: float = 1e-05, dtype=..., bsz: int = 21, random_state: int = 3407, seqlen: int = 3341) -> None: ...
def testing_suite_layernorm() -> None: ...

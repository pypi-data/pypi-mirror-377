# VASProcar Copyright (C) 2023
# GNU GPL-3.0 license

################################################################
# inform the DFT package: ======================================
# [0] VASP - Vienna Ab initio Simulation Package ===============
# [1] QE - Quantum Espresso ====================================
################################################################
dft_package = 0

if (dft_package == 0): DFT = '_VASP/'
if (dft_package == 1): DFT = '_QE/'



################################################################
# Regarding the bands, what do you want to analyze? ============
# [0] Plot all bands on the Fermi Surface ======================
# [1] Plot a selected range of bands on Sup. from Fermi ========
################################################################
esc_band = 0

if (esc_band == 1):
   ##############################################################
   # Which band do you want to analyze? =========================
   ############################################################## 
   Band_i = 1
   Band_f = 2



############################################################## 
# with respect to energy, would you like? ====================
# [0] Use the default energy value from DFT output ===========
# [1] Shift the Fermi level to 0.0 eV  =======================
##############################################################
esc_fermi = 1

 

################################################################
# What number of Energies do you want to analyze? ==============
################################################################
n_energ = 120



##############################################################
# Regarding the energy values: ===============================
# [0] Must be obtained automatically by code =================
# [1] Must sweep a certain range of energy ===================
# [2] I want to specify each energy value manually ===========
##############################################################
esc_energ = 1

if (esc_energ == 1):
   ##############################################################
   # Choose the Energy range to be analyzed: ====================
   # Type as in the examples below ==============================
   # ------------------------------------------------------------
   # Initial_energ Final_Energ: -4.5 6.9                         
   # Initial_energ Final_Energ:  0.0 5.5                         
   ##############################################################
   energ_i = -2.0
   energ_f = +2.0

if (esc_energ == 2):
   #----------------
   E = [0.0]*n_energ
   ##############################################################
   # Enter Energy values as in the examples below ===============
   # ------------------------------------------------------------
   # Energies: -4.5 -2.0 -1.0  0.0  1.0  3.0 5.0                 
   # Energies:  0.2  0.5  0.78 1.23 9.97                         
   # ------------------------------------------------------------
   # !!! important note !!! =====================================
   # Always enter energy values in ascending order ==============
   ############################################################## 
   E = '-1.0 -0.5 0.0 0.5 1.0'
   #--------------------------
   E = E.split()
   for i in range(n_energ): E[i] = float(E[i])



################################################################
# Would you like to choose k-axis units?                        
# [1] (kx,ky,kz) 2pi/Param. (Param. in Angs.) ==================
# [2] (kx,ky,kz) 1/Angs. =======================================
# [3] (kx,ky,kz) 1/nm.   =======================================   
# [4] (k1,k2,k3) Fractional coord: K = k1*B1 + k2*B2 + k3*B3 ===   
################################################################ 
Dimensao = 4



################################################################
# Do you want to compile a video from the generated pictures? ==
# [0] NO =======================================================
# [1] YES ======================================================
# ==============================================================
# Note: Images will not be generated in .pdf|.svg|.eps =========
################################################################
video = 0

if (video == 1):
   ################################################################
   # How many figures should appear per second (fps) in the video?
   # tip 1: =======================================================
   # Choose between 1 and 30 figures ==============================
   # tip 2: =======================================================
   # The greater the number of images and the greater the number of
   # images per second (fps), the smoother the video.              
   ################################################################
   n_fig = 20
   #-----------
   save_png = 1
   save_pdf = 0
   save_eps = 0
   save_svg = 0 



###############################################################
# Choose the K-mesh grid (DxD) to be interpolated: ============
# Note:  The k-mesh grid used in your DFT calculation can be   
#        used as a reference. You are free to increase/decrease
#        the numberof kpoints to be interpolated.              
# Hint:  use 101 (unless more precision is required).          
###############################################################
n_d = 101

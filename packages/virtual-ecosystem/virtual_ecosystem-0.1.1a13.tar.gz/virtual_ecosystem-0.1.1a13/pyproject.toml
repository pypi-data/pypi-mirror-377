[project]
authors = [
  {name = "Rob Ewers", email = "r.ewers@imperial.ac.uk"},
  {name = "David Orme", email = "d.orme@imperial.ac.uk"},
  {name = "Jacob Cook", email = "j.cook17@imperial.ac.uk"},
  {name = "Vivienne Groner", email = "v.groner@imperial.ac.uk"},
  {name = "Taran Rallings", email = "t.rallings@imperial.ac.uk"},
  {name = "Olivia Daniel", email = "olivia.daniel08@imperial.ac.uk"},
  {name = "Jaideep Joshi", email = "joshi@iiasa.ac.at"},
  {name = "Anna Rallings", email = "a.rallings@imperial.ac.uk"},
  {name = "Priyanga Amarasekare", email = "pamarasekare@gmail.com"},
  {name = "Diego Alonso Alvarez", email = "d.alonso-alvarez@imperial.ac.uk"},
  {name = "Alex Dewar", email = "a.dewar@imperial.ac.uk"},
]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: BSD License",
  "Topic :: Scientific/Engineering",
]
description = """An holistic ecosystem simulation model."""
license = "BSD-3-Clause"
license-files = ["LICENSE"]
name = "virtual_ecosystem"
readme = "README.md"
version = "0.1.1a13"

requires-python = ">=3.11"

dependencies = [
  "Shapely (>2.0)",
  "dask (>2023.6)",
  "dpath (>2.0)",
  "jsonschema (>4.14)",
  "netcdf4 (>1.6)",
  "numpy  (>2.0)",
  "openpyxl (>3.1)",
  "pint (>0.24)",
  "pyrealm (>=2.0.0rc5)",
  "scipy (>1.12)",
  "tomli-w  (>1.0)",
  "tqdm (>4.66)",
  "xarray (>2024.6)",
  "types-tabulate (>0.9)",
]

[project.scripts]
ve_run = "virtual_ecosystem.entry_points:ve_run_cli"

[project.urls]
homepage = "https://virtual-ecosystem.readthedocs.io/"
repository = "https://github.com/ImperialCollegeLondon/virtual_ecosystem"

[tool.poetry]
requires-poetry = ">=2.0"

[tool.poetry.group.types.dependencies]
types-dataclasses = "^0.6.6"
types-jsonschema = "^4.25.1"
types-tqdm = "^4.67.0.20250809"

[tool.poetry.group.test.dependencies]
hypothesis = "^6.138.16"
pytest = ">=7.1.2,<9.0.0"
pytest-cov = ">=3,<8"
pytest-datadir = "^1.4.1"
pytest-mock = "^3.15.0"
pytest-xdist = {extras = ["psutil"], version = "^3.8.0"}

[tool.poetry.group.devenv.dependencies]
codespell = "^2.4.1"
ipykernel = "^6.15.0"
ipython = "^9.5.0"
isort = ">=5.12,<7.0"
jupyterlab = "^4.4.6"
jupyterlab-myst = "^2.4.2"
jupytext = "^1.17.3"
matplotlib = "^3.10.6"
mdformat = "^0.7.14"
mdformat_frontmatter = ">=0.4.1,<2.1.0"
mdformat_tables = ">=0.4.1,<1.1.0"
mypy = "^1.18.1"
pre-commit = ">=3,<5"
ruff = ">=0.9.1,<0.14.0"

[tool.poetry.group.docs.dependencies]
autodocsumm = "^0.2.8"
myst-nb = "^1.0.0"
pydocstyle = "^6.1.1"
sphinx = "^8.0.0"
sphinx-design = "^0.6.0"
sphinx-external-toc = "^1.0.0"
sphinx-hoverxref = "^1.4.1"
sphinx-rtd-theme = ">=2,<4"
sphinxcontrib-bibtex = "^2.6.1"
sphinxcontrib-mermaid = ">=0.9.2,<1.1.0"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.2.0"]

[tool.pytest.ini_options]
addopts = """	
  -v
  -p no:warnings
  -n auto
  --cov=virtual_ecosystem
  --cov-report=html:htmlcov/coverage
  --doctest-modules --ignore=virtual_ecosystem/__main__.py
  --import-mode importlib
  """
python_files = 'test_*.py'
testpaths = ['tests']

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
# Enable all `pydocstyle` rules, limiting to those that adhere to the
# Google convention via `convention = "google"`, below.
select = [
  # "B", # flake8-bugbear
  # "SIM", # flake8-simplify
  "E", # pycodestyle
  "F", # pyflakes
  "D", # pydocstyle
  "I", # isort
  "UP", # pyupgrade
  "RUF", # ruff-only checking
  "NPY201", # Numpy 2.0.1
]

# On top of the Google convention, disable:
ignore = [
  "D202", # Blank line after docstring is ok
  "D107", # Location of __init__ docstring in class not __init__"  # "F401", # module imported but unused
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"test/test_*.py" = ["D103"]

[tool.mypy]
ignore_missing_imports = true

[tool.jupytext]
# Stop jupytext from removing mystnb and other settings in MyST Notebook YAML headers
notebook_metadata_filter = "settings,mystnb,language_info,execution"
# Also stop it from stripping cell metadata.
cell_metadata_filter = "all,-trusted"

[tool.codespell]
ignore-words = ".codespellignore.txt"
skip = "*.js,*.html,*.css,*.ipynb,*.bib,*.svg,poetry.lock,./docs/build"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "vital-agent-container-sdk"
version = "0.1.16"
description = "Vital Agent Container SDK"
readme = "README.md"
license = {text = "Apache License 2.0"}
authors = [
    {name = "Marc Hadfield", email = "marc@vital.ai"}
]
classifiers = [
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.12"
dependencies = [
    "vital-ai-vitalsigns>=0.1.32",
    "vital-ai-aimp>=0.1.12",
    "httpx>=0.28.0",
    "python-json-logger>=2.0.7",
    "python-dotenv>=1.0.1",
    "uvicorn[standard]>=0.35.0",
    "fastapi>=0.116.0",
    "starlette>=0.36.3",
    "pyyaml>=6.0.1",
    "requests>=2.31.0",
    "pyjwt>=2.8.0",
    "cryptography>=41.0.0"
]

[project.optional-dependencies]
dev = [
    "build>=1.0.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
]

[project.urls]
Homepage = "https://github.com/vital-ai/vital-agent-container-python"
Repository = "https://github.com/vital-ai/vital-agent-container-python"
Issues = "https://github.com/vital-ai/vital-agent-container-python/issues"

[tool.setuptools.packages.find]
exclude = ["test*"]

[tool.setuptools.package-data]
"*" = ["*.pyi"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["vital_agent_container"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q"
testpaths = ["test"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "asyncio: marks tests as async tests",
]

[tool.coverage.run]
source = ["vital_agent_container"]
omit = [
    "*/test*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools", "wheel"]

[project]
name = "volara"
description = "A package for common blockwise computations for large microscopy volumes."
authors = [
    { name = "William Patton", email = "wllmpttn24@gmail.com" },
    { name = "Arlo Sheridan", email = "arlo@e11.bio" },
]
license = { text = "MIT" }
readme = "README.md"
dynamic = ["version"]

classifiers = ["Programming Language :: Python :: 3"]
keywords = []
requires-python = ">=3.11"

dependencies = [
    "click>=8.0",
    "daisy>=1.2.2",
    "funlib.geometry>=0.3",
    "funlib.persistence>=0.6",
    "mwatershed>=0.5.2",
    "pydantic>=2.6.3",
    "numba>=0.59.0",
    "scipy>=1.15.3",
    "scikit-image>=0.25.2",
    "polars>=1.31.0",
    "psutil>=7.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0",
    "pytest-cov>=5.0",
    "mypy>=1.0",
    "ruff>=0.6",
]
docs = [
    "autodoc_pydantic>=2.0",
    "sphinx-autodoc-typehints>=2.0",
    "sphinx-material>=0.0.36",
    "sphinx-click>=6.0",
    "myst-parser>=4.0",
    "jupyter-sphinx>=0.5",
    "matplotlib>=3.0",
    "pooch>=1.8",
    "wget>=3.2",
    "funlib-show-neuroglancer>=0.2",
    "nbsphinx>=0.9.7",
    "jupytext>=1.16.7",
    "pydata-sphinx-theme",
]

[project.scripts]
volara-cli = "volara.cli:cli"

[project.entry-points."volara.blockwise_tasks"]
aff-agglom = "volara.blockwise:AffAgglom"
argmax = "volara.blockwise:Argmax"
distance-agglom = "volara.blockwise:DistanceAgglom"
extract-frags = "volara.blockwise:ExtractFrags"
graph-mws = "volara.blockwise:GraphMWS"
lut = "volara.blockwise:Relabel"
seeded-extract-frags = "volara.blockwise:SeededExtractFrags"
threshold = "volara.blockwise:Threshold"

[tool.setuptools.dynamic]
version = { attr = "volara.__version__" }

[tool.setuptools.packages.find]
include = ["volara*"]

[tool.setuptools.package-data]
"volara" = ["py.typed"]

[tool.ruff]
lint.select = ["F", "W", "I001"]

[[tool.mypy.overrides]]
module = [
    "scipy.*",
    "daisy.*",
    "zarr.*",
    "networkx.*",
    "mwatershed.*",
    "funlib.math.*",
    "dacapo.*",
    "numba.*",
    "psycopg2.*",
    "matplotlib.*",
    "psutil.*",

]
ignore_missing_imports = true

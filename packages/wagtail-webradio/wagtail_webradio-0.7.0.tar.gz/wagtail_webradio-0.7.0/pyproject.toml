[project]
name = "wagtail_webradio"
dynamic = ["version"]
description = "Manage your web radio - e.g. podcasts, programs - in Wagtail"
readme = "README.md"
requires-python = ">=3.10"
authors = [
  { name = "Cliss XXI", email = "contact@cliss21.com" },
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Environment :: Web Environment",
  "Framework :: Django",
  "Framework :: Wagtail",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: GNU Affero General Public License v3",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
keywords = [
  "wagtail",
  "radio",
]
license = "AGPL-3.0-or-later"
license-files = ["LICENSE"]

dependencies = [
  "filetype ~=1.2.0",
  "django >=4.2",
  "wagtail >=7.0",
]

[project.optional-dependencies]
components = [
  "django-unicorn ==0.43.1",
]

[project.urls]
Repository = "https://framagit.org/cliss21/wagtail-webradio"
Issues = "https://framagit.org/cliss21/wagtail-webradio/-/issues"

[dependency-groups]
testing = [
  "django-webtest ==1.9.13",
  "factory-boy ~=3.3.3",
  "pytest ~=8.4.1",
  "pytest-cov ~=6.2.1",
  "pytest-django ~=4.11.1",
  "pytest-snapshot ~=0.9.0",
  "time-machine ~=2.19.0",
  "wagtail-factories ~=4.3.0",
]
dev = [
  "ruff ~=0.13.0",
  { include-group = "testing" },
]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.sdist]
only-include = ["wagtail_webradio"]

[tool.hatch.build.targets.wheel]
only-include = ["wagtail_webradio"]

[tool.ruff]
extend-exclude = [
  "LC_MESSAGES",
  "locale",
  "tests/migrations/*.py",
  "wagtail_webradio/migrations/*.py",
]
line-length = 80

[tool.ruff.lint]
select = [
  "B",      # flake8-bugbear
  "BLE",    # flake8-blind-except
  "C4",     # flake8-comprehensions
  "DJ",     # flake8-django
  "E",      # pycodestyle
  "F",      # pyflakes
  "I",      # isort
  "RUF100", # unused noqa
  "S",      # flake8-bandit
  "T20",    # flake8-print
  "W",      # warning
]
ignore = ["S101"]

[tool.ruff.lint.isort]
known-first-party = ["wagtail_webradio"]
section-order = [
  "future",
  "standard-library",
  "django",
  "wagtail",
  "third-party",
  "first-party",
  "local-folder",
]

[tool.ruff.lint.isort.sections]
django = ["django"]
wagtail = ["wagtail"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
  "ARG",     # unused function args (pytest fixtures)
  "FBT",     # booleans as positional arguments (@pytest.mark.parametrize)
  "PLR2004", # magic value used in comparison
  "S101",    # asserts allowed in tests
  "S311",    # standard pseudo-random generators are not suitable for cryptographic purposes
]
"**/migrations/*.py" = ["E501", "I001"]

[tool.ruff.format]
docstring-code-format = true

[tool.pytest.ini_options]
markers = ["wip: mark a test as a work in progress"]
testpaths = ["tests"]
DJANGO_SETTINGS_MODULE = "tests.settings"

[tool.coverage.run]
branch = true
source = ["wagtail_webradio"]

[tool.coverage.report]
exclude_lines = [
  "# pragma: no cover",
  "raise NotImplementedError",
]
show_missing = true

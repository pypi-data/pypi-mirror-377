# Generated by Django 4.2.24 on 2025-09-11 12:45

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.fields
import wagtail_webradio.models
import wagtail_webradio.validators


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        ('wagtailcore', '0094_alter_page_locale'),
        ('wagtailimages', '0027_image_description'),
        ('wagtail_webradio', '0004_alter_podcast_sound_file'),
    ]

    operations = [
        migrations.CreateModel(
            name='PodcastPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('description', wagtail.fields.RichTextField(blank=True, verbose_name='description')),
                ('sound_file', models.FileField(blank=True, null=True, upload_to=wagtail_webradio.models.upload_podcast_sound_to, validators=[wagtail_webradio.validators.validate_audio_file_type], verbose_name='sound file')),
                ('sound_external_url', models.URLField(blank=True, verbose_name='sound external URL')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='duration')),
                ('publication_date', models.DateField(default=django.utils.timezone.now, verbose_name='publication date')),
                ('picture', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='picture')),
            ],
            options={
                'verbose_name': 'podcast',
                'verbose_name_plural': 'podcasts',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='RadioShowPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('description', wagtail.fields.RichTextField(blank=True, verbose_name='description')),
                ('contact_phone', models.CharField(blank=True, max_length=20, verbose_name='phone number')),
                ('contact_email', models.EmailField(blank=True, max_length=254, verbose_name='email')),
                ('picture', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='picture')),
            ],
            options={
                'verbose_name': 'radio show',
                'verbose_name_plural': 'radio shows',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TaggedPodcastPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='podcast_tags', to='wagtail_webradio.podcastpage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='taggedpodcast',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag'),
        ),
        migrations.DeleteModel(
            name='GroupRadioShowPermission',
        ),
        migrations.AddField(
            model_name='podcastpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='wagtail_webradio.TaggedPodcastPage', to='taggit.Tag', verbose_name='tags'),
        ),
    ]

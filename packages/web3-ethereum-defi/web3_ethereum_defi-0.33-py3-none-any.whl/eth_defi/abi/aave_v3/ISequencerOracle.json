{"abi":[{"type":"function","name":"latestRoundData","inputs":[],"outputs":[{"name":"roundId","type":"uint80","internalType":"uint80"},{"name":"answer","type":"int256","internalType":"int256"},{"name":"startedAt","type":"uint256","internalType":"uint256"},{"name":"updatedAt","type":"uint256","internalType":"uint256"},{"name":"answeredInRound","type":"uint80","internalType":"uint80"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"latestRoundData()":"feaf968c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"kind\":\"dev\",\"methods\":{\"latestRoundData()\":{\"returns\":{\"answer\":\"The answer for the latest round: 0 if the sequencer is up, 1 if it is down.\",\"answeredInRound\":\"The round ID of the round in which the answer was computed.\",\"roundId\":\"The round ID from the aggregator for which the data was retrieved combined with a phase to ensure that round IDs get larger as time moves forward.\",\"startedAt\":\"The timestamp when the round was started.\",\"updatedAt\":\"The timestamp of the block in which the answer was updated on L1.\"}}},\"title\":\"ISequencerOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"latestRoundData()\":{\"notice\":\"Returns the health status of the sequencer.\"}},\"notice\":\"Defines the basic interface for a Sequencer oracle.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/interfaces/ISequencerOracle.sol\":\"ISequencerOracle\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":aave-v3-core/=src/core/\",\":aave-v3-periphery/=src/periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/\",\":solidity-utils/=lib/solidity-utils/src/\"]},\"sources\":{\"src/contracts/interfaces/ISequencerOracle.sol\":{\"keccak256\":\"0x9266407005c861a810d657f3008a5d886a968d2454913ab88503d5537fb8666b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://457438e54bd816abab6f01f7d403fa445aef4f54ea335bee4efb093439076677\",\"dweb:/ipfs/QmQoHXwG3bJwDmDmcj4J963qaDioXMsg2BnSBokxXSCirW\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}]}],"devdoc":{"kind":"dev","methods":{"latestRoundData()":{"returns":{"answer":"The answer for the latest round: 0 if the sequencer is up, 1 if it is down.","answeredInRound":"The round ID of the round in which the answer was computed.","roundId":"The round ID from the aggregator for which the data was retrieved combined with a phase to ensure that round IDs get larger as time moves forward.","startedAt":"The timestamp when the round was started.","updatedAt":"The timestamp of the block in which the answer was updated on L1."}}},"version":1},"userdoc":{"kind":"user","methods":{"latestRoundData()":{"notice":"Returns the health status of the sequencer."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/","aave-v3-core/=src/core/","aave-v3-periphery/=src/periphery/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/","solidity-utils/=lib/solidity-utils/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/contracts/interfaces/ISequencerOracle.sol":"ISequencerOracle"},"evmVersion":"shanghai","libraries":{}},"sources":{"src/contracts/interfaces/ISequencerOracle.sol":{"keccak256":"0x9266407005c861a810d657f3008a5d886a968d2454913ab88503d5537fb8666b","urls":["bzz-raw://457438e54bd816abab6f01f7d403fa445aef4f54ea335bee4efb093439076677","dweb:/ipfs/QmQoHXwG3bJwDmDmcj4J963qaDioXMsg2BnSBokxXSCirW"],"license":"MIT"}},"version":1},"id":167}
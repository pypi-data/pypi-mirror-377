{ "abi": [ { "type": "function", "name": "claimRewardsFor", "inputs": [ { "name": "_for", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "rewardTokens_", "type": "address[]", "internalType": "address[]" }, { "name": "claimedAmounts_", "type": "uint256[]", "internalType": "uint256[]" } ], "stateMutability": "nonpayable" }, { "type": "function", "name": "deposit", "inputs": [ { "name": "_amount", "type": "uint256", "internalType": "uint256" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "depositTo", "inputs": [ { "name": "_to", "type": "address", "internalType": "address" }, { "name": "_amount", "type": "uint256", "internalType": "uint256" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "getRewardTokenAtIndex", "inputs": [ { "name": "_index", "type": "uint256", "internalType": "uint256" } ], "outputs": [ { "name": "rewardToken_", "type": "address", "internalType": "address" } ], "stateMutability": "view" }, { "type": "function", "name": "getRewardTokenCount", "inputs": [], "outputs": [ { "name": "count_", "type": "uint256", "internalType": "uint256" } ], "stateMutability": "view" }, { "type": "function", "name": "getRewardTokens", "inputs": [], "outputs": [ { "name": "rewardTokens_", "type": "address[]", "internalType": "address[]" } ], "stateMutability": "view" }, { "type": "function", "name": "getTotalHarvestDataForRewardToken", "inputs": [ { "name": "_rewardToken", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "totalHarvestData_", "type": "tuple", "internalType": "struct IStakingWrapper.TotalHarvestData", "components": [ { "name": "integral", "type": "uint128", "internalType": "uint128" }, { "name": "lastCheckpointBalance", "type": "uint128", "internalType": "uint128" } ] } ], "stateMutability": "view" }, { "type": "function", "name": "getUserHarvestDataForRewardToken", "inputs": [ { "name": "_user", "type": "address", "internalType": "address" }, { "name": "_rewardToken", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "userHarvestData_", "type": "tuple", "internalType": "struct IStakingWrapper.UserHarvestData", "components": [ { "name": "integral", "type": "uint128", "internalType": "uint128" }, { "name": "claimableReward", "type": "uint128", "internalType": "uint128" } ] } ], "stateMutability": "view" }, { "type": "function", "name": "isPaused", "inputs": [], "outputs": [ { "name": "isPaused_", "type": "bool", "internalType": "bool" } ], "stateMutability": "view" }, { "type": "function", "name": "withdraw", "inputs": [ { "name": "_amount", "type": "uint256", "internalType": "uint256" }, { "name": "_claimRewards", "type": "bool", "internalType": "bool" } ], "outputs": [ { "name": "rewardTokens_", "type": "address[]", "internalType": "address[]" }, { "name": "claimedAmounts_", "type": "uint256[]", "internalType": "uint256[]" } ], "stateMutability": "nonpayable" }, { "type": "function", "name": "withdrawTo", "inputs": [ { "name": "_to", "type": "address", "internalType": "address" }, { "name": "_amount", "type": "uint256", "internalType": "uint256" }, { "name": "_claimRewardsToHolder", "type": "bool", "internalType": "bool" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "withdrawToOnBehalf", "inputs": [ { "name": "_onBehalf", "type": "address", "internalType": "address" }, { "name": "_to", "type": "address", "internalType": "address" }, { "name": "_amount", "type": "uint256", "internalType": "uint256" }, { "name": "_claimRewardsToHolder", "type": "bool", "internalType": "bool" } ], "outputs": [], "stateMutability": "nonpayable" } ], "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "methodIdentifiers": { "claimRewardsFor(address)": "1ac6d19d", "deposit(uint256)": "b6b55f25", "depositTo(address,uint256)": "ffaad6a5", "getRewardTokenAtIndex(uint256)": "a7d2793f", "getRewardTokenCount()": "82e5d073", "getRewardTokens()": "c4f59f9b", "getTotalHarvestDataForRewardToken(address)": "9655dd61", "getUserHarvestDataForRewardToken(address,address)": "093f6365", "isPaused()": "b187bd26", "withdraw(uint256,bool)": "38d07436", "withdrawTo(address,uint256,bool)": "73e2290c", "withdrawToOnBehalf(address,address,uint256,bool)": "2cfafabe" }, "rawMetadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_for\",\"type\":\"address\"}],\"name\":\"claimRewardsFor\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"rewardTokens_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"claimedAmounts_\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getRewardTokenAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"rewardToken_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"rewardTokens_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"name\":\"getTotalHarvestDataForRewardToken\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"integral\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"lastCheckpointBalance\",\"type\":\"uint128\"}],\"internalType\":\"struct IStakingWrapper.TotalHarvestData\",\"name\":\"totalHarvestData_\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"name\":\"getUserHarvestDataForRewardToken\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"integral\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"claimableReward\",\"type\":\"uint128\"}],\"internalType\":\"struct IStakingWrapper.UserHarvestData\",\"name\":\"userHarvestData_\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isPaused_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_claimRewards\",\"type\":\"bool\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"rewardTokens_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"claimedAmounts_\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_claimRewardsToHolder\",\"type\":\"bool\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_onBehalf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_claimRewardsToHolder\",\"type\":\"bool\"}],\"name\":\"withdrawToOnBehalf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IStakingWrapper interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/release/infrastructure/staking-wrappers/IStakingWrapper.sol\":\"IStakingWrapper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@enzyme/=contracts/\",\":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/release/infrastructure/staking-wrappers/IStakingWrapper.sol\":{\"keccak256\":\"0xaeb9aba4e74eb3243a85090fded7b157969cf83e1f4159b1da2f662a3e7b15be\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://92346911c044a54808d2d425fe58c6dc9594dfafb8d83496f6599e3bc23803d0\",\"dweb:/ipfs/QmYWf7yx9ZfUnP81K1hjvApthqNhpXzUhGuFBm4gX1aDRB\"]}},\"version\":1}", "metadata": { "compiler": { "version": "0.6.12+commit.27d51765" }, "language": "Solidity", "output": { "abi": [ { "inputs": [ { "internalType": "address", "name": "_for", "type": "address" } ], "stateMutability": "nonpayable", "type": "function", "name": "claimRewardsFor", "outputs": [ { "internalType": "address[]", "name": "rewardTokens_", "type": "address[]" }, { "internalType": "uint256[]", "name": "claimedAmounts_", "type": "uint256[]" } ] }, { "inputs": [ { "internalType": "uint256", "name": "_amount", "type": "uint256" } ], "stateMutability": "nonpayable", "type": "function", "name": "deposit" }, { "inputs": [ { "internalType": "address", "name": "_to", "type": "address" }, { "internalType": "uint256", "name": "_amount", "type": "uint256" } ], "stateMutability": "nonpayable", "type": "function", "name": "depositTo" }, { "inputs": [ { "internalType": "uint256", "name": "_index", "type": "uint256" } ], "stateMutability": "view", "type": "function", "name": "getRewardTokenAtIndex", "outputs": [ { "internalType": "address", "name": "rewardToken_", "type": "address" } ] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "getRewardTokenCount", "outputs": [ { "internalType": "uint256", "name": "count_", "type": "uint256" } ] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "getRewardTokens", "outputs": [ { "internalType": "address[]", "name": "rewardTokens_", "type": "address[]" } ] }, { "inputs": [ { "internalType": "address", "name": "_rewardToken", "type": "address" } ], "stateMutability": "view", "type": "function", "name": "getTotalHarvestDataForRewardToken", "outputs": [ { "internalType": "struct IStakingWrapper.TotalHarvestData", "name": "totalHarvestData_", "type": "tuple", "components": [ { "internalType": "uint128", "name": "integral", "type": "uint128" }, { "internalType": "uint128", "name": "lastCheckpointBalance", "type": "uint128" } ] } ] }, { "inputs": [ { "internalType": "address", "name": "_user", "type": "address" }, { "internalType": "address", "name": "_rewardToken", "type": "address" } ], "stateMutability": "view", "type": "function", "name": "getUserHarvestDataForRewardToken", "outputs": [ { "internalType": "struct IStakingWrapper.UserHarvestData", "name": "userHarvestData_", "type": "tuple", "components": [ { "internalType": "uint128", "name": "integral", "type": "uint128" }, { "internalType": "uint128", "name": "claimableReward", "type": "uint128" } ] } ] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "isPaused", "outputs": [ { "internalType": "bool", "name": "isPaused_", "type": "bool" } ] }, { "inputs": [ { "internalType": "uint256", "name": "_amount", "type": "uint256" }, { "internalType": "bool", "name": "_claimRewards", "type": "bool" } ], "stateMutability": "nonpayable", "type": "function", "name": "withdraw", "outputs": [ { "internalType": "address[]", "name": "rewardTokens_", "type": "address[]" }, { "internalType": "uint256[]", "name": "claimedAmounts_", "type": "uint256[]" } ] }, { "inputs": [ { "internalType": "address", "name": "_to", "type": "address" }, { "internalType": "uint256", "name": "_amount", "type": "uint256" }, { "internalType": "bool", "name": "_claimRewardsToHolder", "type": "bool" } ], "stateMutability": "nonpayable", "type": "function", "name": "withdrawTo" }, { "inputs": [ { "internalType": "address", "name": "_onBehalf", "type": "address" }, { "internalType": "address", "name": "_to", "type": "address" }, { "internalType": "uint256", "name": "_amount", "type": "uint256" }, { "internalType": "bool", "name": "_claimRewardsToHolder", "type": "bool" } ], "stateMutability": "nonpayable", "type": "function", "name": "withdrawToOnBehalf" } ], "devdoc": { "kind": "dev", "methods": {}, "version": 1 }, "userdoc": { "kind": "user", "methods": {}, "version": 1 } }, "settings": { "remappings": [ "@enzyme/=contracts/", "@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/", "@openzeppelin/=node_modules/@openzeppelin/", "@uniswap/=node_modules/@uniswap/", "base64-sol/=node_modules/base64-sol/", "ds-test/=lib/forge-std/lib/ds-test/src/", "forge-std/=lib/forge-std/src/", "hardhat-deploy/=node_modules/hardhat-deploy/", "hardhat/=node_modules/hardhat/" ], "optimizer": { "runs": 200, "details": { "peephole": true, "jumpdestRemover": true, "orderLiterals": true, "deduplicate": true, "cse": true, "constantOptimizer": true, "yul": false } }, "metadata": { "bytecodeHash": "none" }, "compilationTarget": { "contracts/release/infrastructure/staking-wrappers/IStakingWrapper.sol": "IStakingWrapper" }, "evmVersion": "istanbul", "libraries": {} }, "sources": { "contracts/release/infrastructure/staking-wrappers/IStakingWrapper.sol": { "keccak256": "0xaeb9aba4e74eb3243a85090fded7b157969cf83e1f4159b1da2f662a3e7b15be", "urls": [ "bzz-raw://92346911c044a54808d2d425fe58c6dc9594dfafb8d83496f6599e3bc23803d0", "dweb:/ipfs/QmYWf7yx9ZfUnP81K1hjvApthqNhpXzUhGuFBm4gX1aDRB" ], "license": "GPL-3.0" } }, "version": 1 }, "id": 258 }

{ "abi": [ { "type": "function", "name": "exitPool", "inputs": [ { "name": "_poolId", "type": "bytes32", "internalType": "bytes32" }, { "name": "_sender", "type": "address", "internalType": "address" }, { "name": "_recipient", "type": "address", "internalType": "address payable" }, { "name": "_request", "type": "tuple", "internalType": "struct ITestBalancerV2Vault.PoolBalanceChange", "components": [ { "name": "assets", "type": "address[]", "internalType": "address[]" }, { "name": "limits", "type": "uint256[]", "internalType": "uint256[]" }, { "name": "userData", "type": "bytes", "internalType": "bytes" }, { "name": "useInternalBalance", "type": "bool", "internalType": "bool" } ] } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "getPoolTokens", "inputs": [ { "name": "_poolId", "type": "bytes32", "internalType": "bytes32" } ], "outputs": [ { "name": "tokens_", "type": "address[]", "internalType": "address[]" }, { "name": "balances_", "type": "uint256[]", "internalType": "uint256[]" }, { "name": "lastChangeBlock_", "type": "uint256", "internalType": "uint256" } ], "stateMutability": "view" }, { "type": "function", "name": "joinPool", "inputs": [ { "name": "_poolId", "type": "bytes32", "internalType": "bytes32" }, { "name": "_sender", "type": "address", "internalType": "address" }, { "name": "_recipient", "type": "address", "internalType": "address" }, { "name": "_request", "type": "tuple", "internalType": "struct ITestBalancerV2Vault.PoolBalanceChange", "components": [ { "name": "assets", "type": "address[]", "internalType": "address[]" }, { "name": "limits", "type": "uint256[]", "internalType": "uint256[]" }, { "name": "userData", "type": "bytes", "internalType": "bytes" }, { "name": "useInternalBalance", "type": "bool", "internalType": "bool" } ] } ], "outputs": [], "stateMutability": "payable" } ], "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "methodIdentifiers": { "exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))": "8bdb3913", "getPoolTokens(bytes32)": "f94d4668", "joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))": "b95cac28" }, "rawMetadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"limits\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"useInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct ITestBalancerV2Vault.PoolBalanceChange\",\"name\":\"_request\",\"type\":\"tuple\"}],\"name\":\"exitPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_poolId\",\"type\":\"bytes32\"}],\"name\":\"getPoolTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances_\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"limits\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"useInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct ITestBalancerV2Vault.PoolBalanceChange\",\"name\":\"_request\",\"type\":\"tuple\"}],\"name\":\"joinPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ITestBalancerV2Vault Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/interfaces/ITestBalancerV2Vault.sol\":\"ITestBalancerV2Vault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@enzyme/=contracts/\",\":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/test/interfaces/ITestBalancerV2Vault.sol\":{\"keccak256\":\"0x161510ea039ad3c505dbce7762cf1c58c6be4cc1bdbee9fcab9cd73f25496fba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f11f46d2990bd4f7c17bab5de7fe3351ca38fac7852158f80a803577d4b3e2ad\",\"dweb:/ipfs/QmQAhNqCshWcSAGhDKU5dmL6BPU9SmMGAPxzi2iptYseZK\"]}},\"version\":1}", "metadata": { "compiler": { "version": "0.6.12+commit.27d51765" }, "language": "Solidity", "output": { "abi": [ { "inputs": [ { "internalType": "bytes32", "name": "_poolId", "type": "bytes32" }, { "internalType": "address", "name": "_sender", "type": "address" }, { "internalType": "address payable", "name": "_recipient", "type": "address" }, { "internalType": "struct ITestBalancerV2Vault.PoolBalanceChange", "name": "_request", "type": "tuple", "components": [ { "internalType": "address[]", "name": "assets", "type": "address[]" }, { "internalType": "uint256[]", "name": "limits", "type": "uint256[]" }, { "internalType": "bytes", "name": "userData", "type": "bytes" }, { "internalType": "bool", "name": "useInternalBalance", "type": "bool" } ] } ], "stateMutability": "nonpayable", "type": "function", "name": "exitPool" }, { "inputs": [ { "internalType": "bytes32", "name": "_poolId", "type": "bytes32" } ], "stateMutability": "view", "type": "function", "name": "getPoolTokens", "outputs": [ { "internalType": "address[]", "name": "tokens_", "type": "address[]" }, { "internalType": "uint256[]", "name": "balances_", "type": "uint256[]" }, { "internalType": "uint256", "name": "lastChangeBlock_", "type": "uint256" } ] }, { "inputs": [ { "internalType": "bytes32", "name": "_poolId", "type": "bytes32" }, { "internalType": "address", "name": "_sender", "type": "address" }, { "internalType": "address", "name": "_recipient", "type": "address" }, { "internalType": "struct ITestBalancerV2Vault.PoolBalanceChange", "name": "_request", "type": "tuple", "components": [ { "internalType": "address[]", "name": "assets", "type": "address[]" }, { "internalType": "uint256[]", "name": "limits", "type": "uint256[]" }, { "internalType": "bytes", "name": "userData", "type": "bytes" }, { "internalType": "bool", "name": "useInternalBalance", "type": "bool" } ] } ], "stateMutability": "payable", "type": "function", "name": "joinPool" } ], "devdoc": { "kind": "dev", "methods": {}, "version": 1 }, "userdoc": { "kind": "user", "methods": {}, "version": 1 } }, "settings": { "remappings": [ "@enzyme/=contracts/", "@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/", "@openzeppelin/=node_modules/@openzeppelin/", "@uniswap/=node_modules/@uniswap/", "base64-sol/=node_modules/base64-sol/", "ds-test/=lib/forge-std/lib/ds-test/src/", "forge-std/=lib/forge-std/src/", "hardhat-deploy/=node_modules/hardhat-deploy/", "hardhat/=node_modules/hardhat/" ], "optimizer": { "runs": 200, "details": { "peephole": true, "jumpdestRemover": true, "orderLiterals": true, "deduplicate": true, "cse": true, "constantOptimizer": true, "yul": false } }, "metadata": { "bytecodeHash": "none" }, "compilationTarget": { "contracts/test/interfaces/ITestBalancerV2Vault.sol": "ITestBalancerV2Vault" }, "evmVersion": "istanbul", "libraries": {} }, "sources": { "contracts/test/interfaces/ITestBalancerV2Vault.sol": { "keccak256": "0x161510ea039ad3c505dbce7762cf1c58c6be4cc1bdbee9fcab9cd73f25496fba", "urls": [ "bzz-raw://f11f46d2990bd4f7c17bab5de7fe3351ca38fac7852158f80a803577d4b3e2ad", "dweb:/ipfs/QmQAhNqCshWcSAGhDKU5dmL6BPU9SmMGAPxzi2iptYseZK" ], "license": "GPL-3.0" } }, "version": 1 }, "id": 380 }

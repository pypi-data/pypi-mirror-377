{ "abi": [ { "type": "function", "name": "getDispatcher", "inputs": [], "outputs": [ { "name": "dispatcher_", "type": "address", "internalType": "address" } ], "stateMutability": "view" }, { "type": "function", "name": "getProtocolFeeReserveLib", "inputs": [], "outputs": [ { "name": "protocolFeeReserveLib_", "type": "address", "internalType": "address" } ], "stateMutability": "view" }, { "type": "function", "name": "init", "inputs": [ { "name": "_dispatcher", "type": "address", "internalType": "address" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "proxiableUUID", "inputs": [], "outputs": [ { "name": "uuid_", "type": "bytes32", "internalType": "bytes32" } ], "stateMutability": "pure" }, { "type": "function", "name": "setProtocolFeeReserveLib", "inputs": [ { "name": "_nextProtocolFeeReserveLib", "type": "address", "internalType": "address" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "event", "name": "MlnTokenBalanceWithdrawn", "inputs": [ { "name": "to", "type": "address", "indexed": true, "internalType": "address" }, { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" } ], "anonymous": false }, { "type": "event", "name": "ProtocolFeeReserveLibSet", "inputs": [ { "name": "nextProtocolFeeReserveLib", "type": "address", "indexed": false, "internalType": "address" } ], "anonymous": false }, { "type": "event", "name": "SharesBoughtBack", "inputs": [ { "name": "vaultProxy", "type": "address", "indexed": true, "internalType": "address" }, { "name": "sharesAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "mlnValue", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "mlnBurned", "type": "uint256", "indexed": false, "internalType": "uint256" } ], "anonymous": false } ], "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "methodIdentifiers": { "getDispatcher()": "ebb3d589", "getProtocolFeeReserveLib()": "b3e2546b", "init(address)": "19ab453c", "proxiableUUID()": "52d1902d", "setProtocolFeeReserveLib(address)": "c75a882a" }, "rawMetadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MlnTokenBalanceWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nextProtocolFeeReserveLib\",\"type\":\"address\"}],\"name\":\"ProtocolFeeReserveLibSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vaultProxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mlnValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mlnBurned\",\"type\":\"uint256\"}],\"name\":\"SharesBoughtBack\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getDispatcher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"dispatcher_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeReserveLib\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"protocolFeeReserveLib_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dispatcher\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"uuid_\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nextProtocolFeeReserveLib\",\"type\":\"address\"}],\"name\":\"setProtocolFeeReserveLib\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"details\":\"Each next base implementation inherits the previous base implementation, e.g., `ProtocolFeeReserveLibBase2 is ProtocolFeeReserveLibBase1` DO NOT EDIT CONTRACT.\",\"kind\":\"dev\",\"methods\":{\"getDispatcher()\":{\"returns\":{\"dispatcher_\":\"The `dispatcher` variable value\"}},\"getProtocolFeeReserveLib()\":{\"returns\":{\"protocolFeeReserveLib_\":\"The address of the ProtocolFeeReserveLib target\"}},\"init(address)\":{\"details\":\"Serves as a pseudo-constructor\",\"params\":{\"_dispatcher\":\"The Dispatcher contract\"}},\"proxiableUUID()\":{\"returns\":{\"uuid_\":\"The bytes32 hash representing the UUID\"}},\"setProtocolFeeReserveLib(address)\":{\"details\":\"This function is absolutely critical. __updateCodeAddress() validates that the target is a valid Proxiable contract instance. Does not block _nextProtocolFeeReserveLib from being the same as the current ProtocolFeeReserveLib\",\"params\":{\"_nextProtocolFeeReserveLib\":\"The address to set as the ProtocolFeeReserveLib\"}}},\"title\":\"ProtocolFeeReserveLibBase1 Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getDispatcher()\":{\"notice\":\"Gets the `dispatcher` variable\"},\"getProtocolFeeReserveLib()\":{\"notice\":\"Gets the ProtocolFeeReserveLib target for the ProtocolFeeReserveProxy\"},\"init(address)\":{\"notice\":\"Initializes the ProtocolFeeReserveProxy with core configuration\"},\"proxiableUUID()\":{\"notice\":\"Returns a unique bytes32 hash for ProtocolFeeReserveLib instances\"},\"setProtocolFeeReserveLib(address)\":{\"notice\":\"Sets the ProtocolFeeReserveLib target for the ProtocolFeeReserveProxy\"}},\"notice\":\"A base implementation for ProtocolFeeReserveLib\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/persistent/protocol-fee-reserve/bases/ProtocolFeeReserveLibBase1.sol\":\"ProtocolFeeReserveLibBase1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@enzyme/=contracts/\",\":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/persistent/dispatcher/IDispatcher.sol\":{\"keccak256\":\"0x0e6b0e6cf325d4f6332b8eb2b3c446b2ef3ca8456bdf0d12318d0fd9e90aeb30\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2f159223517ca72c36852d90e45cc53d1840861d6e1a2a37f7901d7e48bc94d0\",\"dweb:/ipfs/QmZKZnppYFEF8hdTxbA1g3NgWMopwHRey5KdzyJXNGgCUJ\"]},\"contracts/persistent/protocol-fee-reserve/bases/ProtocolFeeReserveLibBase1.sol\":{\"keccak256\":\"0x06b6f8ad9599628e932275a3cdf189197f4ecc6eabedcd19cbcffa8e8e84c92c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://460a870f1f55f3afee3d966af8f3a17d29558215d2147822accde9e0cd3ec5f1\",\"dweb:/ipfs/QmPxmw28R9PNzymXrA9Jpo353ZT7DFxVn9vciy5rh9xQ2x\"]},\"contracts/persistent/protocol-fee-reserve/bases/ProtocolFeeReserveLibBaseCore.sol\":{\"keccak256\":\"0xf3f0ab84492ace625caae9572cbf3dc25f7a9ccdfee67d38fa8e6c4a2c679a92\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8b32274866f86ec7f13cc2349da3136d80a7a5968dfbad2361fd47d6013ed83f\",\"dweb:/ipfs/QmaWGGkaCfzckGfzSACzyL1Jyw2n24iT1oHZw8jTw9pb9Z\"]},\"contracts/persistent/protocol-fee-reserve/utils/ProtocolFeeProxyConstants.sol\":{\"keccak256\":\"0x2ae2574c42812a6c7dedc69f37176132d7f55c36ca22672a56b3240a164de7ea\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1debdcb650ec03dff95ca515206e4850b5fcdb5bb9151cc88019135fee8651f8\",\"dweb:/ipfs/Qmea7QFovEcXGPVSZp8NcAkEzWo94ejUkcwxT7Z9ybWFPe\"]},\"contracts/persistent/protocol-fee-reserve/utils/ProxiableProtocolFeeReserveLib.sol\":{\"keccak256\":\"0xefc9befd638e13010c556c2d691949a3ce51171de8007e2daa536b368ad78868\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fb6d3f317ec683b1e6b31984bbf65d6d727e7b3f9057917b9f3b5c03f90eb7fd\",\"dweb:/ipfs/QmWmQKoMgavRRMbMEGhX5qGvxfpDkLfwEgUEqYsnAxTt6T\"]}},\"version\":1}", "metadata": { "compiler": { "version": "0.6.12+commit.27d51765" }, "language": "Solidity", "output": { "abi": [ { "inputs": [ { "internalType": "address", "name": "to", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "amount", "type": "uint256", "indexed": false } ], "type": "event", "name": "MlnTokenBalanceWithdrawn", "anonymous": false }, { "inputs": [ { "internalType": "address", "name": "nextProtocolFeeReserveLib", "type": "address", "indexed": false } ], "type": "event", "name": "ProtocolFeeReserveLibSet", "anonymous": false }, { "inputs": [ { "internalType": "address", "name": "vaultProxy", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "sharesAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "mlnValue", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "mlnBurned", "type": "uint256", "indexed": false } ], "type": "event", "name": "SharesBoughtBack", "anonymous": false }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "getDispatcher", "outputs": [ { "internalType": "address", "name": "dispatcher_", "type": "address" } ] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "getProtocolFeeReserveLib", "outputs": [ { "internalType": "address", "name": "protocolFeeReserveLib_", "type": "address" } ] }, { "inputs": [ { "internalType": "address", "name": "_dispatcher", "type": "address" } ], "stateMutability": "nonpayable", "type": "function", "name": "init" }, { "inputs": [], "stateMutability": "pure", "type": "function", "name": "proxiableUUID", "outputs": [ { "internalType": "bytes32", "name": "uuid_", "type": "bytes32" } ] }, { "inputs": [ { "internalType": "address", "name": "_nextProtocolFeeReserveLib", "type": "address" } ], "stateMutability": "nonpayable", "type": "function", "name": "setProtocolFeeReserveLib" } ], "devdoc": { "kind": "dev", "methods": { "getDispatcher()": { "returns": { "dispatcher_": "The `dispatcher` variable value" } }, "getProtocolFeeReserveLib()": { "returns": { "protocolFeeReserveLib_": "The address of the ProtocolFeeReserveLib target" } }, "init(address)": { "details": "Serves as a pseudo-constructor", "params": { "_dispatcher": "The Dispatcher contract" } }, "proxiableUUID()": { "returns": { "uuid_": "The bytes32 hash representing the UUID" } }, "setProtocolFeeReserveLib(address)": { "details": "This function is absolutely critical. __updateCodeAddress() validates that the target is a valid Proxiable contract instance. Does not block _nextProtocolFeeReserveLib from being the same as the current ProtocolFeeReserveLib", "params": { "_nextProtocolFeeReserveLib": "The address to set as the ProtocolFeeReserveLib" } } }, "version": 1 }, "userdoc": { "kind": "user", "methods": { "getDispatcher()": { "notice": "Gets the `dispatcher` variable" }, "getProtocolFeeReserveLib()": { "notice": "Gets the ProtocolFeeReserveLib target for the ProtocolFeeReserveProxy" }, "init(address)": { "notice": "Initializes the ProtocolFeeReserveProxy with core configuration" }, "proxiableUUID()": { "notice": "Returns a unique bytes32 hash for ProtocolFeeReserveLib instances" }, "setProtocolFeeReserveLib(address)": { "notice": "Sets the ProtocolFeeReserveLib target for the ProtocolFeeReserveProxy" } }, "version": 1 } }, "settings": { "remappings": [ "@enzyme/=contracts/", "@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/", "@openzeppelin/=node_modules/@openzeppelin/", "@uniswap/=node_modules/@uniswap/", "base64-sol/=node_modules/base64-sol/", "ds-test/=lib/forge-std/lib/ds-test/src/", "forge-std/=lib/forge-std/src/", "hardhat-deploy/=node_modules/hardhat-deploy/", "hardhat/=node_modules/hardhat/" ], "optimizer": { "runs": 200, "details": { "peephole": true, "jumpdestRemover": true, "orderLiterals": true, "deduplicate": true, "cse": true, "constantOptimizer": true, "yul": false } }, "metadata": { "bytecodeHash": "none" }, "compilationTarget": { "contracts/persistent/protocol-fee-reserve/bases/ProtocolFeeReserveLibBase1.sol": "ProtocolFeeReserveLibBase1" }, "evmVersion": "istanbul", "libraries": {} }, "sources": { "contracts/persistent/dispatcher/IDispatcher.sol": { "keccak256": "0x0e6b0e6cf325d4f6332b8eb2b3c446b2ef3ca8456bdf0d12318d0fd9e90aeb30", "urls": [ "bzz-raw://2f159223517ca72c36852d90e45cc53d1840861d6e1a2a37f7901d7e48bc94d0", "dweb:/ipfs/QmZKZnppYFEF8hdTxbA1g3NgWMopwHRey5KdzyJXNGgCUJ" ], "license": "GPL-3.0" }, "contracts/persistent/protocol-fee-reserve/bases/ProtocolFeeReserveLibBase1.sol": { "keccak256": "0x06b6f8ad9599628e932275a3cdf189197f4ecc6eabedcd19cbcffa8e8e84c92c", "urls": [ "bzz-raw://460a870f1f55f3afee3d966af8f3a17d29558215d2147822accde9e0cd3ec5f1", "dweb:/ipfs/QmPxmw28R9PNzymXrA9Jpo353ZT7DFxVn9vciy5rh9xQ2x" ], "license": "GPL-3.0" }, "contracts/persistent/protocol-fee-reserve/bases/ProtocolFeeReserveLibBaseCore.sol": { "keccak256": "0xf3f0ab84492ace625caae9572cbf3dc25f7a9ccdfee67d38fa8e6c4a2c679a92", "urls": [ "bzz-raw://8b32274866f86ec7f13cc2349da3136d80a7a5968dfbad2361fd47d6013ed83f", "dweb:/ipfs/QmaWGGkaCfzckGfzSACzyL1Jyw2n24iT1oHZw8jTw9pb9Z" ], "license": "GPL-3.0" }, "contracts/persistent/protocol-fee-reserve/utils/ProtocolFeeProxyConstants.sol": { "keccak256": "0x2ae2574c42812a6c7dedc69f37176132d7f55c36ca22672a56b3240a164de7ea", "urls": [ "bzz-raw://1debdcb650ec03dff95ca515206e4850b5fcdb5bb9151cc88019135fee8651f8", "dweb:/ipfs/Qmea7QFovEcXGPVSZp8NcAkEzWo94ejUkcwxT7Z9ybWFPe" ], "license": "GPL-3.0" }, "contracts/persistent/protocol-fee-reserve/utils/ProxiableProtocolFeeReserveLib.sol": { "keccak256": "0xefc9befd638e13010c556c2d691949a3ce51171de8007e2daa536b368ad78868", "urls": [ "bzz-raw://fb6d3f317ec683b1e6b31984bbf65d6d727e7b3f9057917b9f3b5c03f90eb7fd", "dweb:/ipfs/QmWmQKoMgavRRMbMEGhX5qGvxfpDkLfwEgUEqYsnAxTt6T" ], "license": "GPL-3.0" } }, "version": 1 }, "id": 53 }

{ "abi": [ { "type": "function", "name": "claimToken", "inputs": [ { "name": "_token", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "claimedAmount_", "type": "uint256", "internalType": "uint256" } ], "stateMutability": "nonpayable" }, { "type": "function", "name": "claimTokenAmountTo", "inputs": [ { "name": "_token", "type": "address", "internalType": "address" }, { "name": "_amount", "type": "uint256", "internalType": "uint256" }, { "name": "_to", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "claimedAmount_", "type": "uint256", "internalType": "uint256" } ], "stateMutability": "nonpayable" }, { "type": "function", "name": "getSplitPercentageForUser", "inputs": [ { "name": "_user", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "splitPercentage_", "type": "uint256", "internalType": "uint256" } ], "stateMutability": "view" }, { "type": "function", "name": "getTokenBalClaimableForUser", "inputs": [ { "name": "_user", "type": "address", "internalType": "address" }, { "name": "_token", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "balClaimable_", "type": "uint256", "internalType": "uint256" } ], "stateMutability": "view" }, { "type": "function", "name": "getTokenBalClaimedForUser", "inputs": [ { "name": "_user", "type": "address", "internalType": "address" }, { "name": "_token", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "balClaimed_", "type": "uint256", "internalType": "uint256" } ], "stateMutability": "view" }, { "type": "function", "name": "getTotalTokenBalClaimed", "inputs": [ { "name": "_token", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "totalBalClaimed_", "type": "uint256", "internalType": "uint256" } ], "stateMutability": "view" }, { "type": "event", "name": "SplitPercentageSet", "inputs": [ { "name": "user", "type": "address", "indexed": true, "internalType": "address" }, { "name": "percentage", "type": "uint256", "indexed": false, "internalType": "uint256" } ], "anonymous": false }, { "type": "event", "name": "TokenClaimed", "inputs": [ { "name": "user", "type": "address", "indexed": true, "internalType": "address" }, { "name": "token", "type": "address", "indexed": true, "internalType": "address" }, { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" } ], "anonymous": false } ], "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "methodIdentifiers": { "claimToken(address)": "32f289cf", "claimTokenAmountTo(address,uint256,address)": "0f0ee54c", "getSplitPercentageForUser(address)": "8a3503fa", "getTokenBalClaimableForUser(address,address)": "cb482df6", "getTokenBalClaimedForUser(address,address)": "41898182", "getTotalTokenBalClaimed(address)": "0cffb185" }, "rawMetadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"SplitPercentageSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimedAmount_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"claimTokenAmountTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimedAmount_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getSplitPercentageForUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"splitPercentage_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokenBalClaimableForUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balClaimable_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokenBalClaimedForUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balClaimed_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTotalTokenBalClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBalClaimed_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"details\":\"Inheriting contract must call __setSplitRatio() to set the fixed participants ratio\",\"kind\":\"dev\",\"methods\":{\"claimToken(address)\":{\"params\":{\"_token\":\"The token to claim\"},\"returns\":{\"claimedAmount_\":\"The token amount claimed\"}},\"claimTokenAmountTo(address,uint256,address)\":{\"params\":{\"_amount\":\"The amount to claim\",\"_to\":\"The recipient of the claimed token\",\"_token\":\"The token to claim\"},\"returns\":{\"claimedAmount_\":\"The token amount claimed\"}},\"getSplitPercentageForUser(address)\":{\"params\":{\"_user\":\"The user\"},\"returns\":{\"splitPercentage_\":\"The split percentage\"}},\"getTokenBalClaimableForUser(address,address)\":{\"params\":{\"_token\":\"The token\",\"_user\":\"The user\"},\"returns\":{\"balClaimable_\":\"The claimable token balance\"}},\"getTokenBalClaimedForUser(address,address)\":{\"params\":{\"_token\":\"The token\",\"_user\":\"The user\"},\"returns\":{\"balClaimed_\":\"The balance claimed\"}},\"getTotalTokenBalClaimed(address)\":{\"params\":{\"_token\":\"The token\"},\"returns\":{\"totalBalClaimed_\":\"The total balance claimed\"}}},\"title\":\"TreasurySplitterMixin Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimToken(address)\":{\"notice\":\"Claims the full amount of a specified token\"},\"claimTokenAmountTo(address,uint256,address)\":{\"notice\":\"Claims a specified token amount to a specified address\"},\"getSplitPercentageForUser(address)\":{\"notice\":\"Gets the split ratio percentage for a given user\"},\"getTokenBalClaimableForUser(address,address)\":{\"notice\":\"Gets the token balance claimable for a specified user\"},\"getTokenBalClaimedForUser(address,address)\":{\"notice\":\"Gets the token balance already claimed for a given user\"},\"getTotalTokenBalClaimed(address)\":{\"notice\":\"Gets the total token balance already claimed\"}},\"notice\":\"A mixin contract for splitting all tokens amongst participants at a fixed ratio\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/persistent/shares-splitter/TreasurySplitterMixin.sol\":\"TreasurySplitterMixin\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@enzyme/=contracts/\",\":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/persistent/shares-splitter/TreasurySplitterMixin.sol\":{\"keccak256\":\"0x5884f1ae25251dc7727e7f019760b69a1e851c4d681bf91492af521bf4f74057\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3694db028974441238d79f22e85f69f89a8efa0906d30e7b4a34aad8a21f7790\",\"dweb:/ipfs/QmQPhjhosPL4S2E8tvq6ZKbp267DXLAyE145J7WVHGJhKa\"]},\"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}", "metadata": { "compiler": { "version": "0.6.12+commit.27d51765" }, "language": "Solidity", "output": { "abi": [ { "inputs": [ { "internalType": "address", "name": "user", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "percentage", "type": "uint256", "indexed": false } ], "type": "event", "name": "SplitPercentageSet", "anonymous": false }, { "inputs": [ { "internalType": "address", "name": "user", "type": "address", "indexed": true }, { "internalType": "address", "name": "token", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "amount", "type": "uint256", "indexed": false } ], "type": "event", "name": "TokenClaimed", "anonymous": false }, { "inputs": [ { "internalType": "address", "name": "_token", "type": "address" } ], "stateMutability": "nonpayable", "type": "function", "name": "claimToken", "outputs": [ { "internalType": "uint256", "name": "claimedAmount_", "type": "uint256" } ] }, { "inputs": [ { "internalType": "address", "name": "_token", "type": "address" }, { "internalType": "uint256", "name": "_amount", "type": "uint256" }, { "internalType": "address", "name": "_to", "type": "address" } ], "stateMutability": "nonpayable", "type": "function", "name": "claimTokenAmountTo", "outputs": [ { "internalType": "uint256", "name": "claimedAmount_", "type": "uint256" } ] }, { "inputs": [ { "internalType": "address", "name": "_user", "type": "address" } ], "stateMutability": "view", "type": "function", "name": "getSplitPercentageForUser", "outputs": [ { "internalType": "uint256", "name": "splitPercentage_", "type": "uint256" } ] }, { "inputs": [ { "internalType": "address", "name": "_user", "type": "address" }, { "internalType": "address", "name": "_token", "type": "address" } ], "stateMutability": "view", "type": "function", "name": "getTokenBalClaimableForUser", "outputs": [ { "internalType": "uint256", "name": "balClaimable_", "type": "uint256" } ] }, { "inputs": [ { "internalType": "address", "name": "_user", "type": "address" }, { "internalType": "address", "name": "_token", "type": "address" } ], "stateMutability": "view", "type": "function", "name": "getTokenBalClaimedForUser", "outputs": [ { "internalType": "uint256", "name": "balClaimed_", "type": "uint256" } ] }, { "inputs": [ { "internalType": "address", "name": "_token", "type": "address" } ], "stateMutability": "view", "type": "function", "name": "getTotalTokenBalClaimed", "outputs": [ { "internalType": "uint256", "name": "totalBalClaimed_", "type": "uint256" } ] } ], "devdoc": { "kind": "dev", "methods": { "claimToken(address)": { "params": { "_token": "The token to claim" }, "returns": { "claimedAmount_": "The token amount claimed" } }, "claimTokenAmountTo(address,uint256,address)": { "params": { "_amount": "The amount to claim", "_to": "The recipient of the claimed token", "_token": "The token to claim" }, "returns": { "claimedAmount_": "The token amount claimed" } }, "getSplitPercentageForUser(address)": { "params": { "_user": "The user" }, "returns": { "splitPercentage_": "The split percentage" } }, "getTokenBalClaimableForUser(address,address)": { "params": { "_token": "The token", "_user": "The user" }, "returns": { "balClaimable_": "The claimable token balance" } }, "getTokenBalClaimedForUser(address,address)": { "params": { "_token": "The token", "_user": "The user" }, "returns": { "balClaimed_": "The balance claimed" } }, "getTotalTokenBalClaimed(address)": { "params": { "_token": "The token" }, "returns": { "totalBalClaimed_": "The total balance claimed" } } }, "version": 1 }, "userdoc": { "kind": "user", "methods": { "claimToken(address)": { "notice": "Claims the full amount of a specified token" }, "claimTokenAmountTo(address,uint256,address)": { "notice": "Claims a specified token amount to a specified address" }, "getSplitPercentageForUser(address)": { "notice": "Gets the split ratio percentage for a given user" }, "getTokenBalClaimableForUser(address,address)": { "notice": "Gets the token balance claimable for a specified user" }, "getTokenBalClaimedForUser(address,address)": { "notice": "Gets the token balance already claimed for a given user" }, "getTotalTokenBalClaimed(address)": { "notice": "Gets the total token balance already claimed" } }, "version": 1 } }, "settings": { "remappings": [ "@enzyme/=contracts/", "@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/", "@openzeppelin/=node_modules/@openzeppelin/", "@uniswap/=node_modules/@uniswap/", "base64-sol/=node_modules/base64-sol/", "ds-test/=lib/forge-std/lib/ds-test/src/", "forge-std/=lib/forge-std/src/", "hardhat-deploy/=node_modules/hardhat-deploy/", "hardhat/=node_modules/hardhat/" ], "optimizer": { "runs": 200, "details": { "peephole": true, "jumpdestRemover": true, "orderLiterals": true, "deduplicate": true, "cse": true, "constantOptimizer": true, "yul": false } }, "metadata": { "bytecodeHash": "none" }, "compilationTarget": { "contracts/persistent/shares-splitter/TreasurySplitterMixin.sol": "TreasurySplitterMixin" }, "evmVersion": "istanbul", "libraries": {} }, "sources": { "contracts/persistent/shares-splitter/TreasurySplitterMixin.sol": { "keccak256": "0x5884f1ae25251dc7727e7f019760b69a1e851c4d681bf91492af521bf4f74057", "urls": [ "bzz-raw://3694db028974441238d79f22e85f69f89a8efa0906d30e7b4a34aad8a21f7790", "dweb:/ipfs/QmQPhjhosPL4S2E8tvq6ZKbp267DXLAyE145J7WVHGJhKa" ], "license": "GPL-3.0" }, "node_modules/@openzeppelin/contracts/math/SafeMath.sol": { "keccak256": "0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52", "urls": [ "bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c", "dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR" ], "license": "MIT" }, "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": { "keccak256": "0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3", "urls": [ "bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e", "dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE" ], "license": "MIT" }, "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": { "keccak256": "0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5", "urls": [ "bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08", "dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC" ], "license": "MIT" }, "node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol": { "keccak256": "0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc", "urls": [ "bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a", "dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ" ], "license": "MIT" }, "node_modules/@openzeppelin/contracts/utils/Address.sol": { "keccak256": "0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea", "urls": [ "bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c", "dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN" ], "license": "MIT" }, "node_modules/@openzeppelin/contracts/utils/Context.sol": { "keccak256": "0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0", "urls": [ "bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f", "dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96" ], "license": "MIT" } }, "version": 1 }, "id": 61 }

{"abi":[{"type":"function","name":"ADDRESSES_PROVIDER","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IPoolAddressesProvider"}],"stateMutability":"view"},{"type":"function","name":"POOL","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IPool"}],"stateMutability":"view"},{"type":"function","name":"executeOperation","inputs":[{"name":"assets","type":"address[]","internalType":"address[]"},{"name":"amounts","type":"uint256[]","internalType":"uint256[]"},{"name":"premiums","type":"uint256[]","internalType":"uint256[]"},{"name":"initiator","type":"address","internalType":"address"},{"name":"params","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"ADDRESSES_PROVIDER()":"0542975c","POOL()":"7535d246","executeOperation(address[],uint256[],uint256[],address,bytes)":"920f5c84"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ADDRESSES_PROVIDER\",\"outputs\":[{\"internalType\":\"contract IPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOL\",\"outputs\":[{\"internalType\":\"contract IPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"premiums\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"executeOperation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"kind\":\"dev\",\"methods\":{\"executeOperation(address[],uint256[],uint256[],address,bytes)\":{\"details\":\"Ensure that the contract can return the debt + premium, e.g., has      enough funds to repay and has approved the Pool to pull the total amount\",\"params\":{\"amounts\":\"The amounts of the flash-borrowed assets\",\"assets\":\"The addresses of the flash-borrowed assets\",\"initiator\":\"The address of the flashloan initiator\",\"params\":\"The byte-encoded params passed when initiating the flashloan\",\"premiums\":\"The fee of each flash-borrowed asset\"},\"returns\":{\"_0\":\"True if the execution of the operation succeeds, false otherwise\"}}},\"title\":\"FlashLoanReceiverBase\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeOperation(address[],uint256[],uint256[],address,bytes)\":{\"notice\":\"Executes an operation after receiving the flash-borrowed assets\"}},\"notice\":\"Base contract to develop a flashloan-receiver contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/misc/flashloan/base/FlashLoanReceiverBase.sol\":\"FlashLoanReceiverBase\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":aave-v3-core/=src/core/\",\":aave-v3-periphery/=src/periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/\",\":solidity-utils/=lib/solidity-utils/src/\"]},\"sources\":{\"src/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xbdc711f62e9b8a3722b829e72c90401213a5fd31dd99d758d36d6a9bebed5346\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a94f5509980c77b5c980abee6a5b051b85eec34c295cf811cd82ece97c6508b1\",\"dweb:/ipfs/QmY2TzCkuPUfesSTKejEWM5xQZYN2PpAsfJwbj8cr8pRjt\"]},\"src/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0xa60921cf54e91ca8db038effeffc876089b2e72dbf01d68a10ff461770d345e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0de2fd03bf5cd6ae8718a486e5d615c67b260d0608b9fb7076888a4bfaa0e4b4\",\"dweb:/ipfs/QmXpdmxMugyJcBFAGJEruB78bkkuTwrH9esYRaS6wiQoMs\"]},\"src/contracts/misc/flashloan/base/FlashLoanReceiverBase.sol\":{\"keccak256\":\"0xcc7b6e7a0374241c6d612ace89b9402e162c172b17f855f45a5eb0ac525b16b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50439aaa3f33c756add657c01bad0d6e4c85964c95516de96b2c91c09da7dfab\",\"dweb:/ipfs/QmXPC6oYCcSGoBdEAos4WT9QNqnmLGV4gmKdqKzMv2hEgs\"]},\"src/contracts/misc/flashloan/interfaces/IFlashLoanReceiver.sol\":{\"keccak256\":\"0x1906b9f13bf1f6e49a67985cef3d4dc5b43aae608d9aed72baf4e99892bca066\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dca31981d592762dcc3a54bec3a808eae1c967a440fa7452a56702387f6e2e4e\",\"dweb:/ipfs/QmdyDUJ1dRLqY1q46nK8u43cceCt3EFARv6VrfQKqBdRMS\"]},\"src/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0xee3ca1b61a7cd2e7f88913c7e57d03346909a10a7e2965d2dda6bb1296f44423\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0605fd702844db9cc505c2411417e40607a9e94d1a488ecc3a70109394f315d\",\"dweb:/ipfs/QmW3UD8oSnAexGgUX6udKqHtC5F4PdR98EPnyETacMtKhY\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"ADDRESSES_PROVIDER","outputs":[{"internalType":"contract IPoolAddressesProvider","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"POOL","outputs":[{"internalType":"contract IPool","name":"","type":"address"}]},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"premiums","type":"uint256[]"},{"internalType":"address","name":"initiator","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"executeOperation","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"executeOperation(address[],uint256[],uint256[],address,bytes)":{"details":"Ensure that the contract can return the debt + premium, e.g., has      enough funds to repay and has approved the Pool to pull the total amount","params":{"amounts":"The amounts of the flash-borrowed assets","assets":"The addresses of the flash-borrowed assets","initiator":"The address of the flashloan initiator","params":"The byte-encoded params passed when initiating the flashloan","premiums":"The fee of each flash-borrowed asset"},"returns":{"_0":"True if the execution of the operation succeeds, false otherwise"}}},"version":1},"userdoc":{"kind":"user","methods":{"executeOperation(address[],uint256[],uint256[],address,bytes)":{"notice":"Executes an operation after receiving the flash-borrowed assets"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/","aave-v3-core/=src/core/","aave-v3-periphery/=src/periphery/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/","solidity-utils/=lib/solidity-utils/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/contracts/misc/flashloan/base/FlashLoanReceiverBase.sol":"FlashLoanReceiverBase"},"evmVersion":"shanghai","libraries":{}},"sources":{"src/contracts/interfaces/IPool.sol":{"keccak256":"0xbdc711f62e9b8a3722b829e72c90401213a5fd31dd99d758d36d6a9bebed5346","urls":["bzz-raw://a94f5509980c77b5c980abee6a5b051b85eec34c295cf811cd82ece97c6508b1","dweb:/ipfs/QmY2TzCkuPUfesSTKejEWM5xQZYN2PpAsfJwbj8cr8pRjt"],"license":"MIT"},"src/contracts/interfaces/IPoolAddressesProvider.sol":{"keccak256":"0xa60921cf54e91ca8db038effeffc876089b2e72dbf01d68a10ff461770d345e5","urls":["bzz-raw://0de2fd03bf5cd6ae8718a486e5d615c67b260d0608b9fb7076888a4bfaa0e4b4","dweb:/ipfs/QmXpdmxMugyJcBFAGJEruB78bkkuTwrH9esYRaS6wiQoMs"],"license":"MIT"},"src/contracts/misc/flashloan/base/FlashLoanReceiverBase.sol":{"keccak256":"0xcc7b6e7a0374241c6d612ace89b9402e162c172b17f855f45a5eb0ac525b16b2","urls":["bzz-raw://50439aaa3f33c756add657c01bad0d6e4c85964c95516de96b2c91c09da7dfab","dweb:/ipfs/QmXPC6oYCcSGoBdEAos4WT9QNqnmLGV4gmKdqKzMv2hEgs"],"license":"MIT"},"src/contracts/misc/flashloan/interfaces/IFlashLoanReceiver.sol":{"keccak256":"0x1906b9f13bf1f6e49a67985cef3d4dc5b43aae608d9aed72baf4e99892bca066","urls":["bzz-raw://dca31981d592762dcc3a54bec3a808eae1c967a440fa7452a56702387f6e2e4e","dweb:/ipfs/QmdyDUJ1dRLqY1q46nK8u43cceCt3EFARv6VrfQKqBdRMS"],"license":"MIT"},"src/contracts/protocol/libraries/types/DataTypes.sol":{"keccak256":"0xee3ca1b61a7cd2e7f88913c7e57d03346909a10a7e2965d2dda6bb1296f44423","urls":["bzz-raw://a0605fd702844db9cc505c2411417e40607a9e94d1a488ecc3a70109394f315d","dweb:/ipfs/QmW3UD8oSnAexGgUX6udKqHtC5F4PdR98EPnyETacMtKhY"],"license":"MIT"}},"version":1},"id":175}
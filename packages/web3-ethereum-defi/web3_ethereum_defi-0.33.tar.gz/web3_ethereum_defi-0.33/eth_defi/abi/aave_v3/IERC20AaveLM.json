{"abi":[{"type":"function","name":"claimRewards","inputs":[{"name":"receiver","type":"address","internalType":"address"},{"name":"rewards","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claimRewardsOnBehalf","inputs":[{"name":"onBehalfOf","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"rewards","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claimRewardsToSelf","inputs":[{"name":"rewards","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"collectAndUpdateRewards","inputs":[{"name":"reward","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getClaimableRewards","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"reward","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCurrentRewardsIndex","inputs":[{"name":"reward","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getReferenceAsset","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getTotalClaimableRewards","inputs":[{"name":"reward","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getUnclaimedRewards","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"reward","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"isRegisteredRewardToken","inputs":[{"name":"reward","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"refreshRewardTokens","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rewardTokens","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"event","name":"RewardTokenRegistered","inputs":[{"name":"reward","type":"address","indexed":true,"internalType":"address"},{"name":"startIndex","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"InvalidClaimer","inputs":[{"name":"claimer","type":"address","internalType":"address"}]},{"type":"error","name":"RewardNotInitialized","inputs":[{"name":"reward","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"claimRewards(address,address[])":"2026ffa3","claimRewardsOnBehalf(address,address,address[])":"ee0fc6d3","claimRewardsToSelf(address[])":"8daaf5aa","collectAndUpdateRewards(address)":"bcd17848","getClaimableRewards(address,address)":"f56f4f0f","getCurrentRewardsIndex(address)":"de9cee98","getReferenceAsset()":"68b836a7","getTotalClaimableRewards(address)":"60d8fdd8","getUnclaimedRewards(address,address)":"86894b29","isRegisteredRewardToken(address)":"6fe0b5a5","refreshRewardTokens()":"2f813b0d","rewardTokens()":"c2b18aa0"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"InvalidClaimer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"}],\"name\":\"RewardNotInitialized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"}],\"name\":\"RewardTokenRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"rewards\",\"type\":\"address[]\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"rewards\",\"type\":\"address[]\"}],\"name\":\"claimRewardsOnBehalf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"rewards\",\"type\":\"address[]\"}],\"name\":\"claimRewardsToSelf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"}],\"name\":\"collectAndUpdateRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"}],\"name\":\"getClaimableRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"}],\"name\":\"getCurrentRewardsIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReferenceAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"}],\"name\":\"getTotalClaimableRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"}],\"name\":\"getUnclaimedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"}],\"name\":\"isRegisteredRewardToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refreshRewardTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claimRewards(address,address[])\":{\"params\":{\"receiver\":\"The address to receive the rewards\",\"rewards\":\"The rewards to claim\"}},\"claimRewardsOnBehalf(address,address,address[])\":{\"details\":\"Only callable by if sender is onBehalfOf or sender is approved claimer\",\"params\":{\"onBehalfOf\":\"The address to claim on behalf of\",\"receiver\":\"The address to receive the rewards\",\"rewards\":\"The rewards to claim\"}},\"claimRewardsToSelf(address[])\":{\"params\":{\"rewards\":\"The rewards to claim\"}},\"collectAndUpdateRewards(address)\":{\"params\":{\"reward\":\"The reward to claim\"},\"returns\":{\"_0\":\"uint256 Amount collected\"}},\"getClaimableRewards(address,address)\":{\"params\":{\"reward\":\"The reward to claim\",\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"uint256 The claimable amount of rewards in WAD\"}},\"getCurrentRewardsIndex(address)\":{\"params\":{\"reward\":\"The reward to claim\"},\"returns\":{\"_0\":\"uint256 The underlying asset reward index in RAY\"}},\"getReferenceAsset()\":{\"returns\":{\"_0\":\"address of reference token\"}},\"getTotalClaimableRewards(address)\":{\"params\":{\"reward\":\"The reward to claim\"},\"returns\":{\"_0\":\"uint256 The current balance + pending rewards from the `_incentivesController`\"}},\"getUnclaimedRewards(address,address)\":{\"params\":{\"reward\":\"The reward to claim\",\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"uint256 The unclaimed amount of rewards in WAD\"}},\"isRegisteredRewardToken(address)\":{\"params\":{\"reward\":\"The reward to claim\"},\"returns\":{\"_0\":\"bool signaling if token is a registered reward.\"}},\"rewardTokens()\":{\"returns\":{\"_0\":\"IERC20 The IERC20s of the rewards.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimRewards(address,address[])\":{\"notice\":\"Claim rewards and send them to a receiver\"},\"claimRewardsOnBehalf(address,address,address[])\":{\"notice\":\"Claim rewards on behalf of a user and send them to a receiver\"},\"claimRewardsToSelf(address[])\":{\"notice\":\"Claim rewards\"},\"collectAndUpdateRewards(address)\":{\"notice\":\"Claims rewards from `INCENTIVES_CONTROLLER` and updates internal accounting of rewards.\"},\"getClaimableRewards(address,address)\":{\"notice\":\"Get the total claimable rewards for a user in WAD\"},\"getCurrentRewardsIndex(address)\":{\"notice\":\"The underlying asset reward index in RAY\"},\"getReferenceAsset()\":{\"notice\":\"Returns reference a/v token address used on INCENTIVES_CONTROLLER for tracking\"},\"getTotalClaimableRewards(address)\":{\"notice\":\"Get the total claimable rewards of the contract.\"},\"getUnclaimedRewards(address,address)\":{\"notice\":\"The unclaimed rewards for a user in WAD\"},\"isRegisteredRewardToken(address)\":{\"notice\":\"Checks if the passed token is a registered reward.\"},\"refreshRewardTokens()\":{\"notice\":\"Fetches all rewardTokens from the incentivecontroller and registers the missing ones.\"},\"rewardTokens()\":{\"notice\":\"The IERC20s that are currently rewarded to addresses of the vault via LM on incentivescontroller.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/extensions/static-a-token/interfaces/IERC20AaveLM.sol\":\"IERC20AaveLM\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":aave-v3-core/=src/core/\",\":aave-v3-periphery/=src/periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/\",\":solidity-utils/=lib/solidity-utils/src/\"]},\"sources\":{\"src/contracts/extensions/static-a-token/interfaces/IERC20AaveLM.sol\":{\"keccak256\":\"0xa835e14e7db946aa8bbed6f2b658a889d15b944579610a975ab648599c8b32b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bca46af18209b88a4ee46701a665dbe94814ca74bf6add1e734f76bce1fabd4\",\"dweb:/ipfs/QmacNKFMCkSPLP1WkuErAh3B8L2BTWLo6adUamxXkNnPE3\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"claimer","type":"address"}],"type":"error","name":"InvalidClaimer"},{"inputs":[{"internalType":"address","name":"reward","type":"address"}],"type":"error","name":"RewardNotInitialized"},{"inputs":[{"internalType":"address","name":"reward","type":"address","indexed":true},{"internalType":"uint256","name":"startIndex","type":"uint256","indexed":false}],"type":"event","name":"RewardTokenRegistered","anonymous":false},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address[]","name":"rewards","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"claimRewards"},{"inputs":[{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address[]","name":"rewards","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"claimRewardsOnBehalf"},{"inputs":[{"internalType":"address[]","name":"rewards","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"claimRewardsToSelf"},{"inputs":[{"internalType":"address","name":"reward","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"collectAndUpdateRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"reward","type":"address"}],"stateMutability":"view","type":"function","name":"getClaimableRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"reward","type":"address"}],"stateMutability":"view","type":"function","name":"getCurrentRewardsIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getReferenceAsset","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"reward","type":"address"}],"stateMutability":"view","type":"function","name":"getTotalClaimableRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"reward","type":"address"}],"stateMutability":"view","type":"function","name":"getUnclaimedRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"reward","type":"address"}],"stateMutability":"view","type":"function","name":"isRegisteredRewardToken","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"refreshRewardTokens"},{"inputs":[],"stateMutability":"view","type":"function","name":"rewardTokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]}],"devdoc":{"kind":"dev","methods":{"claimRewards(address,address[])":{"params":{"receiver":"The address to receive the rewards","rewards":"The rewards to claim"}},"claimRewardsOnBehalf(address,address,address[])":{"details":"Only callable by if sender is onBehalfOf or sender is approved claimer","params":{"onBehalfOf":"The address to claim on behalf of","receiver":"The address to receive the rewards","rewards":"The rewards to claim"}},"claimRewardsToSelf(address[])":{"params":{"rewards":"The rewards to claim"}},"collectAndUpdateRewards(address)":{"params":{"reward":"The reward to claim"},"returns":{"_0":"uint256 Amount collected"}},"getClaimableRewards(address,address)":{"params":{"reward":"The reward to claim","user":"The address of the user"},"returns":{"_0":"uint256 The claimable amount of rewards in WAD"}},"getCurrentRewardsIndex(address)":{"params":{"reward":"The reward to claim"},"returns":{"_0":"uint256 The underlying asset reward index in RAY"}},"getReferenceAsset()":{"returns":{"_0":"address of reference token"}},"getTotalClaimableRewards(address)":{"params":{"reward":"The reward to claim"},"returns":{"_0":"uint256 The current balance + pending rewards from the `_incentivesController`"}},"getUnclaimedRewards(address,address)":{"params":{"reward":"The reward to claim","user":"The address of the user"},"returns":{"_0":"uint256 The unclaimed amount of rewards in WAD"}},"isRegisteredRewardToken(address)":{"params":{"reward":"The reward to claim"},"returns":{"_0":"bool signaling if token is a registered reward."}},"rewardTokens()":{"returns":{"_0":"IERC20 The IERC20s of the rewards."}}},"version":1},"userdoc":{"kind":"user","methods":{"claimRewards(address,address[])":{"notice":"Claim rewards and send them to a receiver"},"claimRewardsOnBehalf(address,address,address[])":{"notice":"Claim rewards on behalf of a user and send them to a receiver"},"claimRewardsToSelf(address[])":{"notice":"Claim rewards"},"collectAndUpdateRewards(address)":{"notice":"Claims rewards from `INCENTIVES_CONTROLLER` and updates internal accounting of rewards."},"getClaimableRewards(address,address)":{"notice":"Get the total claimable rewards for a user in WAD"},"getCurrentRewardsIndex(address)":{"notice":"The underlying asset reward index in RAY"},"getReferenceAsset()":{"notice":"Returns reference a/v token address used on INCENTIVES_CONTROLLER for tracking"},"getTotalClaimableRewards(address)":{"notice":"Get the total claimable rewards of the contract."},"getUnclaimedRewards(address,address)":{"notice":"The unclaimed rewards for a user in WAD"},"isRegisteredRewardToken(address)":{"notice":"Checks if the passed token is a registered reward."},"refreshRewardTokens()":{"notice":"Fetches all rewardTokens from the incentivecontroller and registers the missing ones."},"rewardTokens()":{"notice":"The IERC20s that are currently rewarded to addresses of the vault via LM on incentivescontroller."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/","aave-v3-core/=src/core/","aave-v3-periphery/=src/periphery/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/","solidity-utils/=lib/solidity-utils/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/contracts/extensions/static-a-token/interfaces/IERC20AaveLM.sol":"IERC20AaveLM"},"evmVersion":"shanghai","libraries":{}},"sources":{"src/contracts/extensions/static-a-token/interfaces/IERC20AaveLM.sol":{"keccak256":"0xa835e14e7db946aa8bbed6f2b658a889d15b944579610a975ab648599c8b32b7","urls":["bzz-raw://5bca46af18209b88a4ee46701a665dbe94814ca74bf6add1e734f76bce1fabd4","dweb:/ipfs/QmacNKFMCkSPLP1WkuErAh3B8L2BTWLo6adUamxXkNnPE3"],"license":"MIT"}},"version":1},"id":114}
{"abi":[{"type":"function","name":"getAddressesProviderAddressById","inputs":[{"name":"id","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getAddressesProviderIdByAddress","inputs":[{"name":"addressesProvider","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getAddressesProvidersList","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"registerAddressesProvider","inputs":[{"name":"provider","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unregisterAddressesProvider","inputs":[{"name":"provider","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"AddressesProviderRegistered","inputs":[{"name":"addressesProvider","type":"address","indexed":true,"internalType":"address"},{"name":"id","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"AddressesProviderUnregistered","inputs":[{"name":"addressesProvider","type":"address","indexed":true,"internalType":"address"},{"name":"id","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getAddressesProviderAddressById(uint256)":"57dc0566","getAddressesProviderIdByAddress(address)":"d0267be7","getAddressesProvidersList()":"365ccbbf","registerAddressesProvider(address,uint256)":"d258191e","unregisterAddressesProvider(address)":"0de26707"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addressesProvider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"AddressesProviderRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addressesProvider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"AddressesProviderUnregistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getAddressesProviderAddressById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressesProvider\",\"type\":\"address\"}],\"name\":\"getAddressesProviderIdByAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddressesProvidersList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"registerAddressesProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"unregisterAddressesProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"events\":{\"AddressesProviderRegistered(address,uint256)\":{\"details\":\"Emitted when a new AddressesProvider is registered.\",\"params\":{\"addressesProvider\":\"The address of the registered PoolAddressesProvider\",\"id\":\"The id of the registered PoolAddressesProvider\"}},\"AddressesProviderUnregistered(address,uint256)\":{\"details\":\"Emitted when an AddressesProvider is unregistered.\",\"params\":{\"addressesProvider\":\"The address of the unregistered PoolAddressesProvider\",\"id\":\"The id of the unregistered PoolAddressesProvider\"}}},\"kind\":\"dev\",\"methods\":{\"getAddressesProviderAddressById(uint256)\":{\"params\":{\"id\":\"The id of the market\"},\"returns\":{\"_0\":\"The address of the PoolAddressesProvider with the given id or zero address if it is not registered\"}},\"getAddressesProviderIdByAddress(address)\":{\"params\":{\"addressesProvider\":\"The address of the PoolAddressesProvider\"},\"returns\":{\"_0\":\"The id of the PoolAddressesProvider or 0 if is not registered\"}},\"getAddressesProvidersList()\":{\"returns\":{\"_0\":\"The list of addresses providers\"}},\"registerAddressesProvider(address,uint256)\":{\"details\":\"The PoolAddressesProvider must not already be registered in the registryThe id must not be used by an already registered PoolAddressesProvider\",\"params\":{\"id\":\"The id for the new PoolAddressesProvider, referring to the market it belongs to\",\"provider\":\"The address of the new PoolAddressesProvider\"}},\"unregisterAddressesProvider(address)\":{\"params\":{\"provider\":\"The PoolAddressesProvider address\"}}},\"title\":\"IPoolAddressesProviderRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAddressesProviderAddressById(uint256)\":{\"notice\":\"Returns the address of a registered PoolAddressesProvider\"},\"getAddressesProviderIdByAddress(address)\":{\"notice\":\"Returns the id of a registered PoolAddressesProvider\"},\"getAddressesProvidersList()\":{\"notice\":\"Returns the list of registered addresses providers\"},\"registerAddressesProvider(address,uint256)\":{\"notice\":\"Registers an addresses provider\"},\"unregisterAddressesProvider(address)\":{\"notice\":\"Removes an addresses provider from the list of registered addresses providers\"}},\"notice\":\"Defines the basic interface for an Aave Pool Addresses Provider Registry.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/interfaces/IPoolAddressesProviderRegistry.sol\":\"IPoolAddressesProviderRegistry\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":aave-v3-core/=src/core/\",\":aave-v3-periphery/=src/periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/\",\":solidity-utils/=lib/solidity-utils/src/\"]},\"sources\":{\"src/contracts/interfaces/IPoolAddressesProviderRegistry.sol\":{\"keccak256\":\"0x4f844f5029a758c69cfb5571979fdaaa4b5e9e150a9ccd6c3114b641d441a9a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19198bd2eb4c2a3bd01731e8db9c74a8e0f3eb7ddddfe860ea814216dd1f08f1\",\"dweb:/ipfs/QmZMFR7qhmWZqVG2bJSzqx76cv8tabxSmPhMbZsC9miCun\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"addressesProvider","type":"address","indexed":true},{"internalType":"uint256","name":"id","type":"uint256","indexed":true}],"type":"event","name":"AddressesProviderRegistered","anonymous":false},{"inputs":[{"internalType":"address","name":"addressesProvider","type":"address","indexed":true},{"internalType":"uint256","name":"id","type":"uint256","indexed":true}],"type":"event","name":"AddressesProviderUnregistered","anonymous":false},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"view","type":"function","name":"getAddressesProviderAddressById","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"addressesProvider","type":"address"}],"stateMutability":"view","type":"function","name":"getAddressesProviderIdByAddress","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getAddressesProvidersList","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"address","name":"provider","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"registerAddressesProvider"},{"inputs":[{"internalType":"address","name":"provider","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"unregisterAddressesProvider"}],"devdoc":{"kind":"dev","methods":{"getAddressesProviderAddressById(uint256)":{"params":{"id":"The id of the market"},"returns":{"_0":"The address of the PoolAddressesProvider with the given id or zero address if it is not registered"}},"getAddressesProviderIdByAddress(address)":{"params":{"addressesProvider":"The address of the PoolAddressesProvider"},"returns":{"_0":"The id of the PoolAddressesProvider or 0 if is not registered"}},"getAddressesProvidersList()":{"returns":{"_0":"The list of addresses providers"}},"registerAddressesProvider(address,uint256)":{"details":"The PoolAddressesProvider must not already be registered in the registryThe id must not be used by an already registered PoolAddressesProvider","params":{"id":"The id for the new PoolAddressesProvider, referring to the market it belongs to","provider":"The address of the new PoolAddressesProvider"}},"unregisterAddressesProvider(address)":{"params":{"provider":"The PoolAddressesProvider address"}}},"version":1},"userdoc":{"kind":"user","methods":{"getAddressesProviderAddressById(uint256)":{"notice":"Returns the address of a registered PoolAddressesProvider"},"getAddressesProviderIdByAddress(address)":{"notice":"Returns the id of a registered PoolAddressesProvider"},"getAddressesProvidersList()":{"notice":"Returns the list of registered addresses providers"},"registerAddressesProvider(address,uint256)":{"notice":"Registers an addresses provider"},"unregisterAddressesProvider(address)":{"notice":"Removes an addresses provider from the list of registered addresses providers"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/","aave-v3-core/=src/core/","aave-v3-periphery/=src/periphery/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/solidity-utils/lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/","solidity-utils/=lib/solidity-utils/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/contracts/interfaces/IPoolAddressesProviderRegistry.sol":"IPoolAddressesProviderRegistry"},"evmVersion":"shanghai","libraries":{}},"sources":{"src/contracts/interfaces/IPoolAddressesProviderRegistry.sol":{"keccak256":"0x4f844f5029a758c69cfb5571979fdaaa4b5e9e150a9ccd6c3114b641d441a9a4","urls":["bzz-raw://19198bd2eb4c2a3bd01731e8db9c74a8e0f3eb7ddddfe860ea814216dd1f08f1","dweb:/ipfs/QmZMFR7qhmWZqVG2bJSzqx76cv8tabxSmPhMbZsC9miCun"],"license":"MIT"}},"version":1},"id":159}
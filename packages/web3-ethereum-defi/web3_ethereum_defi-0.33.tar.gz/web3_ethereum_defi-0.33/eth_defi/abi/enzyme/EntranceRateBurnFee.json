{ "abi": [ { "type": "constructor", "inputs": [ { "name": "_feeManager", "type": "address", "internalType": "address" } ], "stateMutability": "nonpayable" }, { "type": "function", "name": "activateForFund", "inputs": [ { "name": "", "type": "address", "internalType": "address" }, { "name": "", "type": "address", "internalType": "address" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "addFundSettings", "inputs": [ { "name": "_comptrollerProxy", "type": "address", "internalType": "address" }, { "name": "_settingsData", "type": "bytes", "internalType": "bytes" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "getFeeManager", "inputs": [], "outputs": [ { "name": "feeManager_", "type": "address", "internalType": "address" } ], "stateMutability": "view" }, { "type": "function", "name": "getRateForFund", "inputs": [ { "name": "_comptrollerProxy", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "rate_", "type": "uint256", "internalType": "uint256" } ], "stateMutability": "view" }, { "type": "function", "name": "getRecipientForFund", "inputs": [ { "name": "", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "recipient_", "type": "address", "internalType": "address" } ], "stateMutability": "view" }, { "type": "function", "name": "getSettlementType", "inputs": [], "outputs": [ { "name": "settlementType_", "type": "uint8", "internalType": "enum IFeeManager.SettlementType" } ], "stateMutability": "view" }, { "type": "function", "name": "payout", "inputs": [ { "name": "", "type": "address", "internalType": "address" }, { "name": "", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "", "type": "bool", "internalType": "bool" } ], "stateMutability": "nonpayable" }, { "type": "function", "name": "settle", "inputs": [ { "name": "_comptrollerProxy", "type": "address", "internalType": "address" }, { "name": "", "type": "address", "internalType": "address" }, { "name": "", "type": "uint8", "internalType": "enum IFeeManager.FeeHook" }, { "name": "_settlementData", "type": "bytes", "internalType": "bytes" }, { "name": "", "type": "uint256", "internalType": "uint256" } ], "outputs": [ { "name": "settlementType_", "type": "uint8", "internalType": "enum IFeeManager.SettlementType" }, { "name": "payer_", "type": "address", "internalType": "address" }, { "name": "sharesDue_", "type": "uint256", "internalType": "uint256" } ], "stateMutability": "nonpayable" }, { "type": "function", "name": "settlesOnHook", "inputs": [ { "name": "_hook", "type": "uint8", "internalType": "enum IFeeManager.FeeHook" } ], "outputs": [ { "name": "settles_", "type": "bool", "internalType": "bool" }, { "name": "usesGav_", "type": "bool", "internalType": "bool" } ], "stateMutability": "view" }, { "type": "function", "name": "update", "inputs": [ { "name": "", "type": "address", "internalType": "address" }, { "name": "", "type": "address", "internalType": "address" }, { "name": "", "type": "uint8", "internalType": "enum IFeeManager.FeeHook" }, { "name": "", "type": "bytes", "internalType": "bytes" }, { "name": "", "type": "uint256", "internalType": "uint256" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "updatesOnHook", "inputs": [ { "name": "", "type": "uint8", "internalType": "enum IFeeManager.FeeHook" } ], "outputs": [ { "name": "updates_", "type": "bool", "internalType": "bool" }, { "name": "usesGav_", "type": "bool", "internalType": "bool" } ], "stateMutability": "view" }, { "type": "event", "name": "FundSettingsAdded", "inputs": [ { "name": "comptrollerProxy", "type": "address", "indexed": true, "internalType": "address" }, { "name": "rate", "type": "uint256", "indexed": false, "internalType": "uint256" } ], "anonymous": false }, { "type": "event", "name": "Settled", "inputs": [ { "name": "comptrollerProxy", "type": "address", "indexed": true, "internalType": "address" }, { "name": "payer", "type": "address", "indexed": true, "internalType": "address" }, { "name": "sharesQuantity", "type": "uint256", "indexed": false, "internalType": "uint256" } ], "anonymous": false } ], "bytecode": { "object": "0x60c060405234801561001057600080fd5b5060405161099c38038061099c8339818101604052602081101561003357600080fd5b50516001600160601b0319606082901b16608052600360f81b60a0526001600160a01b03166003610916610086600039806106ef528061072752508061040f52806105b6528061075c52506109166000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806341892d7e1161007157806341892d7e1461026457806362780b3c1461032f5780637bdd5b1d14610371578063b78b48131461039a578063e337a91f146103dc578063f2d63826146103fc576100a9565b80630f5f6b4f146100ae578063233faf5f146101305780633146d058146101c3578063320f0ddd146101f15780633eecc2bf1461022c575b600080fd5b61012e600480360360408110156100c457600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100ef57600080fd5b82018360208201111561010157600080fd5b8035906020019184600183028401116401000000008311171561012357600080fd5b509092509050610404565b005b61012e600480360360a081101561014657600080fd5b6001600160a01b03823581169260208101359091169160ff604083013516919081019060808101606082013564010000000081111561018457600080fd5b82018360208201111561019657600080fd5b803590602001918460018302840111640100000000831117156101b857600080fd5b919350915035610551565b61012e600480360360408110156101d957600080fd5b506001600160a01b0381358116916020013516610559565b6102116004803603602081101561020757600080fd5b503560ff1661055d565b60408051921515835290151560208301528051918290030190f35b6102526004803603602081101561024257600080fd5b50356001600160a01b031661058c565b60408051918252519081900360200190f35b6102f7600480360360a081101561027a57600080fd5b6001600160a01b03823581169260208101359091169160ff60408301351691908101906080810160608201356401000000008111156102b857600080fd5b8201836020820111156102ca57600080fd5b803590602001918460018302840111640100000000831117156102ec57600080fd5b9193509150356105a7565b6040518084600581111561030757fe5b8152602001836001600160a01b03168152602001828152602001935050505060405180910390f35b6103556004803603602081101561034557600080fd5b50356001600160a01b031661071f565b604080516001600160a01b039092168252519081900360200190f35b610379610725565b6040518082600581111561038957fe5b815260200191505060405180910390f35b6103c8600480360360408110156103b057600080fd5b506001600160a01b0381358116916020013516610749565b604080519115158252519081900360200190f35b610211600480360360208110156103f257600080fd5b503560ff16610752565b61035561075a565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461046b5760405162461bcd60e51b815260040180806020018281038252602581526020018061087a6025913960400191505060405180910390fd5b60008282602081101561047d57600080fd5b50359050806104bd5760405162461bcd60e51b81526004018080602001828103825260248152602001806108e66024913960400191505060405180910390fd5b61271081106104fd5760405162461bcd60e51b81526004018080602001828103825260268152602001806108c06026913960400191505060405180910390fd5b6001600160a01b03841660008181526020818152604091829020849055815184815291517f90b7d1516011c1da1279f3ae0ed052b1416e7c373d4ec40cf515aa53c5f839df9281900390910190a250505050565b505050505050565b5050565b600080600283600381111561056e57fe5b14156105805750600190506000610587565b5060009050805b915091565b6001600160a01b031660009081526020819052604090205490565b60008080336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106125760405162461bcd60e51b815260040180806020018281038252602581526020018061087a6025913960400191505060405180910390fd5b600061065387878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061077e92505050565b6001600160a01b038d166000908152602081905260409020549295509250610689905061271061068384846107b2565b90610812565b9250826106a25760008060009450945094505050610713565b836001600160a01b03168b6001600160a01b03167f7e79a2206061184e05985ae0578dec52f817756a441996f984cdc817efc25a68856040518082815260200191505060405180910390a37f0000000000000000000000000000000000000000000000000000000000000000945050505b96509650969350505050565b50600090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60005b92915050565b600080915091565b7f000000000000000000000000000000000000000000000000000000000000000090565b600080600083806020019051606081101561079857600080fd5b508051602082015160409092015190969195509350915050565b6000826107c15750600061074c565b828202828482816107ce57fe5b041461080b5760405162461bcd60e51b815260040180806020018281038252602181526020018061089f6021913960400191505060405180910390fd5b9392505050565b6000808211610868576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161087157fe5b04939250505056fe4f6e6c7920746865204665654d616e6765722063616e206d616b6520746869732063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7761646446756e6453657474696e67733a204665652072617465206d617820657863656564656461646446756e6453657474696e67733a204665652072617465206d757374206265203e30a164736f6c634300060c000a", "sourceMap": "473:188:145:-:0;;;531:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;531:128:145;-1:-1:-1;;;;;;705:25:154;;;;;;;-1:-1:-1;;;1352:33:152::1;::::0;-1:-1:-1;;;;;473:188:145;620:31;473:188;;;;;;;;", "linkReferences": {} }, "deployedBytecode": { "object": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c806341892d7e1161007157806341892d7e1461026457806362780b3c1461032f5780637bdd5b1d14610371578063b78b48131461039a578063e337a91f146103dc578063f2d63826146103fc576100a9565b80630f5f6b4f146100ae578063233faf5f146101305780633146d058146101c3578063320f0ddd146101f15780633eecc2bf1461022c575b600080fd5b61012e600480360360408110156100c457600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100ef57600080fd5b82018360208201111561010157600080fd5b8035906020019184600183028401116401000000008311171561012357600080fd5b509092509050610404565b005b61012e600480360360a081101561014657600080fd5b6001600160a01b03823581169260208101359091169160ff604083013516919081019060808101606082013564010000000081111561018457600080fd5b82018360208201111561019657600080fd5b803590602001918460018302840111640100000000831117156101b857600080fd5b919350915035610551565b61012e600480360360408110156101d957600080fd5b506001600160a01b0381358116916020013516610559565b6102116004803603602081101561020757600080fd5b503560ff1661055d565b60408051921515835290151560208301528051918290030190f35b6102526004803603602081101561024257600080fd5b50356001600160a01b031661058c565b60408051918252519081900360200190f35b6102f7600480360360a081101561027a57600080fd5b6001600160a01b03823581169260208101359091169160ff60408301351691908101906080810160608201356401000000008111156102b857600080fd5b8201836020820111156102ca57600080fd5b803590602001918460018302840111640100000000831117156102ec57600080fd5b9193509150356105a7565b6040518084600581111561030757fe5b8152602001836001600160a01b03168152602001828152602001935050505060405180910390f35b6103556004803603602081101561034557600080fd5b50356001600160a01b031661071f565b604080516001600160a01b039092168252519081900360200190f35b610379610725565b6040518082600581111561038957fe5b815260200191505060405180910390f35b6103c8600480360360408110156103b057600080fd5b506001600160a01b0381358116916020013516610749565b604080519115158252519081900360200190f35b610211600480360360208110156103f257600080fd5b503560ff16610752565b61035561075a565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461046b5760405162461bcd60e51b815260040180806020018281038252602581526020018061087a6025913960400191505060405180910390fd5b60008282602081101561047d57600080fd5b50359050806104bd5760405162461bcd60e51b81526004018080602001828103825260248152602001806108e66024913960400191505060405180910390fd5b61271081106104fd5760405162461bcd60e51b81526004018080602001828103825260268152602001806108c06026913960400191505060405180910390fd5b6001600160a01b03841660008181526020818152604091829020849055815184815291517f90b7d1516011c1da1279f3ae0ed052b1416e7c373d4ec40cf515aa53c5f839df9281900390910190a250505050565b505050505050565b5050565b600080600283600381111561056e57fe5b14156105805750600190506000610587565b5060009050805b915091565b6001600160a01b031660009081526020819052604090205490565b60008080336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106125760405162461bcd60e51b815260040180806020018281038252602581526020018061087a6025913960400191505060405180910390fd5b600061065387878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061077e92505050565b6001600160a01b038d166000908152602081905260409020549295509250610689905061271061068384846107b2565b90610812565b9250826106a25760008060009450945094505050610713565b836001600160a01b03168b6001600160a01b03167f7e79a2206061184e05985ae0578dec52f817756a441996f984cdc817efc25a68856040518082815260200191505060405180910390a37f0000000000000000000000000000000000000000000000000000000000000000945050505b96509650969350505050565b50600090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60005b92915050565b600080915091565b7f000000000000000000000000000000000000000000000000000000000000000090565b600080600083806020019051606081101561079857600080fd5b508051602082015160409092015190969195509350915050565b6000826107c15750600061074c565b828202828482816107ce57fe5b041461080b5760405162461bcd60e51b815260040180806020018281038252602181526020018061089f6021913960400191505060405180910390fd5b9392505050565b6000808211610868576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161087157fe5b04939250505056fe4f6e6c7920746865204665654d616e6765722063616e206d616b6520746869732063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7761646446756e6453657474696e67733a204665652072617465206d617820657863656564656461646446756e6453657474696e67733a204665652072617465206d757374206265203e30a164736f6c634300060c000a", "sourceMap": "473:188:145:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:496:152;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1624:496:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1624:496:152;;-1:-1:-1;1624:496:152;-1:-1:-1;1624:496:152;:::i;:::-;;1755:175:154;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1755:175:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1755:175:154;-1:-1:-1;1755:175:154;;:::i;862:92::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;862:92:154;;;;;;;;;;:::i;3578:289:152:-;;;;;;;;;;;;;;;;-1:-1:-1;3578:289:152;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4122:154;;;;;;;;;;;;;;;;-1:-1:-1;4122:154:152;-1:-1:-1;;;;;4122:154:152;;:::i;:::-;;;;;;;;;;;;;;;;2459:855;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2459:855:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2459:855:152;-1:-1:-1;2459:855:152;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2459:855:152;;;;;;;;;;;;;;;;;;;;;;1144:176:154;;;;;;;;;;;;;;;;-1:-1:-1;1144:176:154;-1:-1:-1;;;;;1144:176:154;;:::i;:::-;;;;-1:-1:-1;;;;;1144:176:154;;;;;;;;;;;;;;4403:163:152;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1490:104:154;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1490:104:154;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2232:196;;;;;;;;;;;;;;;;-1:-1:-1;2232:196:154;;;;:::i;3806:104::-;;;:::i;1624:496:152:-;564:10:154;-1:-1:-1;;;;;578:11:154;564:25;;556:75;;;;-1:-1:-1;;;556:75:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1791:12:152::1;1817:13;;1806:36;;;;;;;::::0;::::1;;-1:-1:-1::0;1806:36:152::1;::::0;-1:-1:-1;1860:8:152;1852:57:::1;;;;-1:-1:-1::0;;;1852:57:152::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:5;1927:4;:26;1919:77;;;;-1:-1:-1::0;;;1919:77:152::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;2007:41:152;::::1;:22;:41:::0;;;::::1;::::0;;;;;;;;:48;;;2071:42;;;;;;;::::1;::::0;;;;;;;;::::1;641:1:154;1624:496:152::0;;;:::o;1755:175:154:-;;;;;;;:::o;862:92::-;;;:::o;3578:289:152:-;3692:13;;3749:33;3740:5;:42;;;;;;;;;3736:93;;;-1:-1:-1;3806:4:152;;-1:-1:-1;3812:5:152;3798:20;;3736:93;-1:-1:-1;3847:5:152;;-1:-1:-1;3847:5:152;3578:289;;;;:::o;4122:154::-;-1:-1:-1;;;;;4228:41:152;4196:13;4228:41;;;;;;;;;;;;4122:154::o;2459:855::-;2706:42;;;564:10:154;-1:-1:-1;;;;;578:11:154;564:25;;556:75;;;;-1:-1:-1;;;556:75:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2833:20:152::1;2890:52;2926:15;;2890:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;2890:35:152::1;::::0;-1:-1:-1;;;2890:52:152:i:1;:::-;-1:-1:-1::0;;;;;2968:41:152;::::1;2953:12;2968:41:::0;;;::::1;::::0;;;;;;;2863:79;;-1:-1:-1;2863:79:152;-1:-1:-1;3032:47:152::1;::::0;-1:-1:-1;859:5:152::1;3032:22;2863:79:::0;2968:41;3032:16:::1;:22::i;:::-;:26:::0;::::1;:47::i;:::-;3019:60:::0;-1:-1:-1;3094:15:152;3090:101:::1;;3133:31;3174:1:::0;3178::::1;3125:55;;;;;;;;;;3090:101;3233:6;-1:-1:-1::0;;;;;3206:46:152::1;3214:17;-1:-1:-1::0;;;;;3206:46:152::1;;3241:10;3206:46;;;;;;;;;;;;;;;;;;3271:15;3263:44;;;;641:1:154;2459:855:152::0;;;;;;;;;;:::o;1144:176:154:-;-1:-1:-1;1262:18:154;;1144:176::o;4403:163:152:-;4544:15;4403:163;:::o;1490:104:154:-;1559:4;1490:104;;;;;:::o;2232:196::-;2356:13;;2232:196;;;:::o;3806:104::-;3892:11;3806:104;:::o;3300:318::-;3435:14;3463:25;3502:21;3566:15;3555:56;;;;;;;;;;;;;;;-1:-1:-1;3555:56:154;;;;;;;;;;;;;;;-1:-1:-1;3555:56:154;-1:-1:-1;3300:318:154;-1:-1:-1;;3300:318:154:o;3538:215:442:-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:442;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:442;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3745:1;3538:215;-1:-1:-1;;;3538:215:442:o;4217:150::-;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:442;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:442:o", "linkReferences": {}, "immutableReferences": { "39922": [ { "start": 1775, "length": 32 }, { "start": 1831, "length": 32 } ], "40426": [ { "start": 1039, "length": 32 }, { "start": 1462, "length": 32 }, { "start": 1884, "length": 32 } ] } }, "methodIdentifiers": { "activateForFund(address,address)": "3146d058", "addFundSettings(address,bytes)": "0f5f6b4f", "getFeeManager()": "f2d63826", "getRateForFund(address)": "3eecc2bf", "getRecipientForFund(address)": "62780b3c", "getSettlementType()": "7bdd5b1d", "payout(address,address)": "b78b4813", "settle(address,address,uint8,bytes,uint256)": "41892d7e", "settlesOnHook(uint8)": "320f0ddd", "update(address,address,uint8,bytes,uint256)": "233faf5f", "updatesOnHook(uint8)": "e337a91f" }, "rawMetadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"comptrollerProxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"FundSettingsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"comptrollerProxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesQuantity\",\"type\":\"uint256\"}],\"name\":\"Settled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"activateForFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_settingsData\",\"type\":\"bytes\"}],\"name\":\"addFundSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"feeManager_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"}],\"name\":\"getRateForFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getRecipientForFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSettlementType\",\"outputs\":[{\"internalType\":\"enum IFeeManager.SettlementType\",\"name\":\"settlementType_\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"payout\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IFeeManager.FeeHook\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"_settlementData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"enum IFeeManager.SettlementType\",\"name\":\"settlementType_\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"payer_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sharesDue_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IFeeManager.FeeHook\",\"name\":\"_hook\",\"type\":\"uint8\"}],\"name\":\"settlesOnHook\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"settles_\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"usesGav_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IFeeManager.FeeHook\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IFeeManager.FeeHook\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"updatesOnHook\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"updates_\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"usesGav_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{\"activateForFund(address,address)\":{\"details\":\"Unimplemented by default, may be overrode.\"},\"addFundSettings(address,bytes)\":{\"params\":{\"_comptrollerProxy\":\"The ComptrollerProxy of the fund\",\"_settingsData\":\"Encoded settings to apply to the fee for a fund\"}},\"getFeeManager()\":{\"returns\":{\"feeManager_\":\"The `FEE_MANAGER` variable value\"}},\"getRateForFund(address)\":{\"params\":{\"_comptrollerProxy\":\"The ComptrollerProxy contract for the fund\"},\"returns\":{\"rate_\":\"The `rate` variable value\"}},\"getRecipientForFund(address)\":{\"details\":\"address(0) signifies the VaultProxy owner. Returns address(0) by default, can be overridden by fee.\"},\"getSettlementType()\":{\"returns\":{\"settlementType_\":\"The `SETTLEMENT_TYPE` variable value\"}},\"payout(address,address)\":{\"details\":\"Returns false by default, can be overridden by fee\"},\"settle(address,address,uint8,bytes,uint256)\":{\"params\":{\"_comptrollerProxy\":\"The ComptrollerProxy of the fund\",\"_settlementData\":\"Encoded args to use in calculating the settlement\"},\"returns\":{\"payer_\":\"The payer of shares due\",\"settlementType_\":\"The type of settlement\",\"sharesDue_\":\"The amount of shares due\"}},\"settlesOnHook(uint8)\":{\"params\":{\"_hook\":\"The FeeHook\"},\"returns\":{\"settles_\":\"True if the fee settles on the _hook\",\"usesGav_\":\"True if the fee uses GAV during settle() for the _hook\"}},\"update(address,address,uint8,bytes,uint256)\":{\"details\":\"Unimplemented by default, can be overridden by fee\"},\"updatesOnHook(uint8)\":{\"details\":\"Returns false values by default, can be overridden by fee\",\"returns\":{\"updates_\":\"True if the fee updates on the _hook\",\"usesGav_\":\"True if the fee uses GAV during update() for the _hook\"}}},\"title\":\"EntranceRateBurnFee Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"activateForFund(address,address)\":{\"notice\":\"Allows Fee to run logic during fund activation\"},\"addFundSettings(address,bytes)\":{\"notice\":\"Add the initial fee settings for a fund\"},\"getFeeManager()\":{\"notice\":\"Gets the `FEE_MANAGER` variable\"},\"getRateForFund(address)\":{\"notice\":\"Gets the `rate` variable for a fund\"},\"getRecipientForFund(address)\":{\"notice\":\"Gets the recipient of the fee for a given fund\"},\"getSettlementType()\":{\"notice\":\"Gets the `SETTLEMENT_TYPE` variable\"},\"payout(address,address)\":{\"notice\":\"Runs payout logic for a fee that utilizes shares outstanding as its settlement type\"},\"settle(address,address,uint8,bytes,uint256)\":{\"notice\":\"Settles the fee\"},\"settlesOnHook(uint8)\":{\"notice\":\"Gets whether the fee settles and requires GAV on a particular hook\"},\"update(address,address,uint8,bytes,uint256)\":{\"notice\":\"Update fee state after all settlement has occurred during a given fee hook\"},\"updatesOnHook(uint8)\":{\"notice\":\"Gets whether the fee updates and requires GAV on a particular hook\"}},\"notice\":\"An EntranceRateFee that burns the fee shares\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/release/extensions/fee-manager/fees/EntranceRateBurnFee.sol\":\"EntranceRateBurnFee\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@enzyme/=contracts/\",\":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/release/extensions/fee-manager/IFee.sol\":{\"keccak256\":\"0x38e3f324c67f3205e38197165586ea82ca226069902f34214bcde76cf905fcff\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c1fff656d1bdde3324421bc9e77cbfc4e80baf4e665f8713fdb65611b046f4b0\",\"dweb:/ipfs/QmVRFjNwmsVHdh4sp3DWdL74VWmhRhPZE5kDxJiuPL8Gu2\"]},\"contracts/release/extensions/fee-manager/IFeeManager.sol\":{\"keccak256\":\"0x26accd01ce839ee396cbaf3f72d93f2135656845c3e74c4ae575f8b02b8efd51\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1462f4081d1aa407faa1a92bb94ecae526a6792c79052dd446d898e75b3e5e22\",\"dweb:/ipfs/QmQzLS7raSD2ojJbxoraorzA8wRTS2iQtpaedm1x47teod\"]},\"contracts/release/extensions/fee-manager/fees/EntranceRateBurnFee.sol\":{\"keccak256\":\"0x6e662db86d34fb44976689f10475c414d15b29b2f207cec10204e080b64efd87\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5ede5d357a3de55d99f6c52dc6941a85ebdeb2df681c49c2db870c235b742875\",\"dweb:/ipfs/QmSCQxHYhMMa32LjsrX1WzoTR534XsWQxYe7cjZvxx7n9L\"]},\"contracts/release/extensions/fee-manager/fees/utils/EntranceRateFeeBase.sol\":{\"keccak256\":\"0xf12110b2c9f9763f15185fc7939d6e581f30a99b1f55c84d727838add42d262a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6455aa6dbfaec13da1564632c2ca94ebcebc0a8a131bd0a11c208acb46925137\",\"dweb:/ipfs/QmbyQx6m7HdkH4vhdynqEQNvB8sUQDyAuRCY8jKCgsLQCm\"]},\"contracts/release/extensions/fee-manager/fees/utils/FeeBase.sol\":{\"keccak256\":\"0x485c03e3088b6dc9828d2e895cce6856501448b4a2c71a0acae4e012bc644b14\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b63aef3cd20eb4dd585632c74619235ef1d5c3c2c52fd61f8802d0a50569b767\",\"dweb:/ipfs/QmSuTYChj2j8NnLYCg47feAJ5P9NheQpK46fG6fhmMtimA\"]},\"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}", "metadata": { "compiler": { "version": "0.6.12+commit.27d51765" }, "language": "Solidity", "output": { "abi": [ { "inputs": [ { "internalType": "address", "name": "_feeManager", "type": "address" } ], "stateMutability": "nonpayable", "type": "constructor" }, { "inputs": [ { "internalType": "address", "name": "comptrollerProxy", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "rate", "type": "uint256", "indexed": false } ], "type": "event", "name": "FundSettingsAdded", "anonymous": false }, { "inputs": [ { "internalType": "address", "name": "comptrollerProxy", "type": "address", "indexed": true }, { "internalType": "address", "name": "payer", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "sharesQuantity", "type": "uint256", "indexed": false } ], "type": "event", "name": "Settled", "anonymous": false }, { "inputs": [ { "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" } ], "stateMutability": "nonpayable", "type": "function", "name": "activateForFund" }, { "inputs": [ { "internalType": "address", "name": "_comptrollerProxy", "type": "address" }, { "internalType": "bytes", "name": "_settingsData", "type": "bytes" } ], "stateMutability": "nonpayable", "type": "function", "name": "addFundSettings" }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "getFeeManager", "outputs": [ { "internalType": "address", "name": "feeManager_", "type": "address" } ] }, { "inputs": [ { "internalType": "address", "name": "_comptrollerProxy", "type": "address" } ], "stateMutability": "view", "type": "function", "name": "getRateForFund", "outputs": [ { "internalType": "uint256", "name": "rate_", "type": "uint256" } ] }, { "inputs": [ { "internalType": "address", "name": "", "type": "address" } ], "stateMutability": "view", "type": "function", "name": "getRecipientForFund", "outputs": [ { "internalType": "address", "name": "recipient_", "type": "address" } ] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "getSettlementType", "outputs": [ { "internalType": "enum IFeeManager.SettlementType", "name": "settlementType_", "type": "uint8" } ] }, { "inputs": [ { "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" } ], "stateMutability": "nonpayable", "type": "function", "name": "payout", "outputs": [ { "internalType": "bool", "name": "", "type": "bool" } ] }, { "inputs": [ { "internalType": "address", "name": "_comptrollerProxy", "type": "address" }, { "internalType": "address", "name": "", "type": "address" }, { "internalType": "enum IFeeManager.FeeHook", "name": "", "type": "uint8" }, { "internalType": "bytes", "name": "_settlementData", "type": "bytes" }, { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "nonpayable", "type": "function", "name": "settle", "outputs": [ { "internalType": "enum IFeeManager.SettlementType", "name": "settlementType_", "type": "uint8" }, { "internalType": "address", "name": "payer_", "type": "address" }, { "internalType": "uint256", "name": "sharesDue_", "type": "uint256" } ] }, { "inputs": [ { "internalType": "enum IFeeManager.FeeHook", "name": "_hook", "type": "uint8" } ], "stateMutability": "view", "type": "function", "name": "settlesOnHook", "outputs": [ { "internalType": "bool", "name": "settles_", "type": "bool" }, { "internalType": "bool", "name": "usesGav_", "type": "bool" } ] }, { "inputs": [ { "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" }, { "internalType": "enum IFeeManager.FeeHook", "name": "", "type": "uint8" }, { "internalType": "bytes", "name": "", "type": "bytes" }, { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "nonpayable", "type": "function", "name": "update" }, { "inputs": [ { "internalType": "enum IFeeManager.FeeHook", "name": "", "type": "uint8" } ], "stateMutability": "view", "type": "function", "name": "updatesOnHook", "outputs": [ { "internalType": "bool", "name": "updates_", "type": "bool" }, { "internalType": "bool", "name": "usesGav_", "type": "bool" } ] } ], "devdoc": { "kind": "dev", "methods": { "activateForFund(address,address)": { "details": "Unimplemented by default, may be overrode." }, "addFundSettings(address,bytes)": { "params": { "_comptrollerProxy": "The ComptrollerProxy of the fund", "_settingsData": "Encoded settings to apply to the fee for a fund" } }, "getFeeManager()": { "returns": { "feeManager_": "The `FEE_MANAGER` variable value" } }, "getRateForFund(address)": { "params": { "_comptrollerProxy": "The ComptrollerProxy contract for the fund" }, "returns": { "rate_": "The `rate` variable value" } }, "getRecipientForFund(address)": { "details": "address(0) signifies the VaultProxy owner. Returns address(0) by default, can be overridden by fee." }, "getSettlementType()": { "returns": { "settlementType_": "The `SETTLEMENT_TYPE` variable value" } }, "payout(address,address)": { "details": "Returns false by default, can be overridden by fee" }, "settle(address,address,uint8,bytes,uint256)": { "params": { "_comptrollerProxy": "The ComptrollerProxy of the fund", "_settlementData": "Encoded args to use in calculating the settlement" }, "returns": { "payer_": "The payer of shares due", "settlementType_": "The type of settlement", "sharesDue_": "The amount of shares due" } }, "settlesOnHook(uint8)": { "params": { "_hook": "The FeeHook" }, "returns": { "settles_": "True if the fee settles on the _hook", "usesGav_": "True if the fee uses GAV during settle() for the _hook" } }, "update(address,address,uint8,bytes,uint256)": { "details": "Unimplemented by default, can be overridden by fee" }, "updatesOnHook(uint8)": { "details": "Returns false values by default, can be overridden by fee", "returns": { "updates_": "True if the fee updates on the _hook", "usesGav_": "True if the fee uses GAV during update() for the _hook" } } }, "version": 1 }, "userdoc": { "kind": "user", "methods": { "activateForFund(address,address)": { "notice": "Allows Fee to run logic during fund activation" }, "addFundSettings(address,bytes)": { "notice": "Add the initial fee settings for a fund" }, "getFeeManager()": { "notice": "Gets the `FEE_MANAGER` variable" }, "getRateForFund(address)": { "notice": "Gets the `rate` variable for a fund" }, "getRecipientForFund(address)": { "notice": "Gets the recipient of the fee for a given fund" }, "getSettlementType()": { "notice": "Gets the `SETTLEMENT_TYPE` variable" }, "payout(address,address)": { "notice": "Runs payout logic for a fee that utilizes shares outstanding as its settlement type" }, "settle(address,address,uint8,bytes,uint256)": { "notice": "Settles the fee" }, "settlesOnHook(uint8)": { "notice": "Gets whether the fee settles and requires GAV on a particular hook" }, "update(address,address,uint8,bytes,uint256)": { "notice": "Update fee state after all settlement has occurred during a given fee hook" }, "updatesOnHook(uint8)": { "notice": "Gets whether the fee updates and requires GAV on a particular hook" } }, "version": 1 } }, "settings": { "remappings": [ "@enzyme/=contracts/", "@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/", "@openzeppelin/=node_modules/@openzeppelin/", "@uniswap/=node_modules/@uniswap/", "base64-sol/=node_modules/base64-sol/", "ds-test/=lib/forge-std/lib/ds-test/src/", "forge-std/=lib/forge-std/src/", "hardhat-deploy/=node_modules/hardhat-deploy/", "hardhat/=node_modules/hardhat/" ], "optimizer": { "runs": 200, "details": { "peephole": true, "jumpdestRemover": true, "orderLiterals": true, "deduplicate": true, "cse": true, "constantOptimizer": true, "yul": false } }, "metadata": { "bytecodeHash": "none" }, "compilationTarget": { "contracts/release/extensions/fee-manager/fees/EntranceRateBurnFee.sol": "EntranceRateBurnFee" }, "evmVersion": "istanbul", "libraries": {} }, "sources": { "contracts/release/extensions/fee-manager/IFee.sol": { "keccak256": "0x38e3f324c67f3205e38197165586ea82ca226069902f34214bcde76cf905fcff", "urls": [ "bzz-raw://c1fff656d1bdde3324421bc9e77cbfc4e80baf4e665f8713fdb65611b046f4b0", "dweb:/ipfs/QmVRFjNwmsVHdh4sp3DWdL74VWmhRhPZE5kDxJiuPL8Gu2" ], "license": "GPL-3.0" }, "contracts/release/extensions/fee-manager/IFeeManager.sol": { "keccak256": "0x26accd01ce839ee396cbaf3f72d93f2135656845c3e74c4ae575f8b02b8efd51", "urls": [ "bzz-raw://1462f4081d1aa407faa1a92bb94ecae526a6792c79052dd446d898e75b3e5e22", "dweb:/ipfs/QmQzLS7raSD2ojJbxoraorzA8wRTS2iQtpaedm1x47teod" ], "license": "GPL-3.0" }, "contracts/release/extensions/fee-manager/fees/EntranceRateBurnFee.sol": { "keccak256": "0x6e662db86d34fb44976689f10475c414d15b29b2f207cec10204e080b64efd87", "urls": [ "bzz-raw://5ede5d357a3de55d99f6c52dc6941a85ebdeb2df681c49c2db870c235b742875", "dweb:/ipfs/QmSCQxHYhMMa32LjsrX1WzoTR534XsWQxYe7cjZvxx7n9L" ], "license": "GPL-3.0" }, "contracts/release/extensions/fee-manager/fees/utils/EntranceRateFeeBase.sol": { "keccak256": "0xf12110b2c9f9763f15185fc7939d6e581f30a99b1f55c84d727838add42d262a", "urls": [ "bzz-raw://6455aa6dbfaec13da1564632c2ca94ebcebc0a8a131bd0a11c208acb46925137", "dweb:/ipfs/QmbyQx6m7HdkH4vhdynqEQNvB8sUQDyAuRCY8jKCgsLQCm" ], "license": "GPL-3.0" }, "contracts/release/extensions/fee-manager/fees/utils/FeeBase.sol": { "keccak256": "0x485c03e3088b6dc9828d2e895cce6856501448b4a2c71a0acae4e012bc644b14", "urls": [ "bzz-raw://b63aef3cd20eb4dd585632c74619235ef1d5c3c2c52fd61f8802d0a50569b767", "dweb:/ipfs/QmSuTYChj2j8NnLYCg47feAJ5P9NheQpK46fG6fhmMtimA" ], "license": "GPL-3.0" }, "node_modules/@openzeppelin/contracts/math/SafeMath.sol": { "keccak256": "0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52", "urls": [ "bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c", "dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR" ], "license": "MIT" } }, "version": 1 }, "id": 145 }

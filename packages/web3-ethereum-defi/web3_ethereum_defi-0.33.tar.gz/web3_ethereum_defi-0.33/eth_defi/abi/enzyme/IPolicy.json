{ "abi": [ { "type": "function", "name": "activateForFund", "inputs": [ { "name": "_comptrollerProxy", "type": "address", "internalType": "address" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "addFundSettings", "inputs": [ { "name": "_comptrollerProxy", "type": "address", "internalType": "address" }, { "name": "_encodedSettings", "type": "bytes", "internalType": "bytes" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "canDisable", "inputs": [], "outputs": [ { "name": "canDisable_", "type": "bool", "internalType": "bool" } ], "stateMutability": "pure" }, { "type": "function", "name": "identifier", "inputs": [], "outputs": [ { "name": "identifier_", "type": "string", "internalType": "string" } ], "stateMutability": "pure" }, { "type": "function", "name": "implementedHooks", "inputs": [], "outputs": [ { "name": "implementedHooks_", "type": "uint8[]", "internalType": "enum IPolicyManager.PolicyHook[]" } ], "stateMutability": "pure" }, { "type": "function", "name": "updateFundSettings", "inputs": [ { "name": "_comptrollerProxy", "type": "address", "internalType": "address" }, { "name": "_encodedSettings", "type": "bytes", "internalType": "bytes" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "validateRule", "inputs": [ { "name": "_comptrollerProxy", "type": "address", "internalType": "address" }, { "name": "_hook", "type": "uint8", "internalType": "enum IPolicyManager.PolicyHook" }, { "name": "_encodedArgs", "type": "bytes", "internalType": "bytes" } ], "outputs": [ { "name": "isValid_", "type": "bool", "internalType": "bool" } ], "stateMutability": "nonpayable" } ], "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "methodIdentifiers": { "activateForFund(address)": "ceb9a0ad", "addFundSettings(address,bytes)": "0f5f6b4f", "canDisable()": "1ef92578", "identifier()": "7998a1c4", "implementedHooks()": "cbf54bb2", "updateFundSettings(address,bytes)": "0d4d7510", "validateRule(address,uint8,bytes)": "579be718" }, "rawMetadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"}],\"name\":\"activateForFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_encodedSettings\",\"type\":\"bytes\"}],\"name\":\"addFundSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canDisable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"canDisable_\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identifier\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"identifier_\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementedHooks\",\"outputs\":[{\"internalType\":\"enum IPolicyManager.PolicyHook[]\",\"name\":\"implementedHooks_\",\"type\":\"uint8[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_encodedSettings\",\"type\":\"bytes\"}],\"name\":\"updateFundSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"},{\"internalType\":\"enum IPolicyManager.PolicyHook\",\"name\":\"_hook\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"_encodedArgs\",\"type\":\"bytes\"}],\"name\":\"validateRule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Policy Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/release/extensions/policy-manager/IPolicy.sol\":\"IPolicy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@enzyme/=contracts/\",\":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/release/extensions/policy-manager/IPolicy.sol\":{\"keccak256\":\"0xc12663ca72065b256c3b934ab738fde26c147c7b0399de43650df89dd52ee467\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://be8fecfcba0f3fda615f0a1bb3c766750c23761ef751d7c4472dfe540e460cd1\",\"dweb:/ipfs/QmaarPoRTsX6NiJ8V4u2f3Qh6d7tUs28bw9R14An3t5Bs1\"]},\"contracts/release/extensions/policy-manager/IPolicyManager.sol\":{\"keccak256\":\"0x1ed5fff925cdfa8808a65aa4c1e45813d87c1f462fc6740be670065ed2f6fd32\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3cf584b792bc5321930a1c4c7ec22aa23a7ad8e09483694bb6f5968dca0132aa\",\"dweb:/ipfs/QmbNeaENye3NtnG3fRD7QtDSKUm2knBxUDdeuWicCMzcHb\"]}},\"version\":1}", "metadata": { "compiler": { "version": "0.6.12+commit.27d51765" }, "language": "Solidity", "output": { "abi": [ { "inputs": [ { "internalType": "address", "name": "_comptrollerProxy", "type": "address" } ], "stateMutability": "nonpayable", "type": "function", "name": "activateForFund" }, { "inputs": [ { "internalType": "address", "name": "_comptrollerProxy", "type": "address" }, { "internalType": "bytes", "name": "_encodedSettings", "type": "bytes" } ], "stateMutability": "nonpayable", "type": "function", "name": "addFundSettings" }, { "inputs": [], "stateMutability": "pure", "type": "function", "name": "canDisable", "outputs": [ { "internalType": "bool", "name": "canDisable_", "type": "bool" } ] }, { "inputs": [], "stateMutability": "pure", "type": "function", "name": "identifier", "outputs": [ { "internalType": "string", "name": "identifier_", "type": "string" } ] }, { "inputs": [], "stateMutability": "pure", "type": "function", "name": "implementedHooks", "outputs": [ { "internalType": "enum IPolicyManager.PolicyHook[]", "name": "implementedHooks_", "type": "uint8[]" } ] }, { "inputs": [ { "internalType": "address", "name": "_comptrollerProxy", "type": "address" }, { "internalType": "bytes", "name": "_encodedSettings", "type": "bytes" } ], "stateMutability": "nonpayable", "type": "function", "name": "updateFundSettings" }, { "inputs": [ { "internalType": "address", "name": "_comptrollerProxy", "type": "address" }, { "internalType": "enum IPolicyManager.PolicyHook", "name": "_hook", "type": "uint8" }, { "internalType": "bytes", "name": "_encodedArgs", "type": "bytes" } ], "stateMutability": "nonpayable", "type": "function", "name": "validateRule", "outputs": [ { "internalType": "bool", "name": "isValid_", "type": "bool" } ] } ], "devdoc": { "kind": "dev", "methods": {}, "version": 1 }, "userdoc": { "kind": "user", "methods": {}, "version": 1 } }, "settings": { "remappings": [ "@enzyme/=contracts/", "@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/", "@openzeppelin/=node_modules/@openzeppelin/", "@uniswap/=node_modules/@uniswap/", "base64-sol/=node_modules/base64-sol/", "ds-test/=lib/forge-std/lib/ds-test/src/", "forge-std/=lib/forge-std/src/", "hardhat-deploy/=node_modules/hardhat-deploy/", "hardhat/=node_modules/hardhat/" ], "optimizer": { "runs": 200, "details": { "peephole": true, "jumpdestRemover": true, "orderLiterals": true, "deduplicate": true, "cse": true, "constantOptimizer": true, "yul": false } }, "metadata": { "bytecodeHash": "none" }, "compilationTarget": { "contracts/release/extensions/policy-manager/IPolicy.sol": "IPolicy" }, "evmVersion": "istanbul", "libraries": {} }, "sources": { "contracts/release/extensions/policy-manager/IPolicy.sol": { "keccak256": "0xc12663ca72065b256c3b934ab738fde26c147c7b0399de43650df89dd52ee467", "urls": [ "bzz-raw://be8fecfcba0f3fda615f0a1bb3c766750c23761ef751d7c4472dfe540e460cd1", "dweb:/ipfs/QmaarPoRTsX6NiJ8V4u2f3Qh6d7tUs28bw9R14An3t5Bs1" ], "license": "GPL-3.0" }, "contracts/release/extensions/policy-manager/IPolicyManager.sol": { "keccak256": "0x1ed5fff925cdfa8808a65aa4c1e45813d87c1f462fc6740be670065ed2f6fd32", "urls": [ "bzz-raw://3cf584b792bc5321930a1c4c7ec22aa23a7ad8e09483694bb6f5968dca0132aa", "dweb:/ipfs/QmbNeaENye3NtnG3fRD7QtDSKUm2knBxUDdeuWicCMzcHb" ], "license": "GPL-3.0" } }, "version": 1 }, "id": 204 }

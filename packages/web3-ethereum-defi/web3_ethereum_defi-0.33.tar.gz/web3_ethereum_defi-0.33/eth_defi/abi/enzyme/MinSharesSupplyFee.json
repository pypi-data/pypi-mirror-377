{ "abi": [ { "type": "constructor", "inputs": [ { "name": "_feeManager", "type": "address", "internalType": "address" } ], "stateMutability": "nonpayable" }, { "type": "function", "name": "activateForFund", "inputs": [ { "name": "", "type": "address", "internalType": "address" }, { "name": "", "type": "address", "internalType": "address" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "addFundSettings", "inputs": [ { "name": "", "type": "address", "internalType": "address" }, { "name": "", "type": "bytes", "internalType": "bytes" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "getFeeManager", "inputs": [], "outputs": [ { "name": "feeManager_", "type": "address", "internalType": "address" } ], "stateMutability": "view" }, { "type": "function", "name": "getRecipientForFund", "inputs": [ { "name": "", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "recipient_", "type": "address", "internalType": "address" } ], "stateMutability": "view" }, { "type": "function", "name": "payout", "inputs": [ { "name": "", "type": "address", "internalType": "address" }, { "name": "", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "", "type": "bool", "internalType": "bool" } ], "stateMutability": "nonpayable" }, { "type": "function", "name": "settle", "inputs": [ { "name": "_comptrollerProxy", "type": "address", "internalType": "address" }, { "name": "_vaultProxy", "type": "address", "internalType": "address" }, { "name": "", "type": "uint8", "internalType": "enum IFeeManager.FeeHook" }, { "name": "_settlementData", "type": "bytes", "internalType": "bytes" }, { "name": "", "type": "uint256", "internalType": "uint256" } ], "outputs": [ { "name": "settlementType_", "type": "uint8", "internalType": "enum IFeeManager.SettlementType" }, { "name": "payer_", "type": "address", "internalType": "address" }, { "name": "sharesDue_", "type": "uint256", "internalType": "uint256" } ], "stateMutability": "nonpayable" }, { "type": "function", "name": "settlesOnHook", "inputs": [ { "name": "_hook", "type": "uint8", "internalType": "enum IFeeManager.FeeHook" } ], "outputs": [ { "name": "settles_", "type": "bool", "internalType": "bool" }, { "name": "usesGav_", "type": "bool", "internalType": "bool" } ], "stateMutability": "view" }, { "type": "function", "name": "update", "inputs": [ { "name": "", "type": "address", "internalType": "address" }, { "name": "", "type": "address", "internalType": "address" }, { "name": "", "type": "uint8", "internalType": "enum IFeeManager.FeeHook" }, { "name": "", "type": "bytes", "internalType": "bytes" }, { "name": "", "type": "uint256", "internalType": "uint256" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "updatesOnHook", "inputs": [ { "name": "", "type": "uint8", "internalType": "enum IFeeManager.FeeHook" } ], "outputs": [ { "name": "updates_", "type": "bool", "internalType": "bool" }, { "name": "usesGav_", "type": "bool", "internalType": "bool" } ], "stateMutability": "view" }, { "type": "event", "name": "Settled", "inputs": [ { "name": "comptrollerProxy", "type": "address", "indexed": true, "internalType": "address" }, { "name": "payer", "type": "address", "indexed": true, "internalType": "address" }, { "name": "sharesQuantity", "type": "uint256", "indexed": false, "internalType": "uint256" } ], "anonymous": false } ], "bytecode": { "object": "0x60a060405234801561001057600080fd5b5060405161067f38038061067f8339818101604052602081101561003357600080fd5b5051606081901b6001600160601b0319166080526001600160a01b031661061361006c600039806103dc528061058b52506106136000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806341892d7e1161006657806341892d7e1461021657806362780b3c146102e1578063b78b481314610323578063e337a91f14610365578063f2d638261461038557610093565b80630f5f6b4f14610098578063233faf5f1461011a5780633146d058146101ad578063320f0ddd146101db575b600080fd5b610118600480360360408110156100ae57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100d957600080fd5b8201836020820111156100eb57600080fd5b8035906020019184600183028401116401000000008311171561010d57600080fd5b50909250905061038d565b005b610118600480360360a081101561013057600080fd5b6001600160a01b03823581169260208101359091169160ff604083013516919081019060808101606082013564010000000081111561016e57600080fd5b82018360208201111561018057600080fd5b803590602001918460018302840111640100000000831117156101a257600080fd5b919350915035610392565b610118600480360360408110156101c357600080fd5b506001600160a01b038135811691602001351661039a565b6101fb600480360360208110156101f157600080fd5b503560ff1661039e565b60408051921515835290151560208301528051918290030190f35b6102a9600480360360a081101561022c57600080fd5b6001600160a01b03823581169260208101359091169160ff604083013516919081019060808101606082013564010000000081111561026a57600080fd5b82018360208201111561027c57600080fd5b8035906020019184600183028401116401000000008311171561029e57600080fd5b9193509150356103cd565b604051808460058111156102b957fe5b8152602001836001600160a01b03168152602001828152602001935050505060405180910390f35b610307600480360360208110156102f757600080fd5b50356001600160a01b0316610573565b604080516001600160a01b039092168252519081900360200190f35b6103516004803603604081101561033957600080fd5b506001600160a01b0381358116916020013516610579565b604080519115158252519081900360200190f35b6101fb6004803603602081101561037b57600080fd5b503560ff16610581565b610307610589565b505050565b505050505050565b5050565b60008060028360038111156103af57fe5b14156103c157506001905060006103c8565b5060009050805b915091565b60008080336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104385760405162461bcd60e51b81526004018080602001828103825260258152602001806105e26025913960400191505060405180910390fd5b6000886001600160a01b03166370a0823160016040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561048857600080fd5b505afa15801561049c573d6000803e3d6000fd5b505050506040513d60208110156104b257600080fd5b50519050620f424081106104d157600080600093509350935050610567565b80620f424003915061051887878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506105ad92505050565b50506040805184815290519194506001600160a01b0380861692908d16917f7e79a2206061184e05985ae0578dec52f817756a441996f984cdc817efc25a68919081900360200190a360019350505b96509650969350505050565b50600190565b600092915050565b600080915091565b7f000000000000000000000000000000000000000000000000000000000000000090565b60008060008380602001905160608110156105c757600080fd5b50805160208201516040909201519096919550935091505056fe4f6e6c7920746865204665654d616e6765722063616e206d616b6520746869732063616c6ca164736f6c634300060c000a", "sourceMap": "563:2745:150:-:0;;;888:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;888:63:150;705:25:154;;;;-1:-1:-1;;;;;;705:25:154;;;-1:-1:-1;;;;;563:2745:150;;;;;;;;", "linkReferences": {} }, "deployedBytecode": { "object": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c806341892d7e1161006657806341892d7e1461021657806362780b3c146102e1578063b78b481314610323578063e337a91f14610365578063f2d638261461038557610093565b80630f5f6b4f14610098578063233faf5f1461011a5780633146d058146101ad578063320f0ddd146101db575b600080fd5b610118600480360360408110156100ae57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100d957600080fd5b8201836020820111156100eb57600080fd5b8035906020019184600183028401116401000000008311171561010d57600080fd5b50909250905061038d565b005b610118600480360360a081101561013057600080fd5b6001600160a01b03823581169260208101359091169160ff604083013516919081019060808101606082013564010000000081111561016e57600080fd5b82018360208201111561018057600080fd5b803590602001918460018302840111640100000000831117156101a257600080fd5b919350915035610392565b610118600480360360408110156101c357600080fd5b506001600160a01b038135811691602001351661039a565b6101fb600480360360208110156101f157600080fd5b503560ff1661039e565b60408051921515835290151560208301528051918290030190f35b6102a9600480360360a081101561022c57600080fd5b6001600160a01b03823581169260208101359091169160ff604083013516919081019060808101606082013564010000000081111561026a57600080fd5b82018360208201111561027c57600080fd5b8035906020019184600183028401116401000000008311171561029e57600080fd5b9193509150356103cd565b604051808460058111156102b957fe5b8152602001836001600160a01b03168152602001828152602001935050505060405180910390f35b610307600480360360208110156102f757600080fd5b50356001600160a01b0316610573565b604080516001600160a01b039092168252519081900360200190f35b6103516004803603604081101561033957600080fd5b506001600160a01b0381358116916020013516610579565b604080519115158252519081900360200190f35b6101fb6004803603602081101561037b57600080fd5b503560ff16610581565b610307610589565b505050565b505050505050565b5050565b60008060028360038111156103af57fe5b14156103c157506001905060006103c8565b5060009050805b915091565b60008080336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104385760405162461bcd60e51b81526004018080602001828103825260258152602001806105e26025913960400191505060405180910390fd5b6000886001600160a01b03166370a0823160016040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561048857600080fd5b505afa15801561049c573d6000803e3d6000fd5b505050506040513d60208110156104b257600080fd5b50519050620f424081106104d157600080600093509350935050610567565b80620f424003915061051887878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506105ad92505050565b50506040805184815290519194506001600160a01b0380861692908d16917f7e79a2206061184e05985ae0578dec52f817756a441996f984cdc817efc25a68919081900360200190a360019350505b96509650969350505050565b50600190565b600092915050565b600080915091565b7f000000000000000000000000000000000000000000000000000000000000000090565b60008060008380602001905160608110156105c757600080fd5b50805160208201516040909201519096919550935091505056fe4f6e6c7920746865204665654d616e6765722063616e206d616b6520746869732063616c6ca164736f6c634300060c000a", "sourceMap": "563:2745:150:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1078:78;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1078:78:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1078:78:150;;-1:-1:-1;1078:78:150;-1:-1:-1;1078:78:150;:::i;:::-;;1755:175:154;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1755:175:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1755:175:154;-1:-1:-1;1755:175:154;;:::i;862:92::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;862:92:154;;;;;;;;;;:::i;3017:289:150:-;;;;;;;;;;;;;;;;-1:-1:-1;3017:289:150;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1846:907;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1846:907:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1846:907:150;-1:-1:-1;1846:907:150;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1846:907:150;;;;;;;;;;;;;;;;;;;;;;1266:187;;;;;;;;;;;;;;;;-1:-1:-1;1266:187:150;-1:-1:-1;;;;;1266:187:150;;:::i;:::-;;;;-1:-1:-1;;;;;1266:187:150;;;;;;;;;;;;;;1490:104:154;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1490:104:154;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2232:196;;;;;;;;;;;;;;;;-1:-1:-1;2232:196:154;;;;:::i;3806:104::-;;;:::i;1078:78:150:-;;;;:::o;1755:175:154:-;;;;;;;:::o;862:92::-;;;:::o;3017:289:150:-;3131:13;;3188:33;3179:5;:42;;;;;;;;;3175:93;;;-1:-1:-1;3245:4:150;;-1:-1:-1;3251:5:150;3237:20;;3175:93;-1:-1:-1;3286:5:150;;-1:-1:-1;3286:5:150;3017:289;;;;:::o;1846:907::-;2105:42;;;564:10:154;-1:-1:-1;;;;;578:11:154;564:25;;556:75;;;;-1:-1:-1;;;556:75:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2232:20:150::1;2261:11;-1:-1:-1::0;;;;;2255:28:150::1;;879:1;2255:51;;;;;;;;;;;;;-1:-1:-1::0;;;;;2255:51:150::1;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;2255:51:150;;-1:-1:-1;754:3:150::1;2320:33:::0;::::1;2316:119;;2377:31;2418:1:::0;2422::::1;2369:55;;;;;;;;;2316:119;2522:12;754:3;2502:32;2489:45;;2559:52;2595:15;;2559:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;2559:35:150::1;::::0;-1:-1:-1;;;2559:52:150:i:1;:::-;-1:-1:-1::0;;2627:46:150::1;::::0;;;;;;;2544:67;;-1:-1:-1;;;;;;2627:46:150;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;2692:33;2684:62;;;641:1:154;1846:907:150::0;;;;;;;;;;:::o;1266:187::-;-1:-1:-1;879:1:150;;1266:187::o;1490:104:154:-;1559:4;1490:104;;;;:::o;2232:196::-;2356:13;;2232:196;;;:::o;3806:104::-;3892:11;3806:104;:::o;3300:318::-;3435:14;3463:25;3502:21;3566:15;3555:56;;;;;;;;;;;;;;;-1:-1:-1;3555:56:154;;;;;;;;;;;;;;;-1:-1:-1;3555:56:154;-1:-1:-1;3300:318:154;-1:-1:-1;;3300:318:154:o", "linkReferences": {}, "immutableReferences": { "40426": [ { "start": 988, "length": 32 }, { "start": 1419, "length": 32 } ] } }, "methodIdentifiers": { "activateForFund(address,address)": "3146d058", "addFundSettings(address,bytes)": "0f5f6b4f", "getFeeManager()": "f2d63826", "getRecipientForFund(address)": "62780b3c", "payout(address,address)": "b78b4813", "settle(address,address,uint8,bytes,uint256)": "41892d7e", "settlesOnHook(uint8)": "320f0ddd", "update(address,address,uint8,bytes,uint256)": "233faf5f", "updatesOnHook(uint8)": "e337a91f" }, "rawMetadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"comptrollerProxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesQuantity\",\"type\":\"uint256\"}],\"name\":\"Settled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"activateForFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"addFundSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"feeManager_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getRecipientForFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"payout\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vaultProxy\",\"type\":\"address\"},{\"internalType\":\"enum IFeeManager.FeeHook\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"_settlementData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"enum IFeeManager.SettlementType\",\"name\":\"settlementType_\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"payer_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sharesDue_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IFeeManager.FeeHook\",\"name\":\"_hook\",\"type\":\"uint8\"}],\"name\":\"settlesOnHook\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"settles_\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"usesGav_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IFeeManager.FeeHook\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IFeeManager.FeeHook\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"updatesOnHook\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"updates_\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"usesGav_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{\"activateForFund(address,address)\":{\"details\":\"Unimplemented by default, may be overrode.\"},\"addFundSettings(address,bytes)\":{\"details\":\"Unnecessary for this fee\"},\"getFeeManager()\":{\"returns\":{\"feeManager_\":\"The `FEE_MANAGER` variable value\"}},\"getRecipientForFund(address)\":{\"returns\":{\"recipient_\":\"The recipient\"}},\"payout(address,address)\":{\"details\":\"Returns false by default, can be overridden by fee\"},\"settle(address,address,uint8,bytes,uint256)\":{\"params\":{\"_comptrollerProxy\":\"The ComptrollerProxy of the fund\",\"_settlementData\":\"Encoded args to use in calculating the settlement\",\"_vaultProxy\":\"The VaultProxy of the fund\"},\"returns\":{\"payer_\":\"The payer of shares due\",\"settlementType_\":\"The type of settlement\",\"sharesDue_\":\"The amount of shares due\"}},\"settlesOnHook(uint8)\":{\"params\":{\"_hook\":\"The FeeHook\"},\"returns\":{\"settles_\":\"True if the fee settles on the _hook\",\"usesGav_\":\"True if the fee uses GAV during settle() for the _hook\"}},\"update(address,address,uint8,bytes,uint256)\":{\"details\":\"Unimplemented by default, can be overridden by fee\"},\"updatesOnHook(uint8)\":{\"details\":\"Returns false values by default, can be overridden by fee\",\"returns\":{\"updates_\":\"True if the fee updates on the _hook\",\"usesGav_\":\"True if the fee uses GAV during update() for the _hook\"}}},\"title\":\"MinSharesSupplyFee Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"activateForFund(address,address)\":{\"notice\":\"Allows Fee to run logic during fund activation\"},\"addFundSettings(address,bytes)\":{\"notice\":\"Add the initial fee settings for a fund\"},\"getFeeManager()\":{\"notice\":\"Gets the `FEE_MANAGER` variable\"},\"getRecipientForFund(address)\":{\"notice\":\"Gets the recipient of the fee for a given fund\"},\"payout(address,address)\":{\"notice\":\"Runs payout logic for a fee that utilizes shares outstanding as its settlement type\"},\"settle(address,address,uint8,bytes,uint256)\":{\"notice\":\"Settles the fee\"},\"settlesOnHook(uint8)\":{\"notice\":\"Gets whether the fee settles and requires GAV on a particular hook\"},\"update(address,address,uint8,bytes,uint256)\":{\"notice\":\"Update fee state after all settlement has occurred during a given fee hook\"},\"updatesOnHook(uint8)\":{\"notice\":\"Gets whether the fee updates and requires GAV on a particular hook\"}},\"notice\":\"Charges and permanently locks a one-time fee to ensure a minimum shares supply at all times\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/release/extensions/fee-manager/fees/MinSharesSupplyFee.sol\":\"MinSharesSupplyFee\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@enzyme/=contracts/\",\":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/release/extensions/fee-manager/IFee.sol\":{\"keccak256\":\"0x38e3f324c67f3205e38197165586ea82ca226069902f34214bcde76cf905fcff\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c1fff656d1bdde3324421bc9e77cbfc4e80baf4e665f8713fdb65611b046f4b0\",\"dweb:/ipfs/QmVRFjNwmsVHdh4sp3DWdL74VWmhRhPZE5kDxJiuPL8Gu2\"]},\"contracts/release/extensions/fee-manager/IFeeManager.sol\":{\"keccak256\":\"0x26accd01ce839ee396cbaf3f72d93f2135656845c3e74c4ae575f8b02b8efd51\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1462f4081d1aa407faa1a92bb94ecae526a6792c79052dd446d898e75b3e5e22\",\"dweb:/ipfs/QmQzLS7raSD2ojJbxoraorzA8wRTS2iQtpaedm1x47teod\"]},\"contracts/release/extensions/fee-manager/fees/MinSharesSupplyFee.sol\":{\"keccak256\":\"0x9af095d953addea2d9b6bf5ef987a1b734b31c32b2836cbb9add488da6eace1b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6e109deb1b547f0cda18330918baa92e200ccd4acee164d89927ee658fd55d0\",\"dweb:/ipfs/QmW8L1W1dQFQ4MEdXyScQM4duzyZvNwtTwMFqpQWVSDEp5\"]},\"contracts/release/extensions/fee-manager/fees/utils/FeeBase.sol\":{\"keccak256\":\"0x485c03e3088b6dc9828d2e895cce6856501448b4a2c71a0acae4e012bc644b14\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b63aef3cd20eb4dd585632c74619235ef1d5c3c2c52fd61f8802d0a50569b767\",\"dweb:/ipfs/QmSuTYChj2j8NnLYCg47feAJ5P9NheQpK46fG6fhmMtimA\"]},\"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}", "metadata": { "compiler": { "version": "0.6.12+commit.27d51765" }, "language": "Solidity", "output": { "abi": [ { "inputs": [ { "internalType": "address", "name": "_feeManager", "type": "address" } ], "stateMutability": "nonpayable", "type": "constructor" }, { "inputs": [ { "internalType": "address", "name": "comptrollerProxy", "type": "address", "indexed": true }, { "internalType": "address", "name": "payer", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "sharesQuantity", "type": "uint256", "indexed": false } ], "type": "event", "name": "Settled", "anonymous": false }, { "inputs": [ { "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" } ], "stateMutability": "nonpayable", "type": "function", "name": "activateForFund" }, { "inputs": [ { "internalType": "address", "name": "", "type": "address" }, { "internalType": "bytes", "name": "", "type": "bytes" } ], "stateMutability": "nonpayable", "type": "function", "name": "addFundSettings" }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "getFeeManager", "outputs": [ { "internalType": "address", "name": "feeManager_", "type": "address" } ] }, { "inputs": [ { "internalType": "address", "name": "", "type": "address" } ], "stateMutability": "view", "type": "function", "name": "getRecipientForFund", "outputs": [ { "internalType": "address", "name": "recipient_", "type": "address" } ] }, { "inputs": [ { "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" } ], "stateMutability": "nonpayable", "type": "function", "name": "payout", "outputs": [ { "internalType": "bool", "name": "", "type": "bool" } ] }, { "inputs": [ { "internalType": "address", "name": "_comptrollerProxy", "type": "address" }, { "internalType": "address", "name": "_vaultProxy", "type": "address" }, { "internalType": "enum IFeeManager.FeeHook", "name": "", "type": "uint8" }, { "internalType": "bytes", "name": "_settlementData", "type": "bytes" }, { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "nonpayable", "type": "function", "name": "settle", "outputs": [ { "internalType": "enum IFeeManager.SettlementType", "name": "settlementType_", "type": "uint8" }, { "internalType": "address", "name": "payer_", "type": "address" }, { "internalType": "uint256", "name": "sharesDue_", "type": "uint256" } ] }, { "inputs": [ { "internalType": "enum IFeeManager.FeeHook", "name": "_hook", "type": "uint8" } ], "stateMutability": "view", "type": "function", "name": "settlesOnHook", "outputs": [ { "internalType": "bool", "name": "settles_", "type": "bool" }, { "internalType": "bool", "name": "usesGav_", "type": "bool" } ] }, { "inputs": [ { "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" }, { "internalType": "enum IFeeManager.FeeHook", "name": "", "type": "uint8" }, { "internalType": "bytes", "name": "", "type": "bytes" }, { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "nonpayable", "type": "function", "name": "update" }, { "inputs": [ { "internalType": "enum IFeeManager.FeeHook", "name": "", "type": "uint8" } ], "stateMutability": "view", "type": "function", "name": "updatesOnHook", "outputs": [ { "internalType": "bool", "name": "updates_", "type": "bool" }, { "internalType": "bool", "name": "usesGav_", "type": "bool" } ] } ], "devdoc": { "kind": "dev", "methods": { "activateForFund(address,address)": { "details": "Unimplemented by default, may be overrode." }, "addFundSettings(address,bytes)": { "details": "Unnecessary for this fee" }, "getFeeManager()": { "returns": { "feeManager_": "The `FEE_MANAGER` variable value" } }, "getRecipientForFund(address)": { "returns": { "recipient_": "The recipient" } }, "payout(address,address)": { "details": "Returns false by default, can be overridden by fee" }, "settle(address,address,uint8,bytes,uint256)": { "params": { "_comptrollerProxy": "The ComptrollerProxy of the fund", "_settlementData": "Encoded args to use in calculating the settlement", "_vaultProxy": "The VaultProxy of the fund" }, "returns": { "payer_": "The payer of shares due", "settlementType_": "The type of settlement", "sharesDue_": "The amount of shares due" } }, "settlesOnHook(uint8)": { "params": { "_hook": "The FeeHook" }, "returns": { "settles_": "True if the fee settles on the _hook", "usesGav_": "True if the fee uses GAV during settle() for the _hook" } }, "update(address,address,uint8,bytes,uint256)": { "details": "Unimplemented by default, can be overridden by fee" }, "updatesOnHook(uint8)": { "details": "Returns false values by default, can be overridden by fee", "returns": { "updates_": "True if the fee updates on the _hook", "usesGav_": "True if the fee uses GAV during update() for the _hook" } } }, "version": 1 }, "userdoc": { "kind": "user", "methods": { "activateForFund(address,address)": { "notice": "Allows Fee to run logic during fund activation" }, "addFundSettings(address,bytes)": { "notice": "Add the initial fee settings for a fund" }, "getFeeManager()": { "notice": "Gets the `FEE_MANAGER` variable" }, "getRecipientForFund(address)": { "notice": "Gets the recipient of the fee for a given fund" }, "payout(address,address)": { "notice": "Runs payout logic for a fee that utilizes shares outstanding as its settlement type" }, "settle(address,address,uint8,bytes,uint256)": { "notice": "Settles the fee" }, "settlesOnHook(uint8)": { "notice": "Gets whether the fee settles and requires GAV on a particular hook" }, "update(address,address,uint8,bytes,uint256)": { "notice": "Update fee state after all settlement has occurred during a given fee hook" }, "updatesOnHook(uint8)": { "notice": "Gets whether the fee updates and requires GAV on a particular hook" } }, "version": 1 } }, "settings": { "remappings": [ "@enzyme/=contracts/", "@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/", "@openzeppelin/=node_modules/@openzeppelin/", "@uniswap/=node_modules/@uniswap/", "base64-sol/=node_modules/base64-sol/", "ds-test/=lib/forge-std/lib/ds-test/src/", "forge-std/=lib/forge-std/src/", "hardhat-deploy/=node_modules/hardhat-deploy/", "hardhat/=node_modules/hardhat/" ], "optimizer": { "runs": 200, "details": { "peephole": true, "jumpdestRemover": true, "orderLiterals": true, "deduplicate": true, "cse": true, "constantOptimizer": true, "yul": false } }, "metadata": { "bytecodeHash": "none" }, "compilationTarget": { "contracts/release/extensions/fee-manager/fees/MinSharesSupplyFee.sol": "MinSharesSupplyFee" }, "evmVersion": "istanbul", "libraries": {} }, "sources": { "contracts/release/extensions/fee-manager/IFee.sol": { "keccak256": "0x38e3f324c67f3205e38197165586ea82ca226069902f34214bcde76cf905fcff", "urls": [ "bzz-raw://c1fff656d1bdde3324421bc9e77cbfc4e80baf4e665f8713fdb65611b046f4b0", "dweb:/ipfs/QmVRFjNwmsVHdh4sp3DWdL74VWmhRhPZE5kDxJiuPL8Gu2" ], "license": "GPL-3.0" }, "contracts/release/extensions/fee-manager/IFeeManager.sol": { "keccak256": "0x26accd01ce839ee396cbaf3f72d93f2135656845c3e74c4ae575f8b02b8efd51", "urls": [ "bzz-raw://1462f4081d1aa407faa1a92bb94ecae526a6792c79052dd446d898e75b3e5e22", "dweb:/ipfs/QmQzLS7raSD2ojJbxoraorzA8wRTS2iQtpaedm1x47teod" ], "license": "GPL-3.0" }, "contracts/release/extensions/fee-manager/fees/MinSharesSupplyFee.sol": { "keccak256": "0x9af095d953addea2d9b6bf5ef987a1b734b31c32b2836cbb9add488da6eace1b", "urls": [ "bzz-raw://c6e109deb1b547f0cda18330918baa92e200ccd4acee164d89927ee658fd55d0", "dweb:/ipfs/QmW8L1W1dQFQ4MEdXyScQM4duzyZvNwtTwMFqpQWVSDEp5" ], "license": "GPL-3.0" }, "contracts/release/extensions/fee-manager/fees/utils/FeeBase.sol": { "keccak256": "0x485c03e3088b6dc9828d2e895cce6856501448b4a2c71a0acae4e012bc644b14", "urls": [ "bzz-raw://b63aef3cd20eb4dd585632c74619235ef1d5c3c2c52fd61f8802d0a50569b767", "dweb:/ipfs/QmSuTYChj2j8NnLYCg47feAJ5P9NheQpK46fG6fhmMtimA" ], "license": "GPL-3.0" }, "node_modules/@openzeppelin/contracts/math/SafeMath.sol": { "keccak256": "0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52", "urls": [ "bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c", "dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR" ], "license": "MIT" }, "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": { "keccak256": "0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3", "urls": [ "bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e", "dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE" ], "license": "MIT" }, "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": { "keccak256": "0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5", "urls": [ "bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08", "dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC" ], "license": "MIT" }, "node_modules/@openzeppelin/contracts/utils/Context.sol": { "keccak256": "0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0", "urls": [ "bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f", "dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96" ], "license": "MIT" } }, "version": 1 }, "id": 150 }

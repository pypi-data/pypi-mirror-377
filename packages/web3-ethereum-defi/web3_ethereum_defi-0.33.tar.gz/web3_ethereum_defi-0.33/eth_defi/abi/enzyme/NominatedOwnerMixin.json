{ "abi": [ { "type": "function", "name": "claimOwnership", "inputs": [], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "getNominatedOwner", "inputs": [], "outputs": [ { "name": "nominatedOwner_", "type": "address", "internalType": "address" } ], "stateMutability": "view" }, { "type": "function", "name": "getOwner", "inputs": [], "outputs": [ { "name": "owner_", "type": "address", "internalType": "address" } ], "stateMutability": "view" }, { "type": "function", "name": "setNominatedOwner", "inputs": [ { "name": "_nextNominatedOwner", "type": "address", "internalType": "address" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "event", "name": "NominatedOwnerSet", "inputs": [ { "name": "nominatedOwner", "type": "address", "indexed": true, "internalType": "address" } ], "anonymous": false }, { "type": "event", "name": "OwnerSet", "inputs": [ { "name": "owner", "type": "address", "indexed": false, "internalType": "address" } ], "anonymous": false } ], "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "methodIdentifiers": { "claimOwnership()": "4e71e0c8", "getNominatedOwner()": "288b6a36", "getOwner()": "893d20e8", "setNominatedOwner(address)": "728e17a0" }, "rawMetadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nominatedOwner\",\"type\":\"address\"}],\"name\":\"NominatedOwnerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnerSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNominatedOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"nominatedOwner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nextNominatedOwner\",\"type\":\"address\"}],\"name\":\"setNominatedOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"details\":\"Initial owner must be set in inheriting contract via __setOwner()\",\"kind\":\"dev\",\"methods\":{\"claimOwnership()\":{\"details\":\"Note that this claims process means that `owner` can never be reset to address(0)\"},\"getNominatedOwner()\":{\"returns\":{\"nominatedOwner_\":\"The next contract owner nominee\"}},\"getOwner()\":{\"returns\":{\"owner_\":\"The contract owner\"}},\"setNominatedOwner(address)\":{\"params\":{\"_nextNominatedOwner\":\"The account to nominate\"}}},\"title\":\"NominatedOwnerMixin Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimOwnership()\":{\"notice\":\"Claim ownership of the contract\"},\"getNominatedOwner()\":{\"notice\":\"Gets the account that is nominated to be the next contract owner\"},\"getOwner()\":{\"notice\":\"Gets the owner of this contract\"},\"setNominatedOwner(address)\":{\"notice\":\"Nominate a new contract owner\"}},\"notice\":\"Mixin contract for a nominated contract ownership transfer pattern\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/release/utils/NominatedOwnerMixin.sol\":\"NominatedOwnerMixin\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@enzyme/=contracts/\",\":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/release/utils/NominatedOwnerMixin.sol\":{\"keccak256\":\"0xb8d1c6eba0b342bbbf49af872925fc8febbef1e0958fdb8d4664501001d73761\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4c0679beb263fb2e4f04bf39e65db051d7af7984e8357bbe1f0901cd986e538d\",\"dweb:/ipfs/QmTooY2TQEh5ax2XhMvJoa7pzFrb3WLegXjQ9EMzCPVpQe\"]}},\"version\":1}", "metadata": { "compiler": { "version": "0.6.12+commit.27d51765" }, "language": "Solidity", "output": { "abi": [ { "inputs": [ { "internalType": "address", "name": "nominatedOwner", "type": "address", "indexed": true } ], "type": "event", "name": "NominatedOwnerSet", "anonymous": false }, { "inputs": [ { "internalType": "address", "name": "owner", "type": "address", "indexed": false } ], "type": "event", "name": "OwnerSet", "anonymous": false }, { "inputs": [], "stateMutability": "nonpayable", "type": "function", "name": "claimOwnership" }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "getNominatedOwner", "outputs": [ { "internalType": "address", "name": "nominatedOwner_", "type": "address" } ] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "getOwner", "outputs": [ { "internalType": "address", "name": "owner_", "type": "address" } ] }, { "inputs": [ { "internalType": "address", "name": "_nextNominatedOwner", "type": "address" } ], "stateMutability": "nonpayable", "type": "function", "name": "setNominatedOwner" } ], "devdoc": { "kind": "dev", "methods": { "claimOwnership()": { "details": "Note that this claims process means that `owner` can never be reset to address(0)" }, "getNominatedOwner()": { "returns": { "nominatedOwner_": "The next contract owner nominee" } }, "getOwner()": { "returns": { "owner_": "The contract owner" } }, "setNominatedOwner(address)": { "params": { "_nextNominatedOwner": "The account to nominate" } } }, "version": 1 }, "userdoc": { "kind": "user", "methods": { "claimOwnership()": { "notice": "Claim ownership of the contract" }, "getNominatedOwner()": { "notice": "Gets the account that is nominated to be the next contract owner" }, "getOwner()": { "notice": "Gets the owner of this contract" }, "setNominatedOwner(address)": { "notice": "Nominate a new contract owner" } }, "version": 1 } }, "settings": { "remappings": [ "@enzyme/=contracts/", "@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/", "@openzeppelin/=node_modules/@openzeppelin/", "@uniswap/=node_modules/@uniswap/", "base64-sol/=node_modules/base64-sol/", "ds-test/=lib/forge-std/lib/ds-test/src/", "forge-std/=lib/forge-std/src/", "hardhat-deploy/=node_modules/hardhat-deploy/", "hardhat/=node_modules/hardhat/" ], "optimizer": { "runs": 200, "details": { "peephole": true, "jumpdestRemover": true, "orderLiterals": true, "deduplicate": true, "cse": true, "constantOptimizer": true, "yul": false } }, "metadata": { "bytecodeHash": "none" }, "compilationTarget": { "contracts/release/utils/NominatedOwnerMixin.sol": "NominatedOwnerMixin" }, "evmVersion": "istanbul", "libraries": {} }, "sources": { "contracts/release/utils/NominatedOwnerMixin.sol": { "keccak256": "0xb8d1c6eba0b342bbbf49af872925fc8febbef1e0958fdb8d4664501001d73761", "urls": [ "bzz-raw://4c0679beb263fb2e4f04bf39e65db051d7af7984e8357bbe1f0901cd986e538d", "dweb:/ipfs/QmTooY2TQEh5ax2XhMvJoa7pzFrb3WLegXjQ9EMzCPVpQe" ], "license": "GPL-3.0" } }, "version": 1 }, "id": 361 }

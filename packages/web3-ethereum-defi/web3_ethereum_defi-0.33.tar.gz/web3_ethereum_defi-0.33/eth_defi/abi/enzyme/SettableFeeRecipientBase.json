{ "abi": [ { "type": "function", "name": "getRecipientForFund", "inputs": [ { "name": "_comptrollerProxy", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "recipient_", "type": "address", "internalType": "address" } ], "stateMutability": "view" }, { "type": "event", "name": "RecipientSetForFund", "inputs": [ { "name": "comptrollerProxy", "type": "address", "indexed": true, "internalType": "address" }, { "name": "recipient", "type": "address", "indexed": true, "internalType": "address" } ], "anonymous": false } ], "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "methodIdentifiers": { "getRecipientForFund(address)": "62780b3c" }, "rawMetadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"comptrollerProxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"RecipientSetForFund\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_comptrollerProxy\",\"type\":\"address\"}],\"name\":\"getRecipientForFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{\"getRecipientForFund(address)\":{\"details\":\"address(0) signifies the VaultProxy owner\",\"params\":{\"_comptrollerProxy\":\"The ComptrollerProxy contract for the fund\"},\"returns\":{\"recipient_\":\"The recipient\"}}},\"title\":\"SettableFeeRecipientBase Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getRecipientForFund(address)\":{\"notice\":\"Gets the recipient of the fee for a given fund\"}},\"notice\":\"A base contract to set and get a fee recipient for the inheriting fee\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/release/extensions/fee-manager/fees/utils/SettableFeeRecipientBase.sol\":\"SettableFeeRecipientBase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@enzyme/=contracts/\",\":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/release/extensions/fee-manager/fees/utils/SettableFeeRecipientBase.sol\":{\"keccak256\":\"0xb3b4b3cd13141871c912310ce1dace2e94f89eee7a52b95d4df9e4642a958f4d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b120324be26eddebb2fd5d15ecdbef4bfc5a5bbd05bd60796677157480842aa1\",\"dweb:/ipfs/Qmab9XnYHvG3zWtQaTee24qU7VK94MMLySPkrZqDBbB5NN\"]}},\"version\":1}", "metadata": { "compiler": { "version": "0.6.12+commit.27d51765" }, "language": "Solidity", "output": { "abi": [ { "inputs": [ { "internalType": "address", "name": "comptrollerProxy", "type": "address", "indexed": true }, { "internalType": "address", "name": "recipient", "type": "address", "indexed": true } ], "type": "event", "name": "RecipientSetForFund", "anonymous": false }, { "inputs": [ { "internalType": "address", "name": "_comptrollerProxy", "type": "address" } ], "stateMutability": "view", "type": "function", "name": "getRecipientForFund", "outputs": [ { "internalType": "address", "name": "recipient_", "type": "address" } ] } ], "devdoc": { "kind": "dev", "methods": { "getRecipientForFund(address)": { "details": "address(0) signifies the VaultProxy owner", "params": { "_comptrollerProxy": "The ComptrollerProxy contract for the fund" }, "returns": { "recipient_": "The recipient" } } }, "version": 1 }, "userdoc": { "kind": "user", "methods": { "getRecipientForFund(address)": { "notice": "Gets the recipient of the fee for a given fund" } }, "version": 1 } }, "settings": { "remappings": [ "@enzyme/=contracts/", "@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/", "@openzeppelin/=node_modules/@openzeppelin/", "@uniswap/=node_modules/@uniswap/", "base64-sol/=node_modules/base64-sol/", "ds-test/=lib/forge-std/lib/ds-test/src/", "forge-std/=lib/forge-std/src/", "hardhat-deploy/=node_modules/hardhat-deploy/", "hardhat/=node_modules/hardhat/" ], "optimizer": { "runs": 200, "details": { "peephole": true, "jumpdestRemover": true, "orderLiterals": true, "deduplicate": true, "cse": true, "constantOptimizer": true, "yul": false } }, "metadata": { "bytecodeHash": "none" }, "compilationTarget": { "contracts/release/extensions/fee-manager/fees/utils/SettableFeeRecipientBase.sol": "SettableFeeRecipientBase" }, "evmVersion": "istanbul", "libraries": {} }, "sources": { "contracts/release/extensions/fee-manager/fees/utils/SettableFeeRecipientBase.sol": { "keccak256": "0xb3b4b3cd13141871c912310ce1dace2e94f89eee7a52b95d4df9e4642a958f4d", "urls": [ "bzz-raw://b120324be26eddebb2fd5d15ecdbef4bfc5a5bbd05bd60796677157480842aa1", "dweb:/ipfs/Qmab9XnYHvG3zWtQaTee24qU7VK94MMLySPkrZqDBbB5NN" ], "license": "GPL-3.0" } }, "version": 1 }, "id": 155 }

{ "abi": [ { "type": "constructor", "inputs": [ { "name": "_globalConfigProxy", "type": "address", "internalType": "address" }, { "name": "_initializer", "type": "address", "internalType": "address" } ], "stateMutability": "nonpayable" }, { "type": "function", "name": "claimToken", "inputs": [ { "name": "_token", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "claimedAmount_", "type": "uint256", "internalType": "uint256" } ], "stateMutability": "nonpayable" }, { "type": "function", "name": "claimTokenAmountTo", "inputs": [ { "name": "_token", "type": "address", "internalType": "address" }, { "name": "_amount", "type": "uint256", "internalType": "uint256" }, { "name": "_to", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "claimedAmount_", "type": "uint256", "internalType": "uint256" } ], "stateMutability": "nonpayable" }, { "type": "function", "name": "getSplitPercentageForUser", "inputs": [ { "name": "_user", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "splitPercentage_", "type": "uint256", "internalType": "uint256" } ], "stateMutability": "view" }, { "type": "function", "name": "getTokenBalClaimableForUser", "inputs": [ { "name": "_user", "type": "address", "internalType": "address" }, { "name": "_token", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "balClaimable_", "type": "uint256", "internalType": "uint256" } ], "stateMutability": "view" }, { "type": "function", "name": "getTokenBalClaimedForUser", "inputs": [ { "name": "_user", "type": "address", "internalType": "address" }, { "name": "_token", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "balClaimed_", "type": "uint256", "internalType": "uint256" } ], "stateMutability": "view" }, { "type": "function", "name": "getTotalTokenBalClaimed", "inputs": [ { "name": "_token", "type": "address", "internalType": "address" } ], "outputs": [ { "name": "totalBalClaimed_", "type": "uint256", "internalType": "uint256" } ], "stateMutability": "view" }, { "type": "function", "name": "init", "inputs": [ { "name": "_users", "type": "address[]", "internalType": "address[]" }, { "name": "_splitPercentages", "type": "uint256[]", "internalType": "uint256[]" } ], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "redeemShares", "inputs": [ { "name": "_vaultProxy", "type": "address", "internalType": "address" }, { "name": "_amount", "type": "uint256", "internalType": "uint256" }, { "name": "_redeemContract", "type": "address", "internalType": "address" }, { "name": "_redeemSelector", "type": "bytes4", "internalType": "bytes4" }, { "name": "_redeemData", "type": "bytes", "internalType": "bytes" } ], "outputs": [ { "name": "sharesRedeemed_", "type": "uint256", "internalType": "uint256" } ], "stateMutability": "nonpayable" }, { "type": "event", "name": "SplitPercentageSet", "inputs": [ { "name": "user", "type": "address", "indexed": true, "internalType": "address" }, { "name": "percentage", "type": "uint256", "indexed": false, "internalType": "uint256" } ], "anonymous": false }, { "type": "event", "name": "TokenClaimed", "inputs": [ { "name": "user", "type": "address", "indexed": true, "internalType": "address" }, { "name": "token", "type": "address", "indexed": true, "internalType": "address" }, { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" } ], "anonymous": false } ], "bytecode": { "object": "0x60c060405234801561001057600080fd5b506040516111e33803806111e38339818101604052604081101561003357600080fd5b5080516020909101516001600160601b0319606092831b8116608052911b1660a05260805160601c60a05160601c61116561007e6000398061035b5250806104e152506111656000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063418981821161005b57806341898182146101e55780638a3503fa14610213578063c91995a314610239578063cb482df6146102d957610088565b80630cffb1851461008d5780630f0ee54c146100c557806332f289cf146100fb578063371aa15814610121575b600080fd5b6100b3600480360360208110156100a357600080fd5b50356001600160a01b0316610307565b60408051918252519081900360200190f35b6100b3600480360360608110156100db57600080fd5b506001600160a01b03813581169160208101359160409091013516610322565b6100b36004803603602081101561011157600080fd5b50356001600160a01b031661033a565b6101e36004803603604081101561013757600080fd5b81019060208101813564010000000081111561015257600080fd5b82018360208201111561016457600080fd5b8035906020019184602083028401116401000000008311171561018657600080fd5b9193909290916020810190356401000000008111156101a457600080fd5b8201836020820111156101b657600080fd5b803590602001918460208302840111640100000000831117156101d857600080fd5b509092509050610350565b005b6100b3600480360360408110156101fb57600080fd5b506001600160a01b0381358116916020013516610435565b6100b36004803603602081101561022957600080fd5b50356001600160a01b0316610460565b6100b3600480360360a081101561024f57600080fd5b6001600160a01b0382358116926020810135926040820135909216916001600160e01b0319606083013516919081019060a08101608082013564010000000081111561029a57600080fd5b8201836020820111156102ac57600080fd5b803590602001918460018302840111640100000000831117156102ce57600080fd5b50909250905061047b565b6100b3600480360360408110156102ef57600080fd5b506001600160a01b03813581169160200135166107a1565b6001600160a01b031660009081526020819052604090205490565b600061033033858585610849565b90505b9392505050565b600061034a338360001933610849565b92915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103c2576040805162461bcd60e51b81526020600482015260126024820152711a5b9a5d0e88155b985d5d1a1bdc9a5e995960721b604482015290519081900360640190fd5b61042f8484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060408051602080880282810182019093528782529093508792508691829185019084908082843760009201919091525061087492505050565b50505050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6001600160a01b031660009081526001602052604090205490565b6000610488338888610ae3565b9050600081116104df576040805162461bcd60e51b815260206004820152601f60248201527f72656465656d5368617265733a204e6f2073686172657320636c61696d656400604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635d4755dc8861aaaa84898989896040518863ffffffff1660e01b815260040180886001600160a01b03168152602001876001600160a01b03168152602001868152602001856001600160a01b03168152602001846001600160e01b0319168152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509850505050505050505060206040518083038186803b1580156105be57600080fd5b505afa1580156105d2573d6000803e3d6000fd5b505050506040513d60208110156105e857600080fd5b50516106255760405162461bcd60e51b81526004018080602001828103825260218152602001806110c86021913960400191505060405180910390fd5b60006060866001600160a01b031686868660405160200180846001600160e01b03191681526004018383808284378083019250505093505050506040516020818303038152906040526040518082805190602001908083835b6020831061069d5780518252601f19909201916020918201910161067e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146106ff576040519150601f19603f3d011682016040523d82523d6000602084013e610704565b606091505b50915091508181906107945760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610759578181015183820152602001610741565b50505050905090810190601f1680156107865780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5050509695505050505050565b60006103336107af84610460565b6107b98585610435565b610844856001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561080957600080fd5b505afa15801561081d573d6000803e3d6000fd5b505050506040513d602081101561083357600080fd5b505161083e87610307565b90610c8d565b610ce7565b6000610856858585610ae3565b905061086c6001600160a01b0385168383610d15565b949350505050565b6000805b8351811015610a875760006001600160a01b031684828151811061089857fe5b60200260200101516001600160a01b031614156108fc576040805162461bcd60e51b815260206004820152601b60248201527f5f5f73657453706c6974526174696f3a20456d70747920757365720000000000604482015290519081900360640190fd5b600181015b845181101561099f5784818151811061091657fe5b60200260200101516001600160a01b031685838151811061093357fe5b60200260200101516001600160a01b03161415610997576040805162461bcd60e51b815260206004820152601f60248201527f5f5f73657453706c6974526174696f3a204475706c6963617465207573657200604482015290519081900360640190fd5b600101610901565b508281815181106109ac57fe5b6020026020010151600160008684815181106109c457fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002081905550610a168382815181106109ff57fe5b602002602001015183610c8d90919063ffffffff16565b9150838181518110610a2457fe5b60200260200101516001600160a01b03167f531137a286e6d7db4298ad238c8007a3e9f4d5c41c4550d1f22c1b6965103ecd848381518110610a6257fe5b60200260200101516040518082815260200191505060405180910390a2600101610878565b506127108114610ade576040805162461bcd60e51b815260206004820152601f60248201527f5f5f73657453706c6974526174696f3a2053706c6974206e6f74203130302500604482015290519081900360640190fd5b505050565b600080610aef84610307565b90506000610afd8686610435565b90506000610b84866001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610b5157600080fd5b505afa158015610b65573d6000803e3d6000fd5b505050506040513d6020811015610b7b57600080fd5b50518490610c8d565b90506000610b9b610b9489610460565b8484610ce7565b9050600019861415610baf57809450610bf2565b80861115610bee5760405162461bcd60e51b81526004018080602001828103825260258152602001806111346025913960400191505060405180910390fd5b8594505b610bfc8486610c8d565b6001600160a01b038816600090815260208190526040902055610c1f8386610c8d565b6001600160a01b03808a166000818152600260209081526040808320948d16808452948252918290209490945580518981529051929391927f4831bdd9dcf3048a28319ce81d3cab7a15366bcf449bc7803a539107440809cc929181900390910190a3505050509392505050565b600082820183811015610333576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600080610d00612710610cfa8588610d67565b90610dc0565b9050610d0c8185610e27565b95945050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610ade908490610e84565b600082610d765750600061034a565b82820282848281610d8357fe5b04146103335760405162461bcd60e51b81526004018080602001828103825260218152602001806110e96021913960400191505060405180910390fd5b6000808211610e16576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381610e1f57fe5b049392505050565b600082821115610e7e576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6060610ed9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f359092919063ffffffff16565b805190915015610ade57808060200190516020811015610ef857600080fd5b5051610ade5760405162461bcd60e51b815260040180806020018281038252602a81526020018061110a602a913960400191505060405180910390fd5b6060610330848460008585610f498561105b565b610f9a576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310610fd95780518252601f199092019160209182019101610fba565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461103b576040519150601f19603f3d011682016040523d82523d6000602084013e611040565b606091505b5091509150611050828286611061565b979650505050505050565b3b151590565b60608315611070575081610333565b8251156110805782518084602001fd5b60405162461bcd60e51b815260206004820181815284516024840152845185939192839260440191908501908083836000831561075957818101518382015260200161074156fe72656465656d5368617265733a20496e76616c69642072656465656d2063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564636c61696d546f6b656e3a205f616d6f756e74206578636565647320636c61696d61626c65a164736f6c634300060c000a", "sourceMap": "557:2804:59:-:0;;;833:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;833:181:59;;;;;;;-1:-1:-1;;;912:59:59;;;;;;;981:26;;;;;;-1:-1:-1;;;;;557:2804:59;;;;;-1:-1:-1;557:2804:59;;;;;;;", "linkReferences": {} }, "deployedBytecode": { "object": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063418981821161005b57806341898182146101e55780638a3503fa14610213578063c91995a314610239578063cb482df6146102d957610088565b80630cffb1851461008d5780630f0ee54c146100c557806332f289cf146100fb578063371aa15814610121575b600080fd5b6100b3600480360360208110156100a357600080fd5b50356001600160a01b0316610307565b60408051918252519081900360200190f35b6100b3600480360360608110156100db57600080fd5b506001600160a01b03813581169160208101359160409091013516610322565b6100b36004803603602081101561011157600080fd5b50356001600160a01b031661033a565b6101e36004803603604081101561013757600080fd5b81019060208101813564010000000081111561015257600080fd5b82018360208201111561016457600080fd5b8035906020019184602083028401116401000000008311171561018657600080fd5b9193909290916020810190356401000000008111156101a457600080fd5b8201836020820111156101b657600080fd5b803590602001918460208302840111640100000000831117156101d857600080fd5b509092509050610350565b005b6100b3600480360360408110156101fb57600080fd5b506001600160a01b0381358116916020013516610435565b6100b36004803603602081101561022957600080fd5b50356001600160a01b0316610460565b6100b3600480360360a081101561024f57600080fd5b6001600160a01b0382358116926020810135926040820135909216916001600160e01b0319606083013516919081019060a08101608082013564010000000081111561029a57600080fd5b8201836020820111156102ac57600080fd5b803590602001918460018302840111640100000000831117156102ce57600080fd5b50909250905061047b565b6100b3600480360360408110156102ef57600080fd5b506001600160a01b03813581169160200135166107a1565b6001600160a01b031660009081526020819052604090205490565b600061033033858585610849565b90505b9392505050565b600061034a338360001933610849565b92915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103c2576040805162461bcd60e51b81526020600482015260126024820152711a5b9a5d0e88155b985d5d1a1bdc9a5e995960721b604482015290519081900360640190fd5b61042f8484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060408051602080880282810182019093528782529093508792508691829185019084908082843760009201919091525061087492505050565b50505050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6001600160a01b031660009081526001602052604090205490565b6000610488338888610ae3565b9050600081116104df576040805162461bcd60e51b815260206004820152601f60248201527f72656465656d5368617265733a204e6f2073686172657320636c61696d656400604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635d4755dc8861aaaa84898989896040518863ffffffff1660e01b815260040180886001600160a01b03168152602001876001600160a01b03168152602001868152602001856001600160a01b03168152602001846001600160e01b0319168152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509850505050505050505060206040518083038186803b1580156105be57600080fd5b505afa1580156105d2573d6000803e3d6000fd5b505050506040513d60208110156105e857600080fd5b50516106255760405162461bcd60e51b81526004018080602001828103825260218152602001806110c86021913960400191505060405180910390fd5b60006060866001600160a01b031686868660405160200180846001600160e01b03191681526004018383808284378083019250505093505050506040516020818303038152906040526040518082805190602001908083835b6020831061069d5780518252601f19909201916020918201910161067e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146106ff576040519150601f19603f3d011682016040523d82523d6000602084013e610704565b606091505b50915091508181906107945760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610759578181015183820152602001610741565b50505050905090810190601f1680156107865780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5050509695505050505050565b60006103336107af84610460565b6107b98585610435565b610844856001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561080957600080fd5b505afa15801561081d573d6000803e3d6000fd5b505050506040513d602081101561083357600080fd5b505161083e87610307565b90610c8d565b610ce7565b6000610856858585610ae3565b905061086c6001600160a01b0385168383610d15565b949350505050565b6000805b8351811015610a875760006001600160a01b031684828151811061089857fe5b60200260200101516001600160a01b031614156108fc576040805162461bcd60e51b815260206004820152601b60248201527f5f5f73657453706c6974526174696f3a20456d70747920757365720000000000604482015290519081900360640190fd5b600181015b845181101561099f5784818151811061091657fe5b60200260200101516001600160a01b031685838151811061093357fe5b60200260200101516001600160a01b03161415610997576040805162461bcd60e51b815260206004820152601f60248201527f5f5f73657453706c6974526174696f3a204475706c6963617465207573657200604482015290519081900360640190fd5b600101610901565b508281815181106109ac57fe5b6020026020010151600160008684815181106109c457fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002081905550610a168382815181106109ff57fe5b602002602001015183610c8d90919063ffffffff16565b9150838181518110610a2457fe5b60200260200101516001600160a01b03167f531137a286e6d7db4298ad238c8007a3e9f4d5c41c4550d1f22c1b6965103ecd848381518110610a6257fe5b60200260200101516040518082815260200191505060405180910390a2600101610878565b506127108114610ade576040805162461bcd60e51b815260206004820152601f60248201527f5f5f73657453706c6974526174696f3a2053706c6974206e6f74203130302500604482015290519081900360640190fd5b505050565b600080610aef84610307565b90506000610afd8686610435565b90506000610b84866001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610b5157600080fd5b505afa158015610b65573d6000803e3d6000fd5b505050506040513d6020811015610b7b57600080fd5b50518490610c8d565b90506000610b9b610b9489610460565b8484610ce7565b9050600019861415610baf57809450610bf2565b80861115610bee5760405162461bcd60e51b81526004018080602001828103825260258152602001806111346025913960400191505060405180910390fd5b8594505b610bfc8486610c8d565b6001600160a01b038816600090815260208190526040902055610c1f8386610c8d565b6001600160a01b03808a166000818152600260209081526040808320948d16808452948252918290209490945580518981529051929391927f4831bdd9dcf3048a28319ce81d3cab7a15366bcf449bc7803a539107440809cc929181900390910190a3505050509392505050565b600082820183811015610333576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600080610d00612710610cfa8588610d67565b90610dc0565b9050610d0c8185610e27565b95945050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610ade908490610e84565b600082610d765750600061034a565b82820282848281610d8357fe5b04146103335760405162461bcd60e51b81526004018080602001828103825260218152602001806110e96021913960400191505060405180910390fd5b6000808211610e16576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381610e1f57fe5b049392505050565b600082821115610e7e576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6060610ed9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f359092919063ffffffff16565b805190915015610ade57808060200190516020811015610ef857600080fd5b5051610ade5760405162461bcd60e51b815260040180806020018281038252602a81526020018061110a602a913960400191505060405180910390fd5b6060610330848460008585610f498561105b565b610f9a576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310610fd95780518252601f199092019160209182019101610fba565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461103b576040519150601f19603f3d011682016040523d82523d6000602084013e611040565b606091505b5091509150611050828286611061565b979650505050505050565b3b151590565b60608315611070575081610333565b8251156110805782518084602001fd5b60405162461bcd60e51b815260206004820181815284516024840152845185939192839260440191908501908083836000831561075957818101518382015260200161074156fe72656465656d5368617265733a20496e76616c69642072656465656d2063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564636c61696d546f6b656e3a205f616d6f756e74206578636565647320636c61696d61626c65a164736f6c634300060c000a", "sourceMap": "557:2804:59:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6920:178:61;;;;;;;;;;;;;;;;-1:-1:-1;6920:178:61;-1:-1:-1;;;;;6920:178:61;;:::i;:::-;;;;;;;;;;;;;;;;1931:224;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1931:224:61;;;;;;;;;;;;;;;;;:::i;1487:173::-;;;;;;;;;;;;;;;;-1:-1:-1;1487:173:61;-1:-1:-1;;;;;1487:173:61;;:::i;1371:214:59:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1371:214:59;;-1:-1:-1;1371:214:59;-1:-1:-1;1371:214:59;:::i;:::-;;6564:198:61;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6564:198:61;;;;;;;;;;:::i;6199:177::-;;;;;;;;;;;;;;;;-1:-1:-1;6199:177:61;-1:-1:-1;;;;;6199:177:61;;:::i;2051:1308:59:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2051:1308:59;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2051:1308:59;;;;;;;;;;-1:-1:-1;2051:1308:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2051:1308:59;;-1:-1:-1;2051:1308:59;-1:-1:-1;2051:1308:59;:::i;2376:414:61:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2376:414:61;;;;;;;;;;:::i;6920:178::-;-1:-1:-1;;;;;7061:30:61;7014:24;7061:30;;;;;;;;;;;;6920:178::o;1931:224::-;2061:22;2102:46;2115:10;2127:6;2135:7;2144:3;2102:12;:46::i;:::-;2095:53;;1931:224;;;;;;:::o;1487:173::-;1549:22;1590:63;1603:10;1615:6;-1:-1:-1;;1603:10:61;1590:12;:63::i;:::-;1583:70;1487:173;-1:-1:-1;;1487:173:61:o;1371:214:59:-;1491:11;-1:-1:-1;;;;;1477:25:59;:10;:25;1469:56;;;;;-1:-1:-1;;;1469:56:59;;;;;;;;;;;;-1:-1:-1;;;1469:56:59;;;;;;;;;;;;;;;1536:42;1552:6;;1536:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1536:42:59;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1560:17:59;;-1:-1:-1;1560:17:59;;;;1536:42;;;1560:17;;1536:42;1560:17;1536:42;;;;;;;;;-1:-1:-1;1536:15:59;;-1:-1:-1;;;1536:42:59:i;:::-;1371:214;;;;:::o;6564:198:61:-;-1:-1:-1;;;;;6717:30:61;;;6675:19;6717:30;;;:23;:30;;;;;;;;:38;;;;;;;;;;;;;6564:198::o;6199:177::-;-1:-1:-1;;;;;6341:28:61;6294:24;6341:28;;;-1:-1:-1;6341:28:61;;;;;;;6199:177::o;2051:1308:59:-;2252:23;2356:61;2384:10;2396:11;2409:7;2356:27;:61::i;:::-;2338:79;;2453:1;2435:15;:19;2427:63;;;;;-1:-1:-1;;;2427:63:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;2764:262;;-1:-1:-1;;;2764:262:59;;-1:-1:-1;;;;;2764:262:59;;;;;;;;;679:42;2764:262;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2764:262:59;;;;;;;;;;;;;;;;;;;:22;:46;;;;;;:262;;;;;;;;3001:11;;2764:262;;;;;3001:11;2764:262;;3001:11;2764:262;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2764:262:59;2743:342;;;;-1:-1:-1;;;2743:342:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3217:46;;-1:-1:-1;;;;;;3217:46:59;;;;;;;;3142:12;;3156:23;;-1:-1:-1;;;;;3183:20:59;;;3234:15;;3251:11;;;;3217:46;;;3251:11;;;;3217:46;;;;;;;;;;;;;;;;;;;;;;;;;;3183:90;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3183:90:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3141:132;;;;3291:7;3307:10;3283:36;;;;;-1:-1:-1;;;3283:36:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3330:22;;2051:1308;;;;;;;;:::o;2376:414:61:-;2489:21;2545:238;2586:32;2612:5;2586:25;:32::i;:::-;2636:40;2662:5;2669:6;2636:25;:40::i;:::-;2730:38;;;-1:-1:-1;;;2730:38:61;;2762:4;2730:38;;;;;;2694:75;;-1:-1:-1;;;;;2730:23:61;;;;;:38;;;;;;;;;;;;;;;:23;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2730:38:61;2694:31;2718:6;2694:23;:31::i;:::-;:35;;:75::i;:::-;2545:23;:238::i;3352:337::-;3491:22;3542:51;3570:5;3577:6;3585:7;3542:27;:51::i;:::-;3525:68;-1:-1:-1;3603:47:61;-1:-1:-1;;;;;3603:26:61;;3630:3;3525:68;3603:26;:47::i;:::-;3352:337;;;;;;:::o;5139:832::-;5256:28;5299:9;5294:574;5314:6;:13;5310:1;:17;5294:574;;;5418:9;;5439:1;;5418:6;;5425:1;;5418:9;;;;;;;;;;;;-1:-1:-1;;;;;5418:23:61;;;5410:63;;;;;-1:-1:-1;;;5410:63:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;5508:1;5504:5;;5487:147;5515:6;:13;5511:1;:17;5487:147;;;5574:6;5581:1;5574:9;;;;;;;;;;;;;;-1:-1:-1;;;;;5561:22:61;:6;5568:1;5561:9;;;;;;;;;;;;;;-1:-1:-1;;;;;5561:22:61;;;5553:66;;;;;-1:-1:-1;;;5553:66:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;5530:3;;5487:147;;;;5683:17;5701:1;5683:20;;;;;;;;;;;;;;5648:21;:32;5670:6;5677:1;5670:9;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5648:32:61;;;;;;;;;;;-1:-1:-1;5648:32:61;:55;5765:20;;5740:46;;5765:17;;5783:1;;5765:20;;;;;;;;;;;;5740;:24;;:46;;;;:::i;:::-;5717:69;;5825:6;5832:1;5825:9;;;;;;;;;;;;;;-1:-1:-1;;;;;5806:51:61;;5836:17;5854:1;5836:20;;;;;;;;;;;;;;5806:51;;;;;;;;;;;;;;;;;;5329:3;;5294:574;;;;1046:5;5885:20;:43;5877:87;;;;;-1:-1:-1;;;5877:87:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;5139:832;;;:::o;3788:1150::-;3921:22;3955:23;3981:31;4005:6;3981:23;:31::i;:::-;3955:57;;4022:25;4050:40;4076:5;4083:6;4050:25;:40::i;:::-;4150:38;;;-1:-1:-1;;;4150:38:61;;4182:4;4150:38;;;;;;4022:68;;-1:-1:-1;4101:26:61;;4130:59;;-1:-1:-1;;;;;4150:23:61;;;;;:38;;;;;;;;;;;;;;;:23;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4150:38:61;4130:15;;:19;:59::i;:::-;4101:88;;4199:27;4229:142;4266:32;4292:5;4266:25;:32::i;:::-;4312:17;4343:18;4229:23;:142::i;:::-;4199:172;-1:-1:-1;;;4386:28:61;;4382:245;;;4447:19;4430:36;;4382:245;;;4516:19;4505:7;:30;;4497:80;;;;-1:-1:-1;;;4497:80:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4609:7;4592:24;;4382:245;4717:35;:15;4737:14;4717:19;:35::i;:::-;-1:-1:-1;;;;;4684:30:61;;:22;:30;;;;;;;;;;:68;4803:37;:17;4825:14;4803:21;:37::i;:::-;-1:-1:-1;;;;;4762:30:61;;;;;;;:23;:30;;;;;;;;:38;;;;;;;;;;;;;:78;;;;4856:43;;;;;;;4762:38;;:30;;4856:43;;;;;;;;;;;4910:21;;;;3788:1150;;;;;:::o;2690:175:442:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:442;;;;;;;;;;;;;;;;;;;;;;;;;;;2882:428:61;3058:21;;3132:99;1046:5;3132:61;:19;3169:23;3132:36;:61::i;:::-;:78;;:99::i;:::-;3091:140;-1:-1:-1;3249:54:61;3091:140;3284:18;3249:34;:54::i;:::-;3242:61;2882:428;-1:-1:-1;;;;;2882:428:61:o;704:175:450:-;813:58;;;-1:-1:-1;;;;;813:58:450;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;813:58:450;-1:-1:-1;;;813:58:450;;;786:86;;806:5;;786:19;:86::i;3538:215:442:-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:442;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:442;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4217:150;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:442;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:442:o;3136:155::-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:442;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:442;;;3136:155::o;2967:751:450:-;3412:69;;;;;;;;;;;;;;;;;;3386:23;;3412:69;;-1:-1:-1;;;;;3412:27:450;;;3440:4;;3412:27;:69::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:450;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;;-1:-1:-1;3624:30:450;3616:85;;;;-1:-1:-1;;;3616:85:450;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3581:193:451;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3684;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:451;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:451;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:33:451;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:451:o;726:413::-;1086:20;1124:8;;;726:413::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:451;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7765:20;;-1:-1:-1;;;7765:20:451;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7765:20:451;;;;;;;;;;;;;;;", "linkReferences": {}, "immutableReferences": { "7520": [ { "start": 1249, "length": 32 } ], "7522": [ { "start": 859, "length": 32 } ] } }, "methodIdentifiers": { "claimToken(address)": "32f289cf", "claimTokenAmountTo(address,uint256,address)": "0f0ee54c", "getSplitPercentageForUser(address)": "8a3503fa", "getTokenBalClaimableForUser(address,address)": "cb482df6", "getTokenBalClaimedForUser(address,address)": "41898182", "getTotalTokenBalClaimed(address)": "0cffb185", "init(address[],uint256[])": "371aa158", "redeemShares(address,uint256,address,bytes4,bytes)": "c91995a3" }, "rawMetadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_globalConfigProxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initializer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"SplitPercentageSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimedAmount_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"claimTokenAmountTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimedAmount_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getSplitPercentageForUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"splitPercentage_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokenBalClaimableForUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balClaimable_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokenBalClaimedForUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balClaimed_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTotalTokenBalClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBalClaimed_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_splitPercentages\",\"type\":\"uint256[]\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultProxy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_redeemContract\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"_redeemSelector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"_redeemData\",\"type\":\"bytes\"}],\"name\":\"redeemShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sharesRedeemed_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Enzyme Council <security@enzyme.finance>\",\"kind\":\"dev\",\"methods\":{\"claimToken(address)\":{\"params\":{\"_token\":\"The token to claim\"},\"returns\":{\"claimedAmount_\":\"The token amount claimed\"}},\"claimTokenAmountTo(address,uint256,address)\":{\"params\":{\"_amount\":\"The amount to claim\",\"_to\":\"The recipient of the claimed token\",\"_token\":\"The token to claim\"},\"returns\":{\"claimedAmount_\":\"The token amount claimed\"}},\"getSplitPercentageForUser(address)\":{\"params\":{\"_user\":\"The user\"},\"returns\":{\"splitPercentage_\":\"The split percentage\"}},\"getTokenBalClaimableForUser(address,address)\":{\"params\":{\"_token\":\"The token\",\"_user\":\"The user\"},\"returns\":{\"balClaimable_\":\"The claimable token balance\"}},\"getTokenBalClaimedForUser(address,address)\":{\"params\":{\"_token\":\"The token\",\"_user\":\"The user\"},\"returns\":{\"balClaimed_\":\"The balance claimed\"}},\"getTotalTokenBalClaimed(address)\":{\"params\":{\"_token\":\"The token\"},\"returns\":{\"totalBalClaimed_\":\"The total balance claimed\"}},\"init(address[],uint256[])\":{\"details\":\"Validating via INITIALIZER makes deployments cheaper than storing `bool initialized`, but INITIALIZER must be trusted to not call more than once.\",\"params\":{\"_splitPercentages\":\"The ordered split percentages corresponding to _users\",\"_users\":\"The users to give a split percentage\"}},\"redeemShares(address,uint256,address,bytes4,bytes)\":{\"params\":{\"_amount\":\"The desired amount of shares to claim and redeem\",\"_redeemContract\":\"The contract to call to redeem\",\"_redeemData\":\"The encoded params with which to call _redeemSelector\",\"_redeemSelector\":\"The selector to call on _redeemContract\",\"_vaultProxy\":\"The VaultProxy (shares token)\"},\"returns\":{\"sharesRedeemed_\":\"The number of shares redeemed\"}}},\"title\":\"SharesSplitterLib Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimToken(address)\":{\"notice\":\"Claims the full amount of a specified token\"},\"claimTokenAmountTo(address,uint256,address)\":{\"notice\":\"Claims a specified token amount to a specified address\"},\"getSplitPercentageForUser(address)\":{\"notice\":\"Gets the split ratio percentage for a given user\"},\"getTokenBalClaimableForUser(address,address)\":{\"notice\":\"Gets the token balance claimable for a specified user\"},\"getTokenBalClaimedForUser(address,address)\":{\"notice\":\"Gets the token balance already claimed for a given user\"},\"getTotalTokenBalClaimed(address)\":{\"notice\":\"Gets the total token balance already claimed\"},\"init(address[],uint256[])\":{\"notice\":\"Initializes the proxy\"},\"redeemShares(address,uint256,address,bytes4,bytes)\":{\"notice\":\"Claims and redeems shares as specified\"}},\"notice\":\"Library contract for a SharesSplitter\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/persistent/shares-splitter/SharesSplitterLib.sol\":\"SharesSplitterLib\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[\":@enzyme/=contracts/\",\":@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/persistent/dispatcher/IDispatcher.sol\":{\"keccak256\":\"0x0e6b0e6cf325d4f6332b8eb2b3c446b2ef3ca8456bdf0d12318d0fd9e90aeb30\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2f159223517ca72c36852d90e45cc53d1840861d6e1a2a37f7901d7e48bc94d0\",\"dweb:/ipfs/QmZKZnppYFEF8hdTxbA1g3NgWMopwHRey5KdzyJXNGgCUJ\"]},\"contracts/persistent/global-config/interfaces/IGlobalConfig1.sol\":{\"keccak256\":\"0x7b643513fd8e1a3aadc476536785a925fb7c032c21e385e69e562abff531a646\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://682cce7a4c7316ab7aa39361dff84646ba8c89ad26f2c706a4b2940f8ab27205\",\"dweb:/ipfs/QmTtyfPn3M8ErCs8zuhT4NrZiL4CAUyv37os37HebYuGA8\"]},\"contracts/persistent/shares-splitter/SharesSplitterLib.sol\":{\"keccak256\":\"0x63fb4f6dc3427ee8968a29fff54e07efa36ee10d9cd286bd1aeb1658aa3cbedd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a818f483fe67b9f5718b56e4f7ec65f239fa5f0a7fd7b8305b2a899bfc507252\",\"dweb:/ipfs/QmamfKKLetAmQZvFWjgVqRrRmkTDMnXwjDuYoRTD62NsNw\"]},\"contracts/persistent/shares-splitter/TreasurySplitterMixin.sol\":{\"keccak256\":\"0x5884f1ae25251dc7727e7f019760b69a1e851c4d681bf91492af521bf4f74057\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3694db028974441238d79f22e85f69f89a8efa0906d30e7b4a34aad8a21f7790\",\"dweb:/ipfs/QmQPhjhosPL4S2E8tvq6ZKbp267DXLAyE145J7WVHGJhKa\"]},\"node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}", "metadata": { "compiler": { "version": "0.6.12+commit.27d51765" }, "language": "Solidity", "output": { "abi": [ { "inputs": [ { "internalType": "address", "name": "_globalConfigProxy", "type": "address" }, { "internalType": "address", "name": "_initializer", "type": "address" } ], "stateMutability": "nonpayable", "type": "constructor" }, { "inputs": [ { "internalType": "address", "name": "user", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "percentage", "type": "uint256", "indexed": false } ], "type": "event", "name": "SplitPercentageSet", "anonymous": false }, { "inputs": [ { "internalType": "address", "name": "user", "type": "address", "indexed": true }, { "internalType": "address", "name": "token", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "amount", "type": "uint256", "indexed": false } ], "type": "event", "name": "TokenClaimed", "anonymous": false }, { "inputs": [ { "internalType": "address", "name": "_token", "type": "address" } ], "stateMutability": "nonpayable", "type": "function", "name": "claimToken", "outputs": [ { "internalType": "uint256", "name": "claimedAmount_", "type": "uint256" } ] }, { "inputs": [ { "internalType": "address", "name": "_token", "type": "address" }, { "internalType": "uint256", "name": "_amount", "type": "uint256" }, { "internalType": "address", "name": "_to", "type": "address" } ], "stateMutability": "nonpayable", "type": "function", "name": "claimTokenAmountTo", "outputs": [ { "internalType": "uint256", "name": "claimedAmount_", "type": "uint256" } ] }, { "inputs": [ { "internalType": "address", "name": "_user", "type": "address" } ], "stateMutability": "view", "type": "function", "name": "getSplitPercentageForUser", "outputs": [ { "internalType": "uint256", "name": "splitPercentage_", "type": "uint256" } ] }, { "inputs": [ { "internalType": "address", "name": "_user", "type": "address" }, { "internalType": "address", "name": "_token", "type": "address" } ], "stateMutability": "view", "type": "function", "name": "getTokenBalClaimableForUser", "outputs": [ { "internalType": "uint256", "name": "balClaimable_", "type": "uint256" } ] }, { "inputs": [ { "internalType": "address", "name": "_user", "type": "address" }, { "internalType": "address", "name": "_token", "type": "address" } ], "stateMutability": "view", "type": "function", "name": "getTokenBalClaimedForUser", "outputs": [ { "internalType": "uint256", "name": "balClaimed_", "type": "uint256" } ] }, { "inputs": [ { "internalType": "address", "name": "_token", "type": "address" } ], "stateMutability": "view", "type": "function", "name": "getTotalTokenBalClaimed", "outputs": [ { "internalType": "uint256", "name": "totalBalClaimed_", "type": "uint256" } ] }, { "inputs": [ { "internalType": "address[]", "name": "_users", "type": "address[]" }, { "internalType": "uint256[]", "name": "_splitPercentages", "type": "uint256[]" } ], "stateMutability": "nonpayable", "type": "function", "name": "init" }, { "inputs": [ { "internalType": "address", "name": "_vaultProxy", "type": "address" }, { "internalType": "uint256", "name": "_amount", "type": "uint256" }, { "internalType": "address", "name": "_redeemContract", "type": "address" }, { "internalType": "bytes4", "name": "_redeemSelector", "type": "bytes4" }, { "internalType": "bytes", "name": "_redeemData", "type": "bytes" } ], "stateMutability": "nonpayable", "type": "function", "name": "redeemShares", "outputs": [ { "internalType": "uint256", "name": "sharesRedeemed_", "type": "uint256" } ] } ], "devdoc": { "kind": "dev", "methods": { "claimToken(address)": { "params": { "_token": "The token to claim" }, "returns": { "claimedAmount_": "The token amount claimed" } }, "claimTokenAmountTo(address,uint256,address)": { "params": { "_amount": "The amount to claim", "_to": "The recipient of the claimed token", "_token": "The token to claim" }, "returns": { "claimedAmount_": "The token amount claimed" } }, "getSplitPercentageForUser(address)": { "params": { "_user": "The user" }, "returns": { "splitPercentage_": "The split percentage" } }, "getTokenBalClaimableForUser(address,address)": { "params": { "_token": "The token", "_user": "The user" }, "returns": { "balClaimable_": "The claimable token balance" } }, "getTokenBalClaimedForUser(address,address)": { "params": { "_token": "The token", "_user": "The user" }, "returns": { "balClaimed_": "The balance claimed" } }, "getTotalTokenBalClaimed(address)": { "params": { "_token": "The token" }, "returns": { "totalBalClaimed_": "The total balance claimed" } }, "init(address[],uint256[])": { "details": "Validating via INITIALIZER makes deployments cheaper than storing `bool initialized`, but INITIALIZER must be trusted to not call more than once.", "params": { "_splitPercentages": "The ordered split percentages corresponding to _users", "_users": "The users to give a split percentage" } }, "redeemShares(address,uint256,address,bytes4,bytes)": { "params": { "_amount": "The desired amount of shares to claim and redeem", "_redeemContract": "The contract to call to redeem", "_redeemData": "The encoded params with which to call _redeemSelector", "_redeemSelector": "The selector to call on _redeemContract", "_vaultProxy": "The VaultProxy (shares token)" }, "returns": { "sharesRedeemed_": "The number of shares redeemed" } } }, "version": 1 }, "userdoc": { "kind": "user", "methods": { "claimToken(address)": { "notice": "Claims the full amount of a specified token" }, "claimTokenAmountTo(address,uint256,address)": { "notice": "Claims a specified token amount to a specified address" }, "getSplitPercentageForUser(address)": { "notice": "Gets the split ratio percentage for a given user" }, "getTokenBalClaimableForUser(address,address)": { "notice": "Gets the token balance claimable for a specified user" }, "getTokenBalClaimedForUser(address,address)": { "notice": "Gets the token balance already claimed for a given user" }, "getTotalTokenBalClaimed(address)": { "notice": "Gets the total token balance already claimed" }, "init(address[],uint256[])": { "notice": "Initializes the proxy" }, "redeemShares(address,uint256,address,bytes4,bytes)": { "notice": "Claims and redeems shares as specified" } }, "version": 1 } }, "settings": { "remappings": [ "@enzyme/=contracts/", "@openzeppelin-solc-0.7/=node_modules/@openzeppelin-solc-0.7/", "@openzeppelin/=node_modules/@openzeppelin/", "@uniswap/=node_modules/@uniswap/", "base64-sol/=node_modules/base64-sol/", "ds-test/=lib/forge-std/lib/ds-test/src/", "forge-std/=lib/forge-std/src/", "hardhat-deploy/=node_modules/hardhat-deploy/", "hardhat/=node_modules/hardhat/" ], "optimizer": { "runs": 200, "details": { "peephole": true, "jumpdestRemover": true, "orderLiterals": true, "deduplicate": true, "cse": true, "constantOptimizer": true, "yul": false } }, "metadata": { "bytecodeHash": "none" }, "compilationTarget": { "contracts/persistent/shares-splitter/SharesSplitterLib.sol": "SharesSplitterLib" }, "evmVersion": "istanbul", "libraries": {} }, "sources": { "contracts/persistent/dispatcher/IDispatcher.sol": { "keccak256": "0x0e6b0e6cf325d4f6332b8eb2b3c446b2ef3ca8456bdf0d12318d0fd9e90aeb30", "urls": [ "bzz-raw://2f159223517ca72c36852d90e45cc53d1840861d6e1a2a37f7901d7e48bc94d0", "dweb:/ipfs/QmZKZnppYFEF8hdTxbA1g3NgWMopwHRey5KdzyJXNGgCUJ" ], "license": "GPL-3.0" }, "contracts/persistent/global-config/interfaces/IGlobalConfig1.sol": { "keccak256": "0x7b643513fd8e1a3aadc476536785a925fb7c032c21e385e69e562abff531a646", "urls": [ "bzz-raw://682cce7a4c7316ab7aa39361dff84646ba8c89ad26f2c706a4b2940f8ab27205", "dweb:/ipfs/QmTtyfPn3M8ErCs8zuhT4NrZiL4CAUyv37os37HebYuGA8" ], "license": "GPL-3.0" }, "contracts/persistent/shares-splitter/SharesSplitterLib.sol": { "keccak256": "0x63fb4f6dc3427ee8968a29fff54e07efa36ee10d9cd286bd1aeb1658aa3cbedd", "urls": [ "bzz-raw://a818f483fe67b9f5718b56e4f7ec65f239fa5f0a7fd7b8305b2a899bfc507252", "dweb:/ipfs/QmamfKKLetAmQZvFWjgVqRrRmkTDMnXwjDuYoRTD62NsNw" ], "license": "GPL-3.0" }, "contracts/persistent/shares-splitter/TreasurySplitterMixin.sol": { "keccak256": "0x5884f1ae25251dc7727e7f019760b69a1e851c4d681bf91492af521bf4f74057", "urls": [ "bzz-raw://3694db028974441238d79f22e85f69f89a8efa0906d30e7b4a34aad8a21f7790", "dweb:/ipfs/QmQPhjhosPL4S2E8tvq6ZKbp267DXLAyE145J7WVHGJhKa" ], "license": "GPL-3.0" }, "node_modules/@openzeppelin/contracts/math/SafeMath.sol": { "keccak256": "0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52", "urls": [ "bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c", "dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR" ], "license": "MIT" }, "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": { "keccak256": "0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3", "urls": [ "bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e", "dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE" ], "license": "MIT" }, "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": { "keccak256": "0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5", "urls": [ "bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08", "dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC" ], "license": "MIT" }, "node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol": { "keccak256": "0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc", "urls": [ "bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a", "dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ" ], "license": "MIT" }, "node_modules/@openzeppelin/contracts/utils/Address.sol": { "keccak256": "0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea", "urls": [ "bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c", "dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN" ], "license": "MIT" }, "node_modules/@openzeppelin/contracts/utils/Context.sol": { "keccak256": "0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0", "urls": [ "bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f", "dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96" ], "license": "MIT" } }, "version": 1 }, "id": 59 }

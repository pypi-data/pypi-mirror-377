[project]
name = "yumo"
version = "0.1.2"
description = "Scalar field visualization using Polyscope."
authors = [{ name = "Chaofan Luo" }]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.10,<4.0"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "einx>=0.3.0",
    "matplotlib>=3.9.4",
    "natsort>=8.4.0",
    "numpy>=1.26.4",
    "opencv-python>=4.11.0.86",
    "polyscope>=2.5.0",
    "rtree>=1.4.1",
    "scipy>=1.15.3",
    "tqdm>=4.67.1",
    "trimesh>=4.8.1",
    "typer>=0.17.4",
    "xatlas>=0.0.11",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.2.0",
    "pytest-cov>=4.0.0",
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    "mypy>=0.991",
    "ruff>=0.9.2",
    "mkdocs>=1.4.2",
    "mkdocs-material>=8.5.10",
    "mkdocstrings[python]>=0.26.1",
    "mkdocs-static-i18n[material]>=1.3.0",
    "mkdocs-macros-plugin>=1.3.9",
    "tomlkit>=0.13.3",
]

[project.scripts]
yumo = "yumo.__main__:main"

[project.urls]
Homepage = "https://luocfprime.github.io/yumo/"
Repository = "https://github.com/luocfprime/yumo"
Documentation = "https://luocfprime.github.io/yumo/"


[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
py-modules = ["yumo"]
include-package-data = true

[tool.setuptools.package-data]
"yumo" = ["assets/colormaps/*.png", "assets/materials/*.hdr"]

[tool.mypy]
files = [
    "yumo"
]
check_untyped_defs = true
show_error_codes = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py311"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    # Avoid specifying long messages outside the exception class
    "TRY003"
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101", # Use of assert
    "RUF059"  # unused-unpacked-variable
]

[tool.ruff.format]
preview = true

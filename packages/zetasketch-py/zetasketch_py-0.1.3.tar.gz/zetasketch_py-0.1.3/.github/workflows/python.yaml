# This file is autogenerated by maturin v1.9.3
# To update, run
#
#    maturin generate-ci -o ../.github/workflows/python.yaml --pytest github
#
name: Python CI

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
          - runner: ubuntu-22.04
            target: s390x
          - runner: ubuntu-22.04
            target: ppc64le
    steps:
      - uses: actions/checkout@v5
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: python
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: auto
          before-script-linux: |
            # Some container images are based on Ubuntu, other on CentOS
            which unzip || apt install unzip || echo "not apt"
            which unzip || yum install unzip || echo "not yum"
            which unzip
            PROTOC=protoc-32.0-linux-x86_64.zip
            if [ "$(arch)" == "i686" ]; then PROTOC=protoc-32.0-linux-x86_32.zip; fi
            curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v32.0/$PROTOC
            unzip $PROTOC -d protoc3
            mv -v protoc3/bin/* /usr/local/bin/
            mv -v protoc3/include/* /usr/local/include/
            rm -rf $PROTOC protoc3
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: python/dist
      - name: pytest
        if: ${{ startsWith(matrix.platform.target, 'x86_64') }}
        shell: bash
        run: |
          cd python
          set -e
          python3 -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install zetasketch-py --find-links dist --force-reinstall
          pip install --group test
          pytest
      - name: pytest
        if: ${{ !startsWith(matrix.platform.target, 'x86') && matrix.platform.target != 'ppc64' }}
        uses: uraimo/run-on-arch-action@v3
        with:
          arch: ${{ matrix.platform.target }}
          distro: ubuntu22.04
          githubToken: ${{ github.token }}
          install: |
            apt-get update
            apt-get install -y --no-install-recommends python3 python3-pip
            pip3 install --upgrade pip
          run: |
            cd python
            set -e
            pip3 install zetasketch-py --find-links dist --force-reinstall
            pip3 install --group test
            pytest -k "not mypy and not ruff"

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
    steps:
      - uses: actions/checkout@v5
      - name: Install protoc
        shell: bash
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends protobuf-compiler
      - uses: actions/setup-python@v6
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: musllinux_1_2
          working-directory: python
          before-script-linux: |
            apt install unzip
            PROTOC=protoc-32.0-linux-x86_64.zip
            if [ "$(arch)" == "i686" ]; then PROTOC=protoc-32.0-linux-x86_32.zip; fi
            curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v32.0/$PROTOC
            unzip $PROTOC -d protoc3
            mv -v protoc3/bin/* /usr/local/bin/
            mv -v protoc3/include/* /usr/local/include/
            rm -rf $PROTOC protoc3
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: python/dist
      - name: pytest
        if: ${{ startsWith(matrix.platform.target, 'x86_64') }}
        uses: addnab/docker-run-action@v3
        with:
          image: alpine:latest
          options: -v ${{ github.workspace }}:/io -w /io
          run: |
            cd python
            set -e
            apk add py3-pip py3-virtualenv
            python3 -m virtualenv .venv
            source .venv/bin/activate
            pip install --upgrade pip
            pip install zetasketch-py --no-index --find-links dist --force-reinstall
            pip install --group test
            pytest -k "not mypy and not ruff"
      - name: pytest
        if: ${{ !startsWith(matrix.platform.target, 'x86') }}
        uses: uraimo/run-on-arch-action@v3
        with:
          arch: ${{ matrix.platform.target }}
          distro: alpine_latest
          githubToken: ${{ github.token }}
          install: |
            apk add py3-virtualenv
          run: |
            cd python
            set -e
            python3 -m virtualenv .venv
            source .venv/bin/activate
            pip install --upgrade pip
            pip install zetasketch-py --find-links dist --force-reinstall
            pip install --group test
            pytest -k "not mypy and not ruff"

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v5
      - uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-python@v6
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          working-directory: python
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: python/dist
      - name: pytest
        if: ${{ !startsWith(matrix.platform.target, 'aarch64') }}
        shell: bash
        run: |
          cd python
          set -e
          python3 -m venv .venv
          source .venv/Scripts/activate
          pip install --upgrade pip
          pip install zetasketch-py --find-links dist --force-reinstall
          pip install --group test
          pytest -k "not mypy and not ruff"

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v5
      - uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-python@v6
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          working-directory: python
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: python/dist
      - name: pytest
        run: |
          cd python
          set -e
          python3 -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install zetasketch-py --find-links dist --force-reinstall
          pip install --group test
          pytest -k "not mypy and not ruff"

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          working-directory: python
          before-script-linux: |
            sudo apt install unzip
            PROTOC=protoc-32.0-linux-x86_64.zip
            if [ "$(arch)" == "i686" ]; then PROTOC=protoc-32.0-linux-x86_32.zip; fi
            curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v32.0/$PROTOC
            unzip $PROTOC -d protoc3
            sudo mv -v protoc3/bin/* /usr/local/bin/
            sudo mv -v protoc3/include/* /usr/local/include/
            rm -rf $PROTOC protoc3
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: python/dist

  release:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
    needs: [linux, musllinux, windows, macos, sdist]
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@v5
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-path: 'wheels-*/*'
      - name: Publish to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*

